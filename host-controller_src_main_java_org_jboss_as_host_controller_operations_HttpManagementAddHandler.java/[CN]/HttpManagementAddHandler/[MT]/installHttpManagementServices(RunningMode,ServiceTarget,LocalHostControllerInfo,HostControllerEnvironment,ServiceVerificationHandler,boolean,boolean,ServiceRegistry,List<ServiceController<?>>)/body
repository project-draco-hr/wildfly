{
  String interfaceName=hostControllerInfo.getHttpManagementInterface();
  int port=hostControllerInfo.getHttpManagementPort();
  int securePort=hostControllerInfo.getHttpManagementSecurePort();
  String securityRealm=hostControllerInfo.getHttpManagementSecurityRealm();
  AS_ROOT_LOGGER.creatingHttpManagementService(interfaceName,port,securePort);
  ConsoleMode consoleMode=ConsoleMode.CONSOLE;
  if (runningMode == RunningMode.ADMIN_ONLY) {
    consoleMode=ConsoleMode.ADMIN_ONLY;
  }
 else   if (!hostControllerInfo.isMasterDomainController()) {
    consoleMode=ConsoleMode.SLAVE_HC;
  }
  final UndertowHttpManagementService service=new UndertowHttpManagementService(consoleMode,environment.getProductConfig().getConsoleSlot());
  ServiceBuilder<?> builder=serviceTarget.addService(UndertowHttpManagementService.SERVICE_NAME,service).addDependency(NetworkInterfaceService.JBOSS_NETWORK_INTERFACE.append(interfaceName),NetworkInterfaceBinding.class,service.getInterfaceInjector()).addDependency(DomainModelControllerService.SERVICE_NAME,ModelController.class,service.getModelControllerInjector()).addDependency(ControlledProcessStateService.SERVICE_NAME,ControlledProcessStateService.class,service.getControlledProcessStateServiceInjector()).addDependency(HttpListenerRegistryService.SERVICE_NAME,ListenerRegistry.class,service.getListenerRegistry()).addInjection(service.getPortInjector(),port).addInjection(service.getSecurePortInjector(),securePort);
  if (securityRealm != null) {
    SecurityRealm.ServiceUtil.addDependency(builder,service.getSecurityRealmInjector(),securityRealm,false);
  }
 else {
    AS_ROOT_LOGGER.noSecurityRealmDefined();
  }
  if (verificationHandler != null) {
    builder.addListener(verificationHandler);
  }
  builder.setInitialMode(onDemand ? ServiceController.Mode.ON_DEMAND : ServiceController.Mode.ACTIVE).install();
  if (httpUpgrade) {
    ServiceName serverCallbackService=ServiceName.JBOSS.append("host","controller","server-inventory","callback");
    ServiceName tmpDirPath=ServiceName.JBOSS.append("server","path","jboss.domain.temp.dir");
    ManagementRemotingServices.installSecurityServices(serviceTarget,ManagementRemotingServices.HTTP_CONNECTOR,securityRealm,serverCallbackService,tmpDirPath,verificationHandler,newControllers);
    NativeManagementServices.installRemotingServicesIfNotInstalled(serviceTarget,hostControllerInfo.getLocalHostName(),verificationHandler,null,serviceRegistry,onDemand);
    RemotingHttpUpgradeService.installServices(serviceTarget,ManagementRemotingServices.HTTP_CONNECTOR,ManagementRemotingServices.HTTP_CONNECTOR,ManagementRemotingServices.MANAGEMENT_ENDPOINT,OptionMap.EMPTY,verificationHandler,newControllers);
  }
}

{
  LOGGER.info("Creating deployment for " + IDP_DEPLOYMENT_NAME);
  final WebArchive war=ShrinkWrap.create(WebArchive.class,IDP_DEPLOYMENT_NAME + ".war");
  war.addAsWebInfResource(SAML2KerberosAuthenticationTestCase.class.getPackage(),SAML2KerberosAuthenticationTestCase.class.getSimpleName() + "-idp-web.xml","web.xml");
  war.addAsWebInfResource(Utils.getJBossWebXmlAsset(IDP_DEPLOYMENT_NAME,"org.jboss.security.negotiation.NegotiationAuthenticator","org.picketlink.identity.federation.bindings.tomcat.idp.IDPWebBrowserSSOValve"),"jboss-web.xml");
  war.addAsManifestResource(Utils.getJBossDeploymentStructure(PICKETLINK_MODULE_NAME,JBOSS_NEGOTIATION_MODULE_NAME),"jboss-deployment-structure.xml");
  war.addAsWebInfResource(new StringAsset(PicketLinkTestBase.propertiesReplacer("picketlink-idp.xml",IDP_DEPLOYMENT_NAME,"",IDP_DEPLOYMENT_NAME)),"picketlink.xml");
  war.addAsWebResource(SAML2KerberosAuthenticationTestCase.class.getPackage(),"error.jsp","error.jsp");
  war.addAsWebResource(SAML2KerberosAuthenticationTestCase.class.getPackage(),"login.jsp","login.jsp");
  war.add(new StringAsset("Welcome to IdP"),"index.jsp");
  war.add(new StringAsset("Welcome to IdP hosted"),"hosted/index.jsp");
  if (LOGGER.isDebugEnabled()) {
    LOGGER.debug(war.toString(true));
  }
  return war;
}

{
  List<SecurityDomain> res=new LinkedList<SecurityDomain>();
  final String secondaryTestAddress=Utils.getSecondaryTestAddress(managementClient);
  res.add(new SecurityDomain.Builder().name(SERVER_SECURITY_DOMAIN).cacheType("default").loginModules(new SecurityModule.Builder().name(Krb5LoginConfiguration.getLoginModule()).flag(Constants.REQUIRED).options(Krb5LoginConfiguration.getOptions(getHttpServicePrincipal(secondaryTestAddress),KerberosKeyTabSetup.getKeyTab(),true)).build()).build());
  res.add(new SecurityDomain.Builder().name(IDENTITY_PROVIDER_REALM).loginModules(new SecurityModule.Builder().name(SPNEGOLoginModule.class.getName()).flag(Constants.REQUISITE).putOption("password-stacking","useFirstPass").putOption("serverSecurityDomain",SERVER_SECURITY_DOMAIN).putOption("removeRealmFromPrincipal","true").build(),new SecurityModule.Builder().name("org.jboss.security.auth.spi.LdapExtLoginModule").flag(Constants.REQUIRED).putOption("password-stacking","useFirstPass").putOption("java.naming.provider.url","ldap://" + secondaryTestAddress + ":"+ KerberosServerSetupTask.LDAP_PORT).putOption("baseCtxDN","ou=People,dc=jboss,dc=org").putOption("baseFilter","(uid={0})").putOption("rolesCtxDN","ou=Roles,dc=jboss,dc=org").putOption("roleFilter","(|(objectClass=referral)(member={1}))").putOption("roleAttributeID","cn").putOption("referralUserAttributeIDToCheck","member").putOption("bindDN",KerberosServerSetupTask.SECURITY_PRINCIPAL).putOption("bindCredential",KerberosServerSetupTask.SECURITY_CREDENTIALS).putOption(Context.INITIAL_CONTEXT_FACTORY,"com.sun.jndi.ldap.LdapCtxFactory").putOption(Context.SECURITY_AUTHENTICATION,"simple").putOption(Context.REFERRAL,"follow").putOption("throwValidateError","true").putOption("roleRecursion","5").build()).build());
  res.add(new SecurityDomain.Builder().name(SERVICE_PROVIDER_REALM).loginModules(new SecurityModule.Builder().name("org.picketlink.identity.federation.bindings.jboss.auth.SAML2LoginModule").flag(Constants.REQUIRED).build()).build());
  return res.toArray(new SecurityDomain[0]);
}

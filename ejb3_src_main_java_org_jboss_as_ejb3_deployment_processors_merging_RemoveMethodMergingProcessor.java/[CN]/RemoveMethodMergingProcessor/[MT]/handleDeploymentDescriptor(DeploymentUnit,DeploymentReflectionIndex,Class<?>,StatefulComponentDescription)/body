{
  SessionBeanMetaData beanMetaData=componentConfiguration.getDescriptorData();
  if (beanMetaData == null) {
    return;
  }
  if (beanMetaData.getRemoveMethods() == null || beanMetaData.getRemoveMethods().isEmpty()) {
    return;
  }
  final DeploymentReflectionIndex reflectionIndex=deploymentUnit.getAttachment(org.jboss.as.server.deployment.Attachments.REFLECTION_INDEX);
  for (  final RemoveMethodMetaData removeMethod : beanMetaData.getRemoveMethods()) {
    if (removeMethod.getBeanMethod().getMethodParams() == null) {
      final NamedMethodMetaData methodData=removeMethod.getBeanMethod();
      final Collection<Method> methods=MethodResolutionUtils.resolveMethods(methodData,componentClass,reflectionIndex);
      for (      Method method : methods) {
        componentConfiguration.addRemoveMethod(MethodIdentifier.getIdentifierForMethod(method),removeMethod.isRetainIfException());
      }
    }
  }
  for (  final RemoveMethodMetaData removeMethod : beanMetaData.getRemoveMethods()) {
    if (removeMethod.getBeanMethod().getMethodParams() != null) {
      final NamedMethodMetaData methodData=removeMethod.getBeanMethod();
      final Collection<Method> methods=MethodResolutionUtils.resolveMethods(methodData,componentClass,reflectionIndex);
      for (      Method method : methods) {
        componentConfiguration.addRemoveMethod(MethodIdentifier.getIdentifierForMethod(method),removeMethod.isRetainIfException());
      }
    }
  }
}

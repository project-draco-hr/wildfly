{
  DeploymentUnit deploymentUnit=phaseContext.getDeploymentUnit();
  final EjbJarDescription ejbJarDescription=deploymentUnit.getAttachment(EjbDeploymentAttachmentKeys.EJB_JAR_DESCRIPTION);
  final EEApplicationClasses applicationClassesDescription=deploymentUnit.getAttachment(Attachments.EE_APPLICATION_CLASSES_DESCRIPTION);
  final EEModuleDescription moduleDescription=deploymentUnit.getAttachment(org.jboss.as.ee.component.Attachments.EE_MODULE_DESCRIPTION);
  final String applicationName=moduleDescription.getApplicationName();
  final String beanName=sessionBean.getName();
  final SessionBeanComponentDescription sessionBeanDescription=(SessionBeanComponentDescription)moduleDescription.getComponentByName(beanName);
  sessionBeanDescription.setDeploymentDescriptorEnvironment(new DeploymentDescriptorEnvironment("java:comp/env/",sessionBean));
  sessionBeanDescription.setMappedName(sessionBean.getMappedName());
  BusinessLocalsMetaData businessLocals=sessionBean.getBusinessLocals();
  if (businessLocals != null && !businessLocals.isEmpty()) {
    sessionBeanDescription.addLocalBusinessInterfaceViews(businessLocals);
  }
  final String localHome=sessionBean.getLocalHome();
  if (localHome != null) {
    sessionBeanDescription.addLocalHome(localHome);
  }
  final String local=sessionBean.getLocal();
  if (local != null) {
    sessionBeanDescription.addEjbLocalObjectView(local);
  }
  BusinessRemotesMetaData businessRemotes=sessionBean.getBusinessRemotes();
  if (businessRemotes != null && !businessRemotes.isEmpty()) {
    sessionBeanDescription.addRemoteBusinessInterfaceViews(businessRemotes);
  }
  this.processInterceptors(sessionBean,sessionBeanDescription,applicationClassesDescription);
  if (sessionBean instanceof SessionBean31MetaData) {
    this.processSessionBean31((SessionBean31MetaData)sessionBean,sessionBeanDescription);
  }
}

{
  final DeploymentUnit deploymentUnit=phaseContext.getDeploymentUnit();
  final EEModuleDescription moduleDescription=deploymentUnit.getAttachment(org.jboss.as.ee.component.Attachments.EE_MODULE_DESCRIPTION);
  final String beanName=sessionBean.getName();
  ComponentDescription bean=moduleDescription.getComponentByName(beanName);
  if (appclient) {
    if (bean == null) {
      for (      final ComponentDescription component : deploymentUnit.getAttachmentList(Attachments.ADDITIONAL_RESOLVABLE_COMPONENTS)) {
        if (component.getComponentName().equals(beanName)) {
          bean=component;
          break;
        }
      }
    }
  }
  if (!(bean instanceof SessionBeanComponentDescription)) {
    return;
  }
  SessionBeanComponentDescription sessionBeanDescription=(SessionBeanComponentDescription)bean;
  sessionBeanDescription.setDeploymentDescriptorEnvironment(new DeploymentDescriptorEnvironment("java:comp/env/",sessionBean));
  sessionBeanDescription.setMappedName(sessionBean.getMappedName());
  final BusinessLocalsMetaData businessLocals=sessionBean.getBusinessLocals();
  if (businessLocals != null && !businessLocals.isEmpty()) {
    sessionBeanDescription.addLocalBusinessInterfaceViews(businessLocals);
  }
  final String local=sessionBean.getLocal();
  if (local != null) {
    sessionBeanDescription.addEjbLocalObjectView(local);
  }
  final String remote=sessionBean.getRemote();
  if (remote != null) {
    sessionBeanDescription.addEjbObjectView(remote);
  }
  final BusinessRemotesMetaData businessRemotes=sessionBean.getBusinessRemotes();
  if (businessRemotes != null && !businessRemotes.isEmpty()) {
    sessionBeanDescription.addRemoteBusinessInterfaceViews(businessRemotes);
  }
  if (sessionBean instanceof SessionBean31MetaData) {
    this.processSessionBean31((SessionBean31MetaData)sessionBean,sessionBeanDescription);
  }
}

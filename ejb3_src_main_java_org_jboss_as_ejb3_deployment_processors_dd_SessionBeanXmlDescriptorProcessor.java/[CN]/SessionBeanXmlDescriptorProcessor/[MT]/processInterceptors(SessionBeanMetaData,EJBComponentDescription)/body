{
  if (enterpriseBean.getAroundInvokes() != null) {
    for (    AroundInvokeMetaData interceptor : enterpriseBean.getAroundInvokes()) {
      if (interceptor.getClassName() == null) {
        ejbComponentDescription.getAroundInvokeDDMethods().add(interceptor.getMethodName());
      }
 else {
        EEModuleClassDescription interceptorModuleClassDescription=ejbComponentDescription.getModuleDescription().getOrAddClassByName(interceptor.getClassName());
        final MethodIdentifier identifier=MethodIdentifier.getIdentifier(Object.class,interceptor.getMethodName(),InvocationContext.class);
        interceptorModuleClassDescription.setAroundInvokeMethod(identifier);
      }
    }
  }
  if (enterpriseBean.getPreDestroys() != null) {
    for (    LifecycleCallbackMetaData interceptor : enterpriseBean.getPreDestroys()) {
      if (interceptor.getClassName() == null) {
        ejbComponentDescription.getPreDestroyDDMethods().add(interceptor.getMethodName());
      }
 else {
        final EEModuleClassDescription interceptorModuleClassDescription=ejbComponentDescription.getModuleDescription().getOrAddClassByName(interceptor.getClassName());
        final MethodIdentifier identifier=MethodIdentifier.getIdentifier(Object.class,interceptor.getMethodName(),InvocationContext.class);
        interceptorModuleClassDescription.setPreDestroyMethod(identifier);
      }
    }
  }
  if (enterpriseBean.getPostConstructs() != null) {
    for (    LifecycleCallbackMetaData interceptor : enterpriseBean.getPostConstructs()) {
      if (interceptor.getClassName() == null) {
        ejbComponentDescription.getPostConstructDDMethods().add(interceptor.getMethodName());
      }
 else {
        final EEModuleClassDescription interceptorModuleClassDescription=ejbComponentDescription.getModuleDescription().getOrAddClassByName(interceptor.getClassName());
        final MethodIdentifier identifier=MethodIdentifier.getIdentifier(Object.class,interceptor.getMethodName(),InvocationContext.class);
        interceptorModuleClassDescription.setPostConstructMethod(identifier);
      }
    }
  }
}

{
  final JavaArchive archive=ShrinkWrap.create(JavaArchive.class,name);
  if ("interceptor-processor".equals(name)) {
    archive.addClasses(HttpMetadata.class,InterceptorActivator.class,ParserInterceptor.class,PublisherInterceptor.class);
    archive.setManifest(new Asset(){
      @Override public InputStream openStream(){
        OSGiManifestBuilder builder=OSGiManifestBuilder.newInstance();
        builder.addBundleSymbolicName(archive.getName());
        builder.addBundleManifestVersion(2);
        builder.addBundleActivator(InterceptorActivator.class);
        builder.addImportPackages(BundleActivator.class,LifecycleInterceptor.class,HttpService.class);
        builder.addImportPackages(HttpServlet.class,Servlet.class,Logger.class,VirtualFile.class);
        return builder.openStream();
      }
    }
);
  }
  if ("interceptor-endpoint".equals(name)) {
    archive.addClasses(EndpointServlet.class);
    archive.addResource("osgi/interceptor/http-metadata.properties","http-metadata.properties");
    archive.setManifest(new Asset(){
      @Override public InputStream openStream(){
        OSGiManifestBuilder builder=OSGiManifestBuilder.newInstance();
        builder.addBundleSymbolicName(archive.getName());
        builder.addBundleManifestVersion(2);
        builder.addImportPackages(HttpServlet.class,Servlet.class);
        return builder.openStream();
      }
    }
);
  }
  return archive;
}

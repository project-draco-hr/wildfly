{
  String name=operation.require(ModelDescriptionConstants.NAME).asString();
  if (ModelConstants.ID.equals(name)) {
    Bundle bundle=getTargetBundle(context,operation);
    context.getResult().set(bundle.getBundleId());
  }
 else   if (ModelConstants.STARTLEVEL.equals(name)) {
    StartLevel startLevel=getStartLevel(context);
    if (startLevel == null) {
      ModelNode failureDescription=context.getFailureDescription();
      failureDescription.set(MESSAGES.startLevelServiceNotAvailable());
    }
 else {
      Bundle bundle=getTargetBundle(context,operation);
      Integer level=startLevel.getBundleStartLevel(bundle);
      context.getResult().set(level);
    }
  }
 else   if (ModelConstants.STATE.equals(name)) {
    Bundle bundle=getTargetBundle(context,operation);
    context.getResult().set(getBundleState(bundle));
  }
 else   if (ModelConstants.SYMBOLIC_NAME.equals(name)) {
    Bundle bundle=getTargetBundle(context,operation);
    context.getResult().set(bundle.getSymbolicName());
  }
 else   if (ModelConstants.LOCATION.equals(name)) {
    Bundle bundle=getTargetBundle(context,operation);
    context.getResult().set(bundle.getLocation());
  }
 else   if (ModelConstants.TYPE.equals(name)) {
    Bundle bundle=getTargetBundle(context,operation);
    if (bundle.getHeaders().get(Constants.FRAGMENT_HOST) != null) {
      context.getResult().set(ModelConstants.FRAGMENT);
    }
 else {
      context.getResult().set(ModelConstants.BUNDLE);
    }
  }
 else   if (ModelConstants.VERSION.equals(name)) {
    Bundle bundle=getTargetBundle(context,operation);
    context.getResult().set(bundle.getVersion().toString());
  }
  context.completeStep();
}

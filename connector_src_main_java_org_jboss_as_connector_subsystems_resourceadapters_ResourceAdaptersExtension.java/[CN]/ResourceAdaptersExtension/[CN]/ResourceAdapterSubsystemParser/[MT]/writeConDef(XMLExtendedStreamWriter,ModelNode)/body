{
  streamWriter.writeStartElement(ResourceAdapter.Tag.CONNECTION_DEFINITION.getLocalName());
  writeAttributeIfHas(streamWriter,conDef,CommonConnDef.Attribute.CLASS_NAME,CLASS_NAME);
  writeAttributeIfHas(streamWriter,conDef,CommonConnDef.Attribute.JNDINAME,JNDI_NAME);
  writeAttributeIfHas(streamWriter,conDef,CommonConnDef.Attribute.ENABLED,ENABLED);
  writeAttributeIfHas(streamWriter,conDef,CommonConnDef.Attribute.USEJAVACONTEXT,USE_JAVA_CONTEXT);
  writeAttributeIfHas(streamWriter,conDef,CommonConnDef.Attribute.POOL_NAME,POOL_NAME);
  writeConfigProperties(streamWriter,conDef);
  if (conDef.has(MAX_POOL_SIZE) || conDef.has(MIN_POOL_SIZE) || conDef.has(POOL_USE_STRICT_MIN)|| conDef.has(POOL_PREFILL)) {
    if (conDef.has(INTERLIVING) || conDef.has(WRAP_XA_DATASOURCE) || conDef.has(NOTXSEPARATEPOOL)|| conDef.has(PAD_XID)|| conDef.has(SAME_RM_OVERRIDE)) {
      streamWriter.writeStartElement(CommonConnDef.Tag.XA_POOL.getLocalName());
      writeElementIfHas(streamWriter,conDef,CommonPool.Tag.MIN_POOL_SIZE,MIN_POOL_SIZE);
      writeElementIfHas(streamWriter,conDef,CommonPool.Tag.MAXPOOLSIZE,MAX_POOL_SIZE);
      writeElementIfHas(streamWriter,conDef,CommonPool.Tag.PREFILL,POOL_PREFILL);
      writeElementIfHas(streamWriter,conDef,CommonPool.Tag.USE_STRICT_MIN,POOL_USE_STRICT_MIN);
      writeElementIfHas(streamWriter,conDef,CommonXaPool.Tag.ISSAMERMOVERRIDEVALUE,SAME_RM_OVERRIDE);
      writeElementIfHas(streamWriter,conDef,CommonXaPool.Tag.INTERLEAVING,INTERLIVING);
      writeElementIfHas(streamWriter,conDef,CommonXaPool.Tag.NO_TX_SEPARATE_POOLS,NOTXSEPARATEPOOL);
      writeElementIfHas(streamWriter,conDef,CommonXaPool.Tag.PAD_XID,PAD_XID);
      writeElementIfHas(streamWriter,conDef,CommonXaPool.Tag.WRAP_XA_RESOURCE,WRAP_XA_DATASOURCE);
      streamWriter.writeEndElement();
    }
 else {
      streamWriter.writeStartElement(CommonConnDef.Tag.POOL.getLocalName());
      writeElementIfHas(streamWriter,conDef,CommonPool.Tag.MIN_POOL_SIZE,MIN_POOL_SIZE);
      writeElementIfHas(streamWriter,conDef,CommonPool.Tag.MAXPOOLSIZE,MAX_POOL_SIZE);
      writeElementIfHas(streamWriter,conDef,CommonPool.Tag.PREFILL,POOL_PREFILL);
      writeElementIfHas(streamWriter,conDef,CommonPool.Tag.USE_STRICT_MIN,POOL_USE_STRICT_MIN);
      streamWriter.writeEndElement();
    }
  }
  if (conDef.hasDefined(APPLICATION) || conDef.hasDefined(SECURITY_DOMAIN) || conDef.hasDefined(SECURITY_DOMAIN_AND_APPLICATION)) {
    streamWriter.writeStartElement(CommonConnDef.Tag.SECURITY.getLocalName());
    writeElementIfHas(streamWriter,conDef,CommonSecurity.Tag.APPLICATION,APPLICATION);
    writeElementIfHas(streamWriter,conDef,CommonSecurity.Tag.SECURITY_DOMAIN,SECURITY_DOMAIN);
    writeElementIfHas(streamWriter,conDef,CommonSecurity.Tag.SECURITY_DOMAIN_AND_APPLICATION,SECURITY_DOMAIN_AND_APPLICATION);
    streamWriter.writeEndElement();
  }
  if (conDef.has(BLOCKING_TIMEOUT_WAIT_MILLIS) || conDef.has(IDLETIMEOUTMINUTES) || conDef.has(ALLOCATION_RETRY)|| conDef.has(ALLOCATION_RETRY_WAIT_MILLIS)|| conDef.has(XA_RESOURCE_TIMEOUT)) {
    streamWriter.writeStartElement(CommonConnDef.Tag.TIMEOUT.getLocalName());
    writeElementIfHas(streamWriter,conDef,CommonTimeOut.Tag.BLOCKINGTIMEOUTMILLIS,BLOCKING_TIMEOUT_WAIT_MILLIS);
    writeElementIfHas(streamWriter,conDef,CommonTimeOut.Tag.IDLETIMEOUTMINUTES,IDLETIMEOUTMINUTES);
    writeElementIfHas(streamWriter,conDef,CommonTimeOut.Tag.ALLOCATIONRETRY,ALLOCATION_RETRY);
    writeElementIfHas(streamWriter,conDef,CommonTimeOut.Tag.ALLOCATIONRETRYWAITMILLIS,ALLOCATION_RETRY_WAIT_MILLIS);
    writeElementIfHas(streamWriter,conDef,CommonTimeOut.Tag.XARESOURCETIMEOUT,XA_RESOURCE_TIMEOUT);
    streamWriter.writeEndElement();
  }
  if (conDef.has(BACKGROUNDVALIDATION) || conDef.has(BACKGROUNDVALIDATIONMINUTES) || conDef.has(USE_FAST_FAIL)) {
    streamWriter.writeStartElement(CommonConnDef.Tag.VALIDATION.getLocalName());
    writeElementIfHas(streamWriter,conDef,CommonValidation.Tag.BACKGROUNDVALIDATION,BACKGROUNDVALIDATION);
    writeElementIfHas(streamWriter,conDef,CommonValidation.Tag.BACKGROUNDVALIDATIONMINUTES,BACKGROUNDVALIDATIONMINUTES);
    writeElementIfHas(streamWriter,conDef,CommonValidation.Tag.USEFASTFAIL,USE_FAST_FAIL);
    streamWriter.writeEndElement();
  }
  streamWriter.writeEndElement();
}

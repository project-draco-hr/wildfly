{
  streamWriter.writeStartElement(ResourceAdapters.Tag.RESOURCE_ADPTER.getLocalName());
  writeElementIfHas(streamWriter,ra,ResourceAdapter.Tag.ARCHIVE,ARCHIVE);
  if (ra.has(BEANVALIDATIONGROUPS)) {
    for (    ModelNode bvg : ra.get(BEANVALIDATIONGROUPS).asList()) {
      writeElementIfHas(streamWriter,bvg,ResourceAdapter.Tag.BEAN_VALIDATION_GROUP,BEANVALIDATIONGROUPS);
    }
  }
  writeElementIfHas(streamWriter,ra,ResourceAdapter.Tag.BOOTSTRAP_CONTEXT,BOOTSTRAPCONTEXT);
  writeElementIfHas(streamWriter,ra,ResourceAdapter.Tag.TRANSACTION_SUPPORT,TRANSACTIONSUPPORT);
  writeConfigProperties(streamWriter,ra);
  if (ra.has(CONNECTIONDEFINITIONS)) {
    streamWriter.writeStartElement(ResourceAdapter.Tag.CONNECTION_DEFINITIONS.getLocalName());
    for (    ModelNode conDef : ra.get(CONNECTIONDEFINITIONS).asList()) {
      writeConDef(streamWriter,conDef);
    }
    streamWriter.writeEndElement();
  }
  if (ra.has(ADMIN_OBJECTS)) {
    streamWriter.writeStartElement(ResourceAdapter.Tag.ADMIN_OBJECTS.getLocalName());
    for (    ModelNode adminObject : ra.get(ADMIN_OBJECTS).asList()) {
      writeAdminObject(streamWriter,adminObject);
    }
    streamWriter.writeEndElement();
  }
  streamWriter.writeEndElement();
}

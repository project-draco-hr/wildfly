{
  SUBSYSTEM_RA_LOGGER.debugf("Initializing ResourceAdapters Extension");
  final SubsystemRegistration registration=context.registerSubsystem(SUBSYSTEM_NAME);
  registration.registerXMLElementWriter(ResourceAdapterSubsystemParser.INSTANCE);
  final ManagementResourceRegistration subsystem=registration.registerSubsystemModel(SUBSYSTEM);
  subsystem.registerOperationHandler(ADD,ResourceAdaptersSubSystemAdd.INSTANCE,SUBSYSTEM_ADD_DESC,false);
  subsystem.registerOperationHandler(DESCRIBE,ResourceAdaptersSubsystemDescribeHandler.INSTANCE,ResourceAdaptersSubsystemDescribeHandler.INSTANCE,false,OperationEntry.EntryType.PRIVATE);
  final ManagementResourceRegistration resourceadapter=subsystem.registerSubModel(PathElement.pathElement(RESOURCEADAPTER_NAME),RESOURCEADAPTER_DESC);
  resourceadapter.registerOperationHandler(ADD,RaAdd.INSTANCE,ADD_RESOURCEADAPTER_DESC,false);
  resourceadapter.registerOperationHandler(REMOVE,RaRemove.INSTANCE,REMOVE_RESOURCEADAPTER_DESC,false);
  resourceadapter.registerOperationHandler("flush-idle-connection-in-pool",PoolOperations.FlushIdleConnectionInPool.DS_INSTANCE,FLUSH_IDLE_CONNECTION_DESC,false);
  resourceadapter.registerOperationHandler("flush-all-connection-in-pool",PoolOperations.FlushAllConnectionInPool.RA_INSTANCE,FLUSH_ALL_CONNECTION_DESC,false);
  resourceadapter.registerOperationHandler("test-connection-in-pool",PoolOperations.TestConnectionInPool.RA_INSTANCE,TEST_CONNECTION_DESC,false);
  for (  final String attributeName : PoolMetrics.ATTRIBUTES) {
    resourceadapter.registerMetric(attributeName,PoolMetrics.RaPoolMetricsHandler.INSTANCE);
  }
  for (  final String attributeName : PoolConfigurationRWHandler.ATTRIBUTES) {
    resourceadapter.registerReadWriteAttribute(attributeName,PoolConfigurationReadHandler.INSTANCE,RaPoolConfigurationWriteHandler.INSTANCE,Storage.CONFIGURATION);
  }
}

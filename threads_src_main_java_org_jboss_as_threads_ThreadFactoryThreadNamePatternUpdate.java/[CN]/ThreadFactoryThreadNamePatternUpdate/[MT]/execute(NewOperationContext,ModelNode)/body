{
  validator.validate(operation);
  final String name=Util.getNameFromAddress(operation.require(OP_ADDR));
  ModelNode model=context.readModelForUpdate(PathAddress.EMPTY_ADDRESS);
  if (!model.isDefined()) {
    throw new OperationFailedException(notConfigured(name));
  }
  ModelNode oldValue=model.get(CommonAttributes.THREAD_NAME_PATTERN);
  final String newNamePattern;
  ModelNode newValue;
  if (operation.hasDefined(VALUE)) {
    newValue=operation.get(VALUE);
    newNamePattern=newValue.resolve().asString();
  }
 else {
    newValue=new ModelNode();
    newNamePattern=null;
  }
  model.get(CommonAttributes.THREAD_NAME_PATTERN).set(newValue);
  if (context.getType() == NewOperationContext.Type.SERVER) {
    context.addStep(new NewStepHandler(){
      public void execute(      NewOperationContext context,      ModelNode operation) throws OperationFailedException {
        final ServiceController<?> service=context.getServiceRegistry(false).getService(ThreadsServices.threadFactoryName(name));
        if (service == null) {
          throw new OperationFailedException(notConfigured(name));
        }
 else {
          final ThreadFactoryService threadFactoryService=(ThreadFactoryService)service.getValue();
          threadFactoryService.setNamePattern(newNamePattern);
        }
        context.completeStep();
      }
    }
,NewOperationContext.Stage.RUNTIME);
  }
  context.completeStep();
}

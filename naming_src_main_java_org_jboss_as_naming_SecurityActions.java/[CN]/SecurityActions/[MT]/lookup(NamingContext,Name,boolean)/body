{
  if (System.getSecurityManager() == null) {
    return context.lookup(name,dereference);
  }
 else {
    try {
      return AccessController.doPrivileged(new PrivilegedExceptionAction<Object>(){
        @Override public Object run() throws Exception {
          return context.lookup(name,dereference);
        }
      }
);
    }
 catch (    PrivilegedActionException e) {
      Throwable cause=e.getCause();
      throw rethrowTypedOrUnchecked(NamingException.class,cause,MESSAGES.unexpectedExceptionDuringPrivilegedLookup(cause));
    }
  }
}

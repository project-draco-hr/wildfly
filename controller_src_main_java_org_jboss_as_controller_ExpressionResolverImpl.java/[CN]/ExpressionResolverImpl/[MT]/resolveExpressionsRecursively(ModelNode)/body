{
  if (!node.isDefined()) {
    return node;
  }
  ModelNode resolved;
  if (node.getType() == ModelType.EXPRESSION) {
    resolved=node.clone();
    resolvePluggableExpression(resolved);
    resolved=resolved.resolve();
    while (ParseUtils.isExpression(resolved.asString())) {
      resolved=ParseUtils.parsePossibleExpression(resolved.asString());
      resolvePluggableExpression(resolved);
      resolved=resolved.resolve();
    }
  }
 else   if (node.getType() == ModelType.OBJECT) {
    resolved=node.clone();
    for (    Property prop : resolved.asPropertyList()) {
      resolved.get(prop.getName()).set(resolveExpressionsRecursively(prop.getValue()));
    }
  }
 else   if (node.getType() == ModelType.LIST) {
    resolved=node.clone();
    ModelNode list=new ModelNode();
    for (    ModelNode current : resolved.asList()) {
      list.add(resolveExpressionsRecursively(current));
    }
    resolved=list;
  }
 else   if (node.getType() == ModelType.PROPERTY) {
    resolved=node.clone();
    resolved.set(resolved.asProperty().getName(),resolveExpressionsRecursively(resolved.asProperty().getValue()));
  }
 else {
    resolved=node;
  }
  return resolved;
}

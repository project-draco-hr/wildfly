{
  TaggedComponent tc;
  int support=0;
  int require=0;
  if (tconfig != null) {
    require=createTargetRequires(tconfig);
    support=createTargetSupports(tconfig);
  }
  if (tconfig == null || support == 0 || sslPort < 0) {
    tc=new TaggedComponent(TAG_NULL_TAG.value,new byte[0]);
  }
 else {
    String host;
    try {
      host=InetAddress.getLocalHost().getHostAddress();
    }
 catch (    java.net.UnknownHostException e) {
      host="127.0.0.1";
    }
    TransportAddress[] taList=createTransportAddress(host,sslPort);
    TLS_SEC_TRANS tst=new TLS_SEC_TRANS((short)support,(short)require,taList);
    try {
      Any any=orb.create_any();
      TLS_SEC_TRANSHelper.insert(any,tst);
      byte[] b=codec.encode_value(any);
      tc=new TaggedComponent(TAG_TLS_SEC_TRANS.value,b);
    }
 catch (    InvalidTypeForEncoding e) {
      log.warn("Caught unexcepted exception while encoding TLS_SEC_TRANS",e);
      throw new RuntimeException(e);
    }
  }
  return tc;
}

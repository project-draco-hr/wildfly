{
  String pathName=address.getElement(0).getValue();
  Map<Set<ServerIdentity>,ModelNode> result;
  if (forDomain && hostModel.hasDefined(INTERFACE) && hostModel.get(INTERFACE).keys().contains(pathName)) {
    result=Collections.emptyMap();
  }
 else   if (ADD.equals(operation.get(OP).asString()) && InterfaceDescription.isOperationDefined(operation)) {
    result=Collections.emptyMap();
  }
 else   if (hostModel.hasDefined(SERVER_CONFIG)) {
    Set<ServerIdentity> servers=new HashSet<ServerIdentity>();
    for (    Property prop : hostModel.get(SERVER_CONFIG).asPropertyList()) {
      String serverName=prop.getName();
      if (serverProxies.get(serverName) == null) {
        continue;
      }
      ModelNode server=prop.getValue();
      String serverGroupName=server.require(GROUP).asString();
      if (server.hasDefined(INTERFACE) && server.get(INTERFACE).keys().contains(pathName)) {
        continue;
      }
      ServerIdentity groupedServer=new ServerIdentity(localHostName,serverGroupName,serverName);
      servers.add(groupedServer);
    }
    ModelNode serverOp=operation.clone();
    serverOp.get(OP_ADDR).setEmptyList().add(INTERFACE,pathName);
    result=Collections.singletonMap(servers,serverOp);
  }
 else {
    result=Collections.emptyMap();
  }
  return result;
}

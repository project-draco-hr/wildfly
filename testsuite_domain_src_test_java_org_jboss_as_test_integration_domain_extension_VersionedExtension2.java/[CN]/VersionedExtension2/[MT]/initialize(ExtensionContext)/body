{
  final SubsystemRegistration subsystem=context.registerSubsystem(SUBSYSTEM_NAME,2,0,0);
  final ManagementResourceRegistration registration=initializeSubsystem(subsystem);
  registration.registerOperationHandler("update",new OperationStepHandler(){
    @Override public void execute(    final OperationContext context,    final ModelNode operation) throws OperationFailedException {
      final Resource resource=context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS);
      final ModelNode model=resource.getModel();
      model.get("test-attribute").set("test");
      context.getResult().set(model);
      context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);
    }
  }
,DESCRIPTION_PROVIDER);
  registration.registerSubModel(createResourceDefinition(NEW_ELEMENT));
  registration.registerSubModel(createResourceDefinition(RENAMED));
  final TransformersSubRegistration transformers=subsystem.registerModelTransformers(ModelVersion.create(1,0,0),RESOURCE_TRANSFORMER);
  transformers.registerOperationTransformer("update",new UpdateTransformer());
  final TransformersSubRegistration newElement=transformers.registerSubResource(NEW_ELEMENT);
  newElement.discardOperations(TransformersSubRegistration.COMMON_OPERATIONS);
  final TransformersSubRegistration renamed=transformers.registerSubResource(RENAMED,AliasOperationTransformer.replaceLastElement(PathElement.pathElement("element","renamed")));
}

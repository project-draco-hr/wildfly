{
  File content=chooseFile();
  if (content == null) {
    return builder;
  }
  String contentName=content.getName();
  if (cmd != DeploymentActionsMenu.ADD_AND_REPLACE) {
    if (addedContent.contains(contentName) || model.getDeployment(contentName) != null) {
      stdout.println("ERROR: A deployment with name " + contentName + " already exists in the domain.");
      stdout.println("To replace it with content of the same name, choose:");
      stdout.println(DeploymentActionsMenu.ADD_AND_REPLACE.getPrompt());
      return deploymentPlanCancelPrompt() ? null : builder;
    }
  }
switch (cmd) {
case ADD:
{
      builder=builder.add(contentName,content);
      break;
    }
case ADD_AND_DEPLOY:
{
    builder=builder.add(contentName,content).andDeploy();
    deployedContent.add(contentName);
    break;
  }
case ADD_AND_REPLACE:
{
  builder=builder.replace(contentName,content);
  DeploymentUnitElement existing=model.getDeployment(contentName);
  if (deployedContent.contains(contentName) || (existing != null && existing.isStart() && !undeployedContent.contains(contentName))) {
    deployedContent.add(contentName);
  }
  break;
}
default :
{
throw new IllegalArgumentException("Invalid command " + cmd);
}
}
addedContent.add(contentName);
undeployedContent.remove(contentName);
removedContent.remove(contentName);
return builder;
}

{
  Set<String> addedContent=new HashSet<String>();
  Set<String> deployedContent=new HashSet<String>();
  Set<String> undeployedContent=new HashSet<String>();
  Set<String> removedContent=new HashSet<String>();
  do {
    boolean hasActions=(builder instanceof DeploymentSetActionsCompleteBuilder);
    writeMenu(hasActions ? DeploymentActionsMenu.ALL : DeploymentActionsMenu.INITIAL);
    String choice=readStdIn();
    DeploymentActionsMenu cmd=deploymentActionMenuByCmd.get(choice.toUpperCase());
    if (cmd == null) {
      stdout.println(choice + " is not a valid selection.\n");
    }
 else {
switch (cmd) {
case ADD:
case ADD_AND_DEPLOY:
case ADD_AND_REPLACE:
{
          builder=addContent(builder,addedContent,deployedContent,undeployedContent,removedContent,model,cmd);
          break;
        }
case DEPLOY:
{
        builder=deployContent(builder,addedContent,deployedContent,undeployedContent,removedContent,model);
        break;
      }
case REPLACE:
{
      builder=replaceContent(builder,addedContent,deployedContent,undeployedContent,removedContent,model);
      break;
    }
case UNDEPLOY:
case UNDEPLOY_AND_REMOVE:
{
    builder=undeployContent(builder,addedContent,deployedContent,undeployedContent,removedContent,model,cmd);
    break;
  }
case REMOVE:
{
  builder=removeContent(builder,addedContent,deployedContent,undeployedContent,removedContent,model);
  break;
}
case APPLY:
{
if (hasActions) {
  return (DeploymentSetActionsCompleteBuilder)builder;
}
 else {
  stdout.println(choice + " is not a valid selection.\n");
}
break;
}
case CANCEL:
{
return null;
}
default :
{
stdout.println("Command " + cmd.getCommand() + " is not supported");
}
}
}
}
 while (true);
}

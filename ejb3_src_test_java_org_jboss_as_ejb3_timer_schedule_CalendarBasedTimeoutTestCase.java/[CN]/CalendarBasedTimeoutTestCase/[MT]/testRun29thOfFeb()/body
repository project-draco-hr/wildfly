{
  ScheduleExpression everyLeapYearOn29thFeb=this.getTimezoneSpecificScheduleExpression();
  everyLeapYearOn29thFeb.dayOfMonth(29);
  everyLeapYearOn29thFeb.month("fEb");
  CalendarBasedTimeout calendarTimeout=new CalendarBasedTimeout(everyLeapYearOn29thFeb);
  Calendar firstTimeout=calendarTimeout.getFirstTimeout();
  Assert.assertNotNull(timeZoneDisplayName,firstTimeout);
  int minute=firstTimeout.get(Calendar.MINUTE);
  int second=firstTimeout.get(Calendar.SECOND);
  int hour=firstTimeout.get(Calendar.HOUR_OF_DAY);
  int amOrPm=firstTimeout.get(Calendar.AM_PM);
  int dayOfMonth=firstTimeout.get(Calendar.DAY_OF_MONTH);
  int month=firstTimeout.get(Calendar.MONTH);
  Assert.assertEquals(timeZoneDisplayName,0,second);
  Assert.assertEquals(timeZoneDisplayName,0,minute);
  Assert.assertEquals(timeZoneDisplayName,0,hour);
  Assert.assertEquals(timeZoneDisplayName,Calendar.AM,amOrPm);
  Assert.assertEquals(timeZoneDisplayName,29,dayOfMonth);
  Assert.assertEquals(timeZoneDisplayName,Calendar.FEBRUARY,month);
  Assert.assertTrue(timeZoneDisplayName,this.isLeapYear(firstTimeout));
  Calendar previousTimeout=firstTimeout;
  for (int i=1; i <= 2; i++) {
    Calendar nextTimeout=calendarTimeout.getNextTimeout(previousTimeout);
    Assert.assertNotNull(timeZoneDisplayName,nextTimeout);
    Assert.assertNotNull(timeZoneDisplayName,nextTimeout.after(previousTimeout));
    int nextMinute=nextTimeout.get(Calendar.MINUTE);
    int nextSecond=nextTimeout.get(Calendar.SECOND);
    int nextHour=nextTimeout.get(Calendar.HOUR_OF_DAY);
    int nextAmOrPm=nextTimeout.get(Calendar.AM_PM);
    int nextDayOfMonth=nextTimeout.get(Calendar.DAY_OF_MONTH);
    int nextMonth=nextTimeout.get(Calendar.MONTH);
    Assert.assertEquals(timeZoneDisplayName,0,nextSecond);
    Assert.assertEquals(timeZoneDisplayName,0,nextMinute);
    Assert.assertEquals(timeZoneDisplayName,0,nextHour);
    Assert.assertEquals(timeZoneDisplayName,Calendar.AM,nextAmOrPm);
    Assert.assertEquals(timeZoneDisplayName,29,nextDayOfMonth);
    Assert.assertEquals(timeZoneDisplayName,Calendar.FEBRUARY,nextMonth);
    Assert.assertTrue(timeZoneDisplayName,this.isLeapYear(nextTimeout));
    previousTimeout=nextTimeout;
  }
}

{
  Pattern symbolsPatter=Pattern.compile(REGEX_ALPHA_UC + "+");
  Matcher matcher=symbolsPatter.matcher(this.password);
  int met=0;
  while (matcher.find()) {
    int start=matcher.start();
    int end=matcher.end();
    if (start == end) {
      continue;
    }
    int diff=end - start;
    if (diff >= 3) {
      met+=diff;
    }
  }
  this.result.negative(met * CONSECUTIVE_ALPHA_WEIGHT);
  symbolsPatter=Pattern.compile(REGEX_ALPHA_LC + "+");
  matcher=symbolsPatter.matcher(this.password);
  met=0;
  while (matcher.find()) {
    int start=matcher.start();
    int end=matcher.end();
    if (start == end) {
      continue;
    }
    int diff=end - start;
    if (diff >= 3) {
      met+=diff;
    }
  }
  this.result.negative(met * CONSECUTIVE_ALPHA_WEIGHT);
}

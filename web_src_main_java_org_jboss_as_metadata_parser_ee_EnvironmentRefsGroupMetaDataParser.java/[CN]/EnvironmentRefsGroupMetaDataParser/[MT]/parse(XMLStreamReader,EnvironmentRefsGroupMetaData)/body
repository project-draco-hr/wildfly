{
  final Element element=Element.forName(reader.getLocalName());
switch (element) {
case ENV_ENTRY:
    EnvironmentEntriesMetaData envEntries=env.getEnvironmentEntries();
  if (envEntries == null) {
    envEntries=new EnvironmentEntriesMetaData();
    env.setEnvironmentEntries(envEntries);
  }
envEntries.add(EnvironmentEntryMetaDataParser.parse(reader));
break;
case EJB_REF:
EJBReferencesMetaData ejbReferences=env.getEjbReferences();
if (ejbReferences == null) {
ejbReferences=new EJBReferencesMetaData();
env.setEjbReferences(ejbReferences);
}
ejbReferences.add(EJBReferenceMetaDataParser.parse(reader));
break;
case EJB_LOCAL_REF:
EJBLocalReferencesMetaData ejbLocalReferences=env.getEjbLocalReferences();
if (ejbLocalReferences == null) {
ejbLocalReferences=new EJBLocalReferencesMetaData();
env.setEjbLocalReferences(ejbLocalReferences);
}
ejbLocalReferences.add(EJBLocalReferenceMetaDataParser.parse(reader));
break;
case SERVICE_REF:
ServiceReferencesMetaData serviceReferences=env.getServiceReferences();
if (serviceReferences == null) {
serviceReferences=new ServiceReferencesMetaData();
env.setServiceReferences(serviceReferences);
}
serviceReferences.add(ServiceReferenceMetaDataParser.parse(reader));
break;
case RESOURCE_REF:
ResourceReferencesMetaData resourceReferences=env.getResourceReferences();
if (resourceReferences == null) {
resourceReferences=new ResourceReferencesMetaData();
env.setResourceReferences(resourceReferences);
}
resourceReferences.add(ResourceReferenceMetaDataParser.parse(reader));
break;
case RESOURCE_ENV_REF:
ResourceEnvironmentReferencesMetaData resourceEnvReferences=env.getResourceEnvironmentReferences();
if (resourceEnvReferences == null) {
resourceEnvReferences=new ResourceEnvironmentReferencesMetaData();
env.setResourceEnvironmentReferences(resourceEnvReferences);
}
resourceEnvReferences.add(ResourceEnvironmentReferenceMetaDataParser.parse(reader));
break;
case MESSAGE_DESTINATION_REF:
MessageDestinationReferencesMetaData mdReferences=env.getMessageDestinationReferences();
if (mdReferences == null) {
mdReferences=new MessageDestinationReferencesMetaData();
env.setMessageDestinationReferences(mdReferences);
}
mdReferences.add(MessageDestinationReferenceMetaDataParser.parse(reader));
break;
case PERSISTENCE_CONTEXT_REF:
PersistenceContextReferencesMetaData pcReferences=env.getPersistenceContextRefs();
if (pcReferences == null) {
pcReferences=new PersistenceContextReferencesMetaData();
env.setPersistenceContextRefs(pcReferences);
}
pcReferences.add(PersistenceContextReferenceMetaDataParser.parse(reader));
break;
case PERSISTENCE_UNIT_REF:
PersistenceUnitReferencesMetaData puReferences=env.getPersistenceUnitRefs();
if (puReferences == null) {
puReferences=new PersistenceUnitReferencesMetaData();
env.setPersistenceUnitRefs(puReferences);
}
puReferences.add(PersistenceUnitReferenceMetaDataParser.parse(reader));
break;
case POST_CONSTRUCT:
LifecycleCallbacksMetaData postConstructs=env.getPostConstructs();
if (postConstructs == null) {
postConstructs=new LifecycleCallbacksMetaData();
env.setPostConstructs(postConstructs);
}
postConstructs.add(LifecycleCallbackMetaDataParser.parse(reader));
break;
case PRE_DESTROY:
LifecycleCallbacksMetaData preDestroys=env.getPreDestroys();
if (preDestroys == null) {
preDestroys=new LifecycleCallbacksMetaData();
env.setPreDestroys(preDestroys);
}
preDestroys.add(LifecycleCallbackMetaDataParser.parse(reader));
break;
case DATA_SOURCE:
DataSourcesMetaData dataSources=env.getDataSources();
if (dataSources == null) {
dataSources=new DataSourcesMetaData();
env.setDataSources(dataSources);
}
dataSources.add(DataSourceMetaDataParser.parse(reader));
break;
default :
return false;
}
return true;
}

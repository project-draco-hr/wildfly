{
synchronized (this) {
    if (jobXmlFiles.isEmpty() && jobXmlResolvers.isEmpty()) {
      return null;
    }
    for (    JobXmlResolver resolver : jobXmlResolvers) {
      final InputStream in=resolver.resolveJobXml(jobXml,classLoader);
      if (in != null) {
        return in;
      }
    }
  }
  final VirtualFile file;
synchronized (this) {
    file=jobXmlFiles.get(jobXml);
  }
  if (file == null) {
    return null;
  }
  if (WildFlySecurityManager.isChecking()) {
    return AccessController.doPrivileged(new PrivilegedAction<InputStream>(){
      IOException error;
      @Override public InputStream run(){
        try {
          return file.openStream();
        }
 catch (        IOException e) {
          throw new RuntimeException(e);
        }
      }
    }
);
  }
  return file.openStream();
}

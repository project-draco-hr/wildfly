{
  final String address="http://" + TestSuiteEnvironment.getServerAddress() + ":"+ TestSuiteEnvironment.getHttpPort()+ "/ee-suspend/ShutdownServlet";
  ExecutorService executorService=Executors.newSingleThreadExecutor();
  try {
    Future<Object> result=executorService.submit(new Callable<Object>(){
      @Override public Object call() throws Exception {
        return HttpRequest.get(address,60,TimeUnit.SECONDS);
      }
    }
);
    Thread.sleep(1000);
    ModelNode op=new ModelNode();
    op.get(ModelDescriptionConstants.OP).set("suspend");
    managementClient.getControllerClient().execute(op);
    ShutdownServlet.requestLatch.countDown();
    Assert.assertEquals(ShutdownServlet.TEXT,result.get());
    final HttpURLConnection conn=(HttpURLConnection)new URL(address).openConnection();
    try {
      conn.setDoInput(true);
      int responseCode=conn.getResponseCode();
      Assert.assertEquals(503,responseCode);
    }
  finally {
      conn.disconnect();
    }
  }
  finally {
    ShutdownServlet.requestLatch.countDown();
    executorService.shutdown();
    ModelNode op=new ModelNode();
    op.get(ModelDescriptionConstants.OP).set("resume");
    managementClient.getControllerClient().execute(op);
  }
}

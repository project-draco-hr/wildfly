{
  List<BindingDescription> bindingDescriptions=new ArrayList<BindingDescription>();
  if (environment.getEnvironment() == null) {
    return bindingDescriptions;
  }
  PersistenceUnitReferencesMetaData persistenceUnitRefs=environment.getEnvironment().getPersistenceUnitRefs();
  if (persistenceUnitRefs != null) {
    for (    PersistenceUnitReferenceMetaData puRef : persistenceUnitRefs) {
      String name=puRef.getName();
      String persistenceUnitName=puRef.getPersistenceUnitName();
      String lookup=puRef.getLookupName();
      if (!isEmpty(lookup) && !isEmpty(persistenceUnitName)) {
        throw new DeploymentUnitProcessingException("Cannot specify both <lookup-name> (" + lookup + ") and persistence-unit-name ("+ persistenceUnitName+ ") in <persistence-unit-ref/> for "+ componentDescription);
      }
      if (!name.startsWith("java:")) {
        name=environment.getDefaultContext() + name;
      }
      BindingDescription bindingDescription=new BindingDescription(name);
      bindingDescriptions.add(bindingDescription);
      processInjectionTargets(classLoader,deploymentReflectionIndex,puRef,bindingDescription,PersistenceUnit.class);
      bindingDescription.setBindingType(PersistenceUnit.class.getName());
      if (!isEmpty(lookup)) {
        if (componentDescription != null) {
          bindingDescription.setReferenceSourceDescription(new LookupBindingSourceDescription(lookup,componentDescription));
        }
 else {
          bindingDescription.setReferenceSourceDescription(new LookupBindingSourceDescription(lookup,moduleDescription));
        }
      }
 else       if (!isEmpty(persistenceUnitName)) {
        bindingDescription.setReferenceSourceDescription(getPersistenceUnitBindingSource(deploymentUnit,persistenceUnitName));
      }
 else {
        bindingDescription.setReferenceSourceDescription(new LazyBindingSourceDescription());
      }
    }
  }
  return bindingDescriptions;
}

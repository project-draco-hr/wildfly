def compress(archive, method):
    'Compress an archive object via method. ZIP archives are ignored. If\n    method is automatic then the following technologies are tried in order: xz,\n    bz2 and gzip'
    if (method == 'zip'):
        return archive.name()
    methods = ['xz', 'bzip2', 'gzip']
    if (method in ('xz', 'bzip2', 'gzip')):
        methods = [method]
    compressed = False
    last_error = None
    for cmd in ('xz', 'bzip2', 'gzip'):
        if compressed:
            break
        try:
            command = shlex.split(('%s %s' % (cmd, archive.name())))
            p = Popen(command, stdout=PIPE, stderr=PIPE, bufsize=(-1))
            (stdout, stderr) = p.communicate()
            log = logging.getLogger('sos')
            if stdout:
                log.info(stdout)
            if stderr:
                log.error(stderr)
            compressed = True
            return ((archive.name() + '.') + cmd.replace('ip', ''))
        except Exception as e:
            last_error = e
    if (not compressed):
        raise last_error

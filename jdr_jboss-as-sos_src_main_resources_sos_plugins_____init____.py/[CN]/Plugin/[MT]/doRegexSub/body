def doRegexSub(self, srcpath, regexp, subst):
    'Apply a regexp substitution to a file archived by sosreport.\n        srcpath is the path in the archive where the file can be found.  regexp\n        can be a regexp string or a compiled re object.  subst is a string to\n        replace each occurance of regexp in the content of srcpath.\n\n        This function returns the number of replacements made.\n        '
    try:
        path = self._get_dest_for_srcpath(srcpath)
        if (not path):
            return 0
        readable = self.archive.open_file(path)
        (result, replacements) = re.subn(regexp, subst, readable.read())
        if replacements:
            self.archive.add_string(result, srcpath)
            return replacements
        else:
            return 0
    except Exception as e:
        return 0

{
  final ClassResolver resolver=configuration.getClassResolver();
  if (resolver != null) {
    PrivilegedAction<Method> action=new PrivilegedAction<Method>(){
      @Override public Method run(){
        try {
          Method method=resolver.getClass().getDeclaredMethod("getClassLoader");
          method.setAccessible(true);
          return method;
        }
 catch (        NoSuchMethodException e) {
          return null;
        }
      }
    }
;
    Method method=AccessController.doPrivileged(action);
    if (method != null) {
      try {
        return (ClassLoader)method.invoke(resolver);
      }
 catch (      Exception e) {
      }
    }
  }
  return null;
}

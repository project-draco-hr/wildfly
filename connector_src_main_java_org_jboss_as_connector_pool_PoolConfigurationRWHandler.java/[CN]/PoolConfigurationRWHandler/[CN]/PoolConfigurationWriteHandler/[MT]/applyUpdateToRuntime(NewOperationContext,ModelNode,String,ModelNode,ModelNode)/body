{
  if (context.getType() == NewOperationContext.Type.SERVER) {
    context.addStep(new NewStepHandler(){
      public void execute(      NewOperationContext context,      ModelNode operation) throws OperationFailedException {
        final PathAddress address=PathAddress.pathAddress(operation.require(OP_ADDR));
        final String jndiName=address.getLastElement().getValue();
        final ServiceController<?> managementRepoService=context.getServiceRegistry(false).getService(ConnectorServices.MANAGEMENT_REPOSISTORY_SERVICE);
        if (managementRepoService != null) {
          try {
            final ManagementRepository repository=(ManagementRepository)managementRepoService.getValue();
            List<PoolConfiguration> poolConfigs=getMatchingPoolConfigs(jndiName,repository);
            for (            PoolConfiguration pc : poolConfigs) {
              if (MAX_POOL_SIZE.equals(parameterName)) {
                pc.setMaxSize(newValue.asInt());
              }
              if (MIN_POOL_SIZE.equals(parameterName)) {
                pc.setMinSize(newValue.asInt());
              }
              if (BLOCKING_TIMEOUT_WAIT_MILLIS.equals(parameterName)) {
                pc.setBlockingTimeout(newValue.asLong());
              }
              if (POOL_USE_STRICT_MIN.equals(parameterName)) {
                pc.setStrictMin(newValue.asBoolean());
              }
              if (USE_FAST_FAIL.equals(parameterName)) {
                pc.setUseFastFail(newValue.asBoolean());
              }
            }
          }
 catch (          Exception e) {
            throw new OperationFailedException(new ModelNode().set("failed to set attribute" + e.getMessage()));
          }
        }
        context.completeStep();
      }
    }
,NewOperationContext.Stage.RUNTIME);
  }
  return (IDLETIMEOUTMINUTES.equals(parameterName) || BACKGROUNDVALIDATION.equals(parameterName) || BACKGROUNDVALIDATIONMINUTES.equals(parameterName)|| POOL_PREFILL.equals(parameterName));
}

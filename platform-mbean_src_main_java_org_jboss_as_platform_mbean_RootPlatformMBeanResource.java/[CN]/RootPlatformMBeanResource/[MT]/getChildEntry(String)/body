{
  if (PlatformMBeanConstants.CLASS_LOADING.equals(name)) {
    return new LeafPlatformMBeanResource(PlatformMBeanConstants.CLASS_LOADING_PATH);
  }
 else   if (PlatformMBeanConstants.COMPILATION.equals(name) && ManagementFactory.getCompilationMXBean() != null) {
    return new LeafPlatformMBeanResource(PlatformMBeanConstants.COMPILATION_PATH);
  }
 else   if (PlatformMBeanConstants.GARBAGE_COLLECTOR.equals(name)) {
    return new GarbageCollectorMXBeanResource();
  }
 else   if (PlatformMBeanConstants.MEMORY.equals(name)) {
    return new LeafPlatformMBeanResource(PlatformMBeanConstants.MEMORY_PATH);
  }
 else   if (PlatformMBeanConstants.MEMORY_MANAGER.equals(name)) {
    return new MemoryManagerMXBeanResource();
  }
 else   if (PlatformMBeanConstants.MEMORY_POOL.equals(name)) {
    return new MemoryPoolMXBeanResource();
  }
 else   if (PlatformMBeanConstants.OPERATING_SYSTEM.equals(name)) {
    return new LeafPlatformMBeanResource(PlatformMBeanConstants.OPERATING_SYSTEM_PATH);
  }
 else   if (PlatformMBeanConstants.RUNTIME.equals(name)) {
    return new LeafPlatformMBeanResource(PlatformMBeanConstants.RUNTIME_PATH);
  }
 else   if (PlatformMBeanConstants.THREADING.equals(name)) {
    return new LeafPlatformMBeanResource(PlatformMBeanConstants.THREADING_PATH);
  }
 else   if (PlatformMBeanConstants.BUFFER_POOL.equals(name)) {
    return new BufferPoolMXBeanResource();
  }
 else   if (PlatformMBeanConstants.LOGGING.equals(name)) {
    return new LeafPlatformMBeanResource(PlatformMBeanConstants.LOGGING_PATH);
  }
 else {
    return null;
  }
}

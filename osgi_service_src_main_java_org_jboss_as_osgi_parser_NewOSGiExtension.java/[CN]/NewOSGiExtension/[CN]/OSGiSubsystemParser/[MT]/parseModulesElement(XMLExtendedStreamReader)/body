{
  ParseUtils.requireNoAttributes(reader);
  ModelNode modules=new ModelNode();
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
switch (Namespace.forUri(reader.getNamespaceURI())) {
case OSGI_1_0:
{
        final Element element=Element.forName(reader.getLocalName());
        if (element == Element.MODULE) {
          String identifier=null;
          String start=null;
          final int count=reader.getAttributeCount();
          for (int i=0; i < count; i++) {
            if (reader.getAttributeNamespace(i) != null) {
              throw ParseUtils.unexpectedAttribute(reader,i);
            }
            final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case IDENTIFIER:
{
                identifier=reader.getAttributeValue(i);
                break;
              }
case START:
{
              start=reader.getAttributeValue(i);
              break;
            }
default :
          throw ParseUtils.unexpectedAttribute(reader,i);
      }
    }
    if (identifier == null)     throw ParseUtils.missingRequired(reader,Collections.singleton(Attribute.IDENTIFIER));
    if (modules.has(identifier))     throw new XMLStreamException(element.getLocalName() + " already declared",reader.getLocation());
    ModelNode module=new ModelNode();
    if (start != null) {
      module.get(START).set(start);
    }
    modules.get(identifier).set(module);
    ParseUtils.requireNoContent(reader);
  }
 else {
    throw ParseUtils.unexpectedElement(reader);
  }
  break;
}
default :
throw ParseUtils.unexpectedElement(reader);
}
}
return modules;
}

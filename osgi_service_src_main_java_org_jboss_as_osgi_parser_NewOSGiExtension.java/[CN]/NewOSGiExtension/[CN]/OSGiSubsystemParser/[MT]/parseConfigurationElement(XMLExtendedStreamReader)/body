{
  final ModelNode configuration=new ModelNode();
  String pid=null;
  int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    final String attrValue=reader.getAttributeValue(i);
    if (reader.getAttributeNamespace(i) != null) {
      throw ParseUtils.unexpectedAttribute(reader,i);
    }
 else {
      final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case PID:
{
          pid=attrValue;
          break;
        }
default :
      throw ParseUtils.unexpectedAttribute(reader,i);
  }
}
}
if (pid == null) throw ParseUtils.missingRequired(reader,Collections.singleton(Attribute.PID));
configuration.get(PID).set(pid);
ModelNode configurationProperties=new ModelNode();
while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
switch (Namespace.forUri(reader.getNamespaceURI())) {
case OSGI_1_0:
{
    final Element element=Element.forName(reader.getLocalName());
    if (element == Element.PROPERTY) {
      String name=null;
      count=reader.getAttributeCount();
      for (int i=0; i < count; i++) {
        final String attrValue=reader.getAttributeValue(i);
        if (reader.getAttributeNamespace(i) != null) {
          throw ParseUtils.unexpectedAttribute(reader,i);
        }
 else {
          final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case NAME:
{
              name=attrValue;
              if (configurationProperties.has(name))               throw new XMLStreamException("Property " + name + " already exists",reader.getLocation());
              break;
            }
default :
          throw ParseUtils.unexpectedAttribute(reader,i);
      }
    }
  }
  if (name == null)   throw ParseUtils.missingRequired(reader,Collections.singleton(Attribute.NAME));
  String value=reader.getElementText().trim();
  if (value == null || value.length() == 0)   throw new XMLStreamException("Value for property " + name + " is null",reader.getLocation());
  configurationProperties.get(name).set(value);
  break;
}
 else {
  throw ParseUtils.unexpectedElement(reader);
}
}
default :
throw ParseUtils.unexpectedElement(reader);
}
}
if (configurationProperties.asList().size() > 0) configuration.get(CONFIGURATION_PROPERTIES).set(configurationProperties);
return configuration;
}

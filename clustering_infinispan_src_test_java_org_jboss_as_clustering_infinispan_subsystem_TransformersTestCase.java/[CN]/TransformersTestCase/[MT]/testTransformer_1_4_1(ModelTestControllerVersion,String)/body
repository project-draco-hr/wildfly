{
  ModelVersion version141=ModelVersion.create(1,4,1);
  KernelServicesBuilder builder=createKernelServicesBuilder(AdditionalInitialization.MANAGEMENT).setSubsystemXml(getSubsystemXml());
  builder.createLegacyKernelServicesBuilder(null,controllerVersion,version141).addMavenResourceURL(mavenResourceURLs).configureReverseControllerCheck(null,new FixReverseControllerModel141());
  KernelServices mainServices=builder.build();
  KernelServices legacyServices=mainServices.getLegacyServices(version141);
  Assert.assertNotNull(legacyServices);
  Assert.assertTrue("main services did not boot",mainServices.isSuccessfulBoot());
  Assert.assertTrue(legacyServices.isSuccessfulBoot());
  checkSubsystemModelTransformation(mainServices,version141);
  PathAddress pa=PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM,InfinispanExtension.SUBSYSTEM_NAME),CacheContainerResourceDefinition.pathElement("container"),DistributedCacheResourceDefinition.pathElement("cache"));
  ModelNode addOp=Util.createAddOperation(pa);
  addOp.get(DistributedCacheResourceDefinition.VIRTUAL_NODES.getName()).set(1);
  addOp.get(CacheResourceDefinition.STATISTICS_ENABLED.getName()).set(true);
}

{
  PathAddress subsystemAddress=PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM,getMainSubsystemName()));
  FailedOperationTransformationConfig config=new FailedOperationTransformationConfig();
  PathAddress containerAddress=subsystemAddress.append(CacheContainerResourceDefinition.CONTAINER_PATH);
  config.addFailedAttribute(containerAddress,new RejectExpressionsConfig(InfinispanRejectedExpressions_1_3.ACCEPT14_REJECT13_CONTAINER_ATTRIBUTES));
  PathAddress transportAddress=containerAddress.append(TransportResourceDefinition.TRANSPORT_PATH);
  config.addFailedAttribute(transportAddress,new RejectExpressionsConfig(InfinispanRejectedExpressions_1_3.ACCEPT14_REJECT13_TRANSPORT_ATTRIBUTES));
  PathElement[] cachePaths={LocalCacheResourceDefinition.LOCAL_CACHE_PATH,InvalidationCacheResourceDefinition.INVALIDATION_CACHE_PATH,ReplicatedCacheResourceDefinition.REPLICATED_CACHE_PATH,DistributedCacheResourceDefinition.DISTRIBUTED_CACHE_PATH};
  PathElement[] childPaths={LockingResourceDefinition.LOCKING_PATH,TransactionResourceDefinition.TRANSACTION_PATH,ExpirationResourceDefinition.EXPIRATION_PATH,EvictionResourceDefinition.EVICTION_PATH,StateTransferResourceDefinition.STATE_TRANSFER_PATH};
  PathElement[] storePaths={CustomStoreResourceDefinition.STORE_PATH,FileStoreResourceDefinition.FILE_STORE_PATH,StringKeyedJDBCStoreResourceDefinition.STRING_KEYED_JDBC_STORE_PATH,BinaryKeyedJDBCStoreResourceDefinition.BINARY_KEYED_JDBC_STORE_PATH,MixedKeyedJDBCStoreResourceDefinition.MIXED_KEYED_JDBC_STORE_PATH,RemoteStoreResourceDefinition.REMOTE_STORE_PATH};
  for (  PathElement cachePath : cachePaths) {
    PathAddress cacheAddress=containerAddress.append(cachePath);
    FailedOperationTransformationConfig.ChainedConfig.Builder builder=ChainedConfig.createBuilder(InfinispanRejectedExpressions_1_3.ACCEPT14_REJECT13_CACHE_ATTRIBUTES);
    builder.addConfig(new RejectExpressionsConfig(InfinispanRejectedExpressions_1_3.ACCEPT14_REJECT13_CACHE_ATTRIBUTES));
    builder.addConfig(new RemoveResolvedIndexingPropertiesConfig(CacheResourceDefinition.INDEXING_PROPERTIES));
    config.addFailedAttribute(cacheAddress,builder.build());
    for (    PathElement childPath : childPaths) {
      config.addFailedAttribute(cacheAddress.append(childPath),new RejectExpressionsConfig(InfinispanRejectedExpressions_1_3.ACCEPT14_REJECT13_CHILD_ATTRIBUTES));
    }
    RejectExpressionsConfig keyedTableComplexChildConfig=new RejectExpressionsConfig(JDBCStoreResourceDefinition.COMMON_JDBC_STORE_TABLE_ATTRIBUTES);
    for (    PathElement storePath : storePaths) {
      PathAddress storeAddress=cacheAddress.append(storePath);
      config.addFailedAttribute(storeAddress,new RejectExpressionsConfig(InfinispanRejectedExpressions_1_3.ACCEPT14_REJECT13_STORE_ATTRIBUTES).configureComplexAttribute(ModelKeys.STRING_KEYED_TABLE,keyedTableComplexChildConfig).configureComplexAttribute(ModelKeys.BINARY_KEYED_TABLE,keyedTableComplexChildConfig));
      PathAddress writeBehindAddress=storeAddress.append(StoreWriteBehindResourceDefinition.STORE_WRITE_BEHIND_PATH);
      config.addFailedAttribute(writeBehindAddress,new RejectExpressionsConfig(InfinispanRejectedExpressions_1_3.ACCEPT14_REJECT13_STORE_ATTRIBUTES));
      PathAddress storePropertyAddress=storeAddress.append(StorePropertyResourceDefinition.STORE_PROPERTY_PATH);
      config.addFailedAttribute(storePropertyAddress,new RejectExpressionsConfig(InfinispanRejectedExpressions_1_3.ACCEPT14_REJECT13_STORE_ATTRIBUTES));
    }
  }
  PathAddress replicatedCacheAddress=containerAddress.append(ReplicatedCacheResourceDefinition.REPLICATED_CACHE_PATH);
  config.addFailedAttribute(replicatedCacheAddress.append("backup"),FailedOperationTransformationConfig.REJECTED_RESOURCE);
  config.addFailedAttribute(replicatedCacheAddress.append("backup-for","BACKUP_FOR"),FailedOperationTransformationConfig.REJECTED_RESOURCE);
  PathAddress distributedCacheAddress=containerAddress.append(DistributedCacheResourceDefinition.DISTRIBUTED_CACHE_PATH);
  config.addFailedAttribute(distributedCacheAddress.append("backup"),FailedOperationTransformationConfig.REJECTED_RESOURCE);
  config.addFailedAttribute(distributedCacheAddress.append("backup-for","BACKUP_FOR"),FailedOperationTransformationConfig.REJECTED_RESOURCE);
  return config;
}

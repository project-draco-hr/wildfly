{
  state.set(State.STARTING,stamp.incrementAndGet());
  createCoreModel();
  ModelNodeRegistration root=getRegistry();
  root.registerReadWriteAttribute(NAME,null,new StringLengthValidatingHandler(1));
  root.registerOperationHandler(READ_RESOURCE_OPERATION,GlobalOperationHandlers.READ_RESOURCE,CommonProviders.READ_RESOURCE_PROVIDER,true);
  root.registerOperationHandler(READ_ATTRIBUTE_OPERATION,GlobalOperationHandlers.READ_ATTRIBUTE,CommonProviders.READ_ATTRIBUTE_PROVIDER,true);
  root.registerOperationHandler(READ_RESOURCE_DESCRIPTION_OPERATION,GlobalOperationHandlers.READ_RESOURCE_DESCRIPTION,CommonProviders.READ_RESOURCE_DESCRIPTION_PROVIDER,true);
  root.registerOperationHandler(READ_CHILDREN_NAMES_OPERATION,GlobalOperationHandlers.READ_CHILDREN_NAMES,CommonProviders.READ_CHILDREN_NAMES_PROVIDER,true);
  root.registerOperationHandler(READ_OPERATION_NAMES_OPERATION,GlobalOperationHandlers.READ_OPERATION_NAMES,CommonProviders.READ_OPERATION_NAMES_PROVIDER,true);
  root.registerOperationHandler(READ_OPERATION_DESCRIPTION_OPERATION,GlobalOperationHandlers.READ_OPERATION_DESCRIPTION,CommonProviders.READ_OPERATION_PROVIDER,true);
  root.registerOperationHandler(WRITE_ATTRIBUTE_OPERATION,GlobalOperationHandlers.WRITE_ATTRIBUTE,CommonProviders.WRITE_ATTRIBUTE_PROVIDER,true);
  root.registerOperationHandler(NamespaceAddHandler.OPERATION_NAME,NamespaceAddHandler.INSTANCE,NamespaceAddHandler.INSTANCE,false);
  root.registerOperationHandler(NamespaceRemoveHandler.OPERATION_NAME,NamespaceRemoveHandler.INSTANCE,NamespaceRemoveHandler.INSTANCE,false);
  root.registerOperationHandler(SchemaLocationAddHandler.OPERATION_NAME,SchemaLocationAddHandler.INSTANCE,SchemaLocationAddHandler.INSTANCE,false);
  root.registerOperationHandler(SchemaLocationRemoveHandler.OPERATION_NAME,SchemaLocationRemoveHandler.INSTANCE,SchemaLocationRemoveHandler.INSTANCE,false);
  root.registerOperationHandler(SystemPropertyAddHandler.OPERATION_NAME,SystemPropertyAddHandler.INSTANCE,SystemPropertyAddHandler.INSTANCE,false);
  root.registerOperationHandler(SystemPropertyRemoveHandler.OPERATION_NAME,SystemPropertyRemoveHandler.INSTANCE,SystemPropertyRemoveHandler.INSTANCE,false);
  ModelNodeRegistration paths=root.registerSubModel(PathElement.pathElement(PATH),CommonProviders.SPECIFIED_PATH_PROVIDER);
  paths.registerOperationHandler(SpecifiedPathAddHandler.OPERATION_NAME,SpecifiedPathAddHandler.INSTANCE,SpecifiedPathAddHandler.INSTANCE,false);
  paths.registerOperationHandler(SpecifiedPathRemoveHandler.OPERATION_NAME,SpecifiedPathRemoveHandler.INSTANCE,SpecifiedPathRemoveHandler.INSTANCE,false);
  ModelNodeRegistration interfaces=root.registerSubModel(PathElement.pathElement(INTERFACE),CommonProviders.SPECIFIED_INTERFACE_PROVIDER);
  interfaces.registerOperationHandler(SpecifiedInterfaceAddHandler.OPERATION_NAME,SpecifiedInterfaceAddHandler.INSTANCE,SpecifiedInterfaceAddHandler.INSTANCE,false);
  interfaces.registerOperationHandler(SpecifiedInterfaceRemoveHandler.OPERATION_NAME,SpecifiedInterfaceRemoveHandler.INSTANCE,SpecifiedInterfaceRemoveHandler.INSTANCE,false);
  ModelNodeRegistration socketGroup=root.registerSubModel(PathElement.pathElement(SOCKET_BINDING_GROUP),ServerDescriptionProviders.SOCKET_BINDING_GROUP_PROVIDER);
  socketGroup.registerOperationHandler(SocketBindingGroupAddHandler.OPERATION_NAME,SocketBindingGroupAddHandler.INSTANCE,SocketBindingGroupAddHandler.INSTANCE,false);
  socketGroup.registerOperationHandler(SocketBindingGroupRemoveHandler.OPERATION_NAME,SocketBindingGroupRemoveHandler.INSTANCE,SocketBindingGroupRemoveHandler.INSTANCE,false);
  ModelNodeRegistration socketBinding=socketGroup.registerSubModel(PathElement.pathElement(SOCKET_BINDING),CommonProviders.SOCKET_BINDING_PROVIDER);
  socketBinding.registerOperationHandler(ServerSocketBindingAddHandler.OPERATION_NAME,ServerSocketBindingAddHandler.INSTANCE,ServerSocketBindingAddHandler.INSTANCE,false);
  socketBinding.registerOperationHandler(ServerSocketBindingRemoveHandler.OPERATION_NAME,ServerSocketBindingRemoveHandler.INSTANCE,ServerSocketBindingRemoveHandler.INSTANCE,false);
  ModelNodeRegistration deployments=root.registerSubModel(PathElement.pathElement(DEPLOYMENT),ServerDescriptionProviders.DEPLOYMENT_PROVIDER);
  ModelNodeRegistration extensions=root.registerSubModel(PathElement.pathElement(EXTENSION),CommonProviders.EXTENSION_PROVIDER);
  NewExtensionContext extensionContext=new NewExtensionContextImpl(getRegistry(),deployments);
  ExtensionAddHandler addExtensionHandler=new ExtensionAddHandler(extensionContext);
  extensions.registerOperationHandler(ExtensionAddHandler.OPERATION_NAME,addExtensionHandler,addExtensionHandler,false);
  extensions.registerOperationHandler(ExtensionRemoveHandler.OPERATION_NAME,ExtensionRemoveHandler.INSTANCE,ExtensionRemoveHandler.INSTANCE,false);
}

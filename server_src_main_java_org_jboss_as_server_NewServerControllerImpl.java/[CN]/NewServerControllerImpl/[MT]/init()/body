{
  state=State.STARTING;
  createCoreModel();
  ModelNodeRegistration root=getRegistry();
  root.registerReadWriteAttribute(NAME,null,new StringLengthValidatingHandler(1));
  root.registerOperationHandler(AddNamespaceHandler.OPERATION_NAME,AddNamespaceHandler.INSTANCE,AddNamespaceHandler.INSTANCE,false);
  root.registerOperationHandler(RemoveNamespaceHandler.OPERATION_NAME,RemoveNamespaceHandler.INSTANCE,RemoveNamespaceHandler.INSTANCE,false);
  root.registerOperationHandler(AddSchemaLocationHandler.OPERATION_NAME,AddSchemaLocationHandler.INSTANCE,AddSchemaLocationHandler.INSTANCE,false);
  root.registerOperationHandler(RemoveSchemaLocationHandler.OPERATION_NAME,RemoveSchemaLocationHandler.INSTANCE,RemoveSchemaLocationHandler.INSTANCE,false);
  ModelNodeRegistration paths=root.registerSubModel(PathElement.pathElement(PATH),CommonProviders.SPECIFIED_PATH_PROVIDER);
  ModelNodeRegistration deployments=root.registerSubModel(PathElement.pathElement(DEPLOYMENT),ServerDescriptionProviders.DEPLOYMENT_PROVIDER);
  ModelNodeRegistration extensions=root.registerSubModel(PathElement.pathElement(EXTENSION),CommonProviders.EXTENSION_PROVIDER);
  NewExtensionContext extensionContext=new NewExtensionContextImpl(getRegistry(),deployments);
  AddExtensionHandler addExtensionHandler=new AddExtensionHandler(extensionContext);
  extensions.registerOperationHandler(AddExtensionHandler.OPERATION_NAME,addExtensionHandler,addExtensionHandler,false);
  extensions.registerOperationHandler(RemoveExtensionHandler.OPERATION_NAME,RemoveExtensionHandler.INSTANCE,RemoveExtensionHandler.INSTANCE,false);
}

{
  System.out.println("GET " + req);
  String testValue="set on " + System.currentTimeMillis();
  PrintWriter writer=resp.getWriter();
  ServletContext servletContext=getServletContext();
  servletContext.setAttribute(getClass().getName(),testValue);
  BundleContext bundleContext=(BundleContext)servletContext.getAttribute("osgi-bundlecontext");
  if (bundleContext == null)   throw new RuntimeException("Error: BundleContext attribute not set on: " + servletContext);
  try {
    String symbolicName=bundleContext.getBundle().getSymbolicName();
    Filter filter=bundleContext.createFilter("(&(objectClass=" + ServletContext.class.getName() + ")"+ "(osgi.web.symbolicname="+ symbolicName+ "))");
    ServiceTracker tracker=new ServiceTracker(bundleContext,filter,null);
    tracker.open();
    ServletContext servletContextService=(ServletContext)tracker.waitForService(2000);
    if (servletContextService == null)     throw new RuntimeException("ServletContext service not found given filter: " + filter);
    Object attrVal=servletContextService.getAttribute(getClass().getName());
    if (!testValue.equals(attrVal))     throw new RuntimeException("Error: Servlet Context service not the same as the actual Servlet Context: " + attrVal);
    ServiceReference sref=tracker.getServiceReference();
    writer.write("ServletContext: " + sref.getProperty("osgi.web.symbolicname") + "|"+ sref.getProperty("osgi.web.contextpath"));
    tracker.close();
  }
 catch (  InvalidSyntaxException e) {
    e.printStackTrace();
  }
catch (  InterruptedException e) {
    e.printStackTrace();
  }
 finally {
    writer.close();
  }
}

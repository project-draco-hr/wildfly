{
  Resource resourceRoot=Resource.Factory.create();
  TransformerRegistry registry=TransformerRegistry.Factory.create(null);
  ManagementResourceRegistration resourceRegistration=ManagementResourceRegistration.Factory.create(ROOT);
  final Resource extension=Resource.Factory.create();
  extension.getModel().get("attr").set("value");
  resourceRoot.registerChild(PathElement.pathElement("extension","not-ignored"),extension);
  final Resource ignoredExtension=Resource.Factory.create();
  ignoredExtension.getModel().get("attr").set("value");
  resourceRoot.registerChild(PathElement.pathElement("extension","ignored"),ignoredExtension);
  resourceRoot.registerChild(PathElement.pathElement("profile","not-ignored"),createProfile());
  resourceRoot.registerChild(PathElement.pathElement("profile","ignored"),createProfile());
  ModelNode original=Resource.Tools.readModel(resourceRoot);
  Assert.assertEquals("value",original.get("extension","not-ignored","attr").asString());
  Assert.assertEquals("value",original.get("extension","ignored","attr").asString());
  Assert.assertEquals("value",original.get("profile","not-ignored","subsystem","thingy","attr").asString());
  Assert.assertEquals("value",original.get("profile","ignored","subsystem","thingy","attr").asString());
  ModelNode hostInfo=new ModelNode();
  hostInfo.get(NAME).set("kabirs-macbook-pro.local");
  hostInfo.get(RELEASE_VERSION).set("8.0.0.Alpha1-SNAPSHOT");
  hostInfo.get(RELEASE_CODENAME).set("TBD");
  hostInfo.get(MANAGEMENT_MAJOR_VERSION).set(1);
  hostInfo.get(MANAGEMENT_MINOR_VERSION).set(4);
  hostInfo.get(MANAGEMENT_MICRO_VERSION).set(0);
  hostInfo.get(IGNORED_RESOURCES,PROFILE,WILDCARD);
  hostInfo.get(IGNORED_RESOURCES,PROFILE,NAMES).add("ignored");
  hostInfo.get(IGNORED_RESOURCES,EXTENSION,WILDCARD);
  hostInfo.get(IGNORED_RESOURCES,EXTENSION,NAMES).add("ignored");
  hostInfo.get("domain-connection-id").set(1361470170404L);
  Resource transformedResource=transformResource(registry,resourceRoot,resourceRegistration,HostInfo.fromModelNode(hostInfo));
  ModelNode transformed=Resource.Tools.readModel(transformedResource);
  Assert.assertEquals("value",transformed.get("extension","not-ignored","attr").asString());
  Assert.assertFalse(transformed.get("extension").hasDefined("ignored"));
  Assert.assertEquals("value",transformed.get("profile","not-ignored","subsystem","thingy","attr").asString());
  Assert.assertFalse(transformed.get("profile").hasDefined("ignored"));
}

{
  String name=null;
  String protocol=null;
  String bindingRef=null;
  String scheme=null;
  String executorRef=null;
  String enabled=null;
  String enableLookups=null;
  String proxyName=null;
  String proxyPort=null;
  String maxPostSize=null;
  String maxSavePostSize=null;
  String secure=null;
  String redirectPort=null;
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    final String value=reader.getAttributeValue(i);
    if (reader.getAttributeNamespace(i) != null) {
      throw ParseUtils.unexpectedAttribute(reader,i);
    }
 else {
      final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case NAME:
        name=value;
      break;
case SOCKET_BINDING:
    bindingRef=value;
  break;
case SCHEME:
scheme=value;
break;
case PROTOCOL:
protocol=value;
break;
case EXECUTOR:
executorRef=value;
break;
case ENABLED:
enabled=value;
break;
case ENABLE_LOOKUPS:
enableLookups=value;
break;
case PROXY_NAME:
proxyName=value;
break;
case PROXY_PORT:
proxyPort=value;
break;
case MAX_POST_SIZE:
maxPostSize=value;
break;
case MAX_SAVE_POST_SIZE:
maxSavePostSize=value;
break;
case SECURE:
secure=value;
break;
case REDIRECT_PORT:
redirectPort=value;
break;
default :
ParseUtils.unexpectedAttribute(reader,i);
}
}
}
if (name == null) {
ParseUtils.missingRequired(reader,Collections.singleton(Attribute.NAME));
}
if (protocol == null) {
ParseUtils.missingRequired(reader,Collections.singleton(Attribute.PROTOCOL));
}
ParseUtils.requireNoContent(reader);
final WebConnectorAdd action=new WebConnectorAdd(name);
action.setBindingRef(bindingRef);
action.setProtocol(protocol);
action.setScheme(scheme);
action.setExecutorRef(executorRef);
action.setProxyName(proxyName);
if (enabled != null) action.setEnabled(Boolean.valueOf(enabled));
if (proxyPort != null) action.setProxyPort(Integer.valueOf(proxyPort));
if (enableLookups != null) action.setEnableLookups(Boolean.valueOf(enableLookups));
if (redirectPort != null) action.setRedirectPort(Integer.valueOf(redirectPort));
if (secure != null) action.setSecure(Boolean.valueOf(secure));
if (maxPostSize != null) action.setMaxPostSize(Integer.valueOf(maxPostSize));
if (maxSavePostSize != null) action.setMaxSavePostSize(Integer.valueOf(maxSavePostSize));
list.add(action);
}

{
  final ModelNode config=new ModelNode();
  if (reader.getAttributeCount() > 0) {
    throw unexpectedAttribute(reader,0);
  }
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
    final Element element=Element.forName(reader.getLocalName());
switch (element) {
case STATIC_RESOURCES:
{
        final ModelNode resourceServing=parseStaticResources(reader);
        config.get(STATIC_RESOURCES).set(resourceServing);
        break;
      }
case JSP_CONFIGURATION:
{
      final ModelNode jspConfiguration=parseJSPConfiguration(reader);
      config.get(JSP_CONFIGURATION).set(jspConfiguration);
      break;
    }
case MIME_MAPPING:
{
    final String[] array=requireAttributes(reader,Attribute.NAME.getLocalName(),Attribute.VALUE.getLocalName());
    config.get(MIME_MAPPING).get(array[0]).set(array[1]);
    requireNoContent(reader);
    break;
  }
case WELCOME_FILE:
{
  final String welcomeFile=reader.getElementText().trim();
  config.get(WELCOME_FILE).add(welcomeFile);
  break;
}
default :
throw unexpectedElement(reader);
}
}
return config;
}

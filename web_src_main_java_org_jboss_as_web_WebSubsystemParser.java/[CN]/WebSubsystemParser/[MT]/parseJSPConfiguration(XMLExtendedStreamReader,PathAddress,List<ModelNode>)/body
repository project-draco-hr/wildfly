{
  final PathAddress address=PathAddress.pathAddress(parent,WebExtension.JSP_CONFIGURATION_PATH);
  final ModelNode jsp=new ModelNode();
  jsp.get(OP).set(ADD);
  jsp.get(OP_ADDR).set(address.toModelNode());
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    requireNoNamespaceAttribute(reader,i);
    final String value=reader.getAttributeValue(i);
    final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case DEVELOPMENT:
case DISABLED:
case KEEP_GENERATED:
case TRIM_SPACES:
case TAG_POOLING:
case MAPPED_FILE:
case CHECK_INTERVAL:
case MODIFICATION_TEST_INTERVAL:
case RECOMPILE_ON_FAIL:
case SMAP:
case DUMP_SMAP:
case GENERATE_STRINGS_AS_CHAR_ARRAYS:
case ERROR_ON_USE_BEAN_INVALID_CLASS_ATTRIBUTE:
case SCRATCH_DIR:
case SOURCE_VM:
case TARGET_VM:
case JAVA_ENCODING:
case X_POWERED_BY:
case DISPLAY_SOURCE_FRAGMENT:
      jsp.get(attribute.getLocalName()).set(value);
    break;
default :
  throw unexpectedAttribute(reader,i);
}
}
requireNoContent(reader);
list.add(jsp);
}

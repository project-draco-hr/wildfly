{
  String version=System.getProperty("jboss.as.compare.version",null);
  String diff=System.getProperty("jboss.as.compare.different.versions",null);
  if (version == null) {
    System.out.print("Enter legacy AS version: ");
    version=readInput(null);
  }
  System.out.println("Using target model: " + version);
  if (diff == null) {
    System.out.print("Report on differences in the model when the management versions are different? y/[n]: ");
    diff=readInput("n").toLowerCase();
  }
  boolean compareDifferentVersions;
  if (diff.equals("n")) {
    System.out.println("Reporting on differences in the model when the management versions are different");
    compareDifferentVersions=false;
  }
 else   if (diff.equals("y")) {
    System.out.println("Not reporting on differences in the model when the management versions are different");
    compareDifferentVersions=true;
  }
 else {
    throw new IllegalArgumentException("Please enter 'y' or 'n'");
  }
  System.out.println("Loading legacy model versions for " + version + "....");
  ModelNode legacyModelVersions=Tools.loadModelNodeFromFile(new File("target/test-classes/legacy-models/standalone-model-versions-" + version + ".dmr"));
  System.out.println("Loaded legacy model versions");
  System.out.println("Loading legacy resource descriptions for " + version + "....");
  ModelNode legacyResourceDefinitions=Tools.loadModelNodeFromFile(new File("target/test-classes/legacy-models/standalone-resource-definition-" + version + ".dmr"));
  System.out.println("Loaded legacy resource descriptions");
  System.out.println("Loading model versions for currently running server...");
  ModelNode currentModelVersions=Tools.getCurrentModelVersions();
  System.out.println("Loaded current model versions");
  System.out.println("Loading resource descriptions for currently running server...");
  ModelNode currentResourceDefinitions=Tools.getCurrentRunningResourceDefinition();
  System.out.println("Loaded current resource descriptions");
  CompareModelVersionsUtil compareModelVersionsUtil=new CompareModelVersionsUtil(compareDifferentVersions,version,legacyModelVersions,legacyResourceDefinitions,currentModelVersions,currentResourceDefinitions);
  System.out.println("Starting comparison of the current....\n");
  compareModelVersionsUtil.compareModels();
  System.out.println("\nDone comparison!");
}

{
  final ModelNode elytronTLSEntityAddOperation=Util.createAddOperation();
  PathElement elytronTLSEntityPath=null;
  final EnumSet<Attribute> required=EnumSet.of(Attribute.NAME,Attribute.LEGACY_JSSE_CONFIG);
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    requireNoNamespaceAttribute(reader,i);
    final String value=reader.getAttributeValue(i);
    final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
    required.remove(attribute);
switch (attribute) {
case NAME:
{
        if (value == null || value.length() == 0) {
          throw invalidAttributeValue(reader,i);
        }
        elytronTLSEntityPath=PathElement.pathElement(tlsEntityName,value);
        break;
      }
case LEGACY_JSSE_CONFIG:
{
      LEGACY_JSSE_CONFIG.parseAndSetParameter(value,elytronTLSEntityAddOperation,reader);
      break;
    }
default :
  throw unexpectedAttribute(reader,i);
}
}
if (required.size() > 0) {
throw missingRequired(reader,required);
}
elytronTLSEntityAddOperation.get(OP_ADDR).set(subsystemPath.append(elytronTLSEntityPath).toModelNode());
operations.add(elytronTLSEntityAddOperation);
requireNoContent(reader);
}

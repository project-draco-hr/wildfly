{
  if (deploymentRoot == null)   throw new StartException("DeploymentService requires a deployment root to start");
  if (deploymentChain == null)   throw new StartException("DeploymentService requires a deployment chain to start");
  if (deploymentModuleLoader == null)   throw new StartException("DeploymentService requires a deployment deployment ModuleLoader to start");
  final ServiceController<?> serviceController=context.getController();
  final ServiceName deploymentServiceName=serviceController.getName();
  final String deploymentPath=deploymentRoot.getPathName();
  final DeploymentUnitContextImpl deploymentUnitContext=new DeploymentUnitContextImpl(deploymentName);
  attachVirtualFile(deploymentUnitContext,deploymentRoot);
  final DeploymentChain deploymentChain=this.deploymentChain;
  logger.debugf("Deployment processor starting with chain: %s",deploymentChain);
  try {
    deploymentChain.processDeployment(deploymentUnitContext);
  }
 catch (  DeploymentUnitProcessingException e) {
    throw new StartException("Failed to process deployment chain.",e);
  }
  final ServiceContainer serviceContainer=serviceController.getServiceContainer();
  final BatchBuilder batchBuilder=serviceContainer.batchBuilder();
  if (deploymentListener != null)   batchBuilder.addListener(deploymentListener);
  batchBuilder.addDependency(deploymentServiceName);
  final ServiceName moduleServiceName=DeploymentModuleService.SERVICE_NAME.append(deploymentPath);
  DeploymentModuleService deploymentModuleService=null;
  final ModuleConfig moduleConfig=deploymentUnitContext.getAttachment(ModuleConfig.ATTACHMENT_KEY);
  if (moduleConfig != null) {
    deploymentModuleService=new DeploymentModuleService(deploymentModuleLoader,moduleConfig);
    final BatchServiceBuilder<?> moduleServiceBuilder=batchBuilder.addService(moduleServiceName,deploymentModuleService);
    for (    ModuleConfig.Dependency dependency : moduleConfig.getDependencies()) {
    }
  }
  final ServiceName deploymentItemProcessorName=DeploymentItemProcessor.SERVICE_NAME.append(deploymentPath);
  final DeploymentItemProcessor deploymentItemProcessor=new DeploymentItemProcessor(deploymentUnitContext);
  deploymentItemProcessor.setDeploymentListener(deploymentListener);
  final BatchServiceBuilder<?> itemProcessorServiceBuilder=batchBuilder.addService(deploymentItemProcessorName,deploymentItemProcessor);
  if (deploymentModuleService != null) {
    itemProcessorServiceBuilder.addDependency(moduleServiceName).toMethod(DeploymentItemProcessor.DEPLOYMENT_MODULE_SETTER,Collections.singletonList(deploymentModuleService));
  }
  try {
    batchBuilder.install();
  }
 catch (  ServiceRegistryException e) {
    throw new StartException("Failed to install deployment phase batch for " + deploymentName,e);
  }
}

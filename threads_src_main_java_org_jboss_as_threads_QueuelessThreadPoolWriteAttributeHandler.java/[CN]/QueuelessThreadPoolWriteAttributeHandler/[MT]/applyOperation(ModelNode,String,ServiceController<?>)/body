{
  final QueuelessThreadPoolService pool=(QueuelessThreadPoolService)service.getService();
  try {
    final ModelNode value=operation.require(CommonAttributes.VALUE);
    if (CommonAttributes.KEEPALIVE_TIME.equals(attributeName)) {
      if (!value.hasDefined(TIME)) {
        throw new IllegalArgumentException("Missing '" + TIME + "' for '"+ KEEPALIVE_TIME+ "'");
      }
      if (!value.hasDefined(UNIT)) {
        throw new IllegalArgumentException("Missing '" + UNIT + "' for '"+ KEEPALIVE_TIME+ "'");
      }
      final TimeUnit unit;
      try {
        unit=Enum.valueOf(TimeUnit.class,value.get(UNIT).asString());
      }
 catch (      IllegalArgumentException e) {
        throw new OperationFailedException(new ModelNode().set("Failed to parse '" + UNIT + "', allowed values are: "+ Arrays.asList(TimeUnit.values())));
      }
      final TimeSpec spec=new TimeSpec(unit,value.get(TIME).asLong());
      pool.setKeepAlive(spec);
    }
 else     if (CommonAttributes.MAX_THREADS.equals(attributeName)) {
      pool.setMaxThreads(getScaledCount(CommonAttributes.MAX_THREADS,value));
    }
 else     if (CommonAttributes.BLOCKING.equals(attributeName)) {
      pool.setBlocking(value.asBoolean());
    }
 else {
      throw new IllegalArgumentException("Unexpected attribute '" + attributeName + "'");
    }
  }
 catch (  RuntimeException e) {
    throw e;
  }
catch (  Exception e) {
    throw new RuntimeException(e);
  }
}

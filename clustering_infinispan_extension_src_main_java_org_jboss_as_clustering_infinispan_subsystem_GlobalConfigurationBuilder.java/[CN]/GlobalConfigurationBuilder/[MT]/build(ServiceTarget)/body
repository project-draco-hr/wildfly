{
  return target.addService(this.getServiceName(),new ValueService<>(this)).addDependency(Services.JBOSS_SERVICE_MODULE_LOADER,ModuleLoader.class,this.loader).addDependency(MBeanServerService.SERVICE_NAME,MBeanServer.class,this.server).addDependency(CacheContainerComponent.TRANSPORT.getServiceName(this.name),TransportConfiguration.class,this.transport).addDependency(ThreadPoolResourceDefinition.ASYNC_OPERATIONS.getServiceName(this.name),ThreadPoolConfiguration.class,this.asyncOperationsThreadPool).addDependency(ScheduledThreadPoolResourceDefinition.EXPIRATION.getServiceName(this.name),ThreadPoolConfiguration.class,this.expirationThreadPool).addDependency(ThreadPoolResourceDefinition.LISTENER.getServiceName(this.name),ThreadPoolConfiguration.class,this.listenerThreadPool).addDependency(ThreadPoolResourceDefinition.STATE_TRANSFER.getServiceName(this.name),ThreadPoolConfiguration.class,this.stateTransferThreadPool).addDependency(ThreadPoolResourceDefinition.PERSISTENCE.getServiceName(this.name),ThreadPoolConfiguration.class,this.persistenceThreadPool).addDependency(ThreadPoolResourceDefinition.REMOTE_COMMAND.getServiceName(this.name),ThreadPoolConfiguration.class,this.remoteCommandThreadPool).addDependency(ThreadPoolResourceDefinition.TRANSPORT.getServiceName(this.name),ThreadPoolConfiguration.class,this.transportThreadPool).setInitialMode(ServiceController.Mode.PASSIVE);
}

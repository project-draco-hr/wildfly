{
  final ParsedCommandLine args=ctx.getParsedCommandLine();
  final String action=this.action.getValue(args);
  if (action == null) {
    ctx.printLine("Command is missing.");
    return;
  }
  if (action.equals("list")) {
    ctx.printColumns(getExistingCommands());
    return;
  }
  if (action.equals("add")) {
    final String nodePath=this.nodePath.getValue(args,true);
    final String propName=this.idProperty.getValue(args,false);
    final String cmdName=this.commandName.getValue(args,true);
    if (!validateInput(ctx,nodePath,propName)) {
      return;
    }
    if (cmdRegistry.getCommandHandler(cmdName) != null) {
      ctx.printLine("Command '" + cmdName + "' already registered.");
      return;
    }
    cmdRegistry.registerHandler(new GenericTypeOperationHandler(nodePath,propName),cmdName);
    return;
  }
  if (action.equals("remove")) {
    final String cmdName=this.commandName.getValue(args,true);
    CommandHandler handler=cmdRegistry.getCommandHandler(cmdName);
    if (!(handler instanceof GenericTypeOperationHandler)) {
      ctx.printLine("Command '" + cmdName + "' is not a generic type command.");
      return;
    }
    cmdRegistry.remove(cmdName);
    return;
  }
  ctx.printLine("Unexpected action: " + action);
}

{
  if (node.has(DEFAULT_HOST)) {
    writer.writeAttribute(Attribute.DEFAULT_HOST.getLocalName(),node.get(DEFAULT_HOST).asString());
  }
  if (node.has(CONTAINER_CONFIG)) {
  }
  if (node.has(CONNECTOR)) {
    for (    final Property connector : node.get(CONNECTOR).asPropertyList()) {
      final ModelNode config=connector.getValue();
      writer.writeStartElement(Element.CONNECTOR.getLocalName());
      writer.writeAttribute(NAME,connector.getName());
      writeAttribute(writer,Attribute.PROTOCOL.getLocalName(),config);
      writeAttribute(writer,Attribute.SOCKET_BINDING.getLocalName(),config);
      writeAttribute(writer,Attribute.SCHEME.getLocalName(),config);
      writeAttribute(writer,Attribute.ENABLED.getLocalName(),config);
      writeAttribute(writer,Attribute.ENABLE_LOOKUPS.getLocalName(),config);
      writeAttribute(writer,Attribute.PROXY_NAME.getLocalName(),config);
      writeAttribute(writer,Attribute.PROXY_PORT.getLocalName(),config);
      writeAttribute(writer,Attribute.SECURE.getLocalName(),config);
      writeAttribute(writer,Attribute.EXECUTOR.getLocalName(),config);
      writeAttribute(writer,Attribute.MAX_POST_SIZE.getLocalName(),config);
      writeAttribute(writer,Attribute.MAX_SAVE_POST_SIZE.getLocalName(),config);
      writer.writeEndElement();
    }
  }
  if (node.has(VIRTUAL_SERVER)) {
    for (    final Property host : node.get(VIRTUAL_SERVER).asPropertyList()) {
      final ModelNode config=host.getValue();
      writer.writeStartElement(Element.VIRTUAL_SERVER.getLocalName());
      writer.writeAttribute(NAME,host.getName());
      if (config.has(ALIAS)) {
        for (        final ModelNode alias : config.get(ALIAS).asList()) {
          writer.writeEmptyElement(ALIAS);
          writer.writeAttribute(NAME,alias.asString());
        }
      }
      writer.writeEndElement();
    }
  }
  writer.writeEndElement();
}

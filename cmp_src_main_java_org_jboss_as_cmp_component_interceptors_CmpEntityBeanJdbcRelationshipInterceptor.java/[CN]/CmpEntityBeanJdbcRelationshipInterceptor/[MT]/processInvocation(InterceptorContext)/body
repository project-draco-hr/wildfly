{
  CMRMessage relationshipMessage=context.getPrivateData(CMRMessage.class);
  if (relationshipMessage == null) {
    return context.proceed();
  }
  final CmpEntityBeanComponentInstance instance=(CmpEntityBeanComponentInstance)context.getPrivateData(ComponentInstance.class);
  final CmpEntityBeanContext ctx=instance.getEntityContext();
  JDBCCMRFieldBridge cmrField=(JDBCCMRFieldBridge)context.getParameters()[0];
  if (CMRMessage.GET_RELATED_ID == relationshipMessage) {
    if (log.isTraceEnabled()) {
      log.trace("Getting related id: field=" + cmrField.getFieldName() + " id="+ ctx.getPrimaryKey());
    }
    return cmrField.getRelatedId(ctx);
  }
 else   if (CMRMessage.ADD_RELATION == relationshipMessage) {
    Object relatedId=context.getParameters()[1];
    if (log.isTraceEnabled()) {
      log.trace("Add relation: field=" + cmrField.getFieldName() + " id="+ ctx.getPrimaryKey()+ " relatedId="+ relatedId);
    }
    cmrField.addRelation(ctx,relatedId);
    return null;
  }
 else   if (CMRMessage.REMOVE_RELATION == relationshipMessage) {
    Object relatedId=context.getParameters()[1];
    if (log.isTraceEnabled()) {
      log.trace("Remove relation: field=" + cmrField.getFieldName() + " id="+ ctx.getPrimaryKey()+ " relatedId="+ relatedId);
    }
    cmrField.removeRelation(ctx,relatedId);
    return null;
  }
 else   if (CMRMessage.SCHEDULE_FOR_CASCADE_DELETE == relationshipMessage) {
    JDBCEntityBridge entity=(JDBCEntityBridge)cmrField.getEntity();
    entity.scheduleForCascadeDelete(ctx);
    return null;
  }
 else   if (CMRMessage.SCHEDULE_FOR_BATCH_CASCADE_DELETE == relationshipMessage) {
    JDBCEntityBridge entity=(JDBCEntityBridge)cmrField.getEntity();
    entity.scheduleForBatchCascadeDelete(ctx);
    return null;
  }
 else {
    throw new EJBException("Unknown cmp2.0-relationship-message=" + relationshipMessage);
  }
}

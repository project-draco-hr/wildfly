{
  final EJBComponentDescription ejbComponentDescription=(EJBComponentDescription)componentConfiguration.getComponentDescription();
  final Method componentMethod=this.findComponentMethod(componentConfiguration,viewMethod);
  final EJBMethodIdentifier ejbMethodIdentifier=EJBMethodIdentifier.fromMethod(componentMethod);
  final Set<String> rolesAllowed=ejbComponentDescription.getRolesAllowed(viewClassName,ejbMethodIdentifier);
  final boolean methodMarkedForDenyAll=this.isMethodMarkedForDenyAll(ejbComponentDescription,viewClassName,ejbMethodIdentifier);
  final boolean methodMarkedForPermitAll=this.isMethodMarkedForPermitAll(ejbComponentDescription,viewClassName,ejbMethodIdentifier);
  if (!rolesAllowed.isEmpty()) {
    return rolesAllowed;
  }
  if (methodMarkedForDenyAll) {
    return Collections.emptySet();
  }
  if (methodMarkedForPermitAll) {
    return Collections.emptySet();
  }
  final Class<?> declaringClass=componentMethod.getDeclaringClass();
  final Set<String> classLevelRolesAllowed=ejbComponentDescription.getRolesAllowedForClass(viewClassName,declaringClass.getName());
  if (!classLevelRolesAllowed.isEmpty()) {
    return classLevelRolesAllowed;
  }
  return Collections.emptySet();
}

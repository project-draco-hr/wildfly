{
  final DotName superName=beanClass.superName();
  if (superName != null) {
    ClassInfo superClass=index.getClassByName(superName);
    if (superClass != null)     processClassAnnotations(superClass,methodIntf,index,componentDescription);
  }
  final Map<DotName,List<AnnotationInstance>> classAnnotations=beanClass.annotations();
  if (classAnnotations == null)   return;
  List<AnnotationInstance> annotations=classAnnotations.get(TRANSACTION_ATTRIBUTE_ANNOTATION_NAME);
  if (annotations == null)   return;
  for (  AnnotationInstance annotationInstance : annotations) {
    AnnotationTarget target=annotationInstance.target();
    TransactionAttributeType transactionAttributeType=TransactionAttributeType.valueOf(annotationInstance.value().asEnum());
    if (target instanceof ClassInfo) {
      componentDescription.setTransactionAttribute(methodIntf,transactionAttributeType);
    }
 else     if (target instanceof MethodInfo) {
      final MethodInfo method=(MethodInfo)target;
      componentDescription.setTransactionAttribute(methodIntf,transactionAttributeType,method.name(),toString(method.args()));
    }
  }
}

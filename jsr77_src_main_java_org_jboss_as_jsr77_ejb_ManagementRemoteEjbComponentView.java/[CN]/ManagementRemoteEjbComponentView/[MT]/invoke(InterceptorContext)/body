{
  final Method method=interceptorContext.getMethod();
  final Object[] params=interceptorContext.getParameters();
  if (WildFlySecurityManager.isChecking()) {
    try {
      return AccessController.doPrivileged(new PrivilegedExceptionAction<Object>(){
        @Override public Object run() throws Exception {
          return invokeInternal(method,params);
        }
      }
);
    }
 catch (    PrivilegedActionException e) {
      Throwable cause=e.getCause();
      if (cause != null) {
        if (cause instanceof Exception) {
          throw (Exception)cause;
        }
 else {
          throw new RuntimeException(e);
        }
      }
 else {
        throw e;
      }
    }
  }
 else {
    return invokeInternal(method,params);
  }
}

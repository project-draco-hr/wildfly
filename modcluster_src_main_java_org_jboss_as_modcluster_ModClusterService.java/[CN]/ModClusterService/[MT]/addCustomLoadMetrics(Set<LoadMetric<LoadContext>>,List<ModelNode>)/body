{
  Iterator<ModelNode> it=array.iterator();
  while (it.hasNext()) {
    final ModelNode node=(ModelNode)it.next();
    int capacity=node.get(CommonAttributes.CAPACITY).asInt(512);
    int weight=node.get(CommonAttributes.WEIGHT).asInt(9);
    String name=node.get(CommonAttributes.CLASS).asString();
    Class<? extends LoadMetric> loadMetricClass=null;
    LoadMetric<LoadContext> metric=null;
    try {
      loadMetricClass=(Class<? extends LoadMetric>)this.getClass().getClassLoader().loadClass(name);
    }
 catch (    ClassNotFoundException e1) {
      e1.printStackTrace();
    }
    if (loadMetricClass != null) {
      try {
        metric=loadMetricClass.newInstance();
        metric.setCapacity(capacity);
        metric.setWeight(weight);
        metrics.add(metric);
      }
 catch (      InstantiationException e) {
        e.printStackTrace();
      }
catch (      IllegalAccessException e) {
        e.printStackTrace();
      }
    }
  }
}

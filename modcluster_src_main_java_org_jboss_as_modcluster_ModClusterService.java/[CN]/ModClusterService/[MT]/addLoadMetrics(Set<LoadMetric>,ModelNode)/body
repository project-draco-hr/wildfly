{
  for (  ModelNode node : nodes.asList()) {
    double capacity=node.get(CommonAttributes.CAPACITY).asDouble(LoadMetric.DEFAULT_CAPACITY);
    int weight=node.get(CommonAttributes.WEIGHT).asInt(LoadMetric.DEFAULT_WEIGHT);
    Class<? extends LoadMetric> loadMetricClass=null;
    if (node.hasDefined(CommonAttributes.TYPE)) {
      String type=node.get(CommonAttributes.TYPE).asString();
      LoadMetricEnum metric=LoadMetricEnum.forType(type);
      loadMetricClass=(metric != null) ? metric.getLoadMetricClass() : null;
    }
 else {
      String className=node.get(CommonAttributes.CLASS).asString();
      try {
        loadMetricClass=this.getClass().getClassLoader().loadClass(className).asSubclass(LoadMetric.class);
      }
 catch (      ClassNotFoundException e) {
        ROOT_LOGGER.errorAddingMetrics(e);
      }
    }
    if (loadMetricClass != null) {
      try {
        LoadMetric metric=loadMetricClass.newInstance();
        metric.setCapacity(capacity);
        metric.setWeight(weight);
        metrics.add(metric);
      }
 catch (      InstantiationException e) {
        ROOT_LOGGER.errorAddingMetrics(e);
      }
catch (      IllegalAccessException e) {
        ROOT_LOGGER.errorAddingMetrics(e);
      }
    }
  }
}

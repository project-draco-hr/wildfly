{
  context.acquireControllerLock();
  final PatchInfoService service=(PatchInfoService)context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME).getValue();
  if (service.requiresReload()) {
    throw MESSAGES.serverRequiresReload();
  }
  final PatchInfo info=service.getPatchInfo();
  final DirectoryStructure structure=service.getStructure();
  final PatchTool runner=PatchTool.Factory.create(info,structure);
  final ContentVerificationPolicy policy=PatchTool.Factory.create(operation);
  final int index=operation.get(ModelDescriptionConstants.INPUT_STREAM_INDEX).asInt(0);
  final InputStream is=context.getAttachmentStream(index);
  try {
    final PatchingResult result=runner.applyPatch(is,policy);
    context.completeStep(new OperationContext.ResultHandler(){
      @Override public void handleResult(      OperationContext.ResultAction resultAction,      OperationContext context,      ModelNode operation){
        if (resultAction == OperationContext.ResultAction.KEEP) {
          service.reloadRequired();
          context.restartRequired();
          result.commit();
        }
 else {
          result.rollback();
        }
      }
    }
);
  }
 catch (  PatchingException e) {
    if (e.hasConflicts()) {
      System.out.println(e.getConflicts());
    }
    throw new OperationFailedException(e.getMessage(),e);
  }
}

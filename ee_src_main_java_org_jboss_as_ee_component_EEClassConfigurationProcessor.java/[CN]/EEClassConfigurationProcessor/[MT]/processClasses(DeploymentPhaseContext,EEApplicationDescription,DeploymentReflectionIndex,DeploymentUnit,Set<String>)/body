{
  final EEModuleDescription subModuleDescription=subdeployment.getAttachment(EE_MODULE_DESCRIPTION);
  if (subModuleDescription == null) {
    return;
  }
  Module subModule=subdeployment.getAttachment(org.jboss.as.server.deployment.Attachments.MODULE);
  final EEApplicationClasses applicationClasses=subdeployment.getAttachment(Attachments.EE_APPLICATION_CLASSES_DESCRIPTION);
  final Collection<EEModuleClassDescription> classDescriptions=applicationClasses.getClassDescriptions();
  if (classDescriptions != null) {
    for (    EEModuleClassDescription classDescription : classDescriptions) {
      if (processed.contains(classDescription.getClassName())) {
        continue;
      }
      processed.add(classDescription.getClassName());
      Class<?> clazz=null;
      try {
        clazz=Class.forName(classDescription.getClassName(),false,subModule.getClassLoader());
      }
 catch (      ClassNotFoundException e) {
        classDescription.setInvalid("Failed to load class " + classDescription.getClassName() + e.getMessage());
        logger.debug("Failed to load class " + classDescription.getClassName(),e);
        continue;
      }
      final EEModuleClassConfiguration classConfiguration=new EEModuleClassConfiguration(clazz,classDescription,deploymentReflectionIndex);
      logger.debug("Configuring EE module class: " + clazz);
      for (      ClassConfigurator classConfigurator : classDescription.getConfigurators()) {
        classConfigurator.configure(phaseContext,classDescription,classConfiguration);
      }
      applicationDescription.addClass(classConfiguration);
    }
  }
}

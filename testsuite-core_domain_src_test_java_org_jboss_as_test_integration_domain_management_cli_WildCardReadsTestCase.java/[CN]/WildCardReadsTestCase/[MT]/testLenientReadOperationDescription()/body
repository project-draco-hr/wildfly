{
  cli.sendLine(String.format(OP_PATTERN,ENDPOINT,ModelDescriptionConstants.READ_OPERATION_NAMES_OPERATION));
  CLIOpResult opResult=cli.readAllAsOpResult();
  Assert.assertTrue(opResult.isIsOutcomeSuccess());
  for (  ModelNode node : opResult.getResponseNode().get(ModelDescriptionConstants.RESULT).asList()) {
    String opPart=String.format(READ_OP_DESC_OP,node.asString());
    cli.sendLine(String.format(OP_PATTERN,ENDPOINT,opPart));
    opResult=cli.readAllAsOpResult();
    Assert.assertTrue(opResult.isIsOutcomeSuccess());
    ModelNode specific=opResult.getResponseNode().get(ModelDescriptionConstants.RESULT);
    cli.sendLine(String.format(OP_PATTERN,"*",opPart));
    opResult=cli.readAllAsOpResult();
    Assert.assertTrue(opResult.isIsOutcomeSuccess());
    Assert.assertEquals("mismatch for " + node.asString(),specific,opResult.getResponseNode().get(ModelDescriptionConstants.RESULT));
  }
}

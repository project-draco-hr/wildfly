{
  ModelNode loggingConfiguration=readDeploymentResource(EAR_DEPLOYMENT_NAME,EAR_DEPLOYMENT_NAME + "/META-INF/logging.properties");
  Deque<Property> resultAddress=new ArrayDeque<>(Operations.getOperationAddress(loggingConfiguration).asPropertyList());
  Assert.assertTrue("The configuration path did not include logging.properties",resultAddress.getLast().getValue().asString().contains("logging.properties"));
  ModelNode handler=loggingConfiguration.get("handler","FILE");
  Assert.assertTrue("The FILE handler was not found effective configuration",handler.isDefined());
  Assert.assertTrue(handler.hasDefined("properties"));
  String fileName=null;
  for (  Property property : handler.get("properties").asPropertyList()) {
    if ("fileName".equals(property.getName())) {
      fileName=property.getValue().asString();
      break;
    }
  }
  Assert.assertNotNull("fileName property not found",fileName);
  Assert.assertTrue(fileName.endsWith("test-logging-ear.log"));
  loggingConfiguration=readSubDeploymentResource(EAR_DEPLOYMENT_NAME,EAR_WAR_DEPLOYMENT_NAME,EAR_DEPLOYMENT_NAME + "/META-INF/logging.properties");
  resultAddress=new ArrayDeque<>(Operations.getOperationAddress(loggingConfiguration).asPropertyList());
  Assert.assertTrue("The configuration path did not include logging.properties",resultAddress.getLast().getValue().asString().contains("logging.properties"));
  handler=loggingConfiguration.get("handler","FILE");
  Assert.assertTrue("The FILE handler was not found effective configuration",handler.isDefined());
  Assert.assertTrue(handler.hasDefined("properties"));
  fileName=null;
  for (  Property property : handler.get("properties").asPropertyList()) {
    if ("fileName".equals(property.getName())) {
      fileName=property.getValue().asString();
      break;
    }
  }
  Assert.assertNotNull("fileName property not found",fileName);
  Assert.assertTrue(fileName.endsWith("test-logging-ear.log"));
}

{
switch (transition) {
case STARTING_to_UP:
{
      CommonDeployment deploymentMD=((AbstractDataSourceService)controller.getService()).getDeploymentMD();
      StatisticsPlugin jdbcStats=deploymentMD.getDataSources()[0].getStatistics();
      StatisticsPlugin poolStats=deploymentMD.getDataSources()[0].getPool().getStatistics();
      jdbcStats.setEnabled(false);
      poolStats.setEnabled(false);
      int jdbcStatsSize=jdbcStats.getNames().size();
      int poolStatsSize=poolStats.getNames().size();
      if (jdbcStatsSize > 0 || poolStatsSize > 0) {
        if (overrideRegistration != null) {
          if (jdbcStatsSize > 0) {
            ManagementResourceRegistration jdbcRegistration=overrideRegistration.registerSubModel(JDBC_STATISTICS,new StatisticsDescriptionProvider(DataSourcesSubsystemProviders.RESOURCE_NAME,"statistics",jdbcStats));
            jdbcRegistration.setRuntimeOnly(true);
            jdbcRegistration.registerOperationHandler(Constants.CLEAR_STATISTICS,new ClearStatisticsHandler(jdbcStats));
            for (            String statName : jdbcStats.getNames()) {
              jdbcRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(jdbcStats));
            }
            OperationStepHandler readHandler=new PoolStatisticsRuntimeAttributeReadHandler(jdbcStats);
            OperationStepHandler writeHandler=new PoolStatisticsRuntimeAttributeWriteHandler(jdbcStats);
            jdbcRegistration.registerReadWriteAttribute(org.jboss.as.connector.subsystems.common.pool.Constants.POOL_STATISTICS_ENABLED,readHandler,writeHandler);
            resource.registerChild(JDBC_STATISTICS,new PlaceholderResource.PlaceholderResourceEntry(JDBC_STATISTICS));
          }
          if (poolStatsSize > 0) {
            ManagementResourceRegistration poolRegistration=overrideRegistration.registerSubModel(POOL_STATISTICS,new StatisticsDescriptionProvider(DataSourcesSubsystemProviders.RESOURCE_NAME,"statistics",poolStats));
            poolRegistration.setRuntimeOnly(true);
            poolRegistration.registerOperationHandler(Constants.CLEAR_STATISTICS,new ClearStatisticsHandler(poolStats));
            for (            String statName : poolStats.getNames()) {
              poolRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));
            }
            OperationStepHandler readHandler=new PoolStatisticsRuntimeAttributeReadHandler(poolStats);
            OperationStepHandler writeHandler=new PoolStatisticsRuntimeAttributeWriteHandler(poolStats);
            poolRegistration.registerReadWriteAttribute(org.jboss.as.connector.subsystems.common.pool.Constants.POOL_STATISTICS_ENABLED,readHandler,writeHandler);
            resource.registerChild(POOL_STATISTICS,new PlaceholderResource.PlaceholderResourceEntry(JDBC_STATISTICS));
          }
        }
      }
      break;
    }
case UP_to_STOP_REQUESTED:
{
    if (overrideRegistration != null) {
      overrideRegistration.unregisterSubModel(JDBC_STATISTICS);
      overrideRegistration.unregisterSubModel(POOL_STATISTICS);
    }
    if (resource.hasChild(JDBC_STATISTICS)) {
      resource.removeChild(JDBC_STATISTICS);
    }
    if (resource.hasChild(POOL_STATISTICS)) {
      resource.removeChild(POOL_STATISTICS);
    }
    break;
  }
}
}

{
  ClusteredSession<O> session=cast(this.sessions.remove(realId));
  if (session == null) {
    if (unloadedSessions.remove(realId) != null) {
      log.tracef("Removed entry for session %s from unloaded session map",realId);
    }
    this.getReplicationStatistics().removeStats(realId);
  }
 else {
    boolean notify=false;
    boolean localCall=false;
    boolean localOnly=true;
    try {
      SessionInvalidationTracker.suspend();
      session.expire(notify,localCall,localOnly,ClusteredSessionNotificationCause.INVALIDATE,null);
    }
  finally {
      SessionInvalidationTracker.resume();
      this.getReplicationStatistics().removeStats(realId);
    }
  }
}

{
  super(name,configuration,refs,configs);
  if (className == null) {
    throw LoggingMessages.MESSAGES.nullVar("className");
  }
  this.constructorProperties=constructorProperties;
  final ClassLoader classLoader;
  if (moduleName != null)   try {
    classLoader=ModuleFinder.getClassLoader(moduleName);
  }
 catch (  Throwable e) {
    throw LoggingMessages.MESSAGES.cannotLoadModule(e,moduleName,getDescription(),name);
  }
 else {
    classLoader=getClass().getClassLoader();
  }
  final Class<? extends T> actualClass;
  Class<?> temp;
  try {
    temp=Class.forName(className,true,classLoader);
    if (baseClass == Handler.class && Appender.class.isAssignableFrom(temp)) {
      actualClass=Log4jAppenderHandler.class.asSubclass(baseClass);
      appenderClass=temp.asSubclass(Appender.class);
    }
 else {
      actualClass=temp.asSubclass(baseClass);
      appenderClass=null;
    }
  }
 catch (  Exception e) {
    throw LoggingMessages.MESSAGES.failedToLoadClass(e,className,getDescription(),name);
  }
  this.moduleName=moduleName;
  this.className=className;
  this.actualClass=actualClass;
}

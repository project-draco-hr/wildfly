{
  try {
    ModelNode param=operation.get(SCHEMA_LOCATION);
    ModelNode locations=context.getSubModel().get(SCHEMA_LOCATIONS);
    ModelNode toRemove=null;
    String failure=typeValidator.validateParameter(SCHEMA_LOCATION,param);
    if (failure == null) {
      ModelNode newList=new ModelNode().setEmptyList();
      String uri=param.asProperty().getName();
      if (locations.isDefined()) {
        for (        Property location : locations.asPropertyList()) {
          if (!uri.equals(location.getName())) {
            toRemove=newList.add(location.getName(),location.getValue());
            break;
          }
        }
      }
      if (toRemove != null) {
        locations.set(newList);
        ModelNode compensating=AddSchemaLocationHandler.getAddSchemaLocationOperation(operation.get(OP_ADDR),toRemove);
        resultHandler.handleResultComplete(compensating);
      }
 else {
        failure="No schema location with URI " + uri + "found";
      }
    }
    if (failure != null) {
      resultHandler.handleFailed(new ModelNode().set(failure));
    }
  }
 catch (  Exception e) {
    resultHandler.handleFailed(new ModelNode().set(e.getLocalizedMessage()));
  }
  return Cancellable.NULL;
}

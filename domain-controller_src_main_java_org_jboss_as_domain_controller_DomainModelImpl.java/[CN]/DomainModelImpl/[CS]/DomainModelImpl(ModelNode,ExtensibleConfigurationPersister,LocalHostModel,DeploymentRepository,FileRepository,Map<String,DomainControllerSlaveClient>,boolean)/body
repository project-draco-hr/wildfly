{
  super(getInitialModel(model),configurationPersister,DomainDescriptionProviders.ROOT_PROVIDER);
  this.localHostName=localHostProxy.getName();
  ModelNodeRegistration registry=getRegistry();
  if (model == null) {
    this.extensionContext=DomainModelUtil.initializeMasterDomainRegistry(registry,configurationPersister,deploymentRepo,fileRepository,this);
  }
 else {
    this.extensionContext=DomainModelUtil.initializeSlaveDomainRegistry(registry,configurationPersister,deploymentRepo,fileRepository,this);
  }
  registerInternalOperations();
  ModelNodeRegistration hostRegistry=localHostProxy.getRegistry();
  registry.registerSubModel(PathElement.pathElement(HOST,localHostName),hostRegistry);
  this.hostModel=localHostProxy.getHostModel();
  XmlMarshallingHandler xmlHandler=new XmlMarshallingHandler(localHostProxy.getConfigurationPersister(),hostModel);
  hostRegistry.registerOperationHandler(CommonDescriptions.READ_CONFIG_AS_XML,xmlHandler,xmlHandler,false,OperationEntry.EntryType.PRIVATE);
  this.injectedHostPersister=localHostProxy.getConfigurationPersister();
  ModelNode ourModel=getModel();
  ourModel.get(HOST,localHostName).set(this.hostModel);
  this.serverOperationResolver=new ServerOperationResolver(localHostName);
  if (model == null) {
    initializeExtensions(ourModel);
  }
  this.hosts=Collections.unmodifiableMap(hosts);
  this.master=master;
}

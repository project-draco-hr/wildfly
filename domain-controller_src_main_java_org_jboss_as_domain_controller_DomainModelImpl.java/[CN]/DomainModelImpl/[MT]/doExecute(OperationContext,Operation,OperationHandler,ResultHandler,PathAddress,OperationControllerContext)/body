{
  final OperationResult result;
  ControllerTransactionContext transaction=operationControllerContext.getControllerTransactionContext();
  if (transaction == null) {
    result=super.doExecute(operationHandlerContext,operation,operationHandler,resultHandler,address,operationControllerContext);
  }
 else {
    try {
      ModelNode opNode=operation.getOperation();
      result=operationHandler.execute(operationHandlerContext,opNode,resultHandler);
      ControllerResource txResource=getControllerResource(operationHandlerContext,opNode,operationHandler,resultHandler,address,operationControllerContext);
      if (txResource != null) {
        transaction.registerResource(txResource);
      }
      return result;
    }
 catch (    OperationFailedException e) {
      transaction.setRollbackOnly();
      throw e;
    }
  }
  if (operationHandlerContext instanceof RuntimeOperationContextImpl) {
    final RuntimeOperationContextImpl runtimeOperationContext=RuntimeOperationContextImpl.class.cast(operationHandlerContext);
    if (runtimeOperationContext.getRuntimeTask() != null) {
      try {
        runtimeOperationContext.getRuntimeTask().execute(new RuntimeTaskContext(){
          @Override public ServiceTarget getServiceTarget(){
            return serviceContainer;
          }
          @Override public ServiceRegistry getServiceRegistry(){
            return serviceContainer;
          }
        }
);
      }
 catch (      OperationFailedException e) {
        resultHandler.handleFailed(e.getFailureDescription());
      }
catch (      Exception e) {
        resultHandler.handleFailed(new ModelNode().set(e.toString()));
      }
    }
  }
  return result;
}

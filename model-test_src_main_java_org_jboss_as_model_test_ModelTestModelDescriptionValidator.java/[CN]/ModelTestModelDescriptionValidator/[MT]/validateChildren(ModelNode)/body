{
  for (  String type : children.keys()) {
    ModelNode typeNode=children.get(type);
    for (    String key : typeNode.keys()) {
      ArbitraryDescriptorValidator validator=VALID_CHILD_TYPE_KEYS.get(key);
      if (validator == null) {
        errors.add(new MessageValidationFailure("Invalid key '" + key + "' found for child type '"+ type+ "'",address));
      }
 else {
        if (typeNode.hasDefined(key)) {
          String error=validator.validate(typeNode,key);
          if (error != null) {
            errors.add(new MessageValidationFailure(error,address));
          }
        }
 else {
          if (!key.equals(MODEL_DESCRIPTION)) {
            errors.add(new MessageValidationFailure("Empty key '" + key + "' found for child type '"+ type+ "'",address));
          }
        }
      }
    }
    if (!typeNode.hasDefined(DESCRIPTION)) {
      errors.add(new MessageValidationFailure("Missing description for child type '" + type + "' on ModelNode '"+ typeNode.toString()+ "'",address));
    }
    ModelNode childType=typeNode.get(MODEL_DESCRIPTION);
    if (!childType.isDefined()) {
      errors.add(new MessageValidationFailure("No model description for child '" + type + "'",address));
      continue;
    }
    for (    String child : childType.keys()) {
      ModelNode childAddress=address.clone();
      childAddress.add(type,child);
      ModelTestModelDescriptionValidator childValidator=new ModelTestModelDescriptionValidator(errors,childAddress,childType.get(child),validationConfiguration);
      childValidator.validateResources();
    }
  }
}

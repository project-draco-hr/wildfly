{
  file=new File(System.getProperty("jboss.home"));
  file=new File(file,"standalone");
  file=new File(file,"data");
  file=new File(file,"audit-log.log");
  if (file.exists()) {
    file.delete();
  }
  container.start(CONTAINER);
  final ModelControllerClient client=TestSuiteEnvironment.getModelControllerClient();
  managementClient=new ManagementClient(client,TestSuiteEnvironment.getServerAddress(),TestSuiteEnvironment.getServerPort(),"http-remoting");
  ModelNode op;
  ModelNode result;
  mgmtRealmConfigAddress=PathAddress.pathAddress(PathElement.pathElement(CORE_SERVICE,MANAGEMENT),PathElement.pathElement(SECURITY_REALM,"ManagementRealm"),PathElement.pathElement(AUTHENTICATION,LOCAL));
  op=Util.getWriteAttributeOperation(mgmtRealmConfigAddress,"default-user",new ModelNode("IAmAdmin"));
  result=client.execute(op);
  auditLogConfigAddress=PathAddress.pathAddress(CoreManagementResourceDefinition.PATH_ELEMENT,AccessAuditResourceDefinition.PATH_ELEMENT,AuditLogLoggerResourceDefinition.PATH_ELEMENT);
  op=Util.getWriteAttributeOperation(auditLogConfigAddress,AuditLogLoggerResourceDefinition.ENABLED.getName(),new ModelNode(true));
  result=client.execute(op);
  Assert.assertEquals(result.get("failure-description").asString(),SUCCESS,result.get(OUTCOME).asString());
  SYSLOG_SETUP.setup(managementClient,CONTAINER);
  op=Util.getWriteAttributeOperation(AuditLogToSyslogSetup.AUDIT_LOG_LOGGER_ADDR,ENABLED,true);
  Utils.applyUpdate(op,managementClient.getControllerClient());
  container.stop(CONTAINER);
  Thread.sleep(1000);
  while (managementClient.isServerInRunningState()) {
    Thread.sleep(50);
  }
}

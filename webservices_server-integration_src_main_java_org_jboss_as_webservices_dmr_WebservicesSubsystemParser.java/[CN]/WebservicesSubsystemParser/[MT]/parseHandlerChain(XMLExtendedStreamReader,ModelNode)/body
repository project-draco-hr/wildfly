{
  final EnumSet<Element> encountered=EnumSet.noneOf(Element.class);
  while (reader.nextTag() != END_ELEMENT) {
    final Element element=Element.forName(reader.getLocalName());
    if (element != Element.HANDLER && !encountered.add(element)) {
      throw unexpectedElement(reader);
    }
switch (element) {
case PROTOCOL_BINDING:
{
        String binding=parseElementNoAttributes(reader);
        chainNode.get(Constants.PROTOCOL_BINDING).set(binding);
        break;
      }
case SERVICE_NAME_PATTERN:
{
      String serviceNamePattern=parseElementNoAttributes(reader);
      chainNode.get(Constants.SERVICE_NAME_PATTERN).set(serviceNamePattern);
      break;
    }
case PORT_NAME_PATTERN:
{
    String portNamePattern=parseElementNoAttributes(reader);
    chainNode.get(Constants.PORT_NAME_PATTERN).set(portNamePattern);
    break;
  }
case HANDLER:
{
  parseHandler(reader,chainNode);
  break;
}
default :
{
throw unexpectedElement(reader);
}
}
}
}

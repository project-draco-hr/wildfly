{
  String configName=null;
  final EnumSet<Element> encountered=EnumSet.noneOf(Element.class);
  while (reader.nextTag() != END_ELEMENT) {
    final Element element=Element.forName(reader.getLocalName());
    if (element != Element.PROPERTY && !encountered.add(element)) {
      throw unexpectedElement(reader);
    }
switch (element) {
case CONFIG_NAME:
{
        configName=parseElementNoAttributes(reader);
        final ModelNode node=new ModelNode();
        node.get(OP).set(ADD);
        node.get(OP_ADDR).set(address).add(ENDPOINT_CONFIG,configName);
        operationList.add(node);
        break;
      }
case PRE_HANDLER_CHAINS:
{
      parseHandlerChainsOld(reader,configName,operationList,true);
      break;
    }
case POST_HANDLER_CHAINS:
{
    parseHandlerChainsOld(reader,configName,operationList,false);
    break;
  }
case PROPERTY:
{
  final ModelNode operation=parsePropertyOld(reader,configName);
  operationList.add(operation);
  break;
}
default :
{
throw unexpectedElement(reader);
}
}
}
}

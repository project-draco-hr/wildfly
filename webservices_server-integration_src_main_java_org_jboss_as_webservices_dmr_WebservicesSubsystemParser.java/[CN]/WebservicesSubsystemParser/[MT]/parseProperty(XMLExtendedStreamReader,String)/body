{
  String propertyName=null;
  String propertyValue=null;
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    requireNoNamespaceAttribute(reader,i);
    final String value=reader.getAttributeValue(i);
    final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case NAME:
      propertyName=value;
    break;
case VALUE:
  propertyValue=value;
break;
default :
throw unexpectedAttribute(reader,i);
}
}
final EnumSet<Element> encountered=EnumSet.noneOf(Element.class);
while (reader.nextTag() != END_ELEMENT) {
final Element element=Element.forName(reader.getLocalName());
if (!encountered.add(element)) {
throw unexpectedElement(reader);
}
switch (element) {
default :
{
throw unexpectedElement(reader);
}
}
}
final ModelNode operation=new ModelNode();
operation.get(OP).set(ADD);
operation.get(OP_ADDR).add(SUBSYSTEM,WSExtension.SUBSYSTEM_NAME).add(ENDPOINT_CONFIG,configName).add(PROPERTY,propertyName);
if (propertyValue != null) {
operation.get(VALUE).set(propertyValue);
}
return operation;
}

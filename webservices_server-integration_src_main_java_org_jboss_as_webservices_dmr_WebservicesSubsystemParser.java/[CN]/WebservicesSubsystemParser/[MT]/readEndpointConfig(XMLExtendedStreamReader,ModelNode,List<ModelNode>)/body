{
  String configName=null;
  ModelNode preHandlers=null;
  ModelNode postHandlers=null;
  final EnumSet<Element> encountered=EnumSet.noneOf(Element.class);
  while (reader.nextTag() != END_ELEMENT) {
    final Element element=Element.forName(reader.getLocalName());
    if (!encountered.add(element)) {
      throw unexpectedElement(reader);
    }
switch (element) {
case CONFIG_NAME:
{
        configName=parseElementNoAttributes(reader);
        break;
      }
case PRE_HANDLER_CHAINS:
{
      preHandlers=parseHandlerChains(reader);
      break;
    }
case POST_HANDLER_CHAINS:
{
    postHandlers=parseHandlerChains(reader);
    break;
  }
default :
{
  throw unexpectedElement(reader);
}
}
}
final ModelNode endpointConfig=new ModelNode();
if (preHandlers != null) {
endpointConfig.get(Constants.PRE_HANDLER_CHAINS).set(preHandlers);
}
if (postHandlers != null) {
endpointConfig.get(Constants.POST_HANDLER_CHAINS).set(postHandlers);
}
final ModelNode node=new ModelNode();
node.get(OP).set(ADD);
node.get(OP_ADDR).set(address).add(ENDPOINT_CONFIG,configName);
node.get(PRE_HANDLER_CHAINS).set(preHandlers);
node.get(POST_HANDLER_CHAINS).set(postHandlers);
operationList.add(node);
}

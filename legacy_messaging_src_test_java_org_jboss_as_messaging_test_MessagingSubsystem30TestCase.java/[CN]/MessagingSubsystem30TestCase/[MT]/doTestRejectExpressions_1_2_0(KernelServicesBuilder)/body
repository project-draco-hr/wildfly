{
  KernelServices mainServices=builder.build();
  assertTrue(mainServices.isSuccessfulBoot());
  KernelServices legacyServices=mainServices.getLegacyServices(VERSION_1_2_0);
  assertNotNull(legacyServices);
  assertTrue(legacyServices.isSuccessfulBoot());
  PathAddress subsystemAddress=PathAddress.pathAddress(pathElement(SUBSYSTEM,MessagingExtension.SUBSYSTEM_NAME));
  List<ModelNode> modelNodes=builder.parseXmlResource("subsystem_3_0_expressions.xml");
  modelNodes.remove(0);
  checkFailedTransformedBootOperations(mainServices,VERSION_1_2_0,modelNodes,new FailedOperationTransformationConfig().addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH),createChainedConfig(new AttributeDefinition[]{},new AttributeDefinition[]{MAX_SAVED_REPLICATED_JOURNAL_SIZE,OVERRIDE_IN_VM_SECURITY})).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH,BridgeDefinition.PATH),createChainedConfig(new AttributeDefinition[]{},new AttributeDefinition[]{BridgeDefinition.RECONNECT_ATTEMPTS_ON_SAME_NODE})).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH,pathElement(CommonAttributes.HTTP_CONNECTOR)),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH,pathElement(CommonAttributes.HTTP_CONNECTOR),pathElement(PARAM)),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH,HTTPAcceptorDefinition.PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH,HTTPAcceptorDefinition.PATH,pathElement(PARAM)),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH,GroupingHandlerDefinition.PATH),createChainedConfig(new AttributeDefinition[]{},new AttributeDefinition[]{GroupingHandlerDefinition.GROUP_TIMEOUT,GroupingHandlerDefinition.REAPER_PERIOD})).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(AddressSettingDefinition.PATH),createChainedConfig(new AttributeDefinition[]{},new AttributeDefinition[]{AddressSettingDefinition.EXPIRY_DELAY,AddressSettingDefinition.MAX_REDELIVERY_DELAY,AddressSettingDefinition.REDELIVERY_MULTIPLIER,AddressSettingDefinition.SLOW_CONSUMER_CHECK_PERIOD,AddressSettingDefinition.SLOW_CONSUMER_POLICY,AddressSettingDefinition.SLOW_CONSUMER_THRESHOLD})));
}

{
  final String type=PathAddress.pathAddress(operation.require(ModelDescriptionConstants.OP_ADDR)).getLastElement().getValue();
  if (ModelDescriptionConstants.HOST.equals(type)) {
    throw HostControllerMessages.MESSAGES.cannotIgnoreTypeHost(ModelDescriptionConstants.HOST);
  }
  ModelNode names=IgnoredDomainTypeResourceDefinition.NAMES.validateOperation(operation);
  ModelNode wildcardNode=IgnoredDomainTypeResourceDefinition.WILDCARD.validateOperation(operation);
  Boolean wildcard=wildcardNode.isDefined() ? wildcardNode.asBoolean() : null;
  IgnoreDomainResourceTypeResource resource=new IgnoreDomainResourceTypeResource(type,names,wildcard);
  context.addResource(PathAddress.EMPTY_ADDRESS,resource);
  boolean booting=context.isBooting();
  if (!booting) {
    context.reloadRequired();
  }
  if (context.completeStep() == OperationContext.ResultAction.KEEP) {
    if (booting) {
      resource.publish();
    }
  }
 else   if (!booting) {
    context.revertReloadRequired();
  }
}

{
  final String type=PathAddress.pathAddress(operation.require(ModelDescriptionConstants.OP_ADDR)).getLastElement().getValue();
  if (ModelDescriptionConstants.HOST.equals(type)) {
    throw HostControllerMessages.MESSAGES.cannotIgnoreTypeHost(ModelDescriptionConstants.HOST);
  }
  ModelNode names=IgnoredDomainTypeResourceDefinition.NAMES.validateOperation(operation);
  ModelNode wildcardNode=IgnoredDomainTypeResourceDefinition.WILDCARD.validateOperation(operation);
  Boolean wildcard=wildcardNode.isDefined() ? wildcardNode.asBoolean() : null;
  final IgnoreDomainResourceTypeResource resource=new IgnoreDomainResourceTypeResource(type,names,wildcard);
  context.addResource(PathAddress.EMPTY_ADDRESS,resource);
  final boolean booting=context.isBooting();
  if (!booting) {
    context.reloadRequired();
  }
  context.completeStep(new OperationContext.ResultHandler(){
    @Override public void handleResult(    OperationContext.ResultAction resultAction,    OperationContext context,    ModelNode operation){
      if (resultAction == OperationContext.ResultAction.KEEP) {
        if (booting) {
          resource.publish();
        }
      }
 else       if (!booting) {
        context.revertReloadRequired();
      }
    }
  }
);
}

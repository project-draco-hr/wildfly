{
  final String subsystem=operation.get(ModelDescriptionConstants.SUBSYSTEM).asString();
  final int major=operation.get(ModelDescriptionConstants.MANAGEMENT_MAJOR_VERSION).asInt();
  final int minor=operation.get(ModelDescriptionConstants.MANAGEMENT_MINOR_VERSION).asInt();
  final ImmutableManagementResourceRegistration rr=context.getResourceRegistration();
  final ModelNode readResourceResult=new ModelNode();
  context.addStep(new OperationStepHandler(){
    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {
      ModelNode transformed=transformReadResourceResult(rr,readResourceResult,subsystem,major,minor);
      context.getResult().set(transformed);
      context.completeStep();
    }
  }
,OperationContext.Stage.IMMEDIATE);
  final ModelNode op=new ModelNode();
  op.get(OP).set(READ_RESOURCE_OPERATION);
  op.get(OP_ADDR).set(PathAddress.EMPTY_ADDRESS.toModelNode());
  op.get(RECURSIVE).set(true);
  context.addStep(readResourceResult,op,GlobalOperationHandlers.READ_RESOURCE,OperationContext.Stage.IMMEDIATE);
  context.completeStep();
}

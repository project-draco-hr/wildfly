{
  String name=context.getCurrentAddressValue();
  String stack=ModelNodes.asString(STACK.getDefinition().resolveModelAttribute(context,model));
  ModuleIdentifier module=ModelNodes.asModuleIdentifier(MODULE.getDefinition().resolveModelAttribute(context,model));
  ServiceTarget target=context.getServiceTarget();
  new AliasServiceBuilder<>(ChannelServiceName.FACTORY.getServiceName(name),ProtocolStackServiceName.CHANNEL_FACTORY.getServiceName(stack),ChannelFactory.class).build(target).install();
  new ChannelBuilder(name).build(target).install();
  new ChannelConnectorBuilder(name).build(target).install();
  new BinderServiceBuilder<>(JGroupsBindingFactory.createChannelBinding(name),ChannelServiceName.CHANNEL.getServiceName(name),Channel.class).build(target).install();
  new ForkChannelFactoryBuilder(name).build(target).install();
  new BinderServiceBuilder<>(JGroupsBindingFactory.createChannelFactoryBinding(name),ProtocolStackServiceName.CHANNEL_FACTORY.getServiceName(name),ChannelFactory.class).build(target).install();
  for (  GroupBuilderProvider provider : ServiceLoader.load(DistributedGroupBuilderProvider.class,DistributedGroupBuilderProvider.class.getClassLoader())) {
    for (    Builder<?> builder : provider.getBuilders(name,module)) {
      JGroupsLogger.ROOT_LOGGER.debugf("Installing %s for channel %s",builder.getServiceName(),name);
      builder.build(target).install();
    }
  }
}

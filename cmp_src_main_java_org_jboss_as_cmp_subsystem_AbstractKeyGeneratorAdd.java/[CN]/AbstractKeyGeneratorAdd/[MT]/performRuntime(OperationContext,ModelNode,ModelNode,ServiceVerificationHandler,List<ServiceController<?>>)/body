{
  final String name=PathAddress.pathAddress(operation.get(ModelDescriptionConstants.ADDRESS)).getLastElement().getValue();
  final Service<KeyGeneratorFactory> keyGeneratorFactory=getKeyGeneratorFactory(context,model);
  final ServiceBuilder<KeyGeneratorFactory> factoryServiceBuilder=context.getServiceTarget().addService(getServiceName(name),keyGeneratorFactory).addDependency(KeyGeneratorFactoryRegistry.SERVICE_NAME,KeyGeneratorFactoryRegistry.class,KeyGeneratorFactoryRegistry.getRegistryInjector(name,keyGeneratorFactory)).addListener(verificationHandler);
  addDependencies(operation,keyGeneratorFactory,factoryServiceBuilder);
  ModelNode jndiNode=AbstractKeyGeneratorResourceDescription.JNDI_NAME.resolveModelAttribute(context,model);
  if (jndiNode.isDefined()) {
    String jndiName=jndiNode.asString();
    final ManagedReferenceFactory valueManagedReferenceFactory=new org.jboss.as.naming.ContextListAndJndiViewManagedReferenceFactory(){
      @Override public String getJndiViewInstanceValue(){
        return String.valueOf(getReference().getInstance());
      }
      @Override public String getInstanceClassName(){
        final Object value=getReference().getInstance();
        return value != null ? value.getClass().getName() : org.jboss.as.naming.ContextListManagedReferenceFactory.DEFAULT_INSTANCE_CLASS_NAME;
      }
      @Override public org.jboss.as.naming.ManagedReference getReference(){
        return new org.jboss.as.naming.ValueManagedReference(new org.jboss.msc.value.ImmediateValue<Object>(keyGeneratorFactory.getValue()));
      }
    }
;
    final ContextNames.BindInfo bindInfo=ContextNames.bindInfoFor(jndiName);
    final BinderService keyGenFactoryBinderService=new BinderService(bindInfo.getBindName());
    final ServiceBuilder<ManagedReferenceFactory> keyGenFactoryBinderBuilder=context.getServiceTarget().addService(bindInfo.getBinderServiceName(),keyGenFactoryBinderService).addInjection(keyGenFactoryBinderService.getManagedObjectInjector(),valueManagedReferenceFactory).addDependency(bindInfo.getParentContextServiceName(),ServiceBasedNamingStore.class,keyGenFactoryBinderService.getNamingStoreInjector());
    newControllers.add(keyGenFactoryBinderBuilder.install());
  }
  newControllers.add(factoryServiceBuilder.install());
}

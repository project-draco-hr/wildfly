{
  final PathElement one=PathElement.pathElement(ModelDescriptionConstants.EXTENSION,"org.test.one");
  final PathElement two=PathElement.pathElement(ModelDescriptionConstants.EXTENSION,"org.test.two");
  final Resource resource=Resource.Factory.create();
  resource.registerChild(one,Resource.Factory.create());
  resource.registerChild(two,Resource.Factory.create());
  final TransformerRegistry transformers=TransformerRegistry.Factory.create(null);
  transformers.getDomainRegistration(ModelVersion.create(1,2)).registerSubResource(one,true);
  transformers.getDomainRegistration(ModelVersion.create(1,3)).registerSubResource(two,true);
  final TransformationTarget target10=create(transformers,ModelVersion.create(1,0));
  final Resource transformed10=transform(target10,resource);
  Assert.assertEquals(2,transformed10.getChildren(ModelDescriptionConstants.EXTENSION).size());
  Assert.assertNotNull(transformed10.getChild(one));
  Assert.assertNotNull(transformed10.getChild(one));
  final TransformationTarget target12=create(transformers,ModelVersion.create(1,2));
  final Resource transformed12=transform(target12,resource);
  Assert.assertEquals(1,transformed12.getChildren(ModelDescriptionConstants.EXTENSION).size());
  Assert.assertNull(transformed12.getChild(one));
  Assert.assertNotNull(transformed12.getChild(two));
  final TransformationTarget target13=create(transformers,ModelVersion.create(1,3));
  final Resource transformed13=transform(target13,resource);
  Assert.assertEquals(1,transformed13.getChildren(ModelDescriptionConstants.EXTENSION).size());
  Assert.assertNull(transformed13.getChild(two));
  Assert.assertNotNull(transformed13.getChild(one));
}

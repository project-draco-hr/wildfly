{
  final ResourceTransformationDescriptionBuilder subsystemRoot=TransformationDescriptionBuilder.Factory.createSubsystemInstance();
  subsystemRoot.getAttributeBuilder().setDiscard(UnneededJDBCStoreChecker.INSTANCE,TransactionSubsystemRootResourceDefinition.attributes_1_2).setValueConverter(new AttributeConverter(){
    @Override public void convertOperationParameter(    PathAddress address,    String attributeName,    ModelNode attributeValue,    ModelNode operation,    TransformationContext context){
    }
    @Override public void convertResourceAttribute(    PathAddress address,    String attributeName,    ModelNode attributeValue,    TransformationContext context){
      if (!attributeValue.isDefined()) {
        attributeValue.set(false);
      }
    }
  }
,TransactionSubsystemRootResourceDefinition.PROCESS_ID_UUID);
  final ModelVersion version111=ModelVersion.create(1,1,1);
  final TransformationDescription description111=subsystemRoot.build();
  TransformationDescription.Tools.register(description111,subsystem,version111);
  subsystemRoot.getAttributeBuilder().addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,TransactionSubsystemRootResourceDefinition.attributes);
  final ModelVersion version110=ModelVersion.create(1,1,0);
  final TransformationDescription description110=subsystemRoot.build();
  TransformationDescription.Tools.register(description110,subsystem,version110);
}

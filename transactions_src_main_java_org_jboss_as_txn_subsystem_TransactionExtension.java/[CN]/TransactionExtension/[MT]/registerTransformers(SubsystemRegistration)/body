{
  final ResourceTransformationDescriptionBuilder subsystemRoot200=TransformationDescriptionBuilder.Factory.createSubsystemInstance();
  subsystemRoot200.rejectChildResource(CMResourceResourceDefinition.PATH_CM_RESOURCE);
  final ModelVersion version200=ModelVersion.create(2,0,0);
  final TransformationDescription description200=subsystemRoot200.build();
  TransformationDescription.Tools.register(description200,subsystem,version200);
  final ResourceTransformationDescriptionBuilder subsystemRoot=TransformationDescriptionBuilder.Factory.createSubsystemInstance();
  subsystemRoot.getAttributeBuilder().setDiscard(new DiscardAttributeChecker.DiscardAttributeValueChecker(false,false,new ModelNode(true)),TransactionSubsystemRootResourceDefinition.HORNETQ_STORE_ENABLE_ASYNC_IO).addRejectCheck(RejectHornetQStoreAsyncIOChecker.INSTANCE,TransactionSubsystemRootResourceDefinition.HORNETQ_STORE_ENABLE_ASYNC_IO).addRename(TransactionSubsystemRootResourceDefinition.STATISTICS_ENABLED,CommonAttributes.ENABLE_STATISTICS).setValueConverter(ProcessIdUuidConverter.INSTANCE,TransactionSubsystemRootResourceDefinition.PROCESS_ID_UUID);
  subsystemRoot.rejectChildResource(CMResourceResourceDefinition.PATH_CM_RESOURCE);
  final ModelVersion version120=ModelVersion.create(1,2,0);
  final TransformationDescription description120=subsystemRoot.build();
  TransformationDescription.Tools.register(description120,subsystem,version120);
  subsystemRoot.getAttributeBuilder().setDiscard(UnneededJDBCStoreChecker.INSTANCE,TransactionSubsystemRootResourceDefinition.attributes_1_2).addRejectCheck(RejectAttributeChecker.DEFINED,TransactionSubsystemRootResourceDefinition.attributes_1_2);
  subsystemRoot.getAttributeBuilder().addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,TransactionSubsystemRootResourceDefinition.ATTRIBUTES_WITH_EXPRESSIONS_AFTER_1_1_1);
  subsystemRoot.rejectChildResource(CMResourceResourceDefinition.PATH_CM_RESOURCE);
  final ModelVersion version111=ModelVersion.create(1,1,1);
  final TransformationDescription description111=subsystemRoot.build();
  TransformationDescription.Tools.register(description111,subsystem,version111);
  final ModelVersion version110=ModelVersion.create(1,1,0);
  subsystemRoot.getAttributeBuilder().addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,TransactionSubsystemRootResourceDefinition.ATTRIBUTES_WITH_EXPRESSIONS_AFTER_1_1_0);
  final TransformationDescription description110=subsystemRoot.build();
  TransformationDescription.Tools.register(description110,subsystem,version110);
}

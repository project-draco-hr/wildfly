{
  final ResourceTransformationDescriptionBuilder subsystemRoot=TransformationDescriptionBuilder.Factory.createSubsystemInstance();
  subsystemRoot.getAttributeBuilder().setDiscard(new DiscardAttributeChecker.DiscardAttributeValueChecker(false,false,new ModelNode(true)),TransactionSubsystemRootResourceDefinition.HORNETQ_STORE_ENABLE_ASYNC_IO).addRejectCheck(RejectHornetQStoreAsyncIOChecker.INSTANCE,TransactionSubsystemRootResourceDefinition.HORNETQ_STORE_ENABLE_ASYNC_IO);
  final ModelVersion version120=ModelVersion.create(1,2,0);
  final TransformationDescription description120=subsystemRoot.build();
  TransformationDescription.Tools.register(description120,subsystem,version120);
  subsystemRoot.getAttributeBuilder().setDiscard(UnneededJDBCStoreChecker.INSTANCE,TransactionSubsystemRootResourceDefinition.attributes_1_2).addRejectCheck(RejectAttributeChecker.DEFINED,TransactionSubsystemRootResourceDefinition.attributes_1_2).setValueConverter(new AttributeConverter(){
    @Override public void convertOperationParameter(    PathAddress address,    String attributeName,    ModelNode attributeValue,    ModelNode operation,    TransformationContext context){
    }
    @Override public void convertResourceAttribute(    PathAddress address,    String attributeName,    ModelNode attributeValue,    TransformationContext context){
      if (!attributeValue.isDefined()) {
        attributeValue.set(false);
      }
    }
  }
,TransactionSubsystemRootResourceDefinition.PROCESS_ID_UUID);
  subsystemRoot.getAttributeBuilder().addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,TransactionSubsystemRootResourceDefinition.ATTRIBUTES_WITH_EXPRESSIONS_AFTER_1_1_1);
  final ModelVersion version111=ModelVersion.create(1,1,1);
  final TransformationDescription description111=subsystemRoot.build();
  TransformationDescription.Tools.register(description111,subsystem,version111);
  final ModelVersion version110=ModelVersion.create(1,1,0);
  subsystemRoot.getAttributeBuilder().addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,TransactionSubsystemRootResourceDefinition.ATTRIBUTES_WITH_EXPRESSIONS_AFTER_1_1_0);
  final TransformationDescription description110=subsystemRoot.build();
  TransformationDescription.Tools.register(description110,subsystem,version110);
}

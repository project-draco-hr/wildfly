{
  return new HttpUpgradeHandshake(){
    public boolean handleUpgrade(    final HttpServerExchange exchange) throws IOException {
      String secretKey=exchange.getRequestHeaders().getFirst(keyHeader);
      if (secretKey == null) {
        throw RemotingMessages.MESSAGES.upgradeRequestMissingKey();
      }
      String response=createExpectedResponse(magicNumber,secretKey);
      exchange.getResponseHeaders().put(HttpString.tryFromString(acceptHeader),response);
      return true;
    }
    private String createExpectedResponse(    final String magicNumber,    final String secretKey) throws IOException {
      try {
        final String concat=secretKey + magicNumber;
        final MessageDigest digest=MessageDigest.getInstance("SHA1");
        digest.update(concat.getBytes("UTF-8"));
        final byte[] bytes=digest.digest();
        return FlexBase64.encodeString(bytes,false);
      }
 catch (      NoSuchAlgorithmException e) {
        throw new IOException(e);
      }
    }
  }
;
}

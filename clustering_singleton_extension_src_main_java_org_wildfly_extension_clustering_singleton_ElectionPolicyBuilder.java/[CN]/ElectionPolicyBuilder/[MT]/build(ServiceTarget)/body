{
  final List<Preference> preferences=this.preferences;
  Value<SingletonElectionPolicy> value=new Value<SingletonElectionPolicy>(){
    @Override public SingletonElectionPolicy getValue(){
      SingletonElectionPolicy policy=ElectionPolicyBuilder.this.getValue();
      return preferences.isEmpty() ? policy : new PreferredSingletonElectionPolicy(policy,preferences);
    }
  }
;
  ServiceBuilder<SingletonElectionPolicy> builder=target.addService(this.getServiceName(),new ValueService<>(value)).setInitialMode(ServiceController.Mode.ON_DEMAND);
  for (  Dependency dependency : this.dependencies) {
    dependency.register(builder);
  }
  return builder;
}

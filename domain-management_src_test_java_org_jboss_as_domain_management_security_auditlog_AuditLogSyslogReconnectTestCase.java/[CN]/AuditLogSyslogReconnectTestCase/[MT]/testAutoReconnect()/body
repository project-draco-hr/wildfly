{
  final int timeoutSeconds=2;
  ModelNode op=createAddSyslogHandlerTcpOperation("syslog","test-formatter",InetAddress.getByName("localhost"),SYSLOG_PORT,null,MessageTransfer.OCTET_COUNTING);
  op.get(STEPS).asList().get(0).get(SyslogAuditLogHandlerResourceDefinition.MAX_FAILURE_COUNT.getName()).set(3);
  op.get(STEPS).asList().get(1).get(SyslogAuditLogProtocolResourceDefinition.Tcp.RECONNECT_TIMEOUT.getName()).set(timeoutSeconds);
  executeForResult(op);
  SimpleSyslogServer server=SimpleSyslogServer.createTcp(SYSLOG_PORT,true);
  executeForResult(createAddHandlerReferenceOperation("syslog"));
  Assert.assertNotNull(server.receiveData());
  try {
    final ModelNode readResource=Util.createOperation(READ_RESOURCE_OPERATION,AUDIT_ADDR);
    readResource.get(ModelDescriptionConstants.RECURSIVE).set(true);
    readResource.get(ModelDescriptionConstants.INCLUDE_RUNTIME).set(true);
    ModelNode result=executeForResult(readResource);
    Assert.assertNotNull(server.receiveData());
    checkHandlerRuntimeFailureMetrics(result.get(ModelDescriptionConstants.SYSLOG_HANDLER,"syslog"),3,0,false);
    int failures=result.get(ModelDescriptionConstants.SYSLOG_HANDLER,"syslog").get(AuditLogHandlerResourceDefinition.FAILURE_COUNT.getName()).asInt();
    server.close();
    result=sendUntilFailure(readResource,failures);
    checkHandlerRuntimeFailureMetrics(result.get(ModelDescriptionConstants.SYSLOG_HANDLER,"syslog"),3,1,false);
    result=executeForResult(readResource);
    checkHandlerRuntimeFailureMetrics(result.get(ModelDescriptionConstants.SYSLOG_HANDLER,"syslog"),3,2,false);
    long before=System.currentTimeMillis();
    result=executeForResult(readResource);
    checkHandlerRuntimeFailureMetrics(result.get(ModelDescriptionConstants.SYSLOG_HANDLER,"syslog"),3,3,true);
    result=executeForResult(readResource);
    if (System.currentTimeMillis() - before < timeoutSeconds * 1000) {
      checkHandlerRuntimeFailureMetrics(result.get(ModelDescriptionConstants.SYSLOG_HANDLER,"syslog"),3,3,true);
    }
    Thread.sleep(timeoutSeconds * 1000 + 100);
    result=executeForResult(readResource);
    checkHandlerRuntimeFailureMetrics(result.get(ModelDescriptionConstants.SYSLOG_HANDLER,"syslog"),3,3,true);
    result=executeForResult(readResource);
    checkHandlerRuntimeFailureMetrics(result.get(ModelDescriptionConstants.SYSLOG_HANDLER,"syslog"),3,3,true);
    SimpleSyslogServer oldServer=server;
    server=SimpleSyslogServer.createTcp(SYSLOG_PORT,true);
    Thread.sleep(timeoutSeconds * 1000 + 100);
    result=executeForResult(readResource);
    Assert.assertNotNull(server.receiveData());
    checkHandlerRuntimeFailureMetrics(result.get(ModelDescriptionConstants.SYSLOG_HANDLER,"syslog"),3,3,true);
    result=executeForResult(readResource);
    Assert.assertNotNull(server.receiveData());
    checkHandlerRuntimeFailureMetrics(result.get(ModelDescriptionConstants.SYSLOG_HANDLER,"syslog"),3,0,false);
    Assert.assertNull(oldServer.pollData());
  }
  finally {
    if (server != null) {
      server.close();
    }
  }
}

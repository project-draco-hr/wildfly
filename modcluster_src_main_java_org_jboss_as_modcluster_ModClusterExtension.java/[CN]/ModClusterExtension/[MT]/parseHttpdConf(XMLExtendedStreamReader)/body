{
  final ModelNode conf=new ModelNode();
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    requireNoNamespaceAttribute(reader,i);
    final String value=reader.getAttributeValue(i);
    final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case ADVERTISE_SOCKET:
      conf.get(ADVERTISE_SOCKET).set(value);
    break;
case PROXY_LIST:
  conf.get(PROXY_LIST).set(value);
break;
case PROXY_URL:
conf.get(PROXY_URL).set(value);
break;
case ADVERTISE:
conf.get(ADVERTISE).set(value);
break;
case ADVERTISE_SECURITY_KEY:
conf.get(ADVERTISE_SECURITY_KEY).set(value);
break;
default :
unexpectedAttribute(reader,i);
}
}
while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
final Element element=Element.forName(reader.getLocalName());
switch (element) {
case SSL:
final ModelNode ssl=parseSSL(reader);
conf.get(SSL).set(ssl);
break;
default :
unexpectedElement(reader);
}
}
return conf;
}

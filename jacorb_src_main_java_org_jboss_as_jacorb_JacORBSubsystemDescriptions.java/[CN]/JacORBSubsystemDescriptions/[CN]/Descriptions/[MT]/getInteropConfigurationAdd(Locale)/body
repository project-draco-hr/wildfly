{
  final ResourceBundle bundle=getResourceBundle(locale);
  final ModelNode node=new ModelNode();
  node.get(TYPE).set(ModelType.OBJECT);
  node.get(DESCRIPTION).set(bundle.getString("interop.config"));
  node.get(REQUIRED).set(false);
  node.get(MIN_OCCURS).set(0);
  node.get(MAX_OCCURS).set(1);
  node.get(REQUEST_PROPERTIES,INTEROP_SUN.getLocalName(),DESCRIPTION).set(bundle.getString("interop.config.sun"));
  node.get(REQUEST_PROPERTIES,INTEROP_SUN.getLocalName(),TYPE).set(ModelType.STRING);
  node.get(REQUEST_PROPERTIES,INTEROP_SUN.getLocalName(),REQUIRED).set(false);
  node.get(REQUEST_PROPERTIES,INTEROP_SUN.getLocalName(),DEFAULT).set("on");
  node.get(REQUEST_PROPERTIES,INTEROP_COMET.getLocalName(),DESCRIPTION).set(bundle.getString("interop.config.comet"));
  node.get(REQUEST_PROPERTIES,INTEROP_COMET.getLocalName(),TYPE).set(ModelType.STRING);
  node.get(REQUEST_PROPERTIES,INTEROP_COMET.getLocalName(),REQUIRED).set(false);
  node.get(REQUEST_PROPERTIES,INTEROP_COMET.getLocalName(),DEFAULT).set("off");
  node.get(REQUEST_PROPERTIES,INTEROP_CHUNK_RMI_VALUETYPES.getLocalName(),DESCRIPTION).set(bundle.getString("interop.config.chunk-custom-rmi-valuetypes"));
  node.get(REQUEST_PROPERTIES,INTEROP_CHUNK_RMI_VALUETYPES.getLocalName(),TYPE).set(ModelType.STRING);
  node.get(REQUEST_PROPERTIES,INTEROP_CHUNK_RMI_VALUETYPES.getLocalName(),REQUIRED).set(false);
  node.get(REQUEST_PROPERTIES,INTEROP_CHUNK_RMI_VALUETYPES.getLocalName(),DEFAULT).set("on");
  node.get(REQUEST_PROPERTIES,INTEROP_LAX_BOOLEAN_ENCODING.getLocalName(),DESCRIPTION).set(bundle.getString("interop.config.lax-boolean-encoding"));
  node.get(REQUEST_PROPERTIES,INTEROP_LAX_BOOLEAN_ENCODING.getLocalName(),TYPE).set(ModelType.STRING);
  node.get(REQUEST_PROPERTIES,INTEROP_LAX_BOOLEAN_ENCODING.getLocalName(),REQUIRED).set(false);
  node.get(REQUEST_PROPERTIES,INTEROP_LAX_BOOLEAN_ENCODING.getLocalName(),DEFAULT).set("off");
  node.get(REQUEST_PROPERTIES,INTEROP_INDIRECTION_ENCODING_DISABLE.getLocalName(),DESCRIPTION).set(bundle.getString("interop.config.indirection-encoding-disable"));
  node.get(REQUEST_PROPERTIES,INTEROP_INDIRECTION_ENCODING_DISABLE.getLocalName(),TYPE).set(ModelType.STRING);
  node.get(REQUEST_PROPERTIES,INTEROP_INDIRECTION_ENCODING_DISABLE.getLocalName(),REQUIRED).set(false);
  node.get(REQUEST_PROPERTIES,INTEROP_INDIRECTION_ENCODING_DISABLE.getLocalName(),DEFAULT).set("off");
  node.get(REQUEST_PROPERTIES,INTEROP_STRICT_CHECK_ON_TC_CREATION.getLocalName(),DESCRIPTION).set(bundle.getString("interop.config.strict-check-on-tc-creation"));
  node.get(REQUEST_PROPERTIES,INTEROP_STRICT_CHECK_ON_TC_CREATION.getLocalName(),TYPE).set(ModelType.STRING);
  node.get(REQUEST_PROPERTIES,INTEROP_STRICT_CHECK_ON_TC_CREATION.getLocalName(),REQUIRED).set(false);
  node.get(REQUEST_PROPERTIES,INTEROP_STRICT_CHECK_ON_TC_CREATION.getLocalName(),DEFAULT).set("off");
  return node;
}

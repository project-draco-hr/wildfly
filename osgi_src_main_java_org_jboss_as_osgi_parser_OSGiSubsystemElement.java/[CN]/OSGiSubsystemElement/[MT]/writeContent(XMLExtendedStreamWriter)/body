{
synchronized (this) {
    Activation policy=subsystemState.getActivationPolicy();
    streamWriter.writeAttribute(Attribute.ACTIVATION.getLocalName(),policy.name().toLowerCase());
    Map<String,Object> properties=subsystemState.getProperties();
    if (properties.isEmpty() == false) {
      streamWriter.writeStartElement(Element.PROPERTIES.getLocalName());
      for (      Map.Entry<String,Object> entry : properties.entrySet()) {
        streamWriter.writeStartElement(Element.PROPERTY.getLocalName());
        streamWriter.writeAttribute(Attribute.NAME.getLocalName(),entry.getKey());
        streamWriter.writeCharacters((String)entry.getValue());
        streamWriter.writeEndElement();
      }
      streamWriter.writeEndElement();
    }
    List<OSGiModule> modules=subsystemState.getModules();
    if (modules.isEmpty() == false) {
      streamWriter.writeStartElement(Element.MODULES.getLocalName());
      for (      OSGiModule module : modules) {
        ModuleIdentifier identifier=module.getIdentifier();
        streamWriter.writeStartElement(Element.MODULE.getLocalName());
        String canonicalName=identifier.getName();
        if ("main".equals(identifier.getSlot()) == false)         canonicalName+=":" + identifier.getSlot();
        streamWriter.writeAttribute(Attribute.IDENTIFIER.getLocalName(),canonicalName);
        if (module.isStart())         streamWriter.writeAttribute(Attribute.START.getLocalName(),"true");
        streamWriter.writeEndElement();
      }
      streamWriter.writeEndElement();
    }
    streamWriter.writeEndElement();
  }
}

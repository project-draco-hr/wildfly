{
  ManagedDomainContainerConfiguration config=getContainerConfiguration();
  if (isServerRunning()) {
    if (config.isAllowConnectingToRunningServer()) {
      return;
    }
 else {
      failDueToRunning();
    }
  }
  try {
    List<String> cmd=createCommandLine(config);
    log.info("Starting container with: " + cmd.toString());
    ProcessBuilder processBuilder=new ProcessBuilder(cmd);
    processBuilder.redirectErrorStream(true);
    process=processBuilder.start();
    new Thread(new ConsoleConsumer()).start();
    final Process proc=process;
    shutdownThread=new Thread(new Runnable(){
      @Override public void run(){
        if (proc != null) {
          proc.destroy();
          try {
            proc.waitFor();
          }
 catch (          InterruptedException e) {
            throw new RuntimeException(e);
          }
        }
      }
    }
);
    Runtime.getRuntime().addShutdownHook(shutdownThread);
    long startupTimeout=getContainerConfiguration().getStartupTimeoutInSeconds();
    long timeout=startupTimeout * 1000;
    boolean serverAvailable=false;
    long sleep=1000;
    while (timeout > 0 && serverAvailable == false) {
      serverAvailable=getManagementClient().isDomainInRunningState();
      if (!serverAvailable) {
        if (processHasDied(proc))         break;
        Thread.sleep(sleep);
        timeout-=sleep;
        sleep=Math.max(sleep / 2,100);
      }
    }
    if (!serverAvailable) {
      destroyProcess();
      throw new TimeoutException(String.format("Managed Domain server was not started within [%d] s",config.getStartupTimeoutInSeconds()));
    }
  }
 catch (  Exception e) {
    throw new LifecycleException("Could not start container",e);
  }
}

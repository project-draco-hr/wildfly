{
  if (opResponse.hasDefined(Util.RESULT)) {
    final ModelNode result=opResponse.get(Util.RESULT);
    if (composite) {
      final Set<String> keys;
      try {
        keys=result.keys();
      }
 catch (      Exception e) {
        throw new CommandFormatException("Failed to get step results from a composite operation response " + opResponse);
      }
      for (      String key : keys) {
        final ModelNode stepResponse=result.get(key);
        buf=formatResponse(ctx,stepResponse,false,buf);
      }
    }
 else {
      final ModelNodeFormatter formatter=ModelNodeFormatter.Factory.forType(result.getType());
      if (buf == null) {
        buf=new StringBuilder();
      }
      formatter.format(buf,0,result);
    }
  }
  if (opResponse.hasDefined(Util.RESPONSE_HEADERS)) {
    final ModelNode headers=opResponse.get(Util.RESPONSE_HEADERS);
    final Set<String> keys=headers.keys();
    final SimpleTable table=new SimpleTable(2);
    for (    String key : keys) {
      table.addLine(new String[]{key,headers.get(key).asString()});
    }
    if (buf == null) {
      buf=new StringBuilder();
    }
 else {
      buf.append(Util.LINE_SEPARATOR);
    }
    table.append(buf,false);
  }
  return buf;
}

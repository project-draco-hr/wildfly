{
  ModelNode request=initRequest(ctx);
  if (request == null) {
    return;
  }
  request.get("operation").set("read-resource-description");
  try {
    ModelNode result=ctx.getModelControllerClient().execute(request);
    if (!result.hasDefined("result")) {
      ctx.printLine("Node description is not available.");
      return;
    }
    result=result.get("result");
    if (!result.hasDefined("attributes")) {
      ctx.printLine("Attribute descriptions are not available.");
      return;
    }
    result=result.get("attributes");
    for (    Property attr : result.asPropertyList()) {
      final ModelNode value=attr.getValue();
      if (value.has("access-type") && "metric".equals(value.get("access-type").asString())) {
        continue;
      }
      final boolean required=value.has("required") ? value.get("required").asBoolean() : false;
      final StringBuilder descr=new StringBuilder();
      descr.append("\n ");
      descr.append(attr.getName());
      final int length=descr.length();
      int newLength=Math.max(24,((length + 4) / 4) * 4);
      descr.setLength(newLength);
      for (int i=length; i < newLength; ++i) {
        descr.setCharAt(i,' ');
      }
      descr.append("- ");
      if (value.has("description")) {
        descr.append('(');
        if (required) {
          descr.append("required");
        }
 else {
          descr.append("optional");
        }
        descr.append(") ");
        descr.append(value.get("description").asString());
      }
 else {
        descr.append("no description");
      }
      ctx.printLine(descr.toString());
    }
  }
 catch (  Exception e) {
  }
}

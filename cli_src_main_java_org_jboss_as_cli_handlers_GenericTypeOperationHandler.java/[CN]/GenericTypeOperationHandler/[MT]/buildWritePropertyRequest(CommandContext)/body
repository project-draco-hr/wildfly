{
  final String name=this.name.getValue(ctx.getParsedCommandLine(),true);
  ModelNode composite=new ModelNode();
  composite.get("operation").set("composite");
  composite.get("address").setEmptyList();
  ModelNode steps=composite.get("steps");
  ParsedCommandLine args=ctx.getParsedCommandLine();
  final String profile;
  if (ctx.isDomainMode()) {
    profile=this.profile.getValue(args);
    if (profile == null) {
      throw new OperationFormatException("--profile argument value is missing.");
    }
  }
 else {
    profile=null;
  }
  for (  String argName : args.getPropertyNames()) {
    if (argName.equals("--profile") || this.name.getFullName().equals(argName)) {
      continue;
    }
    final String valueString=args.getPropertyValue(argName);
    if (valueString == null) {
      continue;
    }
    DefaultOperationRequestBuilder builder=new DefaultOperationRequestBuilder();
    if (profile != null) {
      builder.addNode("profile",profile);
    }
    for (    OperationRequestAddress.Node node : nodePath) {
      builder.addNode(node.getType(),node.getName());
    }
    builder.addNode(type,name);
    builder.setOperationName("write-attribute");
    if (argName.charAt(1) == '-') {
      argName=argName.substring(2);
    }
 else {
      argName=argName.substring(1);
    }
    builder.addProperty("name",argName);
    if (argName.endsWith("properties")) {
      ModelNode nodeValue=new ModelNode();
      String[] props=valueString.split(",");
      for (      String prop : props) {
        int equals=prop.indexOf('=');
        if (equals == -1) {
          throw new CommandFormatException("Property '" + prop + "' in '"+ valueString+ "' is missing the equals sign.");
        }
        String propName=prop.substring(0,equals);
        if (propName.isEmpty()) {
          throw new CommandFormatException("Property name is missing for '" + prop + "' in '"+ valueString+ "'");
        }
        nodeValue.add(propName,prop.substring(equals + 1));
      }
      builder.getModelNode().get("value").set(nodeValue);
    }
 else {
      builder.addProperty("value",valueString);
    }
    steps.add(builder.buildRequest());
  }
  return composite;
}

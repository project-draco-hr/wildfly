{
  final ModelNode request=initRequest(ctx);
  request.get(Util.OPERATION).set(Util.READ_OPERATION_NAMES);
  if (ctx.getConfig().isAccessControl()) {
    request.get(Util.ACCESS_CONTROL).set(true);
  }
  ModelNode result;
  try {
    result=ctx.getModelControllerClient().execute(request);
  }
 catch (  IOException e) {
    throw new CommandLineException("Failed to load a list of commands.",e);
  }
  if (!result.hasDefined(Util.RESULT)) {
    throw new CommandLineException("Operation names aren't available.");
  }
  final List<ModelNode> nodeList=result.get(Util.RESULT).asList();
  final List<String> supportedCommands=new ArrayList<String>(nodeList.size());
  if (!nodeList.isEmpty()) {
    for (    ModelNode node : nodeList) {
      final String opName=node.asString();
      if (!excludedOps.contains(opName) && (customHandlers == null || !customHandlers.containsKey(opName))) {
        supportedCommands.add(opName);
      }
    }
  }
  if (customHandlers != null) {
    supportedCommands.addAll(customHandlers.keySet());
  }
  Collections.sort(supportedCommands);
  return supportedCommands;
}

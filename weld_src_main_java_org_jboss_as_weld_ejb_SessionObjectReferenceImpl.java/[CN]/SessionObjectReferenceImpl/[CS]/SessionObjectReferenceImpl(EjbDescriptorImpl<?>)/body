{
  ejbName=descriptor.getEjbName();
  final Map<String,ServiceName> viewServices=new HashMap<String,ServiceName>();
  for (  Map.Entry<Class<?>,ServiceName> entry : descriptor.getViewServices().entrySet()) {
    final Class<?> viewClass=entry.getKey();
    if (viewClass != null) {
      final Set<Class<?>> seen=new HashSet<Class<?>>();
      final Set<Class<?>> toProcess=new HashSet<Class<?>>();
      toProcess.add(viewClass);
      while (!toProcess.isEmpty()) {
        Iterator<Class<?>> it=toProcess.iterator();
        final Class<?> clazz=it.next();
        it.remove();
        seen.add(clazz);
        viewServices.put(clazz.getName(),entry.getValue());
        final Class<?> superclass=clazz.getSuperclass();
        if (superclass != Object.class && superclass != null && !seen.contains(superclass)) {
          toProcess.add(superclass);
        }
        for (        Class<?> iface : clazz.getInterfaces()) {
          if (!seen.contains(iface)) {
            toProcess.add(iface);
          }
        }
      }
    }
  }
  this.viewServices=viewServices;
}

{
  final ServiceName createServiceName=descriptor.getCreateServiceName();
  final ServiceController<?> controller=serviceRegistry.getRequiredService(createServiceName);
  final Map<String,ServiceName> viewServices=new HashMap<String,ServiceName>();
  final Map<String,Class<?>> views=new HashMap<String,Class<?>>();
  for (  BusinessInterfaceDescriptor<?> view : descriptor.getRemoteBusinessInterfaces()) {
    views.put(view.getInterface().getName(),view.getInterface());
  }
  for (  BusinessInterfaceDescriptor<?> view : descriptor.getLocalBusinessInterfaces()) {
    views.put(view.getInterface().getName(),view.getInterface());
  }
  for (  ViewDescription view : descriptor.getComponentDescription().getViews()) {
    final Class<?> viewClass=views.get(view.getViewClassName());
    if (viewClass != null) {
      Class<?> clazz=viewClass;
      while (clazz != Object.class && clazz != null) {
        viewServices.put(clazz.getName(),view.getServiceName());
        clazz=clazz.getSuperclass();
      }
    }
  }
  this.viewServices=viewServices;
}

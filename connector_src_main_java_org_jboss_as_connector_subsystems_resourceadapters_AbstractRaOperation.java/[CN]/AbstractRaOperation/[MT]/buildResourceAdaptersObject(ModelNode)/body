{
  List<ResourceAdapter> resourceAdapters=new ArrayList<ResourceAdapter>();
  Map<String,String> configProperties=null;
  if (operation.hasDefined(CONFIG_PROPERTIES.getName())) {
    configProperties=new HashMap<String,String>(operation.get(CONFIG_PROPERTIES.getName()).asList().size());
    for (    ModelNode property : operation.get(CONFIG_PROPERTIES.getName()).asList()) {
      configProperties.put(property.asProperty().getName(),property.asProperty().getValue().asString());
    }
  }
  String archive=getStringIfSetOrGetDefault(operation,ARCHIVE.getName(),null);
  TransactionSupportEnum transactionSupport=operation.hasDefined(TRANSACTIONSUPPORT.getName()) ? TransactionSupportEnum.valueOf(operation.get(TRANSACTIONSUPPORT.getName()).asString()) : null;
  String bootstrapContext=getStringIfSetOrGetDefault(operation,BOOTSTRAPCONTEXT.getName(),null);
  List<String> beanValidationGroups=null;
  if (operation.hasDefined(BEANVALIDATIONGROUPS.getName())) {
    beanValidationGroups=new ArrayList<String>(operation.get(BEANVALIDATIONGROUPS.getName()).asList().size());
    for (    ModelNode beanValidtion : operation.get(BEANVALIDATIONGROUPS.getName()).asList()) {
      beanValidationGroups.add(beanValidtion.asString());
    }
  }
  ResourceAdapter ra;
  try {
    ra=new ResourceAdapterImpl(archive,transactionSupport,buildConnectionDefinitionObject(operation),buildAdminObjects(operation),configProperties,beanValidationGroups,bootstrapContext);
  }
 catch (  ValidateException e) {
    throw new OperationFailedException(e,operation);
  }
  resourceAdapters.add(ra);
  return new ModifiableResourceAdaptors(resourceAdapters);
}

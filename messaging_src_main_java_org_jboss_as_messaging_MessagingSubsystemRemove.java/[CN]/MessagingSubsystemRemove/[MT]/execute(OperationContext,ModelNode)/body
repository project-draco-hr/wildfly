{
  final Resource resource=context.removeResource(PathAddress.EMPTY_ADDRESS);
  context.addStep(new OperationStepHandler(){
    @Override public void execute(    final OperationContext context,    final ModelNode operation) throws OperationFailedException {
      for (      final Resource.ResourceEntry jmsQueue : resource.getChildren(CommonAttributes.JMS_QUEUE)) {
        context.removeService(JMSServices.JMS_QUEUE_BASE.append(jmsQueue.getName()));
      }
      for (      final Resource.ResourceEntry jmsTopic : resource.getChildren(CommonAttributes.JMS_TOPIC)) {
        context.removeService(JMSServices.JMS_TOPIC_BASE.append(jmsTopic.getName()));
      }
      for (      final Resource.ResourceEntry cf : resource.getChildren(CommonAttributes.CONNECTION_FACTORY)) {
        context.removeService(JMSServices.JMS_CF_BASE.append(cf.getName()));
      }
      for (      final Resource.ResourceEntry pcf : resource.getChildren(CommonAttributes.POOLED_CONNECTION_FACTORY)) {
        context.removeService(MessagingServices.POOLED_CONNECTION_FACTORY_BASE.append(pcf.getName()));
      }
      for (      final Resource.ResourceEntry queue : resource.getChildren(CommonAttributes.QUEUE)) {
        context.removeService(MessagingServices.CORE_QUEUE_BASE.append(queue.getName()));
      }
      context.removeService(JMSServices.JMS_MANAGER);
      context.removeService(MessagingServices.JBOSS_MESSAGING);
      context.removeService(MessagingSubsystemAdd.PATH_BASE.append(MessagingSubsystemAdd.DEFAULT_BINDINGS_DIR));
      context.removeService(MessagingSubsystemAdd.PATH_BASE.append(MessagingSubsystemAdd.DEFAULT_JOURNAL_DIR));
      context.removeService(MessagingSubsystemAdd.PATH_BASE.append(MessagingSubsystemAdd.DEFAULT_LARGE_MESSSAGE_DIR));
      context.removeService(MessagingSubsystemAdd.PATH_BASE.append(MessagingSubsystemAdd.DEFAULT_PAGING_DIR));
      context.completeStep();
    }
  }
,OperationContext.Stage.RUNTIME);
  if (context.completeStep() == OperationContext.ResultAction.ROLLBACK) {
  }
}

{
  MockServerManager serverManager=MockServerManager.create();
  MockServerManagerMessageHandler managerMessageHandler=new MockServerManagerMessageHandler();
  MockDirectServerManagerCommunicationListener managerListener=MockDirectServerManagerCommunicationListener.create(serverManager,InetAddress.getLocalHost(),0,10,managerMessageHandler);
  MockServerSideMessageHandler serverMessageHandler=new MockServerSideMessageHandler();
  MockDirectServerSideCommunicationHandler serverHandler=MockDirectServerSideCommunicationHandler.create("Test",InetAddress.getLocalHost(),managerListener.getSmPort(),serverMessageHandler);
  byte[] sent=ServerManagerProtocolCommand.SERVER_AVAILABLE.createCommandBytes(null);
  serverHandler.sendMessage(sent);
  compare(sent,managerMessageHandler.awaitAndReadMessage());
  MockDirectServerManagerCommunicationHandler managerHandler=managerListener.getManagerHandler("Test");
  sent=ServerManagerProtocolCommand.START_SERVER.createCommandBytes("ABCD".getBytes());
  managerHandler.sendMessage(sent);
  compare(sent,serverMessageHandler.awaitAndReadMessage());
  sent=ServerManagerProtocolCommand.SERVER_STARTED.createCommandBytes(null);
  serverHandler.sendMessage(sent);
  compare(sent,managerMessageHandler.awaitAndReadMessage());
  sent=ServerManagerProtocolCommand.STOP_SERVER.createCommandBytes(null);
  managerHandler.sendMessage(sent);
  compare(sent,serverMessageHandler.awaitAndReadMessage());
  sent=ServerManagerProtocolCommand.SERVER_STOPPED.createCommandBytes(null);
  serverHandler.sendMessage(sent);
  compare(sent,managerMessageHandler.awaitAndReadMessage());
  serverHandler.shutdown();
  waitForClose(serverHandler,managerHandler,5000);
}

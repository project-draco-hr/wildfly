{
  final Interceptor aroundInvoke=this.aroundInvoke.create(context);
  final Interceptor aroundTimeout=this.aroundTimeout.create(context);
  return new Interceptor(){
    @Override public Object processInvocation(    final InterceptorContext context) throws Exception {
      final TimerInvocationMarker marker=context.getPrivateData(TimerInvocationMarker.class);
      if (marker == null) {
        return aroundInvoke.processInvocation(context);
      }
 else {
        return aroundTimeout.processInvocation(context);
      }
    }
  }
;
}

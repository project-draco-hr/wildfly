{
  final ContextSelector<EJBClientContext> previousSelector=EJBClientContextSelector.setup(PROPERTIES_FILE);
  try {
    ViewChangeListener listener=context.lookupStateless(ViewChangeListenerBean.class,ViewChangeListener.class);
    this.establishView(listener,NODE_1,NODE_2);
    BeanRemote statelessBean=context.lookupStateless(StatelessBean.class,BeanRemote.class);
    BeanRemote statefulBean=context.lookupStateful(StatefulBean.class,BeanRemote.class);
    String statelessNodeName=statelessBean.getNodeName();
    String statefulNodeName=statefulBean.getNodeName();
    Assert.assertNotNull("No name was returned from SLSB ",statelessNodeName);
    Assert.assertNotNull("No name was returned from SFSB ",statefulNodeName);
    String stoppedContainer=null;
    String runningNode=null;
    if (NODE_1.equals(statefulNodeName)) {
      stoppedContainer=CONTAINER_1;
      runningNode=NODE_2;
    }
 else {
      stoppedContainer=CONTAINER_2;
      runningNode=NODE_1;
    }
    controller.stop(stoppedContainer);
    this.establishView(listener,runningNode);
    statelessNodeName=statelessBean.getNodeName();
    statefulNodeName=statefulBean.getNodeName();
    Assert.assertEquals("SLSB has to return the only running node " + runningNode,runningNode,statelessNodeName);
    Assert.assertEquals("SFSB has to return the only running node " + runningNode,runningNode,statefulNodeName);
    if (CONTAINER_1.equals(stoppedContainer)) {
      controller.start(CONTAINER_1);
      this.establishView(listener,NODE_1,NODE_2);
      deployer.undeploy(DEPLOYMENT_2);
      controller.stop(CONTAINER_2);
      runningNode=NODE_1;
    }
 else {
      controller.start(CONTAINER_2);
      this.establishView(listener,NODE_1,NODE_2);
      deployer.undeploy(DEPLOYMENT_1);
      controller.stop(CONTAINER_1);
      runningNode=NODE_2;
    }
    this.establishView(listener,runningNode);
    statelessNodeName=statelessBean.getNodeName();
    statefulNodeName=statefulBean.getNodeName();
    Assert.assertEquals("SLSB has to return the only running node " + runningNode,runningNode,statelessNodeName);
    Assert.assertEquals("SFSB has to return the only running node " + runningNode,runningNode,statefulNodeName);
  }
  finally {
    if (previousSelector != null) {
      EJBClientContext.setSelector(previousSelector);
    }
  }
}

{
  JobRepository jobRepository=null;
  String jobRepositoryName=null;
  String jobExecutorName=null;
  boolean empty=true;
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
    final String localName=reader.getLocalName();
    final Element element=Element.forName(localName);
    if (element == Element.JOB_REPOSITORY) {
      if (jobRepository != null || jobRepositoryName != null) {
        BatchLogger.LOGGER.multipleJobRepositoriesFound();
      }
 else {
        if (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
          final String name=reader.getLocalName();
          final Element jobRepositoryElement=Element.forName(name);
          if (jobRepositoryElement == Element.IN_MEMORY) {
            ParseUtils.requireNoContent(reader);
            jobRepository=new InMemoryRepository();
          }
 else           if (jobRepositoryElement == Element.NAMED) {
            jobRepositoryName=readRequiredAttribute(reader,Attribute.NAME);
            ParseUtils.requireNoContent(reader);
          }
 else {
            throw ParseUtils.unexpectedElement(reader);
          }
        }
        if (jobRepository == null && jobRepositoryName == null) {
          BatchLogger.LOGGER.emptyJobRepositoryElement(deploymentUnit.getName());
        }
      }
      ParseUtils.requireNoContent(reader);
    }
 else     if (element == Element.THREAD_POOL) {
      jobExecutorName=readRequiredAttribute(reader,Attribute.NAME);
      ParseUtils.requireNoContent(reader);
    }
 else {
      throw ParseUtils.unexpectedElement(reader);
    }
    empty=false;
  }
  if (empty) {
    BatchLogger.LOGGER.debugf("An empty batch element in the deployment descriptor was found for %s.",deploymentUnit.getName());
    return null;
  }
  return new BatchEnvironmentMetaData(jobRepository,jobRepositoryName,jobExecutorName);
}

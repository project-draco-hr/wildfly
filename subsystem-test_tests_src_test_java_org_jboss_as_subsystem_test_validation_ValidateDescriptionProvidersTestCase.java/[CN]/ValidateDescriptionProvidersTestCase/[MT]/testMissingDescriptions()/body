{
  ModelNode description=createSubsystemSkeleton(ModelType.INT,(ModelNode)null);
  description.remove(DESCRIPTION);
  description.get(ATTRIBUTES,ROOT_ATTR).remove(DESCRIPTION);
  description.get(OPERATIONS,ROOT_OP).remove(DESCRIPTION);
  description.get(OPERATIONS,ROOT_OP,REQUEST_PROPERTIES,PARAM).remove(DESCRIPTION);
  description.get(CHILDREN,CHILD_TYPE).remove(DESCRIPTION);
  description.get(CHILDREN,CHILD_TYPE,MODEL_DESCRIPTION,CHILD_NAME).remove(DESCRIPTION);
  description.get(CHILDREN,CHILD_TYPE,MODEL_DESCRIPTION,CHILD_NAME,ATTRIBUTES,CHILD_ATTR).remove(DESCRIPTION);
  description.get(CHILDREN,CHILD_TYPE,MODEL_DESCRIPTION,CHILD_NAME,OPERATIONS,CHILD_OP).remove(DESCRIPTION);
  description.get(CHILDREN,CHILD_TYPE,MODEL_DESCRIPTION,CHILD_NAME,OPERATIONS,CHILD_OP,REQUEST_PROPERTIES,PARAM).remove(DESCRIPTION);
  List<ValidationFailure> errors=validate(description,null);
  Assert.assertEquals(9,errors.size());
  assertFailure(errors.get(0),ROOT_ADDRESS);
  assertAttributeFailure(errors.get(1),ROOT_ADDRESS,ROOT_ATTR);
  assertOperationFailure(errors.get(2),ROOT_ADDRESS,ROOT_OP);
  assertOperationParameterFailure(errors.get(3),ROOT_ADDRESS,ROOT_OP,PARAM);
  assertFailure(errors.get(4),ROOT_ADDRESS);
  assertFailure(errors.get(5),CHILD_ADDRESS);
  assertAttributeFailure(errors.get(6),CHILD_ADDRESS,CHILD_ATTR);
  assertOperationFailure(errors.get(7),CHILD_ADDRESS,CHILD_OP);
  assertOperationParameterFailure(errors.get(8),CHILD_ADDRESS,CHILD_OP,PARAM);
}

{
  if (methodDescription == null)   return null;
  try {
    final ClassLoader classLoader=cls.getClassLoader();
    final String[] types=methodDescription.params;
    final Class<?>[] paramTypes=new Class<?>[types.length];
    for (int i=0; i < types.length; i++) {
      paramTypes[i]=PrimitiveClassLoaderUtil.loadClass(types[i],classLoader);
    }
    if (methodDescription.className != null) {
      final Class<?> declaringClass=Class.forName(methodDescription.className,false,classLoader);
      return declaringClass.getDeclaredMethod(methodDescription.methodName,paramTypes);
    }
    return cls.getMethod(methodDescription.methodName,paramTypes);
  }
 catch (  ClassNotFoundException e) {
    throw new RuntimeException(e);
  }
catch (  NoSuchMethodException e) {
    throw new RuntimeException(e);
  }
}

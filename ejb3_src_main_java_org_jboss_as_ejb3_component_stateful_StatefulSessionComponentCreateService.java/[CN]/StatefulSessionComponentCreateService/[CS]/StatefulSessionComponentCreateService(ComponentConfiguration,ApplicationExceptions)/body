{
  super(componentConfiguration,ejbJarConfiguration);
  final StatefulComponentDescription componentDescription=(StatefulComponentDescription)componentConfiguration.getComponentDescription();
  final InterceptorFactory tcclInterceptorFactory=new ImmediateInterceptorFactory(new TCCLInterceptor(componentConfiguration.getModuleClassLoder()));
  final InterceptorFactory namespaceContextInterceptorFactory=componentConfiguration.getNamespaceContextInterceptorFactory();
  this.afterBeginMethod=componentDescription.getAfterBegin();
  if (componentDescription.getAfterBegin() != null) {
    this.afterBegin=Interceptors.getChainedInterceptorFactory(tcclInterceptorFactory,namespaceContextInterceptorFactory,CurrentInvocationContextInterceptor.FACTORY,invokeMethodOnTarget(componentDescription.getAfterBegin()));
  }
 else {
    this.afterBegin=null;
  }
  this.afterCompletionMethod=componentDescription.getAfterCompletion();
  if (componentDescription.getAfterCompletion() != null) {
    this.afterCompletion=Interceptors.getChainedInterceptorFactory(tcclInterceptorFactory,namespaceContextInterceptorFactory,CurrentInvocationContextInterceptor.FACTORY,invokeMethodOnTarget(componentDescription.getAfterCompletion()));
  }
 else {
    this.afterCompletion=null;
  }
  this.beforeCompletionMethod=componentDescription.getBeforeCompletion();
  if (componentDescription.getBeforeCompletion() != null) {
    this.beforeCompletion=Interceptors.getChainedInterceptorFactory(tcclInterceptorFactory,namespaceContextInterceptorFactory,CurrentInvocationContextInterceptor.FACTORY,invokeMethodOnTarget(componentDescription.getBeforeCompletion()));
  }
 else {
    this.beforeCompletion=null;
  }
  this.statefulTimeout=componentDescription.getStatefulTimeout();
}

{
  super(componentConfiguration,ejbJarConfiguration);
  final StatefulComponentDescription componentDescription=(StatefulComponentDescription)componentConfiguration.getComponentDescription();
  final InterceptorFactory tcclInterceptorFactory=new ImmediateInterceptorFactory(new TCCLInterceptor(componentConfiguration.getModuleClassLoder()));
  final InterceptorFactory namespaceContextInterceptorFactory=componentConfiguration.getNamespaceContextInterceptorFactory();
  this.afterBeginMethod=componentDescription.getAfterBegin();
  this.afterBegin=(this.afterBeginMethod != null) ? Interceptors.getChainedInterceptorFactory(tcclInterceptorFactory,namespaceContextInterceptorFactory,CurrentInvocationContextInterceptor.FACTORY,invokeMethodOnTarget(this.afterBeginMethod)) : null;
  this.afterCompletionMethod=componentDescription.getAfterCompletion();
  this.afterCompletion=(this.afterCompletionMethod != null) ? Interceptors.getChainedInterceptorFactory(tcclInterceptorFactory,namespaceContextInterceptorFactory,CurrentInvocationContextInterceptor.FACTORY,invokeMethodOnTarget(this.afterCompletionMethod)) : null;
  this.beforeCompletionMethod=componentDescription.getBeforeCompletion();
  this.beforeCompletion=(this.beforeCompletionMethod != null) ? Interceptors.getChainedInterceptorFactory(tcclInterceptorFactory,namespaceContextInterceptorFactory,CurrentInvocationContextInterceptor.FACTORY,invokeMethodOnTarget(this.beforeCompletionMethod)) : null;
  this.prePassivate=Interceptors.getChainedInterceptorFactory(componentConfiguration.getPrePassivateInterceptors());
  this.postActivate=Interceptors.getChainedInterceptorFactory(componentConfiguration.getPostActivateInterceptors());
  this.statefulTimeout=componentDescription.getStatefulTimeout();
  this.ejb2XRemoveMethod=Interceptors.getChainedInterceptorFactory(StatefulSessionSynchronizationInterceptor.factory(componentDescription.getTransactionManagementType()),new ImmediateInterceptorFactory(new StatefulRemoveInterceptor(false)),Interceptors.getTerminalInterceptorFactory());
  this.cache=componentDescription.getCache();
  this.marshallingConfiguration=new MarshallingConfiguration();
  this.marshallingConfiguration.setClassResolver(new SimpleClassResolver(componentConfiguration.getModuleClassLoder()));
  this.marshallingConfiguration.setSerializabilityChecker(new StatefulSessionBeanSerializabilityChecker(componentConfiguration.getComponentClass()));
  this.marshallingConfiguration.setClassTable(new StatefulSessionBeanClassTable());
  this.serializableInterceptorContextKeys=componentConfiguration.getInterceptorContextKeys();
}

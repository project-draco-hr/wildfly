{
  try {
    Object value=finderMethod.invoke(ctx.getComponent().getCache().get(ctx.getPrimaryKey()),args);
    if (value instanceof Enumeration) {
      Enumeration enumeration=(Enumeration)value;
      List result=new ArrayList();
      while (enumeration.hasMoreElements()) {
        result.add(enumeration.nextElement());
      }
      cacheResults(result);
      return EntityProxyFactory.Util.getEntityCollection(factory,result);
    }
 else     if (value instanceof Collection) {
      List result;
      if (value instanceof List)       result=(List)value;
 else       result=new ArrayList((Collection)value);
      cacheResults(result);
      return EntityProxyFactory.Util.getEntityCollection(factory,result);
    }
 else {
      return Collections.singleton(factory.getEntityObject(value));
    }
  }
 catch (  IllegalAccessException e) {
    log.error("Error invoking custom finder " + finderMethod.getName(),e);
    throw new FinderException("Unable to access finder implementation: " + finderMethod.getName());
  }
catch (  IllegalArgumentException e) {
    log.error("Error invoking custom finder " + finderMethod.getName(),e);
    throw new FinderException("Illegal arguments for finder " + "implementation: " + finderMethod.getName());
  }
catch (  InvocationTargetException e) {
    Throwable ex=e.getTargetException();
    if (ex instanceof FinderException) {
      throw (FinderException)ex;
    }
 else {
      throw new FinderException("Errror invoking cutom finder " + finderMethod.getName() + ": "+ ex);
    }
  }
}

{
  try {
    Object value;
    final EntityBeanComponentInstance componentInstance=ctx.getComponent().getCache().get(ctx.getPrimaryKey());
    try {
      value=finderMethod.invoke(componentInstance,args);
    }
  finally {
      ctx.getComponent().getCache().release(componentInstance,true);
    }
    if (value instanceof Enumeration) {
      Enumeration enumeration=(Enumeration)value;
      List result=new ArrayList();
      while (enumeration.hasMoreElements()) {
        result.add(enumeration.nextElement());
      }
      cacheResults(result);
      return EntityProxyFactory.Util.getEntityCollection(factory,result);
    }
 else     if (value instanceof Collection) {
      List result;
      if (value instanceof List)       result=(List)value;
 else       result=new ArrayList((Collection)value);
      cacheResults(result);
      return EntityProxyFactory.Util.getEntityCollection(factory,result);
    }
 else {
      return Collections.singleton(value != null ? factory.getEntityObject(value) : null);
    }
  }
 catch (  IllegalAccessException e) {
    throw CmpMessages.MESSAGES.unableToAccessFinder(finderMethod.getName());
  }
catch (  IllegalArgumentException e) {
    throw CmpMessages.MESSAGES.illegalFinderArgument(finderMethod.getName());
  }
catch (  InvocationTargetException e) {
    Throwable ex=e.getTargetException();
    if (ex instanceof FinderException) {
      throw (FinderException)ex;
    }
 else {
      throw CmpMessages.MESSAGES.errorInvokingFinder(finderMethod.getName(),e);
    }
  }
}

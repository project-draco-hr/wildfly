{
  try {
    final PathAddress ejb3SubsystemAddress=PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM,EJB3Extension.SUBSYSTEM_NAME));
    final ModelNode defaultEntityBeanInstancePool=new ModelNode();
    defaultEntityBeanInstancePool.get(OP).set(WRITE_ATTRIBUTE_OPERATION);
    defaultEntityBeanInstancePool.get(OP_ADDR).set(ejb3SubsystemAddress.toModelNode());
    defaultEntityBeanInstancePool.get(NAME).set(EJB3SubsystemModel.DEFAULT_ENTITY_BEAN_INSTANCE_POOL);
    defaultEntityBeanInstancePool.get(VALUE).set(poolName);
    execute(controllerClient,defaultEntityBeanInstancePool);
    final ModelNode defaultEntityBeanOptimisticLocking=new ModelNode();
    defaultEntityBeanOptimisticLocking.get(OP).set(WRITE_ATTRIBUTE_OPERATION);
    defaultEntityBeanOptimisticLocking.get(OP_ADDR).set(ejb3SubsystemAddress.toModelNode());
    defaultEntityBeanOptimisticLocking.get(NAME).set(EJB3SubsystemModel.DEFAULT_ENTITY_BEAN_OPTIMISTIC_LOCKING);
    defaultEntityBeanOptimisticLocking.get(VALUE).set(optimisticLocking);
    execute(controllerClient,defaultEntityBeanOptimisticLocking);
  }
 catch (  IOException ioe) {
    throw new RuntimeException(ioe);
  }
}

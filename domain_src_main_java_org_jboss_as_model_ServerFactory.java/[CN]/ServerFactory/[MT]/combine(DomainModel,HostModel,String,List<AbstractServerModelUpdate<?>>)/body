{
  final ServerElement serverElement=hostModel.getServer(serverName);
  if (serverElement == null) {
    throw new IllegalArgumentException("Host model does not contain a server named '" + serverName + "'");
  }
  final String serverGroupName=serverElement.getServerGroup();
  final ServerGroupElement serverGroup=domainModel.getServerGroup(serverGroupName);
  if (serverGroup == null) {
    throw new IllegalArgumentException("Domain model does not contain a server group named '" + serverGroupName + "'");
  }
  final String profileName=serverGroup.getProfileName();
  final ProfileElement leafProfile=domainModel.getProfile(profileName);
  if (profileName == null) {
    throw new IllegalArgumentException("Domain model does not contain a profile named '" + profileName + "'");
  }
  Set<String> unspecifiedInterfaces=new HashSet<String>();
  Map<String,InterfaceElement> interfaces=new HashMap<String,InterfaceElement>();
  for (  InterfaceElement ie : domainModel.getInterfaces()) {
    if (ie.isFullySpecified())     interfaces.put(ie.getName(),ie);
 else     unspecifiedInterfaces.add(ie.getName());
  }
  for (  InterfaceElement ie : hostModel.getInterfaces()) {
    interfaces.put(ie.getName(),ie);
    unspecifiedInterfaces.remove(ie.getName());
  }
  for (  InterfaceElement ie : serverElement.getInterfaces()) {
    interfaces.put(ie.getName(),ie);
    unspecifiedInterfaces.remove(ie.getName());
  }
  for (  InterfaceElement interfaceElement : interfaces.values()) {
    list.add(new ServerModelInterfaceAdd(new InterfaceAdd(interfaceElement)));
  }
  SocketBindingGroupRefElement bindingRef=serverElement.getSocketBindingGroup();
  if (bindingRef == null) {
    bindingRef=serverGroup.getSocketBindingGroup();
  }
  SocketBindingGroupElement domainBindings=domainModel.getSocketBindingGroup(bindingRef.getRef());
  if (domainBindings == null) {
    domainBindings=new SocketBindingGroupElement(domainBindings);
  }
  int portOffset=bindingRef.getPortOffset();
  final Set<String> extensionNames=new LinkedHashSet<String>();
  for (  String name : domainModel.getExtensions()) {
    extensionNames.add(name);
  }
  for (  String name : hostModel.getExtensions()) {
    extensionNames.add(name);
  }
  for (  String name : extensionNames) {
    list.add(new ServerExtensionAdd(name));
  }
  for (  AbstractSubsystemElement<? extends AbstractSubsystemElement<?>> subsystemElement : leafProfile.getSubsystems()) {
    processSubsystem((AbstractSubsystemElement)subsystemElement,list);
  }
  for (  ServerGroupDeploymentElement element : serverGroup.getDeployments()) {
    final ServerModelDeploymentAdd add=new ServerModelDeploymentAdd(element.getUniqueName(),element.getRuntimeName(),element.getSha1Hash(),element.isStart());
    list.add(add);
  }
}

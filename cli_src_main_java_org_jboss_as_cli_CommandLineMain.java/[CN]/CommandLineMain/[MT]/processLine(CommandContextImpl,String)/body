{
  if (line.isEmpty()) {
    return;
  }
  if (isOperation(line)) {
    cmdCtx.setArgs(null,line);
    if (cmdCtx.isBatchMode()) {
      DefaultOperationRequestBuilder builder=new DefaultOperationRequestBuilder(cmdCtx.getPrefix());
      try {
        cmdCtx.getOperationRequestParser().parse(line,builder);
        ModelNode request=builder.buildRequest();
        StringBuilder op=new StringBuilder();
        op.append(cmdCtx.getPrefixFormatter().format(builder.getAddress()));
        op.append(line.substring(line.indexOf(':')));
        cmdCtx.getBatchManager().getActiveBatch().getCommands().add(new DefaultBatchedCommand(op.toString(),request));
      }
 catch (      CommandFormatException e) {
        cmdCtx.printLine(e.getLocalizedMessage());
      }
    }
 else {
      cmdCtx.operationHandler.handle(cmdCtx);
    }
  }
 else {
    String cmd=line;
    String cmdArgs=null;
    for (int i=0; i < cmd.length(); ++i) {
      if (Character.isWhitespace(cmd.charAt(i))) {
        cmdArgs=cmd.substring(i + 1).trim();
        cmd=cmd.substring(0,i);
        break;
      }
    }
    cmdCtx.setArgs(cmd,cmdArgs);
    CommandHandler handler=cmdRegistry.getCommandHandler(cmd.toLowerCase());
    if (handler != null) {
      if (cmdCtx.isBatchMode() && handler.isBatchMode()) {
        if (!(handler instanceof OperationCommand)) {
          cmdCtx.printLine("The command is not allowed in a batch.");
        }
 else {
          try {
            ModelNode request=((OperationCommand)handler).buildRequest(cmdCtx);
            BatchedCommand batchedCmd=new DefaultBatchedCommand(line,request);
            cmdCtx.getBatchManager().getActiveBatch().add(batchedCmd);
          }
 catch (          OperationFormatException e) {
            cmdCtx.printLine("Failed to add to batch: " + e.getLocalizedMessage());
          }
        }
      }
 else {
        handler.handle(cmdCtx);
      }
    }
 else {
      cmdCtx.printLine("Unexpected command '" + line + "'. Type 'help' for the list of supported commands.");
    }
  }
}

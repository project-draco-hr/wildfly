{
  final int count=reader.getAttributeCount();
  if (count != 0) {
    throw ParseUtils.unexpectedAttribute(reader,0);
  }
  while (reader.hasNext()) {
switch (reader.nextTag()) {
case XMLStreamConstants.END_ELEMENT:
{
        return;
      }
case XMLStreamConstants.START_ELEMENT:
{
      final Element element=Element.of(reader.getName());
switch (element) {
case MAX_ACTIVE_SESSIONS:
        final String value=getElementText(reader,propertyReplacer);
      result.setMaxActiveSessions(Integer.parseInt(value));
    break;
case REPLICATION_CONFIG:
  result.setReplicationConfig(ReplicationConfigParser.parse(reader,propertyReplacer));
break;
case SESSION_CONFIG:
result.setSessionConfig(SessionConfigMetaDataParser.parse(reader,propertyReplacer));
break;
default :
throw ParseUtils.unexpectedElement(reader);
}
break;
}
default :
{
throw ParseUtils.unexpectedElement(reader);
}
}
}
throw endOfDocument(reader.getLocation());
}

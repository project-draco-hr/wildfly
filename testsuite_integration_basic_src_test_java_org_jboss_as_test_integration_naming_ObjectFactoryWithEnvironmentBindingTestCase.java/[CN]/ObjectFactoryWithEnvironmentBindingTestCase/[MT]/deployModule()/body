{
  File testModuleRoot=new File(getModulesHome(),MODULE_NAME);
  if (testModuleRoot.exists()) {
    throw new IllegalArgumentException(testModuleRoot + " already exists");
  }
  File testModuleMainDir=new File(testModuleRoot,"main");
  if (!testModuleMainDir.mkdirs()) {
    throw new IllegalArgumentException("Could not create " + testModuleMainDir);
  }
  Archive<?> moduleJar=ShrinkWrap.create(JavaArchive.class,MODULE_JAR_NAME).addClass(ObjectFactoryWithEnvironmentBinding.class).addClass(ObjectFactoryWithEnvironmentBindingTestCase.class);
  final InputStream moduleJarInputStream=moduleJar.as(ZipExporter.class).exportAsInputStream();
  try {
    copyFile(new File(testModuleMainDir,MODULE_JAR_NAME),moduleJarInputStream);
  }
  finally {
    IoUtils.safeClose(moduleJarInputStream);
  }
  URL moduleXmlURL=this.getClass().getResource(ObjectFactoryWithEnvironmentBindingTestCase.class.getSimpleName() + "-module.xml");
  if (moduleXmlURL == null) {
    throw new IllegalStateException("Could not find module.xml");
  }
  copyFile(new File(testModuleMainDir,"module.xml"),moduleXmlURL.openStream());
}

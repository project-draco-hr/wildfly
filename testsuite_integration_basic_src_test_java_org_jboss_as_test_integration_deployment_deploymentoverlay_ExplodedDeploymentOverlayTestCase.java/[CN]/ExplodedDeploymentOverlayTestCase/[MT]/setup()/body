{
  ModelNode op=new ModelNode();
  op.get(ModelDescriptionConstants.OP_ADDR).set(ModelDescriptionConstants.DEPLOYMENT_OVERLAY,TEST_OVERLAY);
  op.get(ModelDescriptionConstants.OP).set(ModelDescriptionConstants.ADD);
  ManagementOperations.executeOperation(managementClient.getControllerClient(),op);
  op=new ModelNode();
  ModelNode addr=new ModelNode();
  addr.add(ModelDescriptionConstants.DEPLOYMENT_OVERLAY,TEST_OVERLAY);
  addr.add(ModelDescriptionConstants.CONTENT,"WEB-INF/web.xml");
  op.get(ModelDescriptionConstants.OP_ADDR).set(addr);
  op.get(ModelDescriptionConstants.OP).set(ModelDescriptionConstants.ADD);
  op.get(ModelDescriptionConstants.CONTENT).get(ModelDescriptionConstants.INPUT_STREAM_INDEX).set(0);
  OperationBuilder builder=new OperationBuilder(op,true);
  builder.addInputStream(ExplodedDeploymentOverlayTestCase.class.getResourceAsStream("override.xml"));
  ManagementOperations.executeOperation(managementClient.getControllerClient(),builder.build());
  op=new ModelNode();
  addr=new ModelNode();
  addr.add(ModelDescriptionConstants.DEPLOYMENT_OVERLAY,TEST_OVERLAY);
  addr.add(ModelDescriptionConstants.DEPLOYMENT,"exploded-test.war");
  op.get(ModelDescriptionConstants.OP_ADDR).set(addr);
  op.get(ModelDescriptionConstants.OP).set(ModelDescriptionConstants.ADD);
  ManagementOperations.executeOperation(managementClient.getControllerClient(),op);
  op=new ModelNode();
  op.get(ModelDescriptionConstants.OP_ADDR).set(ModelDescriptionConstants.DEPLOYMENT_OVERLAY,TEST_WILDCARD);
  op.get(ModelDescriptionConstants.OP).set(ModelDescriptionConstants.ADD);
  ManagementOperations.executeOperation(managementClient.getControllerClient(),op);
  op=new ModelNode();
  addr=new ModelNode();
  addr.add(ModelDescriptionConstants.DEPLOYMENT_OVERLAY,TEST_WILDCARD);
  addr.add(ModelDescriptionConstants.CONTENT,"WEB-INF/web.xml");
  op.get(ModelDescriptionConstants.OP_ADDR).set(addr);
  op.get(ModelDescriptionConstants.OP).set(ModelDescriptionConstants.ADD);
  op.get(ModelDescriptionConstants.CONTENT).get(ModelDescriptionConstants.BYTES).set(FileUtils.readFile(ExplodedDeploymentOverlayTestCase.class,"wildcard-override.xml").getBytes());
  ManagementOperations.executeOperation(managementClient.getControllerClient(),op);
  op=new ModelNode();
  addr=new ModelNode();
  addr.add(ModelDescriptionConstants.DEPLOYMENT_OVERLAY,TEST_WILDCARD);
  addr.add(ModelDescriptionConstants.CONTENT,"WEB-INF/classes/wildcard-new-file");
  op.get(ModelDescriptionConstants.OP_ADDR).set(addr);
  op.get(ModelDescriptionConstants.OP).set(ModelDescriptionConstants.ADD);
  op.get(ModelDescriptionConstants.CONTENT).get(ModelDescriptionConstants.INPUT_STREAM_INDEX).set(0);
  builder=new OperationBuilder(op,true);
  builder.addInputStream(ExplodedDeploymentOverlayTestCase.class.getResourceAsStream("wildcard-new-file"));
  ManagementOperations.executeOperation(managementClient.getControllerClient(),builder.build());
  op=new ModelNode();
  addr=new ModelNode();
  addr.add(ModelDescriptionConstants.DEPLOYMENT_OVERLAY,TEST_WILDCARD);
  addr.add(ModelDescriptionConstants.DEPLOYMENT,"*.war");
  op.get(ModelDescriptionConstants.OP_ADDR).set(addr);
  op.get(ModelDescriptionConstants.OP).set(ModelDescriptionConstants.ADD);
  ManagementOperations.executeOperation(managementClient.getControllerClient(),op);
  addr=new ModelNode();
  addr.add(ModelDescriptionConstants.DEPLOYMENT,"exploded-test.war");
  op=new ModelNode();
  op.get(ModelDescriptionConstants.OP_ADDR).set(addr);
  op.get(ModelDescriptionConstants.OP).set(ModelDescriptionConstants.READ_ATTRIBUTE_OPERATION);
  op.get(ModelDescriptionConstants.NAME).set("content[0]");
  ModelNode result=ManagementOperations.executeOperation(managementClient.getControllerClient(),op);
  if (!result.hasDefined(ModelDescriptionConstants.ARCHIVE) || result.get(ModelDescriptionConstants.ARCHIVE).asBoolean(true)) {
    op=new ModelNode();
    op.get(ModelDescriptionConstants.OP_ADDR).set(addr);
    op.get(ModelDescriptionConstants.OP).set(ModelDescriptionConstants.UNDEPLOY);
    ManagementOperations.executeOperation(managementClient.getControllerClient(),op);
    op=new ModelNode();
    op.get(ModelDescriptionConstants.OP).set("explode");
    op.get(ModelDescriptionConstants.OP_ADDR).set(addr);
    ManagementOperations.executeOperation(managementClient.getControllerClient(),op);
    op=new ModelNode();
    op.get(ModelDescriptionConstants.OP_ADDR).set(addr);
    op.get(ModelDescriptionConstants.OP).set(ModelDescriptionConstants.DEPLOY);
    ManagementOperations.executeOperation(managementClient.getControllerClient(),op);
  }
}

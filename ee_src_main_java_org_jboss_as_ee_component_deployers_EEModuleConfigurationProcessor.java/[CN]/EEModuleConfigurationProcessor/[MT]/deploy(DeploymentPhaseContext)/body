{
  final DeploymentUnit deploymentUnit=phaseContext.getDeploymentUnit();
  final EEModuleDescription moduleDescription=deploymentUnit.getAttachment(Attachments.EE_MODULE_DESCRIPTION);
  final Module module=deploymentUnit.getAttachment(org.jboss.as.server.deployment.Attachments.MODULE);
  final DeploymentClassIndex classIndex=deploymentUnit.getAttachment(org.jboss.as.server.deployment.Attachments.CLASS_INDEX);
  if (moduleDescription == null) {
    return;
  }
  if (module == null) {
    return;
  }
  final EEModuleConfiguration moduleConfiguration=new EEModuleConfiguration(moduleDescription,phaseContext,module);
  deploymentUnit.putAttachment(Attachments.EE_MODULE_CONFIGURATION,moduleConfiguration);
  final Collection<ComponentDescription> componentDescriptions=moduleDescription.getComponentDescriptions();
  if (componentDescriptions != null) {
    for (    ComponentDescription componentDescription : componentDescriptions) {
      if (componentDescription.isInstall()) {
        logger.debug("Configuring component class: " + componentDescription.getComponentClassName() + " named "+ componentDescription.getComponentName());
        final ComponentConfiguration componentConfiguration;
        try {
          componentConfiguration=componentDescription.createConfiguration(classIndex.classIndex(componentDescription.getComponentClassName()));
        }
 catch (        ClassNotFoundException e) {
          throw new DeploymentUnitProcessingException("Could not load component class " + componentDescription.getComponentClassName(),e);
        }
        for (        ComponentConfigurator componentConfigurator : componentDescription.getConfigurators()) {
          if (componentDescription.isInstall()) {
            componentConfigurator.configure(phaseContext,componentDescription,componentConfiguration);
          }
        }
        if (componentDescription.isInstall()) {
          moduleConfiguration.addComponentConfiguration(componentConfiguration);
        }
      }
    }
  }
}

{
  final DeploymentUnit deploymentUnit=phaseContext.getDeploymentUnit();
  final EEModuleDescription moduleDescription=deploymentUnit.getAttachment(Attachments.EE_MODULE_DESCRIPTION);
  final Module module=deploymentUnit.getAttachment(org.jboss.as.server.deployment.Attachments.MODULE);
  final DeploymentClassIndex classIndex=deploymentUnit.getAttachment(org.jboss.as.server.deployment.Attachments.CLASS_INDEX);
  if (moduleDescription == null) {
    return;
  }
  if (module == null) {
    return;
  }
  final Set<ServiceName> failed=new HashSet<ServiceName>();
  final EEModuleConfiguration moduleConfiguration=new EEModuleConfiguration(moduleDescription);
  deploymentUnit.putAttachment(Attachments.EE_MODULE_CONFIGURATION,moduleConfiguration);
  final ClassLoader oldCl=SecurityActions.getContextClassLoader();
  try {
    SecurityActions.setContextClassLoader(module.getClassLoader());
    final Iterator<ComponentDescription> iterator=moduleDescription.getComponentDescriptions().iterator();
    while (iterator.hasNext()) {
      final ComponentDescription componentDescription=iterator.next();
      ROOT_LOGGER.debugf("Configuring component class: %s named %s",componentDescription.getComponentClassName(),componentDescription.getComponentName());
      final ComponentConfiguration componentConfiguration;
      try {
        componentConfiguration=componentDescription.createConfiguration(classIndex.classIndex(componentDescription.getComponentClassName()),module.getClassLoader(),module.getModuleLoader());
        for (        final ComponentConfigurator componentConfigurator : componentDescription.getConfigurators()) {
          componentConfigurator.configure(phaseContext,componentDescription,componentConfiguration);
        }
        moduleConfiguration.addComponentConfiguration(componentConfiguration);
      }
 catch (      Exception e) {
        if (componentDescription.isOptional()) {
          ROOT_LOGGER.componentInstallationFailure(e,componentDescription.getComponentName());
          failed.add(componentDescription.getStartServiceName());
          failed.add(componentDescription.getCreateServiceName());
          failed.add(componentDescription.getServiceName());
          iterator.remove();
        }
 else {
          throw MESSAGES.cannotConfigureComponent(e,componentDescription.getComponentName());
        }
      }
    }
    deploymentUnit.putAttachment(Attachments.FAILED_COMPONENTS,Collections.synchronizedSet(failed));
  }
  finally {
    SecurityActions.setContextClassLoader(oldCl);
  }
}

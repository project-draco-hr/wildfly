{
  schema.flush();
  int count=offset;
  Collection result;
  Connection con=null;
  PreparedStatement ps=null;
  ResultSet rs=null;
  boolean throwRuntimeExceptions=entity.getMetaData().getThrowRuntimeExceptions();
  if (throwRuntimeExceptions) {
    try {
      con=entity.getDataSource().getConnection();
    }
 catch (    SQLException sqle) {
      javax.ejb.EJBException ejbe=new javax.ejb.EJBException("Could not get a connection; " + sqle);
      ejbe.initCause(sqle);
      throw ejbe;
    }
  }
  try {
    if (log.isDebugEnabled()) {
      log.debug("executing: " + sql);
    }
    if (!throwRuntimeExceptions) {
      con=entity.getDataSource().getConnection();
    }
    ps=con.prepareStatement(sql);
    if (params != null) {
      for (int i=0; i < params.length; i++) {
        params[i].set(log,ps,i + 1,args);
      }
    }
    rs=ps.executeQuery();
    while (count > 0 && rs.next()) {
      count--;
    }
    count=limit;
  }
 catch (  Exception e) {
    JDBCUtil.safeClose(rs);
    JDBCUtil.safeClose(ps);
    JDBCUtil.safeClose(con);
    log.error("Finder failed: " + e.getMessage(),e);
    FinderException fe=new FinderException(e.getMessage());
    fe.initCause(e);
    throw fe;
  }
  result=collectionStrategy.readResultSet(con,ps,rs,limit,count);
  return result;
}

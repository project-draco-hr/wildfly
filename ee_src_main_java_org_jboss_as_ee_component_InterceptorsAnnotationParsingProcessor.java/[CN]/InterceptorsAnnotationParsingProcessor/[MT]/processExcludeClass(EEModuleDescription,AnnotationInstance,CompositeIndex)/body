{
  final AnnotationTarget target=annotation.target();
  if (target instanceof MethodInfo) {
    final MethodInfo methodInfo=MethodInfo.class.cast(target);
    final Collection<ComponentDescription> components=this.getApplicableComponents(index,methodInfo.declaringClass(),eeModuleDescription);
    for (    ComponentDescription component : components) {
      component.excludeClassInterceptors(methodIdentifierFromMethodInfo(methodInfo));
    }
  }
 else {
    throw new DeploymentUnitProcessingException("@ExcludeDefaultInterceptors annotation is only allowed on methods");
  }
}

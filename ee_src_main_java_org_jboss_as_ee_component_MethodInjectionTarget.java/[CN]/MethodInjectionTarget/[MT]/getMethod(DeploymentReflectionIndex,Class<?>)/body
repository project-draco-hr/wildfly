{
  final ClassReflectionIndex<?> classIndex=reflectionIndex.getClassIndex(clazz);
  Collection<Method> methods=null;
  final String paramType=getDeclaredValueClassName();
  final String name=getName();
  final String className=getClassName();
  if (paramType != null) {
    methods=ClassReflectionIndexUtil.findMethods(reflectionIndex,classIndex,name,paramType);
  }
  if (methods == null || methods.isEmpty()) {
    methods=ClassReflectionIndexUtil.findAllMethods(reflectionIndex,classIndex,name,1);
  }
  Iterator<Method> iterator=methods.iterator();
  if (!iterator.hasNext()) {
    throw MESSAGES.methodNotFound(name,paramType,className);
  }
  Method method=iterator.next();
  if (iterator.hasNext()) {
    throw MESSAGES.multipleMethodsFound(name,paramType,className);
  }
  return method;
}

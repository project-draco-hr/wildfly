{
  final List<AnnotationTarget> interceptorTargets=beanClassAnnotations.get(INTERCEPTORS_ANNOTATION_NAME);
  if (interceptorTargets == null || interceptorTargets.isEmpty()) {
    return Collections.emptyList();
  }
  final List<InterceptorConfiguration> interceptorConfigurations=new ArrayList<InterceptorConfiguration>(interceptorTargets.size());
  final Interceptors interceptorsAnnotation=beanClass.getAnnotation(Interceptors.class);
  final Class<?>[] interceptorTypes=interceptorsAnnotation.value();
  for (  Class<?> interceptorType : interceptorTypes) {
    final ClassInfo classInfo=index.getClassByName(DotName.createSimple(interceptorType.getName()));
    if (classInfo == null)     continue;
    final Map<DotName,List<AnnotationTarget>> interceptorClassAnnotations=classInfo.annotations();
    final Method aroundInvokeMethod=getSingleAnnotatedMethod(interceptorType,classInfo,AroundInvoke.class,true);
    final List<ResourceConfiguration> resourceConfigurations=processResources(interceptorClassAnnotations,interceptorType);
    interceptorConfigurations.add(new InterceptorConfiguration(interceptorType,aroundInvokeMethod,resourceConfigurations));
  }
  return interceptorConfigurations;
}

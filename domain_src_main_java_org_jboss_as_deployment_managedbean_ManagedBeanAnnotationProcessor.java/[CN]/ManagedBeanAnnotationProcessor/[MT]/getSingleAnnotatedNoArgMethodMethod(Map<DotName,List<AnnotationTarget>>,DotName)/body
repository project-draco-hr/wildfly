{
  final List<AnnotationTarget> targets=classAnnotations.get(annotationName);
  if (targets == null || targets.isEmpty()) {
    return null;
  }
  if (targets.size() > 1) {
    throw new DeploymentUnitProcessingException("Only one method may be annotated with " + annotationName + " per managed bean.",null);
  }
  final AnnotationTarget target=targets.get(0);
  if (!(target instanceof MethodInfo)) {
    throw new DeploymentUnitProcessingException(annotationName + " is only valid on method targets.",null);
  }
  final MethodInfo methodInfo=MethodInfo.class.cast(target);
  if (methodInfo.args().length > 0) {
    throw new DeploymentUnitProcessingException(annotationName + " methods can not have arguments",null);
  }
  return methodInfo.name();
}

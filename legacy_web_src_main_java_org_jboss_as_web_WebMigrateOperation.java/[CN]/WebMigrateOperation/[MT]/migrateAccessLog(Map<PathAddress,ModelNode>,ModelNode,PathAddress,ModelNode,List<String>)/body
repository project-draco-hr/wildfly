{
  PathAddress newAddress=pathAddress(UndertowExtension.SUBSYSTEM_PATH,DEFAULT_SERVER_PATH,pathElement(Constants.HOST,address.getElement(address.size() - 2).getValue()),UndertowExtension.PATH_ACCESS_LOG);
  ModelNode add=createAddOperation(newAddress);
  add.get(Constants.PATTERN).set(newAddOp.get(WebAccessLogDefinition.PATTERN.getName()).clone());
  add.get(Constants.PREFIX).set(newAddOp.get(WebAccessLogDefinition.PREFIX.getName()).clone());
  add.get(Constants.ROTATE).set(newAddOp.get(WebAccessLogDefinition.ROTATE.getName()).clone());
  if (newAddOp.hasDefined(WebAccessLogDefinition.RESOLVE_HOSTS.getName())) {
    warnings.add(WebLogger.ROOT_LOGGER.couldNotMigrateResource(WebAccessLogDefinition.RESOLVE_HOSTS.getName(),pathAddress(newAddOp.get(ADDRESS))));
  }
  if (newAddOp.hasDefined(WebAccessLogDefinition.EXTENDED.getName())) {
    warnings.add(WebLogger.ROOT_LOGGER.couldNotMigrateResource(WebAccessLogDefinition.EXTENDED.getName(),pathAddress(newAddOp.get(ADDRESS))));
  }
  ModelNode directory=findResource(pathAddress(pathAddress(newAddOp.get(ADDRESS)),WebExtension.DIRECTORY_PATH),legacyAddOps);
  if (directory != null) {
    newAddOp.get(Constants.DIRECTORY).set(directory.get(PATH));
    newAddOp.get(Constants.RELATIVE_TO).set(directory.get(RELATIVE_TO));
  }
  newAddOperations.put(newAddress,add);
}

{
  PathAddress newAddress=pathAddress(UndertowExtension.SUBSYSTEM_PATH,DEFAULT_SERVER_PATH,pathElement(Constants.HOST,address.getElement(address.size() - 2).getValue()),UndertowExtension.PATH_SSO);
  ModelNode add=createAddOperation(newAddress);
  add.get(Constants.DOMAIN).set(newAddOp.get(WebSSODefinition.DOMAIN.getName()).clone());
  add.get(Constants.HTTP_ONLY).set(newAddOp.get(WebSSODefinition.HTTP_ONLY.getName()).clone());
  if (newAddOp.hasDefined(WebSSODefinition.CACHE_CONTAINER.getName())) {
    warnings.add(WebLogger.ROOT_LOGGER.couldNotMigrateResource(WebSSODefinition.CACHE_CONTAINER.getName(),pathAddress(newAddOp.get(ADDRESS))));
  }
  if (newAddOp.hasDefined(WebSSODefinition.REAUTHENTICATE.getName())) {
    warnings.add(WebLogger.ROOT_LOGGER.couldNotMigrateResource(WebSSODefinition.REAUTHENTICATE.getName(),pathAddress(newAddOp.get(ADDRESS))));
  }
  if (newAddOp.hasDefined(WebSSODefinition.CACHE_NAME.getName())) {
    warnings.add(WebLogger.ROOT_LOGGER.couldNotMigrateResource(WebSSODefinition.CACHE_NAME.getName(),pathAddress(newAddOp.get(ADDRESS))));
  }
  newAddOperations.put(newAddress,add);
}

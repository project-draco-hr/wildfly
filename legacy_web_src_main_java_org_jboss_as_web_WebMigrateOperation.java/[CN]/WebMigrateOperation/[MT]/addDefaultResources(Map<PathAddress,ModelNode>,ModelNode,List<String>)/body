{
  PathAddress address=pathAddress(pathElement(SUBSYSTEM,UndertowExtension.SUBSYSTEM_NAME),DEFAULT_SERVER_PATH);
  ModelNode add=createAddOperation(address);
  ModelNode defaultSessionTimeout=null;
  ModelNode directoryListing=null;
  ModelNode sendfile=null;
  ModelNode fileEncoding=null;
  ModelNode readOnly=null;
  ModelNode webdav=null;
  ModelNode secret=null;
  ModelNode maxDepth=null;
  ModelNode disabled=null;
  for (  ModelNode legacyAddOp : legacyModelDescription.get(RESULT).asList()) {
    final PathAddress la=pathAddress(legacyAddOp.get(ADDRESS));
    if (la.equals(pathAddress(WebExtension.SUBSYSTEM_PATH))) {
      ModelNode defaultHost=legacyAddOp.get(WebDefinition.DEFAULT_VIRTUAL_SERVER.getName());
      if (defaultHost.isDefined()) {
        add.get(Constants.DEFAULT_HOST).set(defaultHost.clone());
      }
      ModelNode sessionTimeout=legacyAddOp.get(WebDefinition.DEFAULT_SESSION_TIMEOUT.getName());
      if (sessionTimeout.isDefined()) {
        defaultSessionTimeout=sessionTimeout;
      }
    }
 else     if (la.equals(pathAddress(WebExtension.SUBSYSTEM_PATH,WebExtension.STATIC_RESOURCES_PATH))) {
      ModelNode node=legacyAddOp.get(WebStaticResources.LISTINGS.getName());
      if (node.isDefined()) {
        directoryListing=node;
      }
      node=legacyAddOp.get(WebStaticResources.SENDFILE.getName());
      if (node.isDefined()) {
        warnings.add(WebLogger.ROOT_LOGGER.couldNotMigrateResource(WebStaticResources.SENDFILE.getName(),pathAddress(legacyAddOp.get(ADDRESS))));
        sendfile=node;
      }
      node=legacyAddOp.get(WebStaticResources.FILE_ENCODING.getName());
      if (node.isDefined()) {
        warnings.add(WebLogger.ROOT_LOGGER.couldNotMigrateResource(WebStaticResources.FILE_ENCODING.getName(),pathAddress(legacyAddOp.get(ADDRESS))));
        fileEncoding=node;
      }
      node=legacyAddOp.get(WebStaticResources.READ_ONLY.getName());
      if (node.isDefined()) {
        warnings.add(WebLogger.ROOT_LOGGER.couldNotMigrateResource(WebStaticResources.READ_ONLY.getName(),pathAddress(legacyAddOp.get(ADDRESS))));
        readOnly=node;
      }
      node=legacyAddOp.get(WebStaticResources.WEBDAV.getName());
      if (node.isDefined()) {
        warnings.add(WebLogger.ROOT_LOGGER.couldNotMigrateResource(WebStaticResources.WEBDAV.getName(),pathAddress(legacyAddOp.get(ADDRESS))));
        webdav=node;
      }
      node=legacyAddOp.get(WebStaticResources.SECRET.getName());
      if (node.isDefined()) {
        warnings.add(WebLogger.ROOT_LOGGER.couldNotMigrateResource(WebStaticResources.SECRET.getName(),pathAddress(legacyAddOp.get(ADDRESS))));
        secret=node;
      }
      node=legacyAddOp.get(WebStaticResources.MAX_DEPTH.getName());
      if (node.isDefined()) {
        warnings.add(WebLogger.ROOT_LOGGER.couldNotMigrateResource(WebStaticResources.MAX_DEPTH.getName(),pathAddress(legacyAddOp.get(ADDRESS))));
        maxDepth=node;
      }
      node=legacyAddOp.get(WebStaticResources.DISABLED.getName());
      if (node.isDefined()) {
        warnings.add(WebLogger.ROOT_LOGGER.couldNotMigrateResource(WebStaticResources.DISABLED.getName(),pathAddress(legacyAddOp.get(ADDRESS))));
        disabled=node;
      }
    }
  }
  migrationOperations.put(address,add);
  address=pathAddress(pathElement(SUBSYSTEM,UndertowExtension.SUBSYSTEM_NAME),pathElement(Constants.BUFFER_CACHE,"default"));
  add=createAddOperation(address);
  migrationOperations.put(address,add);
  address=pathAddress(pathElement(SUBSYSTEM,UndertowExtension.SUBSYSTEM_NAME),pathElement(Constants.SERVLET_CONTAINER,"default"));
  add=createAddOperation(address);
  if (defaultSessionTimeout != null) {
    add.get(Constants.DEFAULT_SESSION_TIMEOUT).set(defaultSessionTimeout.clone());
  }
  if (directoryListing != null) {
    add.get(Constants.DIRECTORY_LISTING).set(directoryListing);
  }
  migrationOperations.put(address,add);
}

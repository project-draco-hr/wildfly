{
  final String name=context.getCurrentAddressValue();
  final ServiceTarget serviceTarget=context.getServiceTarget();
  final ServiceName serviceName=MessagingServices.getActiveMQServiceName(context.getCurrentAddress());
  final ModelNode selectorNode=SELECTOR.resolveModelAttribute(context,model);
  final boolean durable=DURABLE.resolveModelAttribute(context,model).asBoolean();
  final String selector=selectorNode.isDefined() ? selectorNode.asString() : null;
  Service<Queue> queueService=JMSQueueService.installService(name,serviceTarget,serviceName,selector,durable,new String[0]);
  final ServiceName jmsQueueServiceName=JMSServices.getJmsQueueBaseServiceName(serviceName).append(name);
  for (  String entry : CommonAttributes.DESTINATION_ENTRIES.unwrap(context,model)) {
    BinderServiceUtil.installBinderService(serviceTarget,entry,queueService,jmsQueueServiceName);
  }
  List<String> legacyEntries=CommonAttributes.LEGACY_ENTRIES.unwrap(context,model);
  if (!legacyEntries.isEmpty()) {
    Queue legacyQueue=HornetQJMSClient.createQueue(name);
    for (    String legacyEntry : legacyEntries) {
      BinderServiceUtil.installBinderService(serviceTarget,legacyEntry,legacyQueue);
    }
  }
}

{
  final InterceptorClassDescription interceptorConfig;
  if (classDescription != null) {
    interceptorConfig=InterceptorClassDescription.merge(classDescription.getInterceptorClassDescription(),moduleDescription.getInterceptorClassOverride(clazz.getName()));
  }
 else {
    interceptorConfig=InterceptorClassDescription.merge(null,moduleDescription.getInterceptorClassOverride(clazz.getName()));
  }
  final ClassReflectionIndex<?> interceptorClassReflectionIndex=deploymentReflectionIndex.getClassIndex(interceptorClass);
  final Constructor<?> interceptorClassConstructor=interceptorClassReflectionIndex.getConstructor(EMPTY_CLASS_ARRAY);
  if (interceptorClassConstructor == null) {
    throw MESSAGES.defaultConstructorNotFound(interceptorClass);
  }
  final MethodIdentifier aroundInvokeMethodIdentifier=interceptorConfig.getAroundInvoke();
  final InterceptorFactory aroundInvokeInterceptorFactory=createInterceptorFactory(clazz,aroundInvokeMethodIdentifier,interceptorClassConstructor);
  if (aroundInvokeInterceptorFactory != null) {
    this.aroundInvokeInterceptorFactories.add(aroundInvokeInterceptorFactory);
  }
  if (ejbComponentDescription.isTimerServiceApplicable()) {
    final MethodIdentifier aroundTimeoutMethodIdentifier=interceptorConfig.getAroundTimeout();
    final InterceptorFactory aroundTimeoutInterceptorFactory=createInterceptorFactory(clazz,aroundTimeoutMethodIdentifier,interceptorClassConstructor);
    if (aroundTimeoutInterceptorFactory != null) {
      this.aroundTimeoutInterceptorFactories.add(aroundTimeoutInterceptorFactory);
    }
  }
}

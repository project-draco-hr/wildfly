{
  props.put("org.osgi.service.http.port","" + httpServerPortBinding.getValue().getSocketAddress().getPort());
  props.put(Constants.FRAMEWORK_STORAGE_CLEAN,Constants.FRAMEWORK_STORAGE_CLEAN_ONFIRSTINIT);
  String storage=(String)props.get(Constants.FRAMEWORK_STORAGE);
  if (storage == null) {
    ServerEnvironment environment=injectedEnvironment.getValue();
    File dataDir=environment.getServerDataDir();
    storage=dataDir.getAbsolutePath() + File.separator + "osgi-store";
    props.put(Constants.FRAMEWORK_STORAGE,storage);
  }
  String sysmodules=(String)props.get(PROP_JBOSS_OSGI_SYSTEM_MODULES);
  if (sysmodules == null) {
    StringBuffer buffer=new StringBuffer();
    buffer.append("javax.inject.api,");
    buffer.append("org.apache.commons.logging,");
    buffer.append("org.apache.log4j,");
    buffer.append("org.jboss.as.osgi,");
    buffer.append("org.jboss.logging,");
    buffer.append("org.jboss.osgi.framework,");
    buffer.append("org.slf4j");
    props.put(PROP_JBOSS_OSGI_SYSTEM_MODULES,buffer.toString());
  }
  SubsystemState subsystemState=injectedSubsystemState.getValue();
  String sysPackagesProp=(String)subsystemState.getProperties().get(Constants.FRAMEWORK_SYSTEMPACKAGES);
  if (sysPackagesProp == null) {
    Set<String> sysPackages=new LinkedHashSet<String>();
    sysPackages.addAll(Arrays.asList(SystemPathsProvider.DEFAULT_SYSTEM_PACKAGES));
    sysPackages.addAll(Arrays.asList(SystemPathsProvider.DEFAULT_FRAMEWORK_PACKAGES));
    sysPackages.add("org.apache.commons.logging;version=1.1.1");
    sysPackages.add("org.apache.log4j;version=1.2");
    sysPackages.add("org.jboss.as.osgi.service;version=7.0");
    sysPackages.add("org.jboss.logging;version=3.0.0");
    sysPackages.add("org.jboss.osgi.deployment.interceptor;version=1.0");
    sysPackages.add("org.jboss.osgi.spi.capability;version=1.0");
    sysPackages.add("org.jboss.osgi.spi.util;version=1.0");
    sysPackages.add("org.jboss.osgi.testing;version=1.0");
    sysPackages.add("org.jboss.osgi.vfs;version=1.0");
    sysPackages.add("org.slf4j;version=1.5.10");
    sysPackagesProp=sysPackages.toString();
    sysPackagesProp=sysPackagesProp.substring(1,sysPackagesProp.length() - 1);
    props.put(Constants.FRAMEWORK_SYSTEMPACKAGES,sysPackagesProp);
  }
}

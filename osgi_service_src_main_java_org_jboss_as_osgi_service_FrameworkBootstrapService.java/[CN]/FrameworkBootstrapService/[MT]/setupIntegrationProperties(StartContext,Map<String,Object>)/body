{
  String storage=(String)props.get(Constants.FRAMEWORK_STORAGE);
  if (storage == null) {
    ServerEnvironment environment=injectedServerEnvironment.getValue();
    File dataDir=environment.getServerDataDir();
    storage=dataDir.getAbsolutePath() + File.separator + "osgi-store";
    props.put(Constants.FRAMEWORK_STORAGE,storage);
  }
  ModuleLogger moduleLogger=Module.getModuleLogger();
  if (moduleLogger != null)   props.put(ModuleLogger.class.getName(),moduleLogger.getClass().getName());
  String sysmodules=(String)props.get(PROP_JBOSS_OSGI_SYSTEM_MODULES);
  if (sysmodules == null) {
    Set<String> sysModules=new LinkedHashSet<String>();
    sysModules.addAll(Arrays.asList(SystemPackagesIntegration.DEFAULT_SYSTEM_MODULES));
    sysmodules=sysModules.toString();
    sysmodules=sysmodules.substring(1,sysmodules.length() - 1);
    props.put(PROP_JBOSS_OSGI_SYSTEM_MODULES,sysmodules);
  }
  String syspackages=(String)getPropertyWithSystemFallback(props,Constants.FRAMEWORK_SYSTEMPACKAGES);
  if (syspackages == null) {
    Set<String> sysPackages=new LinkedHashSet<String>();
    sysPackages.addAll(Arrays.asList(SystemPackagesIntegration.JAVAX_API_PACKAGES));
    sysPackages.addAll(Arrays.asList(SystemPaths.DEFAULT_FRAMEWORK_PACKAGES));
    sysPackages.addAll(Arrays.asList(SystemPackagesIntegration.DEFAULT_INTEGRATION_PACKAGES));
    syspackages=sysPackages.toString();
    syspackages=syspackages.substring(1,syspackages.length() - 1);
    props.put(Constants.FRAMEWORK_SYSTEMPACKAGES,syspackages);
  }
  String extrapackages=(String)getPropertyWithSystemFallback(props,Constants.FRAMEWORK_SYSTEMPACKAGES_EXTRA);
  if (extrapackages != null) {
    props.put(Constants.FRAMEWORK_SYSTEMPACKAGES_EXTRA,extrapackages);
  }
}

{
  props.put("org.osgi.service.http.port","" + httpServerPortBinding.getValue().getSocketAddress().getPort());
  props.put(Constants.FRAMEWORK_STORAGE_CLEAN,Constants.FRAMEWORK_STORAGE_CLEAN_ONFIRSTINIT);
  String storage=(String)props.get(Constants.FRAMEWORK_STORAGE);
  if (storage == null) {
    ServerEnvironment environment=injectedEnvironment.getValue();
    File dataDir=environment.getServerDataDir();
    storage=dataDir.getAbsolutePath() + File.separator + "osgi-store";
    props.put(Constants.FRAMEWORK_STORAGE,storage);
  }
  props.put(ModuleLogger.class.getName(),Module.getModuleLogger());
  String sysmodules=(String)props.get(PROP_JBOSS_OSGI_SYSTEM_MODULES);
  if (sysmodules == null) {
    StringBuffer buffer=new StringBuffer();
    buffer.append("javax.api,");
    buffer.append("javax.inject.api,");
    buffer.append("org.apache.xerces,");
    buffer.append("org.jboss.as.configadmin,");
    buffer.append("org.jboss.as.osgi,");
    buffer.append("org.jboss.logging,");
    buffer.append("org.jboss.modules,");
    buffer.append("org.jboss.msc,");
    buffer.append("org.jboss.osgi.framework,");
    buffer.append("org.jboss.osgi.repository,");
    buffer.append("org.slf4j");
    props.put(PROP_JBOSS_OSGI_SYSTEM_MODULES,buffer.toString());
  }
  String syspackages=(String)props.get(PROP_JBOSS_OSGI_SYSTEM_PACKAGES);
  if (syspackages == null) {
    Set<String> sysPackages=new LinkedHashSet<String>();
    sysPackages.addAll(Arrays.asList(SystemPathsProvider.DEFAULT_SYSTEM_PACKAGES));
    sysPackages.addAll(Arrays.asList(SystemPathsProvider.DEFAULT_FRAMEWORK_PACKAGES));
    sysPackages.add("javax.inject");
    sysPackages.add("org.apache.xerces.jaxp");
    sysPackages.add("org.jboss.as.configadmin.service");
    sysPackages.add("org.jboss.as.osgi.service");
    sysPackages.add("org.jboss.logging;version=3.1.0");
    sysPackages.add("org.jboss.osgi.repository;version=1.0");
    sysPackages.add("org.osgi.service.repository;version=1.0");
    sysPackages.add("org.slf4j;version=1.6.1");
    syspackages=sysPackages.toString();
    syspackages=syspackages.substring(1,syspackages.length() - 1);
    props.put(PROP_JBOSS_OSGI_SYSTEM_PACKAGES,syspackages);
  }
  String extrapackages=(String)props.get(Constants.FRAMEWORK_SYSTEMPACKAGES_EXTRA);
  if (extrapackages != null) {
    syspackages+="," + extrapackages;
  }
  props.put(Constants.FRAMEWORK_SYSTEMPACKAGES_EXTRA,syspackages);
}

{
  try {
    ServiceContainer serviceContainer=context.getController().getServiceContainer();
    Map<String,Object> props=new HashMap<String,Object>(subsystemState.getProperties());
    setupIntegrationProperties(context,props);
    FrameworkBuilder builder=new FrameworkBuilder(props);
    builder.setServiceContainer(serviceContainer);
    builder.setServiceTarget(context.getChildTarget());
    builder.addProvidedService(ServiceNames.AUTOINSTALL_PROVIDER);
    builder.addProvidedService(ServiceNames.INSTALL_HANDLER);
    builder.addProvidedService(ServiceNames.FRAMEWORK_MODULE_PROVIDER);
    builder.addProvidedService(ServiceNames.MODULE_LOADER_PROVIDER);
    builder.addProvidedService(ServiceNames.SYSTEM_SERVICES_PROVIDER);
    Activation activation=subsystemState.getActivationPolicy();
    Mode initialMode=(activation == Activation.EAGER ? Mode.ACTIVE : Mode.ON_DEMAND);
    builder.createFrameworkServices(initialMode,true);
  }
 catch (  Throwable t) {
    throw new StartException("Failed to create Framework services",t);
  }
}

{
  STEPS.validateOperation(operation);
  ImmutableManagementResourceRegistration registry=context.getResourceRegistration();
  final List<ModelNode> list=operation.get(ModelDescriptionConstants.STEPS).asList();
  final ModelNode responseMap=context.getResult().setEmptyObject();
  Map<String,OperationStepHandler> stepHandlerMap=new HashMap<String,OperationStepHandler>();
  final int size=list.size();
  for (int i=0; i < size; i++) {
    String stepName="step-" + (i + 1);
    responseMap.get(stepName);
    final ModelNode subOperation=list.get(i);
    PathAddress stepAddress=PathAddress.pathAddress(subOperation.get(OP_ADDR));
    String stepOpName=subOperation.require(OP).asString();
    OperationStepHandler stepHandler=registry.getOperationHandler(stepAddress,stepOpName);
    if (stepHandler == null) {
      ImmutableManagementResourceRegistration child=registry.getSubModel(stepAddress);
      if (child == null) {
        context.getFailureDescription().set(MESSAGES.noSuchResourceType(stepAddress));
      }
 else {
        context.getFailureDescription().set(MESSAGES.noHandlerForOperation(stepOpName,stepAddress));
      }
      context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);
      return;
    }
    stepHandlerMap.put(stepName,stepHandler);
  }
  for (int i=size - 1; i >= 0; i--) {
    final ModelNode subOperation=list.get(i);
    String stepName="step-" + (i + 1);
    context.addStep(responseMap.get(stepName).setEmptyObject(),subOperation,stepHandlerMap.get(stepName),OperationContext.Stage.IMMEDIATE);
  }
  context.completeStep(new OperationContext.RollbackHandler(){
    @Override public void handleRollback(    OperationContext context,    ModelNode operation){
      if (context.getFailureDescription().isDefined()) {
        if (context.getFailureDescription().hasDefined(HOST_FAILURE_DESCRIPTIONS)) {
          return;
        }
      }
      final ModelNode failureMsg=new ModelNode();
      for (int i=0; i < size; i++) {
        String stepName="step-" + (i + 1);
        ModelNode stepResponse=responseMap.get(stepName);
        if (stepResponse.hasDefined(FAILURE_DESCRIPTION)) {
          failureMsg.get(MESSAGES.compositeOperationFailed(),MESSAGES.operation(stepName)).set(stepResponse.get(FAILURE_DESCRIPTION));
        }
      }
      if (!failureMsg.isDefined()) {
        failureMsg.set(MESSAGES.compositeOperationRolledBack());
      }
      context.getFailureDescription().set(failureMsg);
    }
  }
);
}

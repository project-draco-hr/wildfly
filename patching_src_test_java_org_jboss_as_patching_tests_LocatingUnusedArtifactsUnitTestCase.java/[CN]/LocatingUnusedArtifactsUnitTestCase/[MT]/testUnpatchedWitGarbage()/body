{
  createDefaultBuilder("layer2","layer1","base");
  final List<String> historyGarbage=Arrays.asList(new String[]{getExpectedHistoryDir("CP1"),getExpectedHistoryDir("CP2")});
  for (int i=0; i < historyGarbage.size(); ++i) {
    new File(historyGarbage.get(i)).mkdirs();
  }
  final List<String> overlayGarbage=Arrays.asList(new String[]{getExpectedOverlayDir("layer2","CP2"),getExpectedOverlayDir("layer1","CP2"),getExpectedOverlayDir("base","CP1")});
  for (int i=0; i < overlayGarbage.size(); ++i) {
    new File(overlayGarbage.get(i)).mkdirs();
  }
  PatchingGarbageLocator garbageLocator=PatchingGarbageLocator.getIninitialized(loadInstallationManager());
  final List<File> inactiveHistory=garbageLocator.getInactiveHistory();
  assertEqualPaths(historyGarbage,inactiveHistory);
  final List<File> inactiveOverlays=garbageLocator.getInactiveOverlays();
  assertEqualPaths(overlayGarbage,inactiveOverlays);
  garbageLocator.deleteInactiveContent();
  garbageLocator.reset();
  assertTrue(garbageLocator.getInactiveHistory().isEmpty());
  assertTrue(garbageLocator.getInactiveOverlays().isEmpty());
}

{
  createDefaultBuilder("layer2","layer1","base");
  final Context ctx=getContext(false);
  final List<String> historyGarbage=Arrays.asList(new String[]{getExpectedHistoryDir(ctx,"CP1"),getExpectedHistoryDir(ctx,"CP2")});
  for (int i=0; i < historyGarbage.size(); ++i) {
    new File(historyGarbage.get(i)).mkdirs();
  }
  final List<String> overlayGarbage=Arrays.asList(new String[]{getExpectedOverlayDir(ctx,"layer2","CP2"),getExpectedOverlayDir(ctx,"layer1","CP2"),getExpectedOverlayDir(ctx,"base","CP1")});
  for (int i=0; i < overlayGarbage.size(); ++i) {
    new File(overlayGarbage.get(i)).mkdirs();
  }
  PatchingGarbageLocator garbageLocator=new PatchingGarbageLocator(loadInstallationManager());
  final List<File> inactiveHistory=garbageLocator.getInactiveHistory();
  assertEqualPaths(historyGarbage,inactiveHistory);
  final List<File> inactiveOverlays=garbageLocator.getInactiveOverlays();
  assertEqualPaths(overlayGarbage,inactiveOverlays);
  garbageLocator.deleteInactiveContent();
  garbageLocator.reset();
  assertTrue(garbageLocator.getInactiveHistory().isEmpty());
  assertTrue(garbageLocator.getInactiveOverlays().isEmpty());
}

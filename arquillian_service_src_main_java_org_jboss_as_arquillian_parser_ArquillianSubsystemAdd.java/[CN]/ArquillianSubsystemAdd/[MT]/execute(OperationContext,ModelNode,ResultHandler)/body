{
  final ModelNode compensatingOperation=Util.getResourceRemoveOperation(operation.require(OP_ADDR));
  context.getSubModel().setEmptyObject();
  if (context instanceof BootOperationContext) {
    log.infof("Activating Arquillian Subsystem");
    final BootOperationContext bootContext=(BootOperationContext)context;
    context.getRuntimeContext().setRuntimeTask(new RuntimeTask(){
      public void execute(      RuntimeTaskContext context) throws OperationFailedException {
        ArquillianService.addService(context.getServiceTarget());
        bootContext.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_ARQUILLIAN_RUNWITH,new ArquillianRunWithAnnotationProcessor());
        bootContext.addDeploymentProcessor(Phase.INSTALL,Phase.INSTALL_ARQUILLIAN_DEPLOYMENT,new ArquillianDeploymentProcessor());
        bootContext.addDeploymentProcessor(Phase.DEPENDENCIES,Phase.DEPENDENCIES_ARQUILLIAN,new ArquillianDependencyProcessor());
        resultHandler.handleResultComplete();
      }
    }
);
  }
 else {
    resultHandler.handleResultComplete();
  }
  return new BasicOperationResult(compensatingOperation);
}

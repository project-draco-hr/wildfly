{
  final SimpleServerAuthenticationProvider provider=new SimpleServerAuthenticationProvider();
  provider.addUser("bob",RemotingServices.ENDPOINT.getSimpleName(),"pass".toCharArray());
  final ConnectorService connectorService=new ConnectorService();
  connectorService.setOptionMap(OptionMap.create(Options.SASL_MECHANISMS,Sequence.of("DIGEST-MD5")));
  ServiceBuilder<?> builder=serviceTarget.addService(RemotingServices.connectorServiceName(MANAGEMENT_CHANNEL),connectorService).addDependency(RemotingServices.ENDPOINT,Endpoint.class,connectorService.getEndpointInjector()).addInjection(connectorService.getAuthenticationProviderInjector(),provider).setInitialMode(Mode.ACTIVE);
  addController(newControllers,verificationHandler,builder);
  if (networkInterfaceBindingName != null) {
    final InjectedNetworkBindingStreamServerService streamServerService=new InjectedNetworkBindingStreamServerService(port);
    builder=serviceTarget.addService(RemotingServices.serverServiceName(MANAGEMENT_CHANNEL,port),streamServerService).addDependency(RemotingServices.connectorServiceName(MANAGEMENT_CHANNEL),ChannelListener.class,streamServerService.getConnectorInjector()).addDependency(networkInterfaceBindingName,NetworkInterfaceBinding.class,streamServerService.getInterfaceBindingInjector()).setInitialMode(Mode.ACTIVE);
    addController(newControllers,verificationHandler,builder);
  }
 else {
    final NetworkBindingStreamServerService streamServerService=new NetworkBindingStreamServerService(networkInterfaceBinding,port);
    builder=serviceTarget.addService(RemotingServices.serverServiceName(MANAGEMENT_CHANNEL,port),streamServerService).addDependency(RemotingServices.connectorServiceName(MANAGEMENT_CHANNEL),ChannelListener.class,streamServerService.getConnectorInjector()).setInitialMode(Mode.ACTIVE);
    addController(newControllers,verificationHandler,builder);
  }
  installChannelServices(serviceTarget,operationHandlerService,modelControllerName,MANAGEMENT_CHANNEL,verificationHandler,newControllers);
}

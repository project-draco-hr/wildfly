{
  final ServiceName authProviderName=RealmAuthenticationProviderService.createName(connectorName);
  final ServiceName optionMapName=RealmOptionMapService.createName(connectorName);
  final RealmAuthenticationProviderService raps=new RealmAuthenticationProviderService();
  ServiceBuilder<?> builder=serviceTarget.addService(authProviderName,raps);
  if (securityRealmName != null) {
    builder.addDependency(securityRealmName,SecurityRealm.class,raps.getSecurityRealmInjectedValue());
  }
  if (serverCallbackServiceName != null) {
    builder.addDependency(serverCallbackServiceName,CallbackHandler.class,raps.getServerCallbackValue());
  }
  addController(newControllers,verificationHandler,builder);
  RealmOptionMapService roms=new RealmOptionMapService();
  builder=serviceTarget.addService(optionMapName,roms).addDependency(authProviderName,RealmAuthenticationProvider.class,roms.getRealmAuthenticationProviderInjectedValue());
  addController(newControllers,verificationHandler,builder);
  if (isNetworkInterfaceBinding) {
    final InjectedNetworkBindingStreamServerService streamServerService=new InjectedNetworkBindingStreamServerService(port);
    builder=serviceTarget.addService(serverServiceName(connectorName,port),streamServerService).addDependency(authProviderName,ServerAuthenticationProvider.class,streamServerService.getAuthenticationProviderInjector()).addDependency(optionMapName,OptionMap.class,streamServerService.getOptionMapInjectedValue()).addDependency(endpointName,Endpoint.class,streamServerService.getEndpointInjector()).addDependency(bindingName,NetworkInterfaceBinding.class,streamServerService.getInterfaceBindingInjector()).addDependency(ServiceBuilder.DependencyType.OPTIONAL,SocketBindingManager.SOCKET_BINDING_MANAGER,SocketBindingManager.class,streamServerService.getSocketBindingManagerInjector());
  }
 else {
    final InjectedSocketBindingStreamServerService streamServerService=new InjectedSocketBindingStreamServerService();
    builder=serviceTarget.addService(serverServiceName(connectorName,port),streamServerService).addDependency(authProviderName,ServerAuthenticationProvider.class,streamServerService.getAuthenticationProviderInjector()).addDependency(optionMapName,OptionMap.class,streamServerService.getOptionMapInjectedValue()).addDependency(endpointName,Endpoint.class,streamServerService.getEndpointInjector()).addDependency(bindingName,SocketBinding.class,streamServerService.getSocketBindingInjector()).addDependency(SocketBindingManager.SOCKET_BINDING_MANAGER,SocketBindingManager.class,streamServerService.getSocketBindingManagerInjector());
  }
  addController(newControllers,verificationHandler,builder);
}

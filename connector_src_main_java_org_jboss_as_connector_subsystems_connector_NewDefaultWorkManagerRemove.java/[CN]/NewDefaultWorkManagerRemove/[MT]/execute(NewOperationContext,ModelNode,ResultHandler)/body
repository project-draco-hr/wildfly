{
  final ModelNode model=context.getSubModel();
  final String name=model.require(NAME).asString();
  if (context instanceof NewRuntimeOperationContext) {
    final NewRuntimeOperationContext runtimeContext=(NewRuntimeOperationContext)context;
    final ServiceController<?> controller=runtimeContext.getServiceRegistry().getService(ConnectorServices.CONNECTOR_CONFIG_SERVICE);
    if (controller == null) {
      resultHandler.handleResultComplete(null);
      return Cancellable.NULL;
    }
 else {
      controller.setMode(Mode.REMOVE);
    }
  }
  final ModelNode compensating=new ModelNode();
  compensating.get(OP_ADDR).set(operation.require(ADDRESS));
  compensating.get(OP).set(ADD);
  compensating.get(NAME).set(name);
  if (model.has(ENABLED)) {
    compensating.get(ENABLED).set(model.get(ENABLED));
  }
  if (model.has(FAIL_ON_ERROR)) {
    compensating.get(FAIL_ON_ERROR).set(model.get(FAIL_ON_ERROR));
  }
  if (model.has(FAIL_ON_WARN)) {
    compensating.get(FAIL_ON_WARN).set(model.get(FAIL_ON_WARN));
  }
  resultHandler.handleResultComplete(compensating);
  return Cancellable.NULL;
}

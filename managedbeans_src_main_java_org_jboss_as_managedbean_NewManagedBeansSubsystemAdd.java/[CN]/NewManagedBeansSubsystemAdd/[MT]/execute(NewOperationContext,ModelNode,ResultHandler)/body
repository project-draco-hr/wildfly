{
  if (context instanceof NewBootOperationContext) {
    final NewBootOperationContext updateContext=(NewBootOperationContext)context;
    updateContext.addDeploymentProcessor(Phase.STRUCTURE,Phase.STRUCTURE_MANAGED_BEAN_SUB_DEPLOY_CHECK,new ManagedBeanSubDeploymentProcessor());
    updateContext.addDeploymentProcessor(Phase.DEPENDENCIES,Phase.DEPENDENCIES_MANAGED_BEAN,new ManagedBeanDependencyProcessor());
    updateContext.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_MANAGED_BEAN_ANNOTATION,new ManagedBeanAnnotationProcessor());
    updateContext.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_MANAGED_BEAN_RESOURCE_TARGET,new ManagedBeanResourceTargetProcessor());
  }
  final ModelNode compensatingOperation=new ModelNode();
  compensatingOperation.get(OP).set(REMOVE);
  compensatingOperation.get(OP_ADDR).set(operation.require(OP_ADDR));
  context.getSubModel().setEmptyObject();
  resultHandler.handleResultComplete(compensatingOperation);
  return Cancellable.NULL;
}

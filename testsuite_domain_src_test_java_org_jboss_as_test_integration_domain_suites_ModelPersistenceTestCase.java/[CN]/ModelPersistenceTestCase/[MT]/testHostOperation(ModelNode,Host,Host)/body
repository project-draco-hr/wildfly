{
  DomainClient client=controller.equals(Host.MASTER) ? domainMasterLifecycleUtil.getDomainClient() : domainSlaveLifecycleUtil.getDomainClient();
  CfgFileDescription lastDomainBackupDesc=getLatestBackup(domainCurrentCfgDir);
  CfgFileDescription lastMasterBackupDesc=getLatestBackup(masterCurrentCfgDir);
  CfgFileDescription lastSlaveBackupDesc=getLatestBackup(slaveCurrentCfgDir);
  long lastDomainFileHash=domainLastCfgFile.exists() ? FileUtils.checksumCRC32(domainLastCfgFile) : -1;
  long lastMasterFileHash=masterLastCfgFile.exists() ? FileUtils.checksumCRC32(masterLastCfgFile) : -1;
  long lastSlaveFileHash=slaveLastCfgFile.exists() ? FileUtils.checksumCRC32(slaveLastCfgFile) : -1;
  executeOperation(client,operation);
  CfgFileDescription newDomainBackupDesc=getLatestBackup(domainCurrentCfgDir);
  Assert.assertTrue(lastDomainBackupDesc.version == newDomainBackupDesc.version);
  CfgFileDescription newMasterBackupDesc=getLatestBackup(masterCurrentCfgDir);
  CfgFileDescription newSlaveBackupDesc=getLatestBackup(slaveCurrentCfgDir);
  if (target == Host.MASTER) {
    Assert.assertTrue(lastMasterBackupDesc.version == newMasterBackupDesc.version - 1);
    Assert.assertTrue(lastSlaveBackupDesc.version == newSlaveBackupDesc.version);
    Assert.assertTrue(lastMasterFileHash != FileUtils.checksumCRC32(masterLastCfgFile));
    Assert.assertTrue(lastSlaveFileHash == FileUtils.checksumCRC32(slaveLastCfgFile));
  }
 else {
    Assert.assertTrue(lastMasterBackupDesc.version == newMasterBackupDesc.version);
    Assert.assertTrue(lastSlaveBackupDesc.version == newSlaveBackupDesc.version - 1);
    Assert.assertTrue(lastMasterFileHash == FileUtils.checksumCRC32(masterLastCfgFile));
    Assert.assertTrue(lastSlaveFileHash != FileUtils.checksumCRC32(slaveLastCfgFile));
  }
  Assert.assertTrue(lastDomainBackupDesc.version == newDomainBackupDesc.version);
  Assert.assertTrue(lastDomainFileHash == FileUtils.checksumCRC32(domainLastCfgFile));
}

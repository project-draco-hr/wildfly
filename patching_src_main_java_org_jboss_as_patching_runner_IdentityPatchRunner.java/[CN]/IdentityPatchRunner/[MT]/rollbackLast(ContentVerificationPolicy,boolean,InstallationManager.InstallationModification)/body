{
  String patchId=null;
  final List<String> oneOffs=modification.getPatchIDs();
  if (oneOffs.isEmpty()) {
    patchId=modification.getCumulativePatchID();
    if (patchId == null) {
      throw new PatchingException("There are not patches applied.");
    }
  }
 else {
    patchId=oneOffs.get(oneOffs.size() - 1);
  }
  final File historyDir=installedImage.getPatchHistoryDir(patchId);
  if (!historyDir.exists()) {
    throw PatchMessages.MESSAGES.cannotRollbackPatch(patchId);
  }
  final File patchXml=new File(historyDir,Constants.ROLLBACK_XML);
  if (!patchXml.exists()) {
    throw PatchMessages.MESSAGES.cannotRollbackPatch(patchId);
  }
  final File workDir=createTempDir();
  final PatchContentProvider provider=null;
  final IdentityPatchContext context=new IdentityPatchContext(workDir,provider,contentPolicy,modification,installedImage);
  try {
    if (!Constants.BASE.equals(patchId)) {
      rollback(patchId,context,true);
    }
    final IdentityPatchContext.PatchEntry identity=context.getIdentityEntry();
    final IdentityRollbackCallback callback=new IdentityRollbackCallback(patchId,Collections.singletonList(patchId),resetConfiguration,identity.getDirectoryStructure());
    try {
      return executeTasks(context,callback);
    }
 catch (    Exception e) {
      throw rethrowException(e);
    }
  }
  finally {
    context.cleanup();
  }
}

{
  parametersValidator.validate(operation);
  ModelNode dc=model.get(DOMAIN_CONTROLLER);
  final ModelNode port=operation.require(PORT);
  final ModelNode host=operation.require(HOST);
  dc.get(REMOTE,PORT).set(port);
  dc.get(REMOTE,HOST).set(host);
  if (operation.has(SECURITY_REALM)) {
    ModelNode securityRealm=operation.require(SECURITY_REALM);
    dc.get(REMOTE,SECURITY_REALM).set(securityRealm);
    hostControllerInfo.setRemoteDomainControllerSecurityRealm(securityRealm.resolve().asString());
  }
  if (dc.has(LOCAL)) {
    dc.remove(LOCAL);
  }
  hostControllerInfo.setMasterDomainController(false);
  hostControllerInfo.setRemoteDomainControllerHost(host.resolve().asString());
  hostControllerInfo.setRemoteDomainControllerPort(port.resolve().asInt());
  overallConfigPersister.initializeDomainConfigurationPersister(true);
  NewDomainModelUtil.initializeSlaveDomainRegistry(rootRegistration,overallConfigPersister.getDomainPersister(),fileRepository);
}

{
  final ResourceBundle bundle=getResourceBundle(locale);
  final ModelNode node=new ModelNode();
  node.get(DESCRIPTION).set(bundle.getString("server"));
  for (  AttributeDefinition attr : CommonAttributes.SIMPLE_ROOT_RESOURCE_ATTRIBUTES) {
    attr.addResourceAttributeDescription(bundle,"server",node);
  }
  node.get(OPERATIONS);
  node.get(CHILDREN,CommonAttributes.ACCEPTOR,DESCRIPTION).set(bundle.getString("acceptor"));
  node.get(CHILDREN,CommonAttributes.ACCEPTOR,MIN_OCCURS).set(0);
  node.get(CHILDREN,CommonAttributes.ACCEPTOR,MODEL_DESCRIPTION);
  node.get(CHILDREN,CommonAttributes.IN_VM_ACCEPTOR,DESCRIPTION).set(bundle.getString("acceptor.in-vm"));
  node.get(CHILDREN,CommonAttributes.IN_VM_ACCEPTOR,MIN_OCCURS).set(0);
  node.get(CHILDREN,CommonAttributes.IN_VM_ACCEPTOR,MODEL_DESCRIPTION);
  node.get(CHILDREN,CommonAttributes.REMOTE_ACCEPTOR,DESCRIPTION).set(bundle.getString("acceptor.remote"));
  node.get(CHILDREN,CommonAttributes.REMOTE_ACCEPTOR,MIN_OCCURS).set(0);
  node.get(CHILDREN,CommonAttributes.REMOTE_ACCEPTOR,MODEL_DESCRIPTION);
  node.get(CHILDREN,CommonAttributes.ADDRESS_SETTING,DESCRIPTION).set(bundle.getString("address-setting"));
  node.get(CHILDREN,CommonAttributes.ADDRESS_SETTING,MIN_OCCURS).set(0);
  node.get(CHILDREN,CommonAttributes.ADDRESS_SETTING,MODEL_DESCRIPTION);
  node.get(CHILDREN,CommonAttributes.BROADCAST_GROUP,DESCRIPTION).set(bundle.getString("broadcast-group"));
  node.get(CHILDREN,CommonAttributes.BROADCAST_GROUP,MIN_OCCURS).set(0);
  node.get(CHILDREN,CommonAttributes.BROADCAST_GROUP,MODEL_DESCRIPTION);
  node.get(CHILDREN,CommonAttributes.CONNECTOR,DESCRIPTION).set(bundle.getString("connector"));
  node.get(CHILDREN,CommonAttributes.CONNECTOR,MIN_OCCURS).set(0);
  node.get(CHILDREN,CommonAttributes.CONNECTOR,MODEL_DESCRIPTION);
  node.get(CHILDREN,CommonAttributes.IN_VM_CONNECTOR,DESCRIPTION).set(bundle.getString("connector.in-vm"));
  node.get(CHILDREN,CommonAttributes.IN_VM_CONNECTOR,MIN_OCCURS).set(0);
  node.get(CHILDREN,CommonAttributes.IN_VM_CONNECTOR,MODEL_DESCRIPTION);
  node.get(CHILDREN,CommonAttributes.REMOTE_CONNECTOR,DESCRIPTION).set(bundle.getString("connector.remote"));
  node.get(CHILDREN,CommonAttributes.REMOTE_CONNECTOR,MIN_OCCURS).set(0);
  node.get(CHILDREN,CommonAttributes.REMOTE_CONNECTOR,MODEL_DESCRIPTION);
  node.get(CHILDREN,CommonAttributes.DISCOVERY_GROUP,DESCRIPTION).set(bundle.getString("discovery-group"));
  node.get(CHILDREN,CommonAttributes.DISCOVERY_GROUP,MIN_OCCURS).set(0);
  node.get(CHILDREN,CommonAttributes.DISCOVERY_GROUP,MODEL_DESCRIPTION);
  node.get(CHILDREN,CommonAttributes.DIVERT,DESCRIPTION).set(bundle.getString("divert"));
  node.get(CHILDREN,CommonAttributes.DIVERT,MIN_OCCURS).set(0);
  node.get(CHILDREN,CommonAttributes.DIVERT,MODEL_DESCRIPTION);
  node.get(CHILDREN,CommonAttributes.QUEUE,DESCRIPTION).set(bundle.getString("queue"));
  node.get(CHILDREN,CommonAttributes.QUEUE,MIN_OCCURS).set(0);
  node.get(CHILDREN,CommonAttributes.QUEUE,MODEL_DESCRIPTION);
  node.get(CHILDREN,CommonAttributes.CORE_ADDRESS,DESCRIPTION).set(bundle.getString("core-address"));
  node.get(CHILDREN,CommonAttributes.CORE_ADDRESS,MIN_OCCURS).set(0);
  node.get(CHILDREN,CommonAttributes.CORE_ADDRESS,MODEL_DESCRIPTION);
  node.get(CHILDREN,CommonAttributes.GROUPING_HANDLER,DESCRIPTION).set(bundle.getString("grouping-handler"));
  node.get(CHILDREN,CommonAttributes.GROUPING_HANDLER,MIN_OCCURS).set(0);
  node.get(CHILDREN,CommonAttributes.GROUPING_HANDLER,MAX_OCCURS).set(1);
  node.get(CHILDREN,CommonAttributes.GROUPING_HANDLER,MODEL_DESCRIPTION);
  node.get(CHILDREN,CommonAttributes.BRIDGE,DESCRIPTION).set(bundle.getString("bridge"));
  node.get(CHILDREN,CommonAttributes.BRIDGE,MIN_OCCURS).set(0);
  node.get(CHILDREN,CommonAttributes.BRIDGE,MODEL_DESCRIPTION);
  node.get(CHILDREN,CommonAttributes.CLUSTER_CONNECTION,DESCRIPTION).set(bundle.getString("cluster-connection"));
  node.get(CHILDREN,CommonAttributes.CLUSTER_CONNECTION,MIN_OCCURS).set(0);
  node.get(CHILDREN,CommonAttributes.CLUSTER_CONNECTION,MODEL_DESCRIPTION);
  node.get(CHILDREN,CommonAttributes.QUEUE,DESCRIPTION).set(bundle.getString("queue"));
  node.get(CHILDREN,CommonAttributes.QUEUE,MIN_OCCURS).set(0);
  node.get(CHILDREN,CommonAttributes.QUEUE,MODEL_DESCRIPTION);
  node.get(CHILDREN,CommonAttributes.CONNECTOR_SERVICE,DESCRIPTION).set(bundle.getString("connector-service"));
  node.get(CHILDREN,CommonAttributes.CONNECTOR_SERVICE,MIN_OCCURS).set(0);
  node.get(CHILDREN,CommonAttributes.CONNECTOR_SERVICE,MODEL_DESCRIPTION);
  String path=CommonAttributes.PATH.getName();
  node.get(CHILDREN,path,DESCRIPTION).set(bundle.getString("path"));
  node.get(CHILDREN,path,MIN_OCCURS).set(4);
  node.get(CHILDREN,path,MAX_OCCURS).set(4);
  node.get(CHILDREN,path,MODEL_DESCRIPTION);
  node.get(CHILDREN,CommonAttributes.CONNECTION_FACTORY,DESCRIPTION).set(bundle.getString("connection-factory"));
  node.get(CHILDREN,CommonAttributes.CONNECTION_FACTORY,MIN_OCCURS).set(0);
  node.get(CHILDREN,CommonAttributes.CONNECTION_FACTORY,MODEL_DESCRIPTION);
  node.get(CHILDREN,CommonAttributes.POOLED_CONNECTION_FACTORY,DESCRIPTION).set(bundle.getString("pooled-connection-factory"));
  node.get(CHILDREN,CommonAttributes.POOLED_CONNECTION_FACTORY,MIN_OCCURS).set(0);
  node.get(CHILDREN,CommonAttributes.POOLED_CONNECTION_FACTORY,MODEL_DESCRIPTION);
  node.get(CHILDREN,CommonAttributes.JMS_QUEUE,DESCRIPTION).set(bundle.getString("jms-queue"));
  node.get(CHILDREN,CommonAttributes.JMS_QUEUE,MIN_OCCURS).set(0);
  node.get(CHILDREN,CommonAttributes.JMS_QUEUE,MODEL_DESCRIPTION);
  node.get(CHILDREN,CommonAttributes.JMS_TOPIC,DESCRIPTION).set(bundle.getString("topic"));
  node.get(CHILDREN,CommonAttributes.JMS_TOPIC,MIN_OCCURS).set(0);
  node.get(CHILDREN,CommonAttributes.JMS_TOPIC,MODEL_DESCRIPTION);
  node.get(CHILDREN,CommonAttributes.SECURITY_SETTING,DESCRIPTION).set(bundle.getString("security-setting"));
  node.get(CHILDREN,CommonAttributes.SECURITY_SETTING,MIN_OCCURS).set(0);
  node.get(CHILDREN,CommonAttributes.SECURITY_SETTING,MODEL_DESCRIPTION);
  return node;
}

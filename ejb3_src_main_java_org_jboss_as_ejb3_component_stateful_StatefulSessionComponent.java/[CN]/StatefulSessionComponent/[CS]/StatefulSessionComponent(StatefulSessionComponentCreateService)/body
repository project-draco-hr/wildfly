{
  super(ejbComponentCreateService);
  this.afterBegin=ejbComponentCreateService.getAfterBegin();
  this.afterCompletion=ejbComponentCreateService.getAfterCompletion();
  this.beforeCompletion=ejbComponentCreateService.getBeforeCompletion();
  this.methodAccessTimeouts=ejbComponentCreateService.getMethodApplicableAccessTimeouts();
  final StatefulTimeoutInfo statefulTimeout=ejbComponentCreateService.getStatefulTimeout();
  if (statefulTimeout != null) {
    cache=new ExpiringCache<StatefulSessionComponentInstance>(statefulTimeout.getValue(),statefulTimeout.getTimeUnit(),ejbComponentCreateService.getComponentClass().getName());
  }
 else {
    cache=new ExpiringCache<StatefulSessionComponentInstance>(-1,TimeUnit.MILLISECONDS,ejbComponentCreateService.getComponentClass().getName());
  }
  cache.setStatefulObjectFactory(new StatefulObjectFactory<StatefulSessionComponentInstance>(){
    @Override public StatefulSessionComponentInstance createInstance(){
      return (StatefulSessionComponentInstance)StatefulSessionComponent.this.createInstance();
    }
    @Override public void destroyInstance(    StatefulSessionComponentInstance instance){
      instance.destroy();
    }
  }
);
}

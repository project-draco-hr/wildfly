{
  super(configuration);
  AccessTimeout accessTimeout=configuration.getBeanLevelAccessTimeout();
  if (accessTimeout == null) {
    accessTimeout=new AccessTimeout(){
      @Override public long value(){
        return 5;
      }
      @Override public TimeUnit unit(){
        return MINUTES;
      }
      @Override public Class<? extends Annotation> annotationType(){
        return AccessTimeout.class;
      }
    }
;
  }
  this.accessTimeout=accessTimeout;
  cache=new NoPassivationCache<StatefulSessionComponentInstance>();
  cache.setStatefulObjectFactory(new StatefulObjectFactory<StatefulSessionComponentInstance>(){
    @Override public StatefulSessionComponentInstance createInstance(){
      return (StatefulSessionComponentInstance)StatefulSessionComponent.this.createInstance();
    }
    @Override public void destroyInstance(    StatefulSessionComponentInstance instance){
      StatefulSessionComponent.this.destroyInstance(instance);
    }
  }
);
}

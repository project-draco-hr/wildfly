{
  final Class<?> type;
  if (targetType != null) {
    type=targetType;
  }
 else   if (targetTypeName != null) {
    try {
      type=ClassLoadingUtils.loadClass(targetTypeName,phaseContext.getDeploymentUnit());
    }
 catch (    ClassNotFoundException e) {
      throw new RuntimeException(e);
    }
  }
 else {
    type=null;
  }
  injector.inject(new ManagedReferenceFactory(){
    @Override public ManagedReference getReference(){
      try {
        final Object value=new InitialContext().lookup(lookup);
        return new ManagedReference(){
          @Override public void release(){
          }
          @Override public Object getInstance(){
            if (type != null && value instanceof org.omg.CORBA.Object) {
              return PortableRemoteObject.narrow(value,type);
            }
 else {
              return value;
            }
          }
        }
;
      }
 catch (      NamingException e) {
        throw new RuntimeException(e);
      }
    }
  }
);
}

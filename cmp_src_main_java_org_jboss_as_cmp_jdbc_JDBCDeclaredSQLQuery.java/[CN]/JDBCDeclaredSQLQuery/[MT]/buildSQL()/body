{
  StringBuffer sql=new StringBuffer(300);
  sql.append(SQLUtil.SELECT);
  if (metadata.isSelectDistinct()) {
    sql.append(SQLUtil.DISTINCT);
  }
  String alias=metadata.getAlias();
  String from=metadata.getFrom();
  String table;
  String selectList;
  if (getSelectField() == null) {
    table=getSelectEntity().getQualifiedTableName();
    String tableAlias=getTableAlias(alias,from,getSelectEntity().getTableName());
    selectList=SQLUtil.getColumnNamesClause(getSelectEntity().getPrimaryKeyFields(),tableAlias,new StringBuffer(35)).toString();
    if (getEagerLoadGroup() != null) {
      selectList+=SQLUtil.appendColumnNamesClause(getSelectEntity(),getEagerLoadGroup(),tableAlias,new StringBuffer(35));
    }
  }
 else {
    JDBCCMPFieldBridge selectField=getSelectField();
    JDBCStoreManager manager=(JDBCStoreManager)getSelectField().getManager();
    table=manager.getEntityBridge().getQualifiedTableName();
    selectList=SQLUtil.getColumnNamesClause(selectField,getTableAlias(alias,from,manager.getEntityBridge().getTableName()),new StringBuffer()).toString();
  }
  sql.append(selectList);
  String additionalColumns=metadata.getAdditionalColumns();
  if (additionalColumns != null) {
    sql.append(additionalColumns);
  }
  sql.append(SQLUtil.FROM).append(table);
  if (alias != null) {
    sql.append(' ').append(alias);
  }
  if (from != null) {
    sql.append(' ').append(from);
  }
  String where=metadata.getWhere();
  if (where != null && where.trim().length() > 0) {
    sql.append(SQLUtil.WHERE).append(where);
  }
  String order=metadata.getOrder();
  if (order != null && order.trim().length() > 0) {
    sql.append(SQLUtil.ORDERBY).append(order);
  }
  String other=metadata.getOther();
  if (other != null && other.trim().length() > 0) {
    sql.append(' ').append(other);
  }
  return sql.toString();
}

{
  long start=System.currentTimeMillis();
  block("master",null,BlockerExtension.BlockPoint.COMMIT);
  String blockId=findActiveOperation(masterClient,"master",null,"block",OperationContext.ExecutionStatus.COMPLETING,start);
  Future<ModelNode> writeFuture=masterClient.executeAsync(WRITE_FOO_OP,OperationMessageHandler.DISCARD);
  findActiveOperation(masterClient,"master",null,"write-attribute",OperationContext.ExecutionStatus.AWAITING_OTHER_OPERATION,start);
  cancel(masterClient,"master",null,"block",OperationContext.ExecutionStatus.COMPLETING,start,false);
  ModelNode response=writeFuture.get(GET_TIMEOUT,TimeUnit.MILLISECONDS);
  assertEquals(response.asString(),SUCCESS,response.get(OUTCOME).asString());
  validateNoActiveOperation(masterClient,"master",null,blockId,true);
}

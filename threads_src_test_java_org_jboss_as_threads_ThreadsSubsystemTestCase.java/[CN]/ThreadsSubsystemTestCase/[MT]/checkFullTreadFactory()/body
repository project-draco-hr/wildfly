{
  ModelNode subsystem=model.require("profile").require("test").require("subsystem").require("threads");
  ModelNode threadFactory=subsystem.require("thread-factory");
  assertEquals(1,threadFactory.keys().size());
  assertEquals("test-factory",threadFactory.require("test-factory").require("name").asString());
  assertEquals("test-group",threadFactory.require("test-factory").require("group-name").asString());
  assertEquals("test-pattern",threadFactory.require("test-factory").require("thread-name-pattern").asString());
  assertEquals(5,threadFactory.require("test-factory").require("priority").asInt());
  ModelNode props=threadFactory.require("test-factory").require("properties");
  assertTrue(props.isDefined());
  assertEquals(2,props.asList().size());
  for (  ModelNode prop : props.asList()) {
    Property property=prop.asProperty();
    if (property.getName().equals("propA")) {
      assertEquals("valueA",property.getValue().asString());
    }
 else     if (property.getName().equals("propB")) {
      assertEquals("valueB",property.getValue().asString());
    }
 else {
      fail("Unknown property " + property);
    }
  }
}

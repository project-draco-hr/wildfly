{
  ModelNode subsystem=model.require("profile").require("test").require("subsystem").require("threads");
  ModelNode threadPool=subsystem.require("bounded-queue-thread-pool");
  assertEquals(1,threadPool.keys().size());
  assertEquals("test-pool",threadPool.require("test-pool").require("name").asString());
  assertTrue(threadPool.require("test-pool").require("blocking").asBoolean());
  assertTrue(threadPool.require("test-pool").require("allow-core-timeout").asBoolean());
  assertEquals(new BigDecimal(200),threadPool.require("test-pool").require("core-threads-count").asBigDecimal());
  assertEquals(new BigDecimal(15),threadPool.require("test-pool").require("core-threads-per-cpu").asBigDecimal());
  assertEquals(new BigDecimal(300),threadPool.require("test-pool").require("queue-length-count").asBigDecimal());
  assertEquals(new BigDecimal(25),threadPool.require("test-pool").require("queue-length-per-cpu").asBigDecimal());
  assertEquals(new BigDecimal(100),threadPool.require("test-pool").require("max-threads-count").asBigDecimal());
  assertEquals(new BigDecimal(5),threadPool.require("test-pool").require("max-threads-per-cpu").asBigDecimal());
  assertEquals(1000L,threadPool.require("test-pool").require("keepalive-time-duration").asLong());
  assertEquals("MILLISECONDS",threadPool.require("test-pool").require("keepalive-time-unit").asString());
  assertEquals("other",threadPool.require("test-pool").require("handoff-executor").asString());
  ModelNode props=threadPool.require("test-pool").require("properties");
  assertTrue(props.isDefined());
  assertEquals(2,props.asList().size());
  for (  ModelNode prop : props.asList()) {
    Property property=prop.asProperty();
    if (property.getName().equals("propA")) {
      assertEquals("valueA",property.getValue().asString());
    }
 else     if (property.getName().equals("propB")) {
      assertEquals("valueB",property.getValue().asString());
    }
 else {
      fail("Unknown property " + property);
    }
  }
}

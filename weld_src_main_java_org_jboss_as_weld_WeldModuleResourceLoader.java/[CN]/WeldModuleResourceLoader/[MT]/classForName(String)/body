{
  try {
    if (classes.containsKey(name)) {
      return classes.get(name);
    }
    final Class<?> clazz=module.getClassLoader().loadClass(name);
    Class<?> c=clazz;
    while (c != null && c != Object.class) {
      for (      Method method : c.getDeclaredMethods()) {
        method.getAnnotations();
      }
      for (      Field field : c.getDeclaredFields()) {
        field.getAnnotations();
      }
      c.getDeclaredAnnotations();
      c=c.getSuperclass();
    }
    classes.put(name,clazz);
    return clazz;
  }
 catch (  NoClassDefFoundError e) {
    throw new ResourceLoadingException(e);
  }
catch (  ClassNotFoundException e) {
    throw new ResourceLoadingException(e);
  }
catch (  LinkageError e) {
    throw new ResourceLoadingException(e);
  }
}

{
  if (node.hasDefined(THREAD_FACTORY)) {
    for (    Property property : node.get(THREAD_FACTORY).asPropertyList()) {
      writeThreadFactory(writer,property);
    }
  }
  if (node.hasDefined(UNBOUNDED_QUEUE_THREAD_POOL)) {
    for (    Property property : node.get(UNBOUNDED_QUEUE_THREAD_POOL).asPropertyList()) {
      writeUnboundedQueueThreadPool(writer,property);
    }
  }
  if (node.hasDefined(BOUNDED_QUEUE_THREAD_POOL)) {
    for (    Property property : node.get(BOUNDED_QUEUE_THREAD_POOL).asPropertyList()) {
      writeBoundedQueueThreadPool(writer,property);
    }
  }
  if (node.hasDefined(BLOCKING_BOUNDED_QUEUE_THREAD_POOL)) {
    for (    Property property : node.get(BLOCKING_BOUNDED_QUEUE_THREAD_POOL).asPropertyList()) {
      writeBlockingBoundedQueueThreadPool(writer,property);
    }
  }
  if (node.hasDefined(QUEUELESS_THREAD_POOL)) {
    for (    Property property : node.get(QUEUELESS_THREAD_POOL).asPropertyList()) {
      writeQueuelessThreadPool(writer,property);
    }
  }
  if (node.hasDefined(BLOCKING_QUEUELESS_THREAD_POOL)) {
    for (    Property property : node.get(BLOCKING_QUEUELESS_THREAD_POOL).asPropertyList()) {
      writeBlockingQueuelessThreadPool(writer,property);
    }
  }
  if (node.hasDefined(SCHEDULED_THREAD_POOL)) {
    for (    Property property : node.get(SCHEDULED_THREAD_POOL).asPropertyList()) {
      writeScheduledQueueThreadPool(writer,property);
    }
  }
}

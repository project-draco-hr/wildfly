{
  BigDecimal perCpu=null;
  BigDecimal count=null;
  final int acnt=reader.getAttributeCount();
  for (int i=0; i < acnt; i++) {
switch (Attribute.forName(reader.getAttributeLocalName(i))) {
case PER_CPU:
{
        perCpu=new BigDecimal(reader.getAttributeValue(i),MathContext.DECIMAL64);
        break;
      }
case COUNT:
{
      count=new BigDecimal(reader.getAttributeValue(i),MathContext.DECIMAL64);
      break;
    }
default :
{
    throw unexpectedAttribute(reader,i);
  }
}
}
if (perCpu == null) throw missingRequired(reader,Collections.singleton(Attribute.PER_CPU));
if (count == null) throw missingRequired(reader,Collections.singleton(Attribute.COUNT));
requireNoContent(reader);
return new ScaledCount(count,perCpu);
}

{
  final Context ctx=new InitialContext();
  final One interfaceOne=(One)ctx.lookup("java:module/" + MultipleRemoteViewBean.class.getSimpleName() + "!"+ One.class.getName());
  assertNotNull("View " + One.class.getName() + " not found",interfaceOne);
  final Two interfaceTwo=(Two)ctx.lookup("java:module/" + MultipleRemoteViewBean.class.getSimpleName() + "!"+ Two.class.getName());
  assertNotNull("View " + Two.class.getName() + " not found",interfaceTwo);
  final Three interfaceThree=(Three)ctx.lookup("java:module/" + MultipleRemoteViewBean.class.getSimpleName() + "!"+ Three.class.getName());
  assertNotNull("View " + Three.class.getName() + " not found",interfaceThree);
  try {
    final Object view=ctx.lookup("java:module/" + MultipleRemoteViewBean.class.getSimpleName() + "!"+ Serializable.class.getName());
    Assert.fail("Unexpected view found: " + view + " for interface "+ Serializable.class.getName());
  }
 catch (  NameNotFoundException nnfe) {
  }
  try {
    final Object view=ctx.lookup("java:module/" + MultipleRemoteViewBean.class.getSimpleName() + "!"+ Externalizable.class.getName());
    Assert.fail("Unexpected view found: " + view + " for interface "+ Externalizable.class.getName());
  }
 catch (  NameNotFoundException nnfe) {
  }
}

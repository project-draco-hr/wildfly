{
  Class<?> clazz=componentClass;
  while (clazz != Object.class && clazz != null) {
    final ClassReflectionIndex<?> classIndex=reflectionIndex.getClassIndex(clazz);
    if (parameters == null) {
      final Collection<Method> methods=classIndex.getAllMethods(methodName);
      if (!methods.isEmpty()) {
        return methods;
      }
    }
 else {
      final Collection<Method> methods=classIndex.getAllMethods(methodName,parameters.size());
      for (      final Method method : methods) {
        boolean match=true;
        for (int i=0; i < method.getParameterTypes().length; ++i) {
          if (!method.getParameterTypes()[i].getName().equals(parameters.get(i))) {
            match=false;
            break;
          }
        }
        if (match) {
          return Collections.singleton(method);
        }
      }
    }
    clazz=clazz.getSuperclass();
  }
  throw MESSAGES.failToFindMethodInEjbJarXml(componentClass.getName(),methodName);
}

{
  KernelServicesBuilder builder=createKernelServicesBuilder(createAdditionalInitialization()).setSubsystemXml(getSubsystemXml());
  KernelServices mainServices=builder.build();
  if (!mainServices.isSuccessfulBoot()) {
    Assert.fail(mainServices.getBootError().toString());
  }
  ServiceController<XnioWorker> workerServiceController=(ServiceController<XnioWorker>)mainServices.getContainer().getService(IOServices.WORKER.append("default"));
  workerServiceController.setMode(ServiceController.Mode.ACTIVE);
  XnioWorker worker=workerServiceController.getService().getValue();
  Assert.assertEquals(Runtime.getRuntime().availableProcessors() * 2,worker.getIoThreadCount());
  Assert.assertEquals(Runtime.getRuntime().availableProcessors() * 16,worker.getOption(Options.WORKER_TASK_MAX_THREADS).intValue());
}

{
  final ServiceController<?> serviceController=context.getController();
  final ServiceContainer container=serviceController.getServiceContainer();
  final ServiceTarget target=context.getChildTarget();
  final ModelControllerImpl controller=new ModelControllerImpl(container,target,ManagementResourceRegistration.Factory.create(rootDescriptionProvider),new ContainerStateMonitor(container,serviceController),configurationPersister,controllerType,prepareStep,processState);
  initModel(controller.getRootResource(),controller.getRootRegistration());
  this.controller=controller;
  final long bootStackSize=getBootStackSize();
  final Thread bootThread=new Thread(null,new Runnable(){
    public void run(){
      try {
        try {
          boot(new BootContext(){
            public ServiceTarget getServiceTarget(){
              return target;
            }
          }
);
        }
 catch (        ConfigurationPersistenceException e) {
          throw new RuntimeException(e);
        }
 finally {
          processState.setRunning();
        }
      }
 catch (      Throwable t) {
        container.shutdown();
        if (t instanceof StackOverflowError) {
          logger.errorf(t,"Error booting the container due to insufficient stack space for the thread used to " + "execute boot operations. The thread was configured with a stack size of [%d]. Setting " + "system property %s to a value higher than [%d] may resolve this problem.",bootStackSize,BOOT_STACK_SIZE_PROPERTY,bootStackSize);
        }
 else {
          logger.error("Error booting the container",t);
        }
      }
    }
  }
,"Controller Boot Thread",bootStackSize);
  bootThread.start();
}

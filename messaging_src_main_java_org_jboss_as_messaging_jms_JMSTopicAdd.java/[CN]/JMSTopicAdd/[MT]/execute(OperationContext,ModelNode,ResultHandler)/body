{
  ModelNode opAddr=operation.require(OP_ADDR);
  final PathAddress address=PathAddress.pathAddress(opAddr);
  final String name=address.getLastElement().getValue();
  final ModelNode compensatingOperation=Util.getResourceRemoveOperation(opAddr);
  if (operation.hasDefined(ENTRIES)) {
    context.getSubModel().get(ENTRIES).set(operation.get(ENTRIES));
  }
  if (context instanceof RuntimeOperationContext) {
    RuntimeOperationContext.class.cast(context).executeRuntimeTask(new RuntimeTask(){
      public void execute(      RuntimeTaskContext context,      ResultHandler resultHandler) throws OperationFailedException {
        final JMSTopicService service=new JMSTopicService(name,jndiBindings(operation));
        final ServiceName serviceName=JMSServices.JMS_TOPIC_BASE.append(name);
        context.getServiceTarget().addService(serviceName,service).addDependency(JMSServices.JMS_MANAGER,JMSServerManager.class,service.getJmsServer()).setInitialMode(Mode.ACTIVE).addListener(new ResultHandler.ServiceStartListener(resultHandler)).install();
      }
    }
,resultHandler);
  }
 else {
    resultHandler.handleResultComplete();
  }
  return new BasicOperationResult(compensatingOperation);
}

{
  if (connection != null) {
    throw MESSAGES.alreadyConnected();
  }
  Builder builder=OptionMap.builder();
  builder.set(SASL_POLICY_NOANONYMOUS,Boolean.FALSE);
  builder.set(SASL_POLICY_NOPLAINTEXT,Boolean.FALSE);
  List<Property> tempProperties=new ArrayList<Property>(saslOptions != null ? saslOptions.size() : 1);
  tempProperties.add(Property.of("jboss.sasl.local-user.quiet-auth","true"));
  if (saslOptions != null) {
    for (    String currentKey : saslOptions.keySet()) {
      tempProperties.add(Property.of(currentKey,saslOptions.get(currentKey)));
    }
  }
  builder.set(Options.SASL_PROPERTIES,Sequence.of(tempProperties));
  CallbackHandler actualHandler=handler != null ? handler : new AnonymousCallbackHandler();
  WrapperCallbackHandler wrapperHandler=new WrapperCallbackHandler(actualHandler);
  IoFuture<Connection> future=endpoint.connect(uri,builder.getMap(),wrapperHandler);
  try {
    this.connection=future.get();
  }
 catch (  CancellationException e) {
    throw MESSAGES.connectWasCancelled();
  }
catch (  IOException e) {
    throw MESSAGES.couldNotConnect(uri,e);
  }
  return connection;
}

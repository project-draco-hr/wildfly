{
  CallbackHandler actualHandler=handler != null ? handler : new AnonymousCallbackHandler();
  WrapperCallbackHandler wrapperHandler=new WrapperCallbackHandler(actualHandler);
  final IoFuture<Connection> future=connect(wrapperHandler,saslOptions,sslContext);
  long timeoutMillis=configuration.getConnectionTimeout();
  IoFuture.Status status=future.await(timeoutMillis,TimeUnit.MILLISECONDS);
  while (status == IoFuture.Status.WAITING) {
    if (wrapperHandler.isInCall()) {
      status=future.await(timeoutMillis,TimeUnit.MILLISECONDS);
    }
 else {
      long lastInteraction=wrapperHandler.getCallFinished();
      if (lastInteraction > 0) {
        long now=System.currentTimeMillis();
        long timeSinceLast=now - lastInteraction;
        if (timeSinceLast < timeoutMillis) {
          status=future.await(timeoutMillis - timeSinceLast,TimeUnit.MILLISECONDS);
        }
 else {
          status=null;
        }
      }
 else {
        status=null;
      }
    }
  }
  if (status == IoFuture.Status.DONE) {
    return future.get();
  }
  if (status == IoFuture.Status.FAILED) {
    throw ProtocolMessages.MESSAGES.failedToConnect(uri,future.getException());
  }
  throw ProtocolMessages.MESSAGES.couldNotConnect(uri);
}

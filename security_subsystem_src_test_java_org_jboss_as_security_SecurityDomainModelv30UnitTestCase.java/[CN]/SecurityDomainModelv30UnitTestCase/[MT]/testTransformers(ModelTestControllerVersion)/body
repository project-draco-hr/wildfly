{
  KernelServicesBuilder builder=createKernelServicesBuilder(AdditionalInitialization.MANAGEMENT);
  ModelVersion version=ModelVersion.create(1,3,0);
  builder.createLegacyKernelServicesBuilder(AdditionalInitialization.MANAGEMENT,controllerVersion,version).addMavenResourceURL("org.jboss.as:jboss-as-security:" + controllerVersion.getMavenGavVersion());
  KernelServices mainServices=builder.build();
  assertTrue(mainServices.isSuccessfulBoot());
  KernelServices legacyServices=mainServices.getLegacyServices(version);
  assertNotNull(legacyServices);
  assertTrue(legacyServices.isSuccessfulBoot());
  PathAddress subsystemAddress=PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM,getMainSubsystemName()));
  ModelTestUtils.checkFailedTransformedBootOperations(mainServices,version,builder.parseXmlResource("securitysubsystemv30.xml"),new FailedOperationTransformationConfig().addFailedAttribute(PathAddress.pathAddress(subsystemAddress,PathElement.pathElement(Constants.ELYTRON_REALM)),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(PathAddress.pathAddress(subsystemAddress,PathElement.pathElement(Constants.ELYTRON_KEY_STORE)),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(PathAddress.pathAddress(subsystemAddress,PathElement.pathElement(Constants.ELYTRON_TRUST_STORE)),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(PathAddress.pathAddress(subsystemAddress,PathElement.pathElement(Constants.ELYTRON_KEY_MANAGER)),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(PathAddress.pathAddress(subsystemAddress,PathElement.pathElement(Constants.ELYTRON_TRUST_MANAGER)),FailedOperationTransformationConfig.REJECTED_RESOURCE));
}

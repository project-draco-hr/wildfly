{
  AutoInstallIntegration service=new AutoInstallIntegration();
  ServiceBuilder<?> builder=target.addService(IntegrationServices.AUTOINSTALL_HANDLER,service);
  builder.addDependency(ServerEnvironmentService.SERVICE_NAME,ServerEnvironment.class,service.injectedServerEnvironment);
  builder.addDependency(SubsystemState.SERVICE_NAME,SubsystemState.class,service.injectedSubsystemState);
  builder.addDependency(RepositoryProvider.SERVICE_NAME,Repository.class,service.injectedRepository);
  builder.addDependency(Services.BUNDLE_MANAGER,BundleManager.class,service.injectedBundleManager);
  builder.addDependency(Services.PACKAGE_ADMIN,PackageAdmin.class,service.injectedPackageAdmin);
  builder.addDependency(Services.STORAGE_STATE_PROVIDER,StorageStateProvider.class,service.injectedStorageProvider);
  builder.addDependency(Services.SYSTEM_BUNDLE,Bundle.class,service.injectedSystemBundle);
  builder.addDependency(Services.START_LEVEL,StartLevel.class,service.injectedStartLevel);
  builder.addDependency(Services.ENVIRONMENT,XEnvironment.class,service.injectedEnvironment);
  builder.addDependency(Services.FRAMEWORK_CREATE);
  builder.setInitialMode(Mode.ON_DEMAND);
  return builder.install();
}

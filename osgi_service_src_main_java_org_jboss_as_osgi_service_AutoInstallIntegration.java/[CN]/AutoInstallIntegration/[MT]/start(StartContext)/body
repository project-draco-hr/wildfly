{
  ServiceController<?> serviceController=context.getController();
  LOGGER.tracef("Starting: %s in mode %s",serviceController.getName(),serviceController.getMode());
  final BundleContext syscontext=injectedSystemContext.getValue();
  final String startLevelProp=syscontext.getProperty(Constants.FRAMEWORK_BEGINNING_STARTLEVEL);
  final int beginningStartLevel=startLevelProp != null ? Integer.parseInt(startLevelProp) : 1;
  try {
    ServerEnvironment serverEnvironment=injectedServerEnvironment.getValue();
    bundlesDir=serverEnvironment.getBundlesDir();
    if (bundlesDir.isDirectory() == false)     throw MESSAGES.illegalStateCannotFindBundleDir(bundlesDir);
    final List<OSGiCapability> configcaps=new ArrayList<OSGiCapability>();
    configcaps.add(new OSGiCapability("org.osgi.enterprise",null));
    configcaps.addAll(injectedSubsystemState.getValue().getCapabilities());
    Iterator<OSGiCapability> iterator=configcaps.iterator();
    while (iterator.hasNext()) {
      OSGiCapability configcap=iterator.next();
      if (installInitialModuleCapability(configcap))       iterator.remove();
    }
    final Set<ServiceName> resolvableServices=new LinkedHashSet<ServiceName>();
    AutoInstallComplete installComplete=new AutoInstallComplete(){
      @Override protected boolean allServicesAdded(      Set<ServiceName> trackedServices){
        return configcaps.size() == trackedServices.size();
      }
      @Override public void start(      StartContext context) throws StartException {
        Set<Bundle> resolvableBundles=new LinkedHashSet<Bundle>();
        ServiceContainer serviceContainer=context.getController().getServiceContainer();
        for (        ServiceName serviceName : resolvableServices) {
          ServiceController<?> requiredService=serviceContainer.getRequiredService(serviceName);
          resolvableBundles.add((Bundle)requiredService.getValue());
        }
        Bundle[] bundleArr=resolvableBundles.toArray(new Bundle[resolvableBundles.size()]);
        PackageAdmin packageAdmin=injectedPackageAdmin.getValue();
        packageAdmin.resolveBundles(bundleArr);
        super.start(context);
      }
    }
;
    installComplete.install(context.getChildTarget());
    ServiceListener<Bundle> listener=installComplete.getListener();
    for (    OSGiCapability configcap : configcaps) {
      ServiceName serviceName=installInitialCapability(syscontext,configcap,listener);
      int startLevel=configcap.getStartLevel() != null ? configcap.getStartLevel() : 1;
      if (serviceName != null && startLevel <= beginningStartLevel) {
        resolvableServices.add(serviceName);
      }
    }
  }
 catch (  Exception ex) {
    throw MESSAGES.startFailedToProcessInitialCapabilites(ex);
  }
}

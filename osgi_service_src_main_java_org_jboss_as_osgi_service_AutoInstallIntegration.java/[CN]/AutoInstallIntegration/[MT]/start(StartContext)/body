{
  ServiceController<?> serviceController=context.getController();
  LOGGER.debugf("Starting: %s in mode %s",serviceController.getName(),serviceController.getMode());
  final Map<ServiceName,Deployment> installedBundles=new LinkedHashMap<ServiceName,Deployment>();
  final Set<ServiceName> resolvableServices=new LinkedHashSet<ServiceName>();
  final BundleContext syscontext=injectedSystemBundle.getValue().getBundleContext();
  final String startLevelProp=syscontext.getProperty(Constants.FRAMEWORK_BEGINNING_STARTLEVEL);
  final int beginningStartLevel=startLevelProp != null ? Integer.parseInt(startLevelProp) : 1;
  try {
    ServiceTarget serviceTarget=context.getChildTarget();
    ServerEnvironment serverEnvironment=injectedServerEnvironment.getValue();
    bundlesDir=serverEnvironment.getBundlesDir();
    if (bundlesDir.isDirectory() == false)     throw MESSAGES.illegalStateCannotFindBundleDir(bundlesDir);
    List<OSGiCapability> configcaps=new ArrayList<OSGiCapability>();
    configcaps.add(new OSGiCapability("org.osgi.enterprise",null));
    configcaps.addAll(injectedSubsystemState.getValue().getCapabilities());
    for (    OSGiCapability moduleMetaData : configcaps) {
      ServiceName serviceName=installCapability(serviceTarget,moduleMetaData,installedBundles);
      int startLevel=moduleMetaData.getStartLevel() != null ? moduleMetaData.getStartLevel() : 1;
      if (serviceName != null && startLevel <= beginningStartLevel) {
        resolvableServices.add(serviceName);
      }
    }
    AutoInstallProviderComplete installComplete=new AutoInstallProviderComplete(installedBundles){
      @Override public void start(      StartContext context) throws StartException {
        Set<Bundle> resolvableBundles=new LinkedHashSet<Bundle>();
        ServiceContainer serviceContainer=context.getController().getServiceContainer();
        for (        ServiceName serviceName : resolvableServices) {
          ServiceController<?> requiredService=serviceContainer.getRequiredService(serviceName);
          resolvableBundles.add((Bundle)requiredService.getValue());
        }
        Bundle[] bundleArr=resolvableBundles.toArray(new Bundle[resolvableBundles.size()]);
        PackageAdmin packageAdmin=injectedPackageAdmin.getValue();
        packageAdmin.resolveBundles(bundleArr);
        super.start(context);
      }
    }
;
    installComplete.install(serviceTarget);
  }
 catch (  Exception ex) {
    throw MESSAGES.startFailedToProcessInitialCapabilites(ex);
  }
}

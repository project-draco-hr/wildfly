{
  String identifier=osgicap.getIdentifier();
  if (isValidModuleIdentifier(identifier)) {
    ModuleIdentifier moduleId=ModuleIdentifier.fromString(identifier);
    File bundleFile=ModuleIdentityRepository.getRepositoryEntry(bundlesDir,moduleId);
    if (bundleFile == null) {
      LOGGER.tracef("Installing initial module capability: %s",identifier);
      final Module module;
      try {
        ModuleLoader moduleLoader=Module.getBootModuleLoader();
        module=moduleLoader.loadModule(moduleId);
      }
 catch (      ModuleLoadException ex) {
        throw MESSAGES.startFailedCannotResolveInitialCapability(ex,identifier);
      }
      if (module != null) {
        final OSGiMetaData metadata=getModuleMetadata(module);
        final BundleContext syscontext=injectedSystemContext.getValue();
        XBundleRevisionBuilderFactory factory=new XBundleRevisionBuilderFactory(){
          @Override public XBundleRevision createResource(){
            return new AbstractBundleRevisionAdaptor(syscontext,module);
          }
        }
;
        XResourceBuilder builder=XBundleRevisionBuilderFactory.create(factory);
        if (metadata != null) {
          builder.loadFrom(metadata);
        }
 else {
          builder.loadFrom(module);
        }
        XResource resource=builder.getResource();
        injectedEnvironment.getValue().installResources(resource);
        return true;
      }
    }
  }
  return false;
}

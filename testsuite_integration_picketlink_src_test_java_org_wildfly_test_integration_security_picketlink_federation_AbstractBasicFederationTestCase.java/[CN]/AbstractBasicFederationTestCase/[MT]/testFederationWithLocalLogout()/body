{
  WebConversation conversation=new WebConversation();
  HttpUnitOptions.setLoggingHttpHeaders(true);
  LOGGER.trace("REQEST: " + formatUrl(this.serviceProvider1));
  WebRequest request=new GetMethodWebRequest(formatUrl(this.serviceProvider1));
  WebResponse response=conversation.getResponse(request);
  LOGGER.trace("RESPONSE: " + response.getText());
  assertTrue(response.getURL().getPath().startsWith("/idp"));
  assertEquals(1,response.getForms().length);
  WebForm webForm=response.getForms()[0];
  webForm.setParameter("j_username","tomcat");
  webForm.setParameter("j_password","tomcat");
  webForm.getSubmitButtons()[0].click();
  response=conversation.getCurrentPage();
  assertTrue("cannot reach protected content at " + formatUrl(this.serviceProvider1),response.getText().contains("Welcome to " + formatContextPath(this.serviceProvider1)));
  LOGGER.trace("REQEST: " + formatUrl(this.serviceProvider2));
  request=new GetMethodWebRequest(formatUrl(this.serviceProvider2));
  response=conversation.getResponse(request);
  LOGGER.trace("RESPONSE: " + response.getText());
  assertTrue("cannot reach protected content at " + formatUrl(this.serviceProvider2),response.getText().contains("Welcome to " + formatContextPath(this.serviceProvider2)));
  LOGGER.trace("REQEST: " + formatUrl(this.serviceProvider2) + LOCAL_LOGOUT_URL_PARAM);
  response=conversation.getResponse(formatUrl(this.serviceProvider2) + LOCAL_LOGOUT_URL_PARAM);
  LOGGER.trace("LLO response(" + this.serviceProvider2 + "):"+ response.getText());
  assertTrue("cannot reach locally logged out page",response.getText().contains("Logout"));
  LOGGER.trace("REQEST: " + formatUrl(this.serviceProvider1));
  request=new GetMethodWebRequest(formatUrl(this.serviceProvider1));
  response=conversation.getResponse(request);
  LOGGER.trace("RESPONSE: " + response.getText());
  assertTrue("cannot reach protected content at " + formatUrl(this.serviceProvider1),response.getText().contains("Welcome to " + formatContextPath(this.serviceProvider1)));
  LOGGER.trace("REQEST: " + formatUrl(this.serviceProvider1) + LOCAL_LOGOUT_URL_PARAM);
  response=conversation.getResponse(formatUrl(this.serviceProvider1) + LOCAL_LOGOUT_URL_PARAM);
  LOGGER.trace("LLO response(" + this.serviceProvider1 + "):"+ response.getText());
  assertTrue("cannot reach locally logged out page",response.getText().contains("Logout"));
}

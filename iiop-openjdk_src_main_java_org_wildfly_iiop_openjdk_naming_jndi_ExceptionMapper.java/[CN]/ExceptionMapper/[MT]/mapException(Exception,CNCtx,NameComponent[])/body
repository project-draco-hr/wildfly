{
  if (e instanceof NamingException) {
    return (NamingException)e;
  }
  if (e instanceof RuntimeException) {
    throw (RuntimeException)e;
  }
  NamingException ne;
  if (e instanceof NotFound) {
    if (ctx.federation) {
      return tryFed((NotFound)e,ctx,inputName);
    }
 else {
      ne=new NameNotFoundException();
    }
  }
 else   if (e instanceof CannotProceed) {
    ne=new CannotProceedException();
    NamingContext nc=((CannotProceed)e).cxt;
    NameComponent[] rest=((CannotProceed)e).rest_of_name;
    if (inputName != null && (inputName.length > rest.length)) {
      NameComponent[] resolvedName=new NameComponent[inputName.length - rest.length];
      System.arraycopy(inputName,0,resolvedName,0,resolvedName.length);
      ne.setResolvedObj(new CNCtx(ctx._orb,nc,ctx._env,ctx.makeFullName(resolvedName)));
    }
 else {
      ne.setResolvedObj(ctx);
    }
    ne.setRemainingName(org.wildfly.iiop.openjdk.naming.jndi.CNNameParser.cosNameToName(rest));
  }
 else   if (e instanceof InvalidName) {
    ne=new InvalidNameException();
  }
 else   if (e instanceof AlreadyBound) {
    ne=new NameAlreadyBoundException();
  }
 else   if (e instanceof NotEmpty) {
    ne=new ContextNotEmptyException();
  }
 else {
    ne=new NamingException();
  }
  ne.setRootCause(e);
  return ne;
}

{
  final Resource resource=context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS);
  final ModelNode subModel=resource.getModel();
  ModelNode type=ProtocolResourceDefinition.TYPE.validateOperation(operation);
  PathElement protocolRelativePath=PathElement.pathElement(ModelKeys.PROTOCOL,type.asString());
  if (!resource.hasChild(protocolRelativePath)) {
    throw JGroupsLogger.ROOT_LOGGER.protocolNotDefined(protocolRelativePath.toString());
  }
  context.removeResource(PathAddress.pathAddress(protocolRelativePath));
  List<ModelNode> protocols=subModel.get(ModelKeys.PROTOCOLS).asList();
  ModelNode newList=new ModelNode();
  if (protocols == null) {
  }
  for (  ModelNode protocol : protocols) {
    if (!protocol.asString().equals(type.asString())) {
      newList.add(protocol);
    }
  }
  subModel.get(ModelKeys.PROTOCOLS).set(newList);
  reloadRequiredStep(context);
  context.stepCompleted();
}

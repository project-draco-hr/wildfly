{
  KernelServicesBuilder builder=createKernelServicesBuilder(createAdditionalInitialization());
  ModelVersion version_1_1_0=ModelVersion.create(1,1,0);
  builder.createLegacyKernelServicesBuilder(createAdditionalInitialization(),controllerVersion,version_1_1_0).addMavenResourceURL("org.jboss.as:jboss-as-jaxr:" + controllerVersion.getMavenGavVersion()).setExtensionClassName("org.jboss.as.jaxr.extension.JAXRSubsystemExtension").configureReverseControllerCheck(createAdditionalInitialization(),null);
  KernelServices mainServices=builder.build();
  KernelServices legacyServices=mainServices.getLegacyServices(version_1_1_0);
  Assert.assertNotNull(legacyServices);
  Assert.assertTrue("main services did not boot",mainServices.isSuccessfulBoot());
  Assert.assertTrue(legacyServices.isSuccessfulBoot());
  List<ModelNode> xmlOps=builder.parseXmlResource("xsd1_1expressions.xml");
  ModelTestUtils.checkFailedTransformedBootOperations(mainServices,version_1_1_0,xmlOps,new FailedOperationTransformationConfig().addFailedAttribute(PathAddress.pathAddress(JAXRExtension.SUBSYSTEM_PATH),new FailedOperationTransformationConfig.RejectExpressionsConfig(JAXRSubsystemRootResource.CONNECTION_FACTORY_ATTRIBUTE)));
}

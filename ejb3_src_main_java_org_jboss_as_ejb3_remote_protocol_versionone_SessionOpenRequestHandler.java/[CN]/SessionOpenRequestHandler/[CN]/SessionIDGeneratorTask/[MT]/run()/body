{
  final SessionID sessionID;
  try {
    try {
      sessionID=statefulSessionComponent.createSession();
    }
 catch (    Throwable t) {
      SessionOpenRequestHandler.this.writeException(channel,SessionOpenRequestHandler.this.marshallerFactory,invocationId,t,null);
      return;
    }
    SessionOpenRequestHandler.this.writeSessionId(channel,invocationId,sessionID);
  }
 catch (  IOException ioe) {
    logger.error("IOException while generating session id for invocation id: " + invocationId + " on channel "+ channel,ioe);
    IoUtils.safeClose(this.channel);
    return;
  }
}

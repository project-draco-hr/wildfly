{
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    requireNoNamespaceAttribute(reader,i);
    final String value=reader.getAttributeValue(i);
    final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case ADVERTISE_SOCKET:
      conf.get(ADVERTISE_SOCKET).set(value);
    break;
case PROXY_LIST:
  conf.get(PROXY_LIST).set(ParseUtils.parsePossibleExpression(value));
break;
case PROXY_URL:
conf.get(PROXY_URL).set(ParseUtils.parsePossibleExpression(value));
break;
case ADVERTISE:
conf.get(ADVERTISE).set(value);
break;
case ADVERTISE_SECURITY_KEY:
conf.get(ADVERTISE_SECURITY_KEY).set(ParseUtils.parsePossibleExpression(value));
break;
case EXCLUDED_CONTEXTS:
conf.get(EXCLUDED_CONTEXTS).set(ParseUtils.parsePossibleExpression(value));
break;
case AUTO_ENABLE_CONTEXTS:
conf.get(AUTO_ENABLE_CONTEXTS).set(value);
break;
case STOP_CONTEXT_TIMEOUT:
conf.get(STOP_CONTEXT_TIMEOUT).set(value);
break;
case SOCKET_TIMEOUT:
conf.get(SOCKET_TIMEOUT).set(value);
break;
case STICKY_SESSION:
conf.get(STICKY_SESSION).set(value);
break;
case STICKY_SESSION_REMOVE:
conf.get(STICKY_SESSION_REMOVE).set(value);
break;
case STICKY_SESSION_FORCE:
conf.get(STICKY_SESSION_FORCE).set(value);
break;
case WORKER_TIMEOUT:
conf.get(WORKER_TIMEOUT).set(value);
break;
case MAX_ATTEMPTS:
conf.get(MAX_ATTEMPTS).set(value);
break;
case FLUSH_PACKETS:
conf.get(FLUSH_PACKETS).set(value);
break;
case FLUSH_WAIT:
conf.get(FLUSH_WAIT).set(value);
break;
case PING:
conf.get(PING).set(value);
break;
case SMAX:
conf.get(SMAX).set(value);
break;
case TTL:
conf.get(TTL).set(value);
break;
case NODE_TIMEOUT:
conf.get(NODE_TIMEOUT).set(value);
break;
case BALANCER:
conf.get(BALANCER).set(value);
break;
case DOMAIN:
conf.get(DOMAIN).set(ParseUtils.parsePossibleExpression(value));
break;
default :
throw unexpectedAttribute(reader,i);
}
}
}

{
  PathAddress address=parent.append(ModClusterExtension.DYNAMIC_LOAD_PROVIDER);
  final ModelNode load=Util.createAddOperation(address);
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    requireNoNamespaceAttribute(reader,i);
    final String value=reader.getAttributeValue(i);
    final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case HISTORY:
      DynamicLoadProviderDefinition.HISTORY.parseAndSetParameter(value,load,reader);
    break;
case DECAY:
  DynamicLoadProviderDefinition.DECAY.parseAndSetParameter(value,load,reader);
break;
default :
throw unexpectedAttribute(reader,i);
}
}
list.add(load);
while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
final Element element=Element.forName(reader.getLocalName());
switch (element) {
case LOAD_METRIC:
parseLoadMetric(reader,list,address);
break;
case CUSTOM_LOAD_METRIC:
parseCustomLoadMetric(reader,list,address);
break;
default :
throw unexpectedElement(reader);
}
}
}

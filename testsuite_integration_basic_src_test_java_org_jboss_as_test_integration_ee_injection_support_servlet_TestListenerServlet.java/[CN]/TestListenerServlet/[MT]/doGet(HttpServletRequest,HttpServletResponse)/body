{
  String mode=req.getParameter("mode");
  resp.setContentType("text/plain");
  if ("field".equals(mode)) {
    assertEquals("Listener field not injected","true",req.getAttribute("field.injected").toString());
  }
 else   if ("method".equals(mode)) {
    assertEquals("Listener setter not injected","true",req.getAttribute("setter.injected").toString());
  }
 else   if ("constructor".equals(mode)) {
    assertTrue("Listener constructor not injected",getNameFromRequest(req).contains("Joe"));
  }
 else   if ("interceptorReset".equals(mode)) {
    ComponentInterceptor.resetInterceptions();
    assertEquals(0,ComponentInterceptor.getInterceptions().size());
    resp.getWriter().append("" + ComponentInterceptor.getInterceptions().size());
  }
 else   if ("aroundInvokeVerify".equals(mode)) {
    assertEquals("Listener invocation not intercepted",2,ComponentInterceptor.getInterceptions().size());
    assertEquals("requestDestroyed",ComponentInterceptor.getInterceptions().get(0).getMethodName());
    assertEquals("requestInitialized",ComponentInterceptor.getInterceptions().get(1).getMethodName());
    resp.getWriter().append("" + ComponentInterceptor.getInterceptions().size());
  }
 else   if ("aroundConstructVerify".equals(mode)) {
    assertTrue("AroundConstruct interceptor method not invoked",AroundConstructInterceptor.aroundConstructCalled);
    String name=getNameFromRequest(req);
    assertNotNull(name);
    assertTrue(name.contains("AroundConstructInterceptor#"));
    resp.getWriter().append(name);
  }
 else {
    resp.setStatus(404);
  }
}

{
  final String name=reader.getAttributeValue(0);
  if (name == null) {
    ParseUtils.missingRequired(reader,Collections.singleton("name"));
  }
  final ModelNode queue=new ModelNode();
  queue.get(OP).set(ADD);
  queue.get(OP_ADDR).set(address).add(JMS_QUEUE,name);
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
    final Element element=Element.forName(reader.getLocalName());
switch (element) {
case ENTRY:
{
        final String entry=reader.getAttributeValue(0);
        queue.get(ENTRIES).add(entry.trim());
        ParseUtils.requireNoContent(reader);
        break;
      }
case SELECTOR:
{
      if (queue.has(SELECTOR)) {
        throw ParseUtils.duplicateNamedElement(reader,Element.SELECTOR.getLocalName());
      }
      queue.get(SELECTOR).set(reader.getElementText().trim());
      break;
    }
case DURABLE:
{
    if (queue.has(DURABLE)) {
      throw ParseUtils.duplicateNamedElement(reader,Element.DURABLE.getLocalName());
    }
    queue.get(DURABLE).set(Boolean.valueOf(reader.getElementText()));
    break;
  }
default :
{
  throw ParseUtils.unexpectedElement(reader);
}
}
}
updates.add(queue);
}

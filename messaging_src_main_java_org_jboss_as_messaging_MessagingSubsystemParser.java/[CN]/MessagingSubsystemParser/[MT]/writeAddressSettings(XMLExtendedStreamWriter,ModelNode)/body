{
  List<Property> properties=node.asPropertyList();
  if (!properties.isEmpty()) {
    writer.writeStartElement(Element.ADDRESS_SETTINGS.getLocalName());
    for (    Property matchSetting : properties) {
      writer.writeStartElement(Element.ADDRESS_SETTING.getLocalName());
      writer.writeAttribute(Attribute.MATCH.getLocalName(),matchSetting.getName());
      final ModelNode setting=matchSetting.getValue();
      CommonAttributes.DEAD_LETTER_ADDRESS.marshallAsElement(setting,writer);
      CommonAttributes.EXPIRY_ADDRESS.marshallAsElement(setting,writer);
      AddressSettingDefinition.REDELIVERY_DELAY.marshallAsElement(setting,writer);
      AddressSettingDefinition.MAX_DELIVERY_ATTEMPTS.marshallAsElement(setting,writer);
      AddressSettingDefinition.MAX_SIZE_BYTES.marshallAsElement(setting,writer);
      AddressSettingDefinition.PAGE_SIZE_BYTES.marshallAsElement(setting,writer);
      AddressSettingDefinition.PAGE_MAX_CACHE_SIZE.marshallAsElement(setting,writer);
      AddressSettingDefinition.ADDRESS_FULL_MESSAGE_POLICY.marshallAsElement(setting,writer);
      AddressSettingDefinition.MESSAGE_COUNTER_HISTORY_DAY_LIMIT.marshallAsElement(setting,writer);
      AddressSettingDefinition.LAST_VALUE_QUEUE.marshallAsElement(setting,writer);
      AddressSettingDefinition.REDISTRIBUTION_DELAY.marshallAsElement(setting,writer);
      AddressSettingDefinition.SEND_TO_DLA_ON_NO_ROUTE.marshallAsElement(setting,writer);
      writer.writeEndElement();
    }
    writer.writeEndElement();
    writeNewLine(writer);
  }
}

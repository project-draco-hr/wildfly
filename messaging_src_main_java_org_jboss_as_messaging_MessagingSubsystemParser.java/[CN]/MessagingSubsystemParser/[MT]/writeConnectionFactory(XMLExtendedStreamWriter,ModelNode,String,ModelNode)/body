{
  if (has(factory,CommonAttributes.DISCOVERY_GROUP_REF)) {
    writer.writeStartElement(Element.DISCOVERY_GROUP_REF.getLocalName());
    writeAttribute(writer,Attribute.DISCOVERY_GROUP_NAME,factory.get(DISCOVERY_GROUP_REF));
    writer.writeEndElement();
  }
  if (has(factory,CONNECTOR)) {
    writer.writeStartElement(Element.CONNECTORS.getLocalName());
    for (    Property connProp : factory.get(CONNECTOR).asPropertyList()) {
      final ModelNode conn=connProp.getValue();
      if (conn.isDefined()) {
        writer.writeStartElement(Element.CONNECTOR_REF.getLocalName());
        writer.writeAttribute(Attribute.CONNECTOR_NAME.getLocalName(),connProp.getName());
        writer.writeEndElement();
      }
    }
    writer.writeEndElement();
  }
  if (has(factory,ENTRIES)) {
    final ModelNode entries=factory.get(ENTRIES);
    if (entries.getType() == ModelType.LIST) {
      writer.writeStartElement(Element.ENTRIES.getLocalName());
      for (      ModelNode entry : entries.asList()) {
        if (entry.isDefined()) {
          writer.writeStartElement(Element.ENTRY.getLocalName());
          writeAttribute(writer,Attribute.NAME,entry);
          writer.writeEndElement();
        }
      }
      writer.writeEndElement();
    }
  }
  if (has(node,TRANSACTION)) {
    writer.writeStartElement(Element.TRANSACTION.getLocalName());
    writeTransactionTypeAttribute(writer,Element.MODE,node.get(TRANSACTION));
    writer.writeEndElement();
  }
  if (has(factory,INBOUND_CONFIG)) {
    final ModelNode inboundConfigs=factory.get(INBOUND_CONFIG);
    if (inboundConfigs.getType() == ModelType.LIST) {
      writer.writeStartElement(Element.INBOUND_CONFIG.getLocalName());
      for (      ModelNode config : inboundConfigs.asList()) {
        if (config.isDefined()) {
          if (has(config,CommonAttributes.USE_JNDI)) {
            writeSimpleElement(writer,Element.USE_JNDI,config);
          }
          if (has(config,CommonAttributes.JNDI_PARAMS)) {
            writeSimpleElement(writer,Element.JNDI_PARAMS,config);
          }
          if (has(config,CommonAttributes.SETUP_ATTEMPTS)) {
            writeSimpleElement(writer,Element.SETUP_ATTEMPTS,config);
          }
          if (has(config,CommonAttributes.SETUP_INTERVAL)) {
            writeSimpleElement(writer,Element.SETUP_INTERVAL,config);
          }
          if (has(config,CommonAttributes.USE_LOCAL_TX)) {
            writeSimpleElement(writer,Element.USE_LOCAL_TX,config);
          }
        }
      }
      writer.writeEndElement();
    }
  }
  if (has(factory,CommonAttributes.DISCOVERY_INITIAL_WAIT_TIMEOUT)) {
    writeSimpleElement(writer,Element.DISCOVERY_INITIAL_WAIT_TIMEOUT,node);
  }
  if (has(factory,CommonAttributes.CLIENT_FAILURE_CHECK_PERIOD)) {
    writeSimpleElement(writer,Element.DISCOVERY_INITIAL_WAIT_TIMEOUT,node);
  }
  if (has(factory,CommonAttributes.CONNECTION_TTL)) {
    writeSimpleElement(writer,Element.CONNECTION_TTL,node);
  }
  if (has(factory,CommonAttributes.CALL_TIMEOUT)) {
    writeSimpleElement(writer,Element.CALL_TIMEOUT,node);
  }
  if (has(factory,CommonAttributes.CONSUMER_WINDOW_SIZE)) {
    writeSimpleElement(writer,Element.CONSUMER_WINDOW_SIZE,node);
  }
  if (has(factory,CommonAttributes.CONSUMER_MAX_RATE)) {
    writeSimpleElement(writer,Element.CONSUMER_MAX_RATE,node);
  }
  if (has(factory,CommonAttributes.CONFIRMATION_WINDOW_SIZE)) {
    writeSimpleElement(writer,Element.CONFIRMATION_WINDOW_SIZE,node);
  }
  if (has(factory,CommonAttributes.PRODUCER_WINDOW_SIZE)) {
    writeSimpleElement(writer,Element.PRODUCER_WINDOW_SIZE,node);
  }
  if (has(factory,CommonAttributes.PRODUCER_MAX_RATE)) {
    writeSimpleElement(writer,Element.PRODUCER_MAX_RATE,node);
  }
  if (has(factory,CommonAttributes.CACHE_LARGE_MESSAGE_CLIENT)) {
    writeSimpleElement(writer,Element.CACHE_LARGE_MESSAGE_CLIENT,node);
  }
  if (has(factory,CommonAttributes.MIN_LARGE_MESSAGE_SIZE)) {
    writeSimpleElement(writer,Element.MIN_LARGE_MESSAGE_SIZE,node);
  }
  if (has(factory,CommonAttributes.CLIENT_ID)) {
    writeSimpleElement(writer,Element.CLIENT_ID,node);
  }
  if (has(factory,CommonAttributes.DUPS_OK_BATCH_SIZE)) {
    writeSimpleElement(writer,Element.DUPS_OK_BATCH_SIZE,node);
  }
  if (has(factory,CommonAttributes.TRANSACTION_BATCH_SIZE)) {
    writeSimpleElement(writer,Element.TRANSACTION_BATH_SIZE,node);
  }
  if (has(factory,CommonAttributes.BLOCK_ON_ACK)) {
    writeSimpleElement(writer,Element.BLOCK_ON_ACK,node);
  }
  if (has(factory,CommonAttributes.BLOCK_ON_NON_DURABLE_SEND)) {
    writeSimpleElement(writer,Element.BLOCK_ON_NON_DURABLE_SEND,node);
  }
  if (has(factory,CommonAttributes.BLOCK_ON_DURABLE_SEND)) {
    writeSimpleElement(writer,Element.BLOCK_ON_DURABLE_SEND,node);
  }
  if (has(factory,CommonAttributes.AUTO_GROUP)) {
    writeSimpleElement(writer,Element.AUTO_GROUP,node);
  }
  if (has(factory,CommonAttributes.PRE_ACK)) {
    writeSimpleElement(writer,Element.PRE_ACK,node);
  }
  if (has(factory,CommonAttributes.RETRY_INTERVAL_MULTIPLIER)) {
    writeSimpleElement(writer,Element.RETRY_INTERVAL_MULTIPLIER,node);
  }
  if (has(factory,CommonAttributes.MAX_RETRY_INTERVAL)) {
    writeSimpleElement(writer,Element.MAX_RETRY_INTERVAL,node);
  }
  if (has(factory,CommonAttributes.RECONNECT_ATTEMPTS)) {
    writeSimpleElement(writer,Element.RECONNECT_ATTEMPTS,node);
  }
  if (has(factory,CommonAttributes.FAILOVER_ON_INITIAL_CONNECTION)) {
    writeSimpleElement(writer,Element.FAILOVER_ON_INITIAL_CONNECTION,node);
  }
  if (has(factory,CommonAttributes.FAILOVER_ON_SERVER_SHUTDOWN)) {
    writeSimpleElement(writer,Element.FAILOVER_ON_SERVER_SHUTDOWN,node);
  }
  if (has(factory,CommonAttributes.LOAD_BALANCING_CLASS_NAME)) {
    writeSimpleElement(writer,Element.LOAD_BALANCING_CLASS_NAME,node);
  }
  if (has(factory,CommonAttributes.USE_GLOBAL_POOLS)) {
    writeSimpleElement(writer,Element.USE_GLOBAL_POOLS,node);
  }
  SCHEDULED_THREAD_POOL_MAX_SIZE.marshallAsElementText(factory,false,writer);
  THREAD_POOL_MAX_SIZE.marshallAsElementText(factory,false,writer);
  if (has(factory,CommonAttributes.GROUP_ID)) {
    writeSimpleElement(writer,Element.GROUP_ID,node);
  }
  writer.writeEndElement();
}

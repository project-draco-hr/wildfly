{
  Map<String,Object> params=new HashMap<String,Object>();
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
    String localString=reader.getLocalName();
    if (Element.PARAM.getLocalName().equals(localString) == false) {
      throw ParseUtils.unexpectedElement(reader);
    }
    int count=reader.getAttributeCount();
    String key=null;
    String value=null;
    for (int n=0; n < count; n++) {
      String attrName=reader.getAttributeLocalName(n);
      Attribute attribute=Attribute.forName(attrName);
switch (attribute) {
case KEY:
        key=reader.getAttributeValue(n);
      break;
case VALUE:
    value=reader.getAttributeValue(n);
  break;
default :
throw unexpectedAttribute(reader,n);
}
}
params.put(key,value);
ParseUtils.requireNoContent(reader);
}
spec.setParams(params);
}

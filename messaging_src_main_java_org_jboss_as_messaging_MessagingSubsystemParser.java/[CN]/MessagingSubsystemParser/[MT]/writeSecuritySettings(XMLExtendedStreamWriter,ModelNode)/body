{
  writer.writeStartElement(Element.SECURITY_SETTINGS.getLocalName());
  for (  Property matchRoles : node.asPropertyList()) {
    writer.writeStartElement(Element.SECURITY_SETTING.getLocalName());
    writer.writeAttribute(Attribute.MATCH.getLocalName(),matchRoles.getName());
    ArrayList<String> send=new ArrayList<String>();
    ArrayList<String> consume=new ArrayList<String>();
    ArrayList<String> createDurableQueue=new ArrayList<String>();
    ArrayList<String> deleteDurableQueue=new ArrayList<String>();
    ArrayList<String> createNonDurableQueue=new ArrayList<String>();
    ArrayList<String> deleteNonDurableQueue=new ArrayList<String>();
    ArrayList<String> manageRoles=new ArrayList<String>();
    for (    Property rolePerms : matchRoles.getValue().asPropertyList()) {
      final String role=rolePerms.getName();
      final ModelNode perms=rolePerms.getValue();
      if (perms.get(CommonAttributes.SEND_NAME).asBoolean()) {
        send.add(role);
      }
      if (perms.get(CommonAttributes.CONSUME_NAME).asBoolean()) {
        consume.add(role);
      }
      if (perms.get(CommonAttributes.CREATEDURABLEQUEUE_NAME).asBoolean()) {
        createDurableQueue.add(role);
      }
      if (perms.get(CommonAttributes.DELETEDURABLEQUEUE_NAME).asBoolean()) {
        deleteDurableQueue.add(role);
      }
      if (perms.get(CommonAttributes.CREATE_NON_DURABLE_QUEUE_NAME).asBoolean()) {
        createNonDurableQueue.add(role);
      }
      if (perms.get(CommonAttributes.DELETE_NON_DURABLE_QUEUE_NAME).asBoolean()) {
        deleteNonDurableQueue.add(role);
      }
      if (perms.get(CommonAttributes.MANAGE_NAME).asBoolean()) {
        manageRoles.add(role);
      }
    }
    writePermission(writer,SEND_NAME,send);
    writePermission(writer,CONSUME_NAME,consume);
    writePermission(writer,CREATEDURABLEQUEUE_NAME,createDurableQueue);
    writePermission(writer,DELETEDURABLEQUEUE_NAME,deleteDurableQueue);
    writePermission(writer,CREATE_NON_DURABLE_QUEUE_NAME,createNonDurableQueue);
    writePermission(writer,DELETE_NON_DURABLE_QUEUE_NAME,deleteNonDurableQueue);
    writePermission(writer,MANAGE_NAME,manageRoles);
    writer.writeEndElement();
  }
  writer.writeEndElement();
}

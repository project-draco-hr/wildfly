{
  context.startSubsystemElement(Namespace.CURRENT.getUriString(),false);
  final ModelNode node=context.getModelNode();
  if (has(node,ACCEPTOR)) {
    writeAcceptors(writer,node.get(ACCEPTOR));
  }
  if (has(node,ADDRESS_SETTING)) {
    writeAddressSettings(writer,node.get(ADDRESS_SETTING));
  }
  if (has(node,ASYNC_CONNECTION_EXECUTION_ENABLED)) {
  }
  if (has(node,BACKUP)) {
    writeSimpleElement(writer,Element.BACKUP,node);
  }
  if (has(node,CONNECTOR_REF)) {
    writeSimpleElement(writer,Element.CONNECTOR_REF,node);
  }
  if (has(node,BINDINGS_DIRECTORY)) {
    writeDirectory(writer,Element.BINDINGS_DIRECTORY,node);
  }
  if (has(node,BROADCAST_PERIOD)) {
    writeSimpleElement(writer,Element.BROADCAST_PERIOD,node);
  }
  if (has(node,CLUSTERED)) {
    writeSimpleElement(writer,Element.CLUSTERED,node);
  }
  if (has(node,CLUSTER_PASSWORD)) {
    writeSimpleElement(writer,Element.CLUSTER_PASSWORD,node);
  }
  if (has(node,CLUSTER_USER)) {
    writeSimpleElement(writer,Element.CLUSTER_USER,node);
  }
  if (has(node,CONNECTION_TTL_OVERRIDE)) {
    writeSimpleElement(writer,Element.CONNECTION_TTL_OVERRIDE,node);
  }
  if (has(node,CONNECTOR)) {
    writeConnectors(writer,node.get(CONNECTOR));
  }
  if (has(node,CONNECTOR_REF)) {
  }
  if (has(node,CommonAttributes.CREATE_BINDINGS_DIR)) {
    writeSimpleElement(writer,Element.CREATE_BINDINGS_DIR,node);
  }
  if (has(node,CommonAttributes.CREATE_JOURNAL_DIR)) {
    writeSimpleElement(writer,Element.CREATE_BINDINGS_DIR,node);
  }
  if (has(node,CommonAttributes.FILE_DEPLOYMENT_ENABLED)) {
  }
  if (has(node,CommonAttributes.GROUP_ADDRESS)) {
  }
  if (has(node,CommonAttributes.GROUP_PORT)) {
  }
  if (has(node,CommonAttributes.GROUPING_HANDLER)) {
  }
  if (has(node,CommonAttributes.ID_CACHE_SIZE)) {
    writeSimpleElement(writer,Element.ID_CACHE_SIZE,node);
  }
  if (has(node,CommonAttributes.JMX_DOMAIN)) {
    writeSimpleElement(writer,Element.JMX_DOMAIN,node);
  }
  if (has(node,CommonAttributes.JMX_MANAGEMENT_ENABLED)) {
    writeSimpleElement(writer,Element.JMX_MANAGEMENT_ENABLED,node);
  }
  if (has(node,CommonAttributes.JOURNAL_BUFFER_SIZE)) {
  }
  if (has(node,CommonAttributes.JOURNAL_BUFFER_TIMEOUT)) {
    writeSimpleElement(writer,Element.JOURNAL_BUFFER_TIMEOUT,node);
  }
  if (has(node,CommonAttributes.JOURNAL_COMPACT_MIN_FILES)) {
    writeSimpleElement(writer,Element.JOURNAL_COMPACT_MIN_FILES,node);
  }
  if (has(node,CommonAttributes.JOURNAL_COMPACT_PERCENTAGE)) {
    writeSimpleElement(writer,Element.JOURNAL_COMPACT_PERCENTAGE,node);
  }
  if (has(node,CommonAttributes.JOURNAL_COMPACT_PERCENTAGE)) {
    writeSimpleElement(writer,Element.JOURNAL_COMPACT_PERCENTAGE,node);
  }
  if (has(node,CommonAttributes.JOURNAL_DIRECTORY)) {
    writeDirectory(writer,Element.JOURNAL_DIRECTORY,node);
  }
  if (has(node,CommonAttributes.JOURNAL_MIN_FILES)) {
    writeSimpleElement(writer,Element.JOURNAL_MIN_FILES,node);
  }
  if (has(node,CommonAttributes.JOURNAL_SYNC_NON_TRANSACTIONAL)) {
    writeSimpleElement(writer,Element.JOURNAL_SYNC_TRANSACTIONAL,node);
  }
  if (has(node,CommonAttributes.JOURNAL_SYNC_TRANSACTIONAL)) {
    writeSimpleElement(writer,Element.JOURNAL_SYNC_TRANSACTIONAL,node);
  }
  if (has(node,CommonAttributes.JOURNAL_TYPE)) {
    writeSimpleElement(writer,Element.JOURNAL_TYPE,node);
  }
  if (has(node,CommonAttributes.JOURNAL_FILE_SIZE)) {
    writeSimpleElement(writer,Element.JOURNAL_FILE_SIZE,node);
  }
  if (has(node,CommonAttributes.JOURNAL_MAX_IO)) {
    writeSimpleElement(writer,Element.JOURNAL_MAX_IO,node);
  }
  if (has(node,CommonAttributes.LARGE_MESSAGES_DIRECTORY)) {
    writeDirectory(writer,Element.LARGE_MESSAGES_DIRECTORY,node);
  }
  if (has(node,CommonAttributes.LOCAL_BIND_ADDRESS)) {
  }
  if (has(node,CommonAttributes.LOCAL_BIND_PORT)) {
  }
  if (has(node,CommonAttributes.LOG_JOURNAL_WRITE_RATE)) {
    writeSimpleElement(writer,Element.LOG_JOURNAL_WRITE_RATE,node);
  }
  if (has(node,CommonAttributes.MANAGEMENT_ADDRESS)) {
  }
  if (has(node,CommonAttributes.MANAGEMENT_NOTIFICATION_ADDRESS)) {
  }
  if (has(node,CommonAttributes.MEMORY_MEASURE_INTERVAL)) {
  }
  if (has(node,CommonAttributes.MEMORY_WARNING_THRESHOLD)) {
  }
  if (has(node,CommonAttributes.MESSAGE_COUNTER_ENABLED)) {
  }
  if (has(node,CommonAttributes.MESSAGE_COUNTER_HISTORY_DAY_LIMIT)) {
  }
  if (has(node,CommonAttributes.MESSAGE_COUNTER_MAX_DAY_HISTORY)) {
  }
  if (has(node,CommonAttributes.MESSAGE_COUNTER_SAMPLE_PERIOD)) {
  }
  if (has(node,CommonAttributes.MESSAGE_EXPIRY_SCAN_PERIOD)) {
  }
  if (has(node,CommonAttributes.MESSAGE_EXPIRY_THREAD_PRIORITY)) {
  }
  if (has(node,CommonAttributes.PAGING_DIRECTORY)) {
    writeDirectory(writer,Element.PAGING_DIRECTORY,node);
  }
  if (has(node,CommonAttributes.PERF_BLAST_PAGES)) {
  }
  if (has(node,CommonAttributes.PERSIST_DELIVERY_COUNT_BEFORE_DELIVERY)) {
  }
  if (has(node,CommonAttributes.PERSIST_ID_CACHE)) {
  }
  if (has(node,CommonAttributes.PERSISTENCE_ENABLED)) {
    writeSimpleElement(writer,Element.PERSISTENCE_ENABLED,node);
  }
  if (has(node,CommonAttributes.REFRESH_TIMEOUT)) {
  }
  if (has(node,CommonAttributes.REMOTING_INTERCEPTORS)) {
  }
  if (has(node,CommonAttributes.RUN_SYNC_SPEED_TEST)) {
  }
  if (has(node,CommonAttributes.SECURITY_ENABLED)) {
  }
  if (has(node,CommonAttributes.SECURITY_INVALIDATION_INTERVAL)) {
  }
  if (has(node,CommonAttributes.SECURITY_SETTING)) {
    writeSecuritySettings(writer,node.get(CommonAttributes.SECURITY_SETTING));
  }
  if (has(node,CommonAttributes.SERVER_DUMP_INTERVAL)) {
  }
  if (has(node,CommonAttributes.SHARED_STORE)) {
  }
  if (has(node,CommonAttributes.TRANSACTION_TIMEOUT)) {
  }
  if (has(node,CommonAttributes.TRANSACTION_TIMEOUT_SCAN_PERIOD)) {
  }
  if (has(node,CommonAttributes.WILD_CARD_ROUTING_ENABLED)) {
  }
  if (has(node,CommonAttributes.DEAD_LETTER_ADDRESS)) {
  }
  if (has(node,CommonAttributes.EXPIRY_ADDRESS)) {
  }
  if (has(node,CommonAttributes.REDELIVERY_DELAY)) {
  }
  if (has(node,CommonAttributes.MAX_DELIVERY_ATTEMPTS)) {
  }
  if (has(node,CommonAttributes.MAX_SIZE_BYTES_NODE_NAME)) {
  }
  if (has(node,CommonAttributes.ADDRESS_FULL_MESSAGE_POLICY)) {
  }
  if (has(node,CommonAttributes.PAGE_SIZE_BYTES_NODE_NAME)) {
  }
  if (has(node,CommonAttributes.MESSAGE_COUNTER_HISTORY_DAY_LIMIT)) {
  }
  if (has(node,CommonAttributes.LVQ)) {
  }
  if (has(node,CommonAttributes.REDISTRIBUTION_DELAY)) {
  }
  if (has(node,CommonAttributes.SEND_TO_DLA_ON_NO_ROUTE)) {
  }
  if (has(node,CommonAttributes.QUEUE)) {
    writeQueues(writer,node.get(CommonAttributes.QUEUE));
  }
  if (node.has(CONNECTION_FACTORY) || node.has(POOLED_CONNECTION_FACTORY)) {
    writer.writeStartElement(CONNECTION_FACTORIES);
    if (node.has(CONNECTION_FACTORY)) {
      writeConnectionFactories(writer,node.get(CONNECTION_FACTORY));
    }
    if (node.has(POOLED_CONNECTION_FACTORY)) {
      writePooledConnectionFactories(writer,node.get(POOLED_CONNECTION_FACTORY));
    }
    writer.writeEndElement();
  }
  if (node.has(JMS_QUEUE) || node.has(JMS_TOPIC)) {
    writer.writeStartElement(JMS_DESTINATIONS);
    if (node.has(JMS_QUEUE)) {
      writeJmsQueues(writer,node.get(JMS_QUEUE));
    }
    if (node.has(JMS_TOPIC)) {
      writeTopics(writer,node.get(JMS_TOPIC));
    }
    writer.writeEndElement();
  }
  writer.writeEndElement();
}

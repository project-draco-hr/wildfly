{
  context.startSubsystemElement(Namespace.CURRENT.getUriString(),false);
  final ModelNode node=context.getModelNode();
  for (  AttributeDefinition simpleAttribute : CommonAttributes.SIMPLE_ROOT_RESOURCE_ATTRIBUTES) {
    simpleAttribute.marshallAsElementText(node,writer);
  }
  if (has(node,ACCEPTOR)) {
    writeAcceptors(writer,node.get(ACCEPTOR));
  }
  if (has(node,ADDRESS_SETTING)) {
    writeAddressSettings(writer,node.get(ADDRESS_SETTING));
  }
  if (has(node,CONNECTOR_REF)) {
    writeSimpleElement(writer,Element.CONNECTOR_REF,node);
  }
  if (has(node,BINDINGS_DIRECTORY)) {
    writeDirectory(writer,Element.BINDINGS_DIRECTORY,node);
  }
  if (has(node,BROADCAST_PERIOD)) {
    writeSimpleElement(writer,Element.BROADCAST_PERIOD,node);
  }
  if (has(node,CONNECTOR)) {
    writeConnectors(writer,node.get(CONNECTOR));
  }
  if (has(node,CONNECTOR_REF)) {
  }
  if (has(node,CommonAttributes.FILE_DEPLOYMENT_ENABLED)) {
  }
  if (has(node,CommonAttributes.GROUP_ADDRESS)) {
  }
  if (has(node,CommonAttributes.GROUP_PORT)) {
  }
  if (has(node,CommonAttributes.GROUPING_HANDLER)) {
  }
  if (has(node,CommonAttributes.JOURNAL_DIRECTORY)) {
    writeDirectory(writer,Element.JOURNAL_DIRECTORY,node);
  }
  if (has(node,CommonAttributes.LARGE_MESSAGES_DIRECTORY)) {
    writeDirectory(writer,Element.LARGE_MESSAGES_DIRECTORY,node);
  }
  if (has(node,CommonAttributes.LOCAL_BIND_ADDRESS)) {
  }
  if (has(node,CommonAttributes.LOCAL_BIND_PORT)) {
  }
  if (has(node,CommonAttributes.MESSAGE_COUNTER_HISTORY_DAY_LIMIT)) {
  }
  if (has(node,CommonAttributes.PAGING_DIRECTORY)) {
    writeDirectory(writer,Element.PAGING_DIRECTORY,node);
  }
  if (has(node,CommonAttributes.REFRESH_TIMEOUT)) {
  }
  if (has(node,CommonAttributes.REMOTING_INTERCEPTORS)) {
  }
  if (has(node,CommonAttributes.SECURITY_SETTING)) {
    writeSecuritySettings(writer,node.get(CommonAttributes.SECURITY_SETTING));
  }
  if (has(node,CommonAttributes.DEAD_LETTER_ADDRESS)) {
  }
  if (has(node,CommonAttributes.EXPIRY_ADDRESS)) {
  }
  if (has(node,CommonAttributes.REDELIVERY_DELAY)) {
  }
  if (has(node,CommonAttributes.MAX_DELIVERY_ATTEMPTS)) {
  }
  if (has(node,CommonAttributes.MAX_SIZE_BYTES_NODE_NAME)) {
  }
  if (has(node,CommonAttributes.ADDRESS_FULL_MESSAGE_POLICY)) {
  }
  if (has(node,CommonAttributes.PAGE_SIZE_BYTES_NODE_NAME)) {
  }
  if (has(node,CommonAttributes.MESSAGE_COUNTER_HISTORY_DAY_LIMIT)) {
  }
  if (has(node,CommonAttributes.LVQ)) {
  }
  if (has(node,CommonAttributes.REDISTRIBUTION_DELAY)) {
  }
  if (has(node,CommonAttributes.SEND_TO_DLA_ON_NO_ROUTE)) {
  }
  if (has(node,CommonAttributes.QUEUE)) {
    writeQueues(writer,node.get(CommonAttributes.QUEUE));
  }
  if (node.has(CONNECTION_FACTORY) || node.has(POOLED_CONNECTION_FACTORY)) {
    writer.writeStartElement(JMS_CONNECTION_FACTORIES);
    if (node.has(CONNECTION_FACTORY)) {
      writeConnectionFactories(writer,node.get(CONNECTION_FACTORY));
    }
    if (node.has(POOLED_CONNECTION_FACTORY)) {
      writePooledConnectionFactories(writer,node.get(POOLED_CONNECTION_FACTORY));
    }
    writer.writeEndElement();
  }
  if (node.has(JMS_QUEUE) || node.has(JMS_TOPIC)) {
    writer.writeStartElement(JMS_DESTINATIONS);
    if (node.has(JMS_QUEUE)) {
      writeJmsQueues(writer,node.get(JMS_QUEUE));
    }
    if (node.has(JMS_TOPIC)) {
      writeTopics(writer,node.get(JMS_TOPIC));
    }
    writer.writeEndElement();
  }
  writer.writeEndElement();
}

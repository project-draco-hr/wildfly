{
  if (modelVersion.getMajor() > 1 || modelVersion.getMinor() > 3) {
    return;
  }
  KernelServicesBuilder builder=createKernelServicesBuilder(TestModelType.DOMAIN).setModelInitializer(StandardServerGroupInitializers.XML_MODEL_INITIALIZER,StandardServerGroupInitializers.XML_MODEL_WRITE_SANITIZER).createContentRepositoryContent("12345678901234567890").createContentRepositoryContent("09876543210987654321");
  LegacyKernelServicesInitializer legacyInitializer=StandardServerGroupInitializers.addServerGroupInitializers(builder.createLegacyKernelServicesBuilder(modelVersion,testControllerVersion));
  KernelServices mainServices=builder.build();
  List<ModelNode> ops=builder.parseXmlResource("servergroup_1_3-with-expressions.xml");
  ModelTestUtils.checkFailedTransformedBootOperations(mainServices,modelVersion,ops,new FailedOperationTransformationConfig().addFailedAttribute(PathAddress.pathAddress(PathElement.pathElement(SERVER_GROUP)),new FailedOperationTransformationConfig.RejectExpressionsConfig(ServerGroupResourceDefinition.MANAGEMENT_SUBSYSTEM_ENDPOINT,ServerGroupResourceDefinition.SOCKET_BINDING_PORT_OFFSET).setReadOnly(ServerGroupResourceDefinition.MANAGEMENT_SUBSYSTEM_ENDPOINT)));
}

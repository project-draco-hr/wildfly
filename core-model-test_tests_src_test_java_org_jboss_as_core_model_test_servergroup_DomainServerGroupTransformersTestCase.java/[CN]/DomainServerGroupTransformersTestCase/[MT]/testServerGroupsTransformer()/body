{
  boolean is71x=modelVersion.getMajor() == 1 && modelVersion.getMinor() < 4;
  KernelServicesBuilder builder=createKernelServicesBuilder(TestModelType.DOMAIN).setModelInitializer(StandardServerGroupInitializers.XML_MODEL_INITIALIZER,StandardServerGroupInitializers.XML_MODEL_WRITE_SANITIZER).createContentRepositoryContent("12345678901234567890").createContentRepositoryContent("09876543210987654321").setXmlResource(is71x ? "servergroup_1_3.xml" : "servergroup-with-expressions.xml");
  LegacyKernelServicesInitializer legacyInitializer=StandardServerGroupInitializers.addServerGroupInitializers(builder.createLegacyKernelServicesBuilder(modelVersion,testControllerVersion));
  if (is71x) {
    ExcludeCommonOperations.excludeBadOps_7_1_x(legacyInitializer);
  }
  KernelServices mainServices=builder.build();
  Assert.assertTrue(mainServices.isSuccessfulBoot());
  KernelServices legacyServices=mainServices.getLegacyServices(modelVersion);
  Assert.assertTrue(legacyServices.isSuccessfulBoot());
  checkCoreModelTransformation(mainServices,modelVersion,MODEL_FIXER,MODEL_FIXER);
}

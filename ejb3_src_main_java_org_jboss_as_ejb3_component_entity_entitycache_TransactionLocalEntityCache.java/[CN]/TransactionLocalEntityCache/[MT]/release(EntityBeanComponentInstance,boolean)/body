{
  if (instance.getPrimaryKey() == null) {
    return;
  }
  final Object key=transactionSynchronizationRegistry.getTransactionKey();
  if (key == null) {
    return;
  }
  final Map<Object,CacheEntry> map=cache.get(key);
  if (map != null) {
    final CacheEntry cacheEntry=map.get(instance.getPrimaryKey());
    if (cacheEntry == null) {
      throw new IllegalArgumentException("Instance [" + instance + "] not found in cache");
    }
    if (cacheEntry.referenceCount.decrementAndGet() <= 0) {
      if (!success && instance.isRemoved()) {
        instance.setRemoved(false);
      }
      instance.passivate();
      component.getPool().release(instance);
      map.remove(instance.getPrimaryKey());
    }
 else     if (instance.isRemoved() && success) {
      component.getPool().release(instance);
      map.remove(instance.getPrimaryKey());
    }
  }
}

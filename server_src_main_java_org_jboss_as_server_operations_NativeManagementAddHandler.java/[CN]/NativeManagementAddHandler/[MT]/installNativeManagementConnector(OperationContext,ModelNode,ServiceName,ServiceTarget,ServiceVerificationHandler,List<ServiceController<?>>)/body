{
  ServiceName socketBindingServiceName=null;
  ServiceName interfaceSvcName=null;
  int port=0;
  final ModelNode socketBindingNode=validateResolvedModel(SOCKET_BINDING,context,model);
  if (socketBindingNode.isDefined()) {
    final String bindingName=SOCKET_BINDING.resolveModelAttribute(context,model).asString();
    socketBindingServiceName=SocketBinding.JBOSS_BINDING_NAME.append(bindingName);
  }
 else {
    String interfaceName=INTERFACE.resolveModelAttribute(context,model).asString();
    interfaceSvcName=NetworkInterfaceService.JBOSS_NETWORK_INTERFACE.append(interfaceName);
    port=NATIVE_PORT.resolveModelAttribute(context,model).asInt();
  }
  String securityRealm=null;
  final ModelNode realmNode=SECURITY_REALM.resolveModelAttribute(context,model);
  if (realmNode.isDefined()) {
    securityRealm=realmNode.asString();
  }
 else {
    ServerLogger.ROOT_LOGGER.nativeManagementInterfaceIsUnsecured();
  }
  ServiceName tmpDirPath=ServiceName.JBOSS.append("server","path","jboss.server.temp.dir");
  RemotingServices.installSecurityServices(serviceTarget,ManagementRemotingServices.MANAGEMENT_CONNECTOR,securityRealm,null,tmpDirPath,verificationHandler,newControllers);
  final OptionMap options=OptionMap.EMPTY;
  if (socketBindingServiceName == null) {
    ManagementRemotingServices.installConnectorServicesForNetworkInterfaceBinding(serviceTarget,endpointName,ManagementRemotingServices.MANAGEMENT_CONNECTOR,interfaceSvcName,port,options,verificationHandler,newControllers);
  }
 else {
    ManagementRemotingServices.installConnectorServicesForSocketBinding(serviceTarget,endpointName,ManagementRemotingServices.MANAGEMENT_CONNECTOR,socketBindingServiceName,options,verificationHandler,newControllers);
  }
}

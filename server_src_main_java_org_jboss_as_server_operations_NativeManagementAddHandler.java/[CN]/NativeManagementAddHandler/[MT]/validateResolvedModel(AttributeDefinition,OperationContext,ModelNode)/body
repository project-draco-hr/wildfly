{
  final String attributeName=definition.getName();
  final boolean has=subModel.has(attributeName);
  if (!has && definition.isRequired(subModel)) {
    throw ServerMessages.MESSAGES.attributeIsRequired(attributeName);
  }
  ModelNode result;
  if (has) {
    if (!definition.isAllowed(subModel)) {
      if (subModel.hasDefined(attributeName)) {
        throw ServerMessages.MESSAGES.attributeNotAllowedWhenAlternativeIsPresent(attributeName,Arrays.asList(definition.getAlternatives()));
      }
 else {
        result=new ModelNode();
      }
    }
 else {
      result=definition.resolveModelAttribute(context,subModel);
    }
  }
 else {
    result=new ModelNode();
  }
  return result;
}

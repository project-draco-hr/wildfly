{
  try {
    if (isOnField()) {
      Class<?> clazz=cl.loadClass(className);
      while (!clazz.equals(Object.class)) {
        try {
          Field field=clazz.getDeclaredField(memberName);
          return field.getAnnotation(annotationClass);
        }
 catch (        Throwable t) {
          clazz=clazz.getSuperclass();
        }
      }
    }
 else     if (isOnMethod()) {
      Class<?> clazz=cl.loadClass(className);
      Class<?>[] params=new Class<?>[parameterTypes.size()];
      int i=0;
      for (      String paramClazz : parameterTypes) {
        params[i]=cl.loadClass(paramClazz);
        i++;
      }
      while (!clazz.equals(Object.class)) {
        try {
          Method method=clazz.getDeclaredMethod(memberName,params);
          return method.getAnnotation(annotationClass);
        }
 catch (        Throwable t) {
          clazz=clazz.getSuperclass();
        }
      }
    }
 else {
      Class<?> clazz=cl.loadClass(className);
      return clazz.getAnnotation(annotationClass);
    }
  }
 catch (  Exception e) {
    System.out.println(e.getMessage());
    e.printStackTrace(System.out);
  }
  return null;
}

{
  homeView.getConfigurators().add(new ViewConfigurator(){
    @Override public void configure(    final DeploymentPhaseContext context,    final ComponentConfiguration componentConfiguration,    final ViewDescription description,    final ViewConfiguration configuration) throws DeploymentUnitProcessingException {
      final DeploymentReflectionIndex reflectionIndex=phaseContext.getDeploymentUnit().getAttachment(org.jboss.as.server.deployment.Attachments.REFLECTION_INDEX);
      configuration.addClientPostConstructInterceptor(org.jboss.invocation.Interceptors.getTerminalInterceptorFactory(),InterceptorOrder.ClientPostConstruct.TERMINAL_INTERCEPTOR);
      configuration.addClientPreDestroyInterceptor(org.jboss.invocation.Interceptors.getTerminalInterceptorFactory(),InterceptorOrder.ClientPreDestroy.TERMINAL_INTERCEPTOR);
      configuration.addViewPostConstructInterceptor(org.jboss.invocation.Interceptors.getTerminalInterceptorFactory(),InterceptorOrder.ViewPostConstruct.TERMINAL_INTERCEPTOR);
      configuration.addViewPreDestroyInterceptor(org.jboss.invocation.Interceptors.getTerminalInterceptorFactory(),InterceptorOrder.ViewPreDestroy.TERMINAL_INTERCEPTOR);
      final ClassReflectionIndex<?> classIndex=reflectionIndex.getClassIndex(configuration.getViewClass());
      for (      Method method : classIndex.getMethods()) {
        if (method.getName().startsWith("create")) {
          if (ejbObjectView == null) {
            throw new RuntimeException(componentDescription.getComponentName() + " does not have a EJB 2.x local interface");
          }
          final ViewDescription createdView=ejbObjectView;
          Method initMethod=resolveInitMethod(ejbComponentDescription,method);
          final SessionBeanHomeInterceptorFactory factory=new SessionBeanHomeInterceptorFactory(initMethod);
          componentConfiguration.getStartDependencies().add(new DependencyConfigurator<ComponentStartService>(){
            @Override public void configureDependency(            final ServiceBuilder<?> serviceBuilder,            final ComponentStartService service) throws DeploymentUnitProcessingException {
              serviceBuilder.addDependency(createdView.getServiceName(),ComponentView.class,factory.getViewToCreate());
            }
          }
);
          configuration.addViewInterceptor(method,factory,InterceptorOrder.View.COMPONENT_DISPATCHER);
        }
      }
    }
  }
);
}

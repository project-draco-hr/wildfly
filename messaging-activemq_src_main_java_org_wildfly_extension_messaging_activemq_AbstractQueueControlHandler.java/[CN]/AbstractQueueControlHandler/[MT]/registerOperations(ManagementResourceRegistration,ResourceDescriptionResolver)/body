{
  registry.registerOperationHandler(runtimeReadOnlyOperation(LIST_MESSAGES,resolver).setParameters(FILTER).setReplyType(LIST).setReplyParameters(getReplyMessageParameterDefinitions()).build(),this);
  registry.registerOperationHandler(runtimeReadOnlyOperation(LIST_MESSAGES_AS_JSON,RESOLVER).setParameters(FILTER).setReplyType(STRING).build(),this);
  registry.registerOperationHandler(runtimeReadOnlyOperation(COUNT_MESSAGES,RESOLVER).setParameters(FILTER).setReplyType(LONG).build(),this);
  registry.registerOperationHandler(runtimeOnlyOperation(REMOVE_MESSAGE,RESOLVER).setParameters(getMessageIDAttributeDefinition()).setReplyType(BOOLEAN).build(),this);
  registry.registerOperationHandler(runtimeOnlyOperation(REMOVE_MESSAGES,RESOLVER).setParameters(CommonAttributes.FILTER).setReplyType(INT).build(),this);
  registry.registerOperationHandler(runtimeOnlyOperation(EXPIRE_MESSAGE,RESOLVER).setParameters(getMessageIDAttributeDefinition()).setReplyType(BOOLEAN).build(),this);
  registry.registerOperationHandler(runtimeOnlyOperation(EXPIRE_MESSAGES,RESOLVER).setParameters(FILTER).setReplyType(INT).build(),this);
  registry.registerOperationHandler(runtimeOnlyOperation(SEND_MESSAGE_TO_DEAD_LETTER_ADDRESS,RESOLVER).setParameters(getMessageIDAttributeDefinition()).setReplyType(BOOLEAN).build(),this);
  registry.registerOperationHandler(runtimeOnlyOperation(SEND_MESSAGES_TO_DEAD_LETTER_ADDRESS,RESOLVER).setParameters(FILTER).setReplyType(INT).build(),this);
  registry.registerOperationHandler(runtimeOnlyOperation(CHANGE_MESSAGE_PRIORITY,RESOLVER).setParameters(getMessageIDAttributeDefinition(),NEW_PRIORITY).setReplyType(BOOLEAN).build(),this);
  registry.registerOperationHandler(runtimeOnlyOperation(CHANGE_MESSAGES_PRIORITY,RESOLVER).setParameters(FILTER,NEW_PRIORITY).setReplyType(INT).build(),this);
  registry.registerOperationHandler(runtimeOnlyOperation(MOVE_MESSAGE,RESOLVER).setParameters(getMessageIDAttributeDefinition(),OTHER_QUEUE_NAME,REJECT_DUPLICATES).setReplyType(INT).build(),this);
  registry.registerOperationHandler(runtimeOnlyOperation(MOVE_MESSAGES,RESOLVER).setParameters(FILTER,OTHER_QUEUE_NAME,REJECT_DUPLICATES).setReplyType(INT).build(),this);
  registry.registerOperationHandler(runtimeReadOnlyOperation(LIST_MESSAGE_COUNTER_AS_JSON,RESOLVER).setReplyType(STRING).build(),this);
  registry.registerOperationHandler(runtimeReadOnlyOperation(LIST_MESSAGE_COUNTER_AS_HTML,RESOLVER).setReplyType(STRING).build(),this);
  registry.registerOperationHandler(runtimeOnlyOperation(RESET_MESSAGE_COUNTER,RESOLVER).build(),this);
  registry.registerOperationHandler(runtimeReadOnlyOperation(LIST_MESSAGE_COUNTER_HISTORY_AS_JSON,RESOLVER).setReplyType(STRING).build(),this);
  registry.registerOperationHandler(runtimeReadOnlyOperation(LIST_MESSAGE_COUNTER_HISTORY_AS_HTML,RESOLVER).setReplyType(STRING).build(),this);
  registry.registerOperationHandler(runtimeOnlyOperation(PAUSE,RESOLVER).build(),this);
  registry.registerOperationHandler(runtimeOnlyOperation(RESUME,RESOLVER).build(),this);
  registry.registerOperationHandler(runtimeReadOnlyOperation(LIST_CONSUMERS_AS_JSON,RESOLVER).setReplyType(STRING).build(),this);
  registry.registerOperationHandler(runtimeReadOnlyOperation(LIST_DELIVERING_MESSAGES,resolver).setReplyType(LIST).setReplyParameters(getReplyMapConsumerMessageParameterDefinition()).build(),this);
  registry.registerOperationHandler(runtimeReadOnlyOperation(LIST_DELIVERING_MESSAGES_AS_JSON,resolver).setReplyType(STRING).build(),this);
  registry.registerOperationHandler(runtimeReadOnlyOperation(LIST_SCHEDULED_MESSAGES,resolver).setReplyType(LIST).setReplyParameters(getReplyMessageParameterDefinitions()).build(),this);
  registry.registerOperationHandler(runtimeReadOnlyOperation(LIST_SCHEDULED_MESSAGES_AS_JSON,resolver).setReplyType(STRING).build(),this);
}

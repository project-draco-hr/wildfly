{
  String name=null;
  String appliesTo=null;
  String resulting=null;
  Set<Attribute> required=Collections.emptySet();
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    final String value=reader.getAttributeValue(i);
    final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
    required.remove(attribute);
switch (attribute) {
case NAME:
      name=value;
    break;
case APPLIES_TO_VERSION:
  appliesTo=value;
break;
case RESULTING_VERSION:
resulting=value;
break;
default :
throw unexpectedAttribute(reader,i);
}
}
requireNoContent(reader);
if (!required.isEmpty()) {
throw missingRequired(reader,required);
}
builder.setAppliesToName(name);
builder.setCumulativeType(appliesTo,resulting);
patchTypeConfigured=true;
}

{
  String path=null;
  PatchConfigBuilder.AffectsType affectsType=PatchConfigBuilder.AffectsType.BOTH;
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    final String value=reader.getAttributeValue(i);
    final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case PATH:
      path=value;
    break;
case AFFECTS_TYPE:
  try {
    affectsType=Enum.valueOf(PatchConfigBuilder.AffectsType.class,value.toUpperCase());
  }
 catch (  RuntimeException e) {
    throw PatchMessages.MESSAGES.illegalAffectsType(value,reader.getLocation());
  }
break;
default :
throw unexpectedAttribute(reader,i);
}
}
requireNoContent(reader);
if (path == null) {
throw missingRequired(reader,EnumSet.of(Attribute.PATH));
}
patchConfigBuilder.addIgnoredPath(path,affectsType);
}

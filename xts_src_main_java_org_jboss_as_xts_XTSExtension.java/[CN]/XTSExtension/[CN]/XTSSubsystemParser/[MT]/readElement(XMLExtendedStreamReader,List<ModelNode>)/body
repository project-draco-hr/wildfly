{
  if (reader.getAttributeCount() > 0) {
    throw ParseUtils.unexpectedAttribute(reader,0);
  }
  final ModelNode subsystem=createEmptyAddOperation();
  list.add(subsystem);
  final EnumSet<Element> encountered=EnumSet.noneOf(Element.class);
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
switch (Namespace.forUri(reader.getNamespaceURI())) {
case XTS_1_0:
{
        final Element element=Element.forName(reader.getLocalName());
        if (!encountered.add(element)) {
          throw ParseUtils.unexpectedElement(reader);
        }
switch (element) {
case XTS_ENVIRONMENT:
{
            final ModelNode model=parseXTSEnvironmentElement(reader);
            subsystem.get(CommonAttributes.XTS_ENVIRONMENT).set(model);
            break;
          }
default :
{
          throw ParseUtils.unexpectedElement(reader);
        }
    }
    break;
  }
default :
{
  throw ParseUtils.unexpectedElement(reader);
}
}
}
}

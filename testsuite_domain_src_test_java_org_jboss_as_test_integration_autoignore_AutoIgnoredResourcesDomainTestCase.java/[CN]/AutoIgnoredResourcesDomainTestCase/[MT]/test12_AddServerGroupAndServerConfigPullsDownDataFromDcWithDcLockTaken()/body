{
  ModelNode addGroupOp=Util.createAddOperation(PathAddress.pathAddress(PathElement.pathElement(SERVER_GROUP,"testgroup")));
  addGroupOp.get(PROFILE).set(PROFILE3);
  addGroupOp.get(SOCKET_BINDING_GROUP).set(SOCKETS3);
  validateResponse(masterClient.execute(createDcLockTakenComposite(addGroupOp)),false);
  checkSlaveProfiles(PROFILE1,PROFILE2);
  checkSlaveExtensions(EXTENSION_LOGGING,EXTENSION_MAIL,EXTENSION_NAMING,EXTENSION_POJO);
  checkSlaveServerGroups(GROUP1,GROUP2);
  checkSlaveSocketBindingGroups(SOCKETS1,SOCKETSA,SOCKETS2);
  checkSystemProperties(3);
  Assert.assertEquals("running",getSlaveServerStatus(SERVER1));
  ModelNode addConfigOp=Util.createAddOperation(PathAddress.pathAddress(getSlaveServerConfigAddress("testserver")));
  addConfigOp.get(GROUP).set("testgroup");
  validateResponse(slaveClient.execute(createDcLockTakenComposite(addConfigOp)),false);
  checkSlaveProfiles(PROFILE1,PROFILE2,PROFILE3);
  checkSlaveExtensions(EXTENSION_LOGGING,EXTENSION_MAIL,EXTENSION_NAMING,EXTENSION_POJO,EXTENSION_JMX,EXTENSION_SAR);
  checkSlaveServerGroups(GROUP1,GROUP2,"testgroup");
  checkSlaveSocketBindingGroups(SOCKETS1,SOCKETSA,SOCKETS2,SOCKETS3);
  checkSystemProperties(4);
  Assert.assertEquals("running",getSlaveServerStatus(SERVER1));
}

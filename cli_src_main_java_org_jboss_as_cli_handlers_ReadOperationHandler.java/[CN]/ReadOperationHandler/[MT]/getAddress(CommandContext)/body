{
  final ParsedCommandLine args=ctx.getParsedCommandLine();
  final OperationRequestAddress address;
  if (node.isPresent(args)) {
    address=new DefaultOperationRequestAddress(ctx.getCurrentNodePath());
    CommandLineParser.CallbackHandler handler=new DefaultCallbackHandler(address);
    String nodePath=args.getOriginalLine();
    int nodeArgInd=nodePath.indexOf(" --node=");
    if (nodeArgInd < 0) {
      throw new CommandFormatException("Couldn't locate ' --node=' in the line: '" + nodePath + "'");
    }
    int nodeArgEndInd=nodeArgInd + 8;
    do {
      nodeArgEndInd=nodePath.indexOf(' ',nodeArgEndInd);
      if (nodeArgEndInd < 0) {
        nodeArgEndInd=nodePath.length();
      }
 else       if (nodePath.charAt(nodeArgEndInd - 1) == '\\') {
        ++nodeArgEndInd;
      }
 else {
        break;
      }
    }
 while (nodeArgEndInd < nodePath.length());
    nodePath=nodePath.substring(nodeArgInd + 8,nodeArgEndInd);
    ctx.getCommandLineParser().parse(nodePath,handler);
  }
 else {
    address=new DefaultOperationRequestAddress(ctx.getCurrentNodePath());
  }
  return address;
}

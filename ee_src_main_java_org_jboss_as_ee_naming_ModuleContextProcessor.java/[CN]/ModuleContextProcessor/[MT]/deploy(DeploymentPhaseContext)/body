{
  final DeploymentUnit deploymentUnit=phaseContext.getDeploymentUnit();
  if (DeploymentTypeMarker.isType(DeploymentType.EAR,deploymentUnit)) {
    return;
  }
  EEModuleDescription moduleDescription=deploymentUnit.getAttachment(org.jboss.as.ee.component.Attachments.EE_MODULE_DESCRIPTION);
  final ServiceTarget serviceTarget=phaseContext.getServiceTarget();
  final ServiceName moduleContextServiceName=ContextNames.contextServiceNameOfModule(moduleDescription.getAppName(),moduleDescription.getModuleName());
  final RootContextService contextService=new RootContextService();
  serviceTarget.addService(moduleContextServiceName,contextService).install();
  final BinderService moduleNameBinder=new BinderService("ModuleName");
  serviceTarget.addService(moduleContextServiceName.append("ModuleName"),moduleNameBinder).addInjection(moduleNameBinder.getJndiInjectableInjector(),new ValueJndiInjectable(Values.immediateValue(moduleDescription.getModuleName()))).addDependency(moduleContextServiceName,NamingStore.class,moduleNameBinder.getNamingStoreInjector()).install();
  deploymentUnit.putAttachment(Attachments.MODULE_CONTEXT_CONFIG,moduleContextServiceName);
  ServiceName appNs=ContextNames.contextServiceNameOfApplication(moduleDescription.getAppName());
  ServiceName namespaceSelectorServiceName=deploymentUnit.getServiceName().append(NamespaceSelectorService.NAME);
  NamespaceSelectorService namespaceSelector=new NamespaceSelectorService();
  serviceTarget.addService(namespaceSelectorServiceName,namespaceSelector).addDependency(appNs,NamingStore.class,namespaceSelector.getApp()).addDependency(moduleContextServiceName,NamingStore.class,namespaceSelector.getModule()).addDependency(moduleContextServiceName,NamingStore.class,namespaceSelector.getComp()).install();
  JavaNamespaceSetup setupAction=new JavaNamespaceSetup(namespaceSelector);
  deploymentUnit.addToAttachmentList(org.jboss.as.server.deployment.Attachments.SETUP_ACTIONS,setupAction);
}

{
  try {
    if (!startLatch.await(5,TimeUnit.SECONDS)) {
      throw new RuntimeException("Invocation was not asynchronous");
    }
  }
 catch (  InterruptedException e) {
    throw new RuntimeException(e);
  }
  SecuredStatelessLocal localSearchedBean=null;
  try {
    Context context=new InitialContext();
    localSearchedBean=(SecuredStatelessLocal)context.lookup("java:module/" + SecuredStatelessBean.class.getSimpleName() + "!"+ SecuredStatelessLocal.class.getName());
  }
 catch (  NamingException e) {
    throw new RuntimeException(e);
  }
  final CountDownLatch latchLocal=new CountDownLatch(1);
  final Future<Boolean> future=localSearchedBean.localSecured(latchLocal);
  latchLocal.countDown();
  boolean result=future.get();
  Assert.assertTrue(result);
  return new AsyncResult<Boolean>(true);
}

{
  final ApplicationPolicy applicationPolicy=createApplicationPolicy(context,securityDomain,model);
  final JSSESecurityDomain jsseSecurityDomain=createJSSESecurityDomain(context,securityDomain,model);
  final String cacheType=getAuthenticationCacheType(model);
  final SecurityDomainService securityDomainService=new SecurityDomainService(securityDomain,applicationPolicy,jsseSecurityDomain,cacheType);
  final ServiceTarget target=context.getServiceTarget();
  ServiceBuilder<SecurityDomainContext> builder=target.addService(SecurityDomainService.SERVICE_NAME.append(securityDomain),securityDomainService).addDependency(SecurityManagementService.SERVICE_NAME,ISecurityManagement.class,securityDomainService.getSecurityManagementInjector()).addDependency(JaasConfigurationService.SERVICE_NAME,Configuration.class,securityDomainService.getConfigurationInjector());
  if ("infinispan".equals(cacheType)) {
    builder.addDependency(CacheContainerServiceName.CACHE_CONTAINER.getServiceName(CACHE_CONTAINER_NAME),Object.class,securityDomainService.getCacheManagerInjector());
  }
  builder.setInitialMode(ServiceController.Mode.ACTIVE).install();
}

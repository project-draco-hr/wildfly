{
  final ProtectionDomain domain=new ProtectionDomain(null,null,null,null);
  final String[] httpMethod=new String[]{request.getMethod()};
  final String canonicalURI=this.getCanonicalURI(request);
switch (currentConnGuarantee) {
case NONE:
{
      WebUserDataPermission permission=new WebUserDataPermission(canonicalURI,httpMethod,null);
      if (domain.implies(permission)) {
        return TransportGuaranteeType.NONE;
      }
 else {
        return TransportGuaranteeType.CONFIDENTIAL;
      }
    }
case INTEGRAL:
case CONFIDENTIAL:
{
    WebUserDataPermission permission=new WebUserDataPermission(canonicalURI,httpMethod,TransportGuaranteeType.CONFIDENTIAL.name());
    if (domain.implies(permission)) {
      return TransportGuaranteeType.CONFIDENTIAL;
    }
 else {
      permission=new WebUserDataPermission(canonicalURI,httpMethod,TransportGuaranteeType.INTEGRAL.name());
      if (domain.implies(permission)) {
        return TransportGuaranteeType.INTEGRAL;
      }
 else {
        return TransportGuaranteeType.REJECTED;
      }
    }
  }
default :
return TransportGuaranteeType.REJECTED;
}
}

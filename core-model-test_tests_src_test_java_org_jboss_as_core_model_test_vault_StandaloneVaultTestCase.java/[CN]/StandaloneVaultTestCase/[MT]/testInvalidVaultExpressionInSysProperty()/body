{
  KernelServices kernelServices=createEmptyRoot();
  ModelNode composite=Util.createEmptyOperation(COMPOSITE,PathAddress.EMPTY_ADDRESS);
  ModelNode steps=composite.get(STEPS).setEmptyList();
  ModelNode propOneAdd=Util.createAddOperation(rootAddress.append(PathElement.pathElement(SYSTEM_PROPERTY,"vault-prop-one")));
  propOneAdd.get(VALUE).set("${VAULT::test::one::xxx}");
  steps.add(propOneAdd);
  ModelNode propTwoAdd=Util.createAddOperation(rootAddress.append(PathElement.pathElement(SYSTEM_PROPERTY,"vault-prop-two")));
  propTwoAdd.get(VALUE).set("${VAULT::WRONG::two::xxx}");
  steps.add(propTwoAdd);
  ModelNode vaultAdd=Util.createAddOperation(vaultAddress);
  vaultAdd.get(CODE).set("test");
  vaultAdd.get(VAULT_OPTIONS,"one").set("111");
  vaultAdd.get(VAULT_OPTIONS,"two").set("222");
  steps.add(vaultAdd);
  System.clearProperty("vault-prop-one");
  System.clearProperty("vault-prop-two");
  ModelTestUtils.checkFailed(kernelServices.executeOperation(composite));
  ModelNode model=readVaultModel(kernelServices);
  Assert.assertFalse(model.isDefined());
  Assert.assertNull("vault-prop-one is not null",System.getProperty("vault-prop-one"));
  Assert.assertNull("vault-prop-two is not null",System.getProperty("vault-prop-two"));
}

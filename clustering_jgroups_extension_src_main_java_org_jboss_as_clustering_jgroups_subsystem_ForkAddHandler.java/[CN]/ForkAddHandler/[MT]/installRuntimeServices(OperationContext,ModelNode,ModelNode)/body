{
  PathAddress address=Operations.getPathAddress(operation);
  String name=address.getElement(address.size() - 1).getValue();
  String channel=address.getElement(address.size() - 2).getValue();
  ServiceTarget target=context.getServiceTarget();
  if (model.hasDefined(ProtocolResourceDefinition.WILDCARD_PATH.getKey())) {
    List<Property> properties=model.get(ProtocolResourceDefinition.WILDCARD_PATH.getKey()).asPropertyList();
    List<ProtocolConfiguration> protocols=new ArrayList<>(properties.size());
    List<Map.Entry<String,Injector<SocketBinding>>> socketBindings=new ArrayList<>(properties.size());
    for (    Property property : properties) {
      String protocolName=property.getName();
      ModelNode protocol=property.getValue();
      ModuleIdentifier module=ModelNodes.asModuleIdentifier(ProtocolResourceDefinition.MODULE.resolveModelAttribute(context,protocol));
      Protocol protocolConfig=new Protocol(protocolName,module);
      StackAddHandler.initProtocolProperties(context,protocol,protocolConfig);
      protocols.add(protocolConfig);
      String socketBinding=ModelNodes.asString(ProtocolResourceDefinition.SOCKET_BINDING.resolveModelAttribute(context,protocol));
      if (socketBinding != null) {
        socketBindings.add(new AbstractMap.SimpleImmutableEntry<>(socketBinding,protocolConfig.getSocketBindingInjector()));
      }
    }
    ServiceBuilder<ChannelFactory> builder=ForkChannelFactoryService.build(target,channel,protocols);
    for (    Map.Entry<String,Injector<SocketBinding>> socketBinding : socketBindings) {
      builder.addDependency(SocketBinding.JBOSS_BINDING_NAME.append(socketBinding.getKey()),SocketBinding.class,socketBinding.getValue());
    }
    builder.setInitialMode(ServiceController.Mode.ON_DEMAND).install();
  }
 else {
    ForkChannelFactoryService.build(target,channel).setInitialMode(ServiceController.Mode.ON_DEMAND).install();
  }
  new AliasServiceBuilder<>(ChannelService.getFactoryServiceName(name),ChannelFactoryService.getServiceName(channel),ChannelFactory.class).build(target).install();
  ChannelService.build(target,name).setInitialMode(ServiceController.Mode.ON_DEMAND).install();
  ConnectedChannelService.build(target,name).setInitialMode(ServiceController.Mode.ON_DEMAND).install();
  new BinderServiceBuilder<>(ChannelService.createChannelBinding(name),ChannelService.getServiceName(name),Channel.class).build(target).install();
}

{
  if (hasNextConfirmed == false && hasNext() == false) {
    return null;
  }
  Parameter response=new Parameter();
  int equalsPos=message.indexOf(EQUALS,pos);
  response.key=message.substring(pos,equalsPos).trim();
  pos=equalsPos + 1;
  int nextDelimiter=message.indexOf(DELIMITER,pos);
  int nextQuote=message.indexOf(QUOTE,pos);
  boolean quoted=false;
  if (nextQuote > 0 && (nextDelimiter < 0 || nextQuote < nextDelimiter)) {
    quoted=true;
  }
  if (quoted == true) {
    String dropping=message.substring(pos,nextQuote).trim();
    if ("".equals(dropping) == false) {
      throw MESSAGES.unexpectedHeaderChar(dropping,response.key);
    }
    pos=nextQuote;
    int endQuote=-1;
    while (endQuote < 0) {
      nextQuote=message.indexOf(QUOTE,nextQuote + 1);
      if (nextQuote < 0) {
        throw MESSAGES.missingClosingQuote(response.key);
      }
      if (message.charAt(nextQuote - 1) != ESCAPE) {
        endQuote=nextQuote;
      }
    }
    response.value=message.substring(pos + 1,endQuote);
    int nextDelimeter=message.indexOf(DELIMITER,pos);
    if (nextDelimeter > 0) {
      pos=nextDelimeter + 1;
    }
  }
 else {
    int nextDelimeter=message.indexOf(DELIMITER,pos);
    if (nextDelimeter > 0) {
      response.value=message.substring(pos,nextDelimeter).trim();
      pos=nextDelimeter + 1;
    }
 else {
      response.value=message.substring(pos,length - 1).trim();
      pos=length + 1;
    }
  }
  hasNextConfirmed=false;
  return response;
}

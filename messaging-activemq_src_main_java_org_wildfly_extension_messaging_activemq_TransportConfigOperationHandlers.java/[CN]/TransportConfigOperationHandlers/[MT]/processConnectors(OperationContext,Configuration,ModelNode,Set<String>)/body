{
  final Map<String,TransportConfiguration> connectors=new HashMap<String,TransportConfiguration>();
  if (params.hasDefined(CONNECTOR)) {
    for (    final Property property : params.get(CONNECTOR).asPropertyList()) {
      final String connectorName=property.getName();
      final ModelNode config=property.getValue();
      final Map<String,Object> parameters=getParameters(context,config,CONNECTORS_KEYS_MAP);
      final String clazz=FACTORY_CLASS.resolveModelAttribute(context,config).asString();
      connectors.put(connectorName,new TransportConfiguration(clazz,parameters,connectorName));
    }
  }
  if (params.hasDefined(REMOTE_CONNECTOR)) {
    for (    final Property property : params.get(REMOTE_CONNECTOR).asPropertyList()) {
      final String connectorName=property.getName();
      final ModelNode config=property.getValue();
      final Map<String,Object> parameters=getParameters(context,config,CONNECTORS_KEYS_MAP);
      final String binding=config.get(RemoteTransportDefinition.SOCKET_BINDING.getName()).asString();
      bindings.add(binding);
      parameters.put(RemoteTransportDefinition.SOCKET_BINDING.getName(),binding);
      connectors.put(connectorName,new TransportConfiguration(NettyConnectorFactory.class.getName(),parameters,connectorName));
    }
  }
  if (params.hasDefined(IN_VM_CONNECTOR)) {
    for (    final Property property : params.get(IN_VM_CONNECTOR).asPropertyList()) {
      final String connectorName=property.getName();
      final ModelNode config=property.getValue();
      final Map<String,Object> parameters=getParameters(context,config,CONNECTORS_KEYS_MAP);
      parameters.put(CONNECTORS_KEYS_MAP.get(InVMTransportDefinition.SERVER_ID.getName()),InVMTransportDefinition.SERVER_ID.resolveModelAttribute(context,config).asInt());
      connectors.put(connectorName,new TransportConfiguration(InVMConnectorFactory.class.getName(),parameters,connectorName));
    }
  }
  if (params.hasDefined(HTTP_CONNECTOR)) {
    for (    final Property property : params.get(HTTP_CONNECTOR).asPropertyList()) {
      final String connectorName=property.getName();
      final ModelNode config=property.getValue();
      final Map<String,Object> parameters=getParameters(context,config,CONNECTORS_KEYS_MAP);
      final String binding=HTTPConnectorDefinition.SOCKET_BINDING.resolveModelAttribute(context,config).asString();
      bindings.add(binding);
      parameters.put(TransportConstants.HTTP_UPGRADE_ENABLED_PROP_NAME,true);
      parameters.put(TransportConstants.HTTP_UPGRADE_ENDPOINT_PROP_NAME,HTTPConnectorDefinition.ENDPOINT.resolveModelAttribute(context,config).asString());
      parameters.put(HTTPConnectorDefinition.SOCKET_BINDING.getName(),binding);
      connectors.put(connectorName,new TransportConfiguration(NettyConnectorFactory.class.getName(),parameters,connectorName));
    }
  }
  configuration.setConnectorConfigurations(connectors);
}

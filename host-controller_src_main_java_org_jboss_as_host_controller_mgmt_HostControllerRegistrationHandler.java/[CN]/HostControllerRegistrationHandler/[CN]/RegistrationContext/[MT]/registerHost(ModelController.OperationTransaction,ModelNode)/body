{
  final Boolean registered=executeBlocking(new IOTask<Boolean>(){
    @Override void sendMessage(    final FlushableDataOutput output) throws IOException {
      sendResponse(output,DomainControllerProtocol.PARAM_OK,result);
    }
  }
);
  if (!registered) {
    transaction.rollback();
    return;
  }
synchronized (this) {
    Long pingPongId=hostInfo.getRemoteConnectionId();
    domainController.registerRemoteHost(hostName,handler,transformers,pingPongId);
    if (!failed) {
      transaction.commit();
    }
 else {
      transaction.rollback();
      return;
    }
  }
  DOMAIN_LOGGER.registeredRemoteSlaveHost(hostName,hostInfo.getPrettyProductName());
}

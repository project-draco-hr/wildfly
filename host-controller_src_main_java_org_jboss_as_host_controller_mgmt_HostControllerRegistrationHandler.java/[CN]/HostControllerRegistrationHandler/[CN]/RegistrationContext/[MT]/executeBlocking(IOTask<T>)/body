{
synchronized (this) {
    this.task=task;
    try {
      final ManagementResponseHeader header=ManagementResponseHeader.create(responseChannel.getRequestHeader());
      final FlushableDataOutput output=responseChannel.writeMessage(header);
      try {
        task.sendMessage(output);
      }
 catch (      IOException e) {
        failed(SlaveRegistrationException.ErrorCode.UNKNOWN,DomainControllerLogger.ROOT_LOGGER.failedToSendMessage(e.getMessage()));
        throw new IllegalStateException(e);
      }
 finally {
        StreamUtils.safeClose(output);
      }
    }
 catch (    IOException e) {
      failed(SlaveRegistrationException.ErrorCode.UNKNOWN,DomainControllerLogger.ROOT_LOGGER.failedToSendResponseHeader(e.getMessage()));
      throw new IllegalStateException(e);
    }
  }
  try {
    return task.get();
  }
 catch (  InterruptedException e) {
    failed(SlaveRegistrationException.ErrorCode.UNKNOWN,DomainControllerLogger.ROOT_LOGGER.registrationTaskGotInterrupted());
    throw new IllegalStateException(e);
  }
catch (  ExecutionException e) {
    failed(SlaveRegistrationException.ErrorCode.UNKNOWN,DomainControllerLogger.ROOT_LOGGER.registrationTaskFailed(e.getMessage()));
    throw new IllegalStateException(e);
  }
}

{
  this.transformers=transformers;
  final ModelNode subsystems=executeBlocking(new IOTask<ModelNode>(){
    @Override void sendMessage(    FlushableDataOutput output) throws IOException {
      sendResponse(output,DomainControllerProtocol.PARAM_OK,extensions);
    }
  }
);
  if (failed) {
    throw new OperationFailedException(new ModelNode("failed to setup transformers"));
  }
  final TransformationTarget target=transformers.getTarget();
  for (  final Property subsystem : subsystems.asPropertyList()) {
    final String subsystemName=subsystem.getName();
    final ModelNode version=subsystem.getValue();
    target.addSubsystemVersion(subsystemName,ModelVersion.fromString(version.asString()));
  }
}

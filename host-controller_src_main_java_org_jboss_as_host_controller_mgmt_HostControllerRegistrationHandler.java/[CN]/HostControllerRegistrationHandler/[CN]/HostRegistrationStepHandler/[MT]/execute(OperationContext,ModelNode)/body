{
  context.acquireControllerLock();
  final Resource root=context.readResource(PathAddress.EMPTY_ADDRESS);
  final ModelNode hostInfo=registrationContext.hostInfo;
  boolean as711=hostInfo.get(MANAGEMENT_MAJOR_VERSION).asInt() == 1 && hostInfo.get(MANAGEMENT_MINOR_VERSION).asInt() == 1;
  final ModelNode subsystems;
  if (as711) {
    throw HostControllerMessages.MESSAGES.unsupportedManagementVersionForHost(hostInfo.get(MANAGEMENT_MAJOR_VERSION).asInt(),hostInfo.get(MANAGEMENT_MINOR_VERSION).asInt(),1,2);
  }
 else {
    final ModelNode extensions=new ModelNode();
    final Collection<Resource.ResourceEntry> resources=root.getChildren(EXTENSION);
    for (    final Resource.ResourceEntry entry : resources) {
      extensions.add(entry.getName());
    }
    subsystems=registrationContext.resolveSubsystemVersions(extensions);
  }
  final ReadMasterDomainModelHandler handler=new ReadMasterDomainModelHandler(registrationContext.transformers);
  final ModelNode op=READ_DOMAIN_MODEL.clone();
  op.get(SUBSYSTEM).set(subsystems);
  context.addStep(op,handler,OperationContext.Stage.MODEL);
  context.completeStep();
}

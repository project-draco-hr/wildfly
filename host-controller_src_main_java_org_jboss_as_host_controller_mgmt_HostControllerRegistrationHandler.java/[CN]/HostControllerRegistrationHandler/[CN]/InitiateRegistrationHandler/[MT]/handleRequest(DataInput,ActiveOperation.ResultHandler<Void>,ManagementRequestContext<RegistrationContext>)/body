{
  expectHeader(input,DomainControllerProtocol.PARAM_HOST_ID);
  final String hostName=input.readUTF();
  final ModelNode hostInfo=new ModelNode();
  hostInfo.readExternal(input);
  final RegistrationContext registration=context.getAttachment();
  registration.initialize(hostName,hostInfo,context);
  if (domainController.getCurrentRunningMode() == RunningMode.ADMIN_ONLY) {
    registration.failed(SlaveRegistrationException.ErrorCode.MASTER_IS_ADMIN_ONLY,DomainControllerLogger.ROOT_LOGGER.adminOnlyModeCannotAcceptSlaves(RunningMode.ADMIN_ONLY));
    return;
  }
  if (!domainController.getLocalHostInfo().isMasterDomainController()) {
    registration.failed(SlaveRegistrationException.ErrorCode.HOST_IS_NOT_MASTER,DomainControllerLogger.ROOT_LOGGER.slaveControllerCannotAcceptOtherSlaves());
    return;
  }
  context.executeAsync(new ManagementRequestContext.AsyncTask<RegistrationContext>(){
    @Override public void execute(    ManagementRequestContext<RegistrationContext> context) throws Exception {
      if (Thread.currentThread().isInterrupted())       throw new IllegalStateException("interrupted");
      registration.processRegistration();
    }
  }
,registrations);
}

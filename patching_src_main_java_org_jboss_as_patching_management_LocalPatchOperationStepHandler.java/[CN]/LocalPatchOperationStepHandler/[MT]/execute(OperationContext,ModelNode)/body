{
  final ServiceRegistry registry=context.getServiceRegistry(true);
  final InstallationManager installationManager=(InstallationManager)registry.getRequiredService(InstallationManagerService.NAME).getValue();
  if (installationManager.requiresRestart()) {
    throw MESSAGES.serverRequiresRestart();
  }
  try {
    final PatchTool runner=PatchTool.Factory.create(installationManager);
    final ContentVerificationPolicy policy=PatchTool.Factory.create(operation);
    final int index=operation.get(ModelDescriptionConstants.INPUT_STREAM_INDEX).asInt(0);
    final InputStream is=context.getAttachmentStream(index);
    installationManager.restartRequired();
    final PatchingResult result=runner.applyPatch(is,policy);
    context.restartRequired();
    context.completeStep(new OperationContext.ResultHandler(){
      @Override public void handleResult(      OperationContext.ResultAction resultAction,      OperationContext context,      ModelNode operation){
        if (resultAction == OperationContext.ResultAction.KEEP) {
          result.commit();
        }
 else {
          installationManager.clearRestartRequired();
          context.revertRestartRequired();
          result.rollback();
        }
      }
    }
);
  }
 catch (  PatchingException e) {
    final ModelNode failureDescription=context.getFailureDescription();
    PatchOperationTarget.formatFailedResponse(e,failureDescription);
    installationManager.clearRestartRequired();
    context.stepCompleted();
  }
}

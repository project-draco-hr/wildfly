{
  super(metaData);
  PassivationConfig passivationConfig=metaData.getPassivationConfig();
  Boolean useSessionPassivation=(passivationConfig != null) ? passivationConfig.getUseSessionPassivation() : null;
  this.passivate=(useSessionPassivation != null) ? useSessionPassivation.booleanValue() : false;
  Integer minIdleTime=(passivationConfig != null) ? passivationConfig.getPassivationMinIdleTime() : null;
  this.passivationMinIdleTime=(minIdleTime != null) && this.passivate ? minIdleTime.intValue() : -1;
  Integer maxIdleTime=(passivationConfig != null) ? passivationConfig.getPassivationMaxIdleTime() : null;
  this.passivationMaxIdleTime=(maxIdleTime != null) && this.passivate ? maxIdleTime.intValue() : -1;
  ReplicationConfig config=metaData.getReplicationConfig();
  this.replicationConfig=(config != null) ? config : new ReplicationConfig();
  if (this.replicationConfig.getReplicationGranularity() == ReplicationGranularity.FIELD) {
    throw new IllegalArgumentException("FIELD replication-granularity is no longer supported");
  }
  Integer interval=this.replicationConfig.getMaxUnreplicatedInterval();
  this.maxUnreplicatedInterval=(interval != null) ? interval.intValue() : -1;
  this.notificationPolicy=this.createClusteredSessionNotificationPolicy();
  String hostName=host.getName();
  this.name=String.format("//%s/%s",(hostName == null) ? "localhost" : hostName,metaData.getContextRoot());
  this.distributedCacheManager=factory.getDistributedCacheManager(this);
}

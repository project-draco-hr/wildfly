{
  if (maxActiveAllowed != -1 && calcActiveSessions() >= maxActiveAllowed) {
    log.tracef("createSession(): active sessions = %d and max allowed sessions = %d",calcActiveSessions(),maxActiveAllowed);
    processExpires();
    if (calcActiveSessions() >= maxActiveAllowed) {
      rejectedCounter.incrementAndGet();
      String msgEnd=(sessionId == null) ? "" : " id " + sessionId;
      throw MESSAGES.tooManyActiveSessions(maxActiveAllowed,msgEnd);
    }
  }
  ClusteredSession<O> session=createEmptyClusteredSession();
  if (session != null) {
    session.setNew(true);
    session.setCreationTime(System.currentTimeMillis());
    session.setMaxInactiveInterval(this.maxInactiveInterval);
    session.setValid(true);
    String clearInvalidated=null;
    if (sessionId == null) {
      sessionId=this.generateSessionId(random);
    }
 else {
      clearInvalidated=sessionId;
    }
    session.setId(sessionId);
    getDistributedCacheManager().sessionCreated(session.getRealId());
    session.tellNew(ClusteredSessionNotificationCause.CREATE);
    log.tracef("Created a ClusteredSession with id: %s",sessionId);
    createdCounter.incrementAndGet();
    SessionReplicationContext.bindSession(session,snapshotManager);
    if (clearInvalidated != null) {
      SessionInvalidationTracker.clearInvalidatedSession(clearInvalidated,this);
    }
  }
  return session;
}

{
  final ConnectorXmlDescriptor connectorXmlDescriptor=context.getAttachment(ConnectorXmlDescriptor.ATTACHMENT_KEY);
  if (connectorXmlDescriptor == null) {
    return;
  }
  final IronJacamarXmlDescriptor ironJacamarXmlDescriptor=context.getAttachment(IronJacamarXmlDescriptor.ATTACHMENT_KEY);
  final Module module=context.getAttachment(ModuleDeploymentProcessor.MODULE_ATTACHMENT_KEY);
  if (module == null)   throw new DeploymentUnitProcessingException("Failed to get module attachment for deployment: " + context.getName());
  final ClassLoader classLoader=module.getClassLoader();
  Connector cmd=connectorXmlDescriptor != null ? connectorXmlDescriptor.getConnector() : null;
  final IronJacamar ijmd=ironJacamarXmlDescriptor != null ? ironJacamarXmlDescriptor.getIronJacamar() : null;
  try {
    Annotations annotator=new Annotations();
    AnnotationRepository repository=new JandexAnnotationRepositoryImpl(context.getAttachment(AnnotationIndexProcessor.ATTACHMENT_KEY),classLoader);
    cmd=annotator.merge(cmd,repository,classLoader);
    cmd.validate();
    cmd=(new Merger()).mergeConnectorWithCommonIronJacamar(ijmd,cmd);
    final ResourceAdapterDeploymentService raDeployementService=new ResourceAdapterDeploymentService(connectorXmlDescriptor,cmd,ijmd,module);
    final BatchBuilder batchBuilder=context.getBatchBuilder();
    batchBuilder.addService(ConnectorServices.RESOURCE_ADAPTER_SERVICE_PREFIX.append(connectorXmlDescriptor.getDeploymentName()),raDeployementService).addDependency(ConnectorServices.IRONJACAMAR_MDR,MetadataRepository.class,raDeployementService.getMdrInjector()).addDependency(ConnectorServices.RESOURCE_ADAPTER_REGISTRY_SERVICE,ResourceAdapterDeploymentRegistry.class,raDeployementService.getRegistryInjector()).addDependency(ConnectorServices.JNDI_STRATEGY_SERVICE,JndiStrategy.class,raDeployementService.getJndiInjector()).addDependency(TxnServices.JBOSS_TXN_TRANSACTION_MANAGER,com.arjuna.ats.jbossatx.jta.TransactionManagerService.class,raDeployementService.getTxmInjector()).addDependency(ConnectorServices.CONNECTOR_CONFIG_SERVICE,ConnectorSubsystemConfiguration.class,raDeployementService.getConfigInjector()).addDependency(NamingService.SERVICE_NAME).setInitialMode(Mode.ACTIVE);
  }
 catch (  Throwable t) {
    throw new DeploymentUnitProcessingException(t);
  }
}

{
  validator.validate(operation);
  String jndiName=operation.require(CommonAttributes.JNDI_BINDING).asString();
  final ModelNode entries=context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS).getModel().get(CommonAttributes.ENTRIES.getName());
  for (  ModelNode entry : entries.asList()) {
    if (jndiName.equals(entry.asString())) {
      throw new OperationFailedException(new ModelNode().set(MESSAGES.jndiNameAlreadyRegistered(jndiName)));
    }
  }
  entries.add(jndiName);
  if (context.isNormalServer()) {
    context.addStep(new OperationStepHandler(){
      @Override public void execute(      OperationContext context,      ModelNode operation) throws OperationFailedException {
        final ServiceName hqServiceName=MessagingServices.getHornetQServiceName(PathAddress.pathAddress(operation.get(ModelDescriptionConstants.OP_ADDR)));
        ServiceController<?> hqService=context.getServiceRegistry(false).getService(hqServiceName);
        if (hqService != null) {
          HornetQServer hqServer=HornetQServer.class.cast(hqService.getValue());
          String resourceName=PathAddress.pathAddress(operation.require(ModelDescriptionConstants.OP_ADDR)).getLastElement().getValue();
          String jndiName=operation.require(CommonAttributes.JNDI_BINDING).asString();
          addJndiNameToControl(jndiName,resourceName,hqServer,context);
        }
        if (!context.hasFailureDescription()) {
          context.getResult();
        }
        if (context.completeStep() != OperationContext.ResultAction.KEEP) {
        }
      }
    }
,OperationContext.Stage.RUNTIME);
  }
  context.completeStep();
}

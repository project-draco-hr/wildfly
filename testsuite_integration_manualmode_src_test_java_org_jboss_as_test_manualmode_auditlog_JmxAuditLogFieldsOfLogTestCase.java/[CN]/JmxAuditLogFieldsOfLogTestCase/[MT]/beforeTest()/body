{
  file=new File(System.getProperty("jboss.home"));
  file=new File(file,"standalone");
  file=new File(file,"data");
  file=new File(file,"audit-log.log");
  if (file.exists()) {
    file.delete();
  }
  container.start(CONTAINER);
  final ModelControllerClient client=TestSuiteEnvironment.getModelControllerClient();
  managementClient=new ManagementClient(client,TestSuiteEnvironment.getServerAddress(),TestSuiteEnvironment.getServerPort(),"http-remoting");
  ModelNode op;
  ModelNode result;
  mgmtRealmConfigAddress=PathAddress.pathAddress(PathElement.pathElement(CORE_SERVICE,MANAGEMENT),PathElement.pathElement(SECURITY_REALM,"ManagementRealm"),PathElement.pathElement(AUTHENTICATION,LOCAL));
  op=Util.getWriteAttributeOperation(mgmtRealmConfigAddress,"default-user",new ModelNode("IAmAdmin"));
  result=client.execute(op);
  Assert.assertEquals(result.get("failure-description").asString(),SUCCESS,result.get(OUTCOME).asString());
  auditLogConfigAddress=PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM,JMX),PathElement.pathElement(CONFIGURATION,AUDIT_LOG));
  op=Util.createAddOperation(auditLogConfigAddress);
  result=client.execute(op);
  Assert.assertEquals(result.get("failure-description").asString(),SUCCESS,result.get(OUTCOME).asString());
  op=Util.createAddOperation(PathAddress.pathAddress(auditLogConfigAddress,PathElement.pathElement(HANDLER,HANDLER_NAME)));
  result=client.execute(op);
  Assert.assertEquals(result.get("failure-description").asString(),SUCCESS,result.get(OUTCOME).asString());
  op=Util.getWriteAttributeOperation(auditLogConfigAddress,AuditLogLoggerResourceDefinition.LOG_READ_ONLY.getName(),new ModelNode(true));
  result=client.execute(op);
  Assert.assertEquals(result.get("failure-description").asString(),SUCCESS,result.get(OUTCOME).asString());
  op=Util.getWriteAttributeOperation(auditLogConfigAddress,AuditLogLoggerResourceDefinition.ENABLED.getName(),new ModelNode(true));
  result=client.execute(op);
  Assert.assertEquals(result.get("failure-description").asString(),SUCCESS,result.get(OUTCOME).asString());
  container.stop(CONTAINER);
  Thread.sleep(1000);
  while (managementClient.isServerInRunningState()) {
    Thread.sleep(50);
  }
}

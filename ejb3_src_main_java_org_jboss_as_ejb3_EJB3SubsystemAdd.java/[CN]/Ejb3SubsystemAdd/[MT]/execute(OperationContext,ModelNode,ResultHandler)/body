{
  final ModelNode compensatingOperation=Util.getResourceRemoveOperation(operation.require(OP_ADDR));
  if (context instanceof BootOperationContext) {
    final BootOperationContext updateContext=(BootOperationContext)context;
    context.getRuntimeContext().setRuntimeTask(new RuntimeTask(){
      @Override public void execute(      RuntimeTaskContext context) throws OperationFailedException {
        final ServiceTarget serviceTarget=context.getServiceTarget();
        final EJBUtilities utilities=new EJBUtilities();
        serviceTarget.addService(EJBUtilities.SERVICE_NAME,utilities).addDependency(TxnServices.JBOSS_TXN_TRANSACTION_MANAGER,TransactionManager.class,utilities.getTransactionManagerInjector()).setInitialMode(ServiceController.Mode.ACTIVE).install();
        resultHandler.handleResultComplete();
      }
    }
);
    updateContext.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_DEPLOYMENT,new EjbJarParsingDeploymentUnitProcessor());
    updateContext.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_ANNOTATION,new EjbAnnotationProcessor());
    updateContext.addDeploymentProcessor(Phase.DEPENDENCIES,Phase.DEPENDENCIES_EJB,new EjbDependencyDeploymentUnitProcessor());
    updateContext.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_TRANSACTION_MANAGEMENT,new TransactionManagementAnnotationProcessor());
    updateContext.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_LOCAL_VIEW_ANNOTATION,new LocalEjbViewAnnotationProcessor());
    updateContext.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_NO_INTERFACE_VIEW_ANNOTATION,new NoInterfaceViewAnnotationProcessor());
    updateContext.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_INJECTION_ANNOTATION,new EjbResourceInjectionAnnotationProcessor());
    updateContext.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_STARTUP_ANNOTATION,new StartupAnnotationProcessor());
  }
  context.getSubModel().setEmptyObject();
  resultHandler.handleResultComplete();
  return new BasicOperationResult(compensatingOperation);
}

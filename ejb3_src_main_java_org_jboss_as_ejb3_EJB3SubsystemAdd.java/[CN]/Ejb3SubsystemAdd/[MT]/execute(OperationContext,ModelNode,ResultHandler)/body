{
  final ModelNode compensatingOperation=Util.getResourceRemoveOperation(operation.require(OP_ADDR));
  if (context instanceof BootOperationContext) {
    final BootOperationContext updateContext=(BootOperationContext)context;
    context.getRuntimeContext().setRuntimeTask(new RuntimeTask(){
      @Override public void execute(      RuntimeTaskContext context) throws OperationFailedException {
        final ServiceTarget serviceTarget=context.getServiceTarget();
        final EJBUtilities utilities=new EJBUtilities();
        serviceTarget.addService(EJBUtilities.SERVICE_NAME,utilities).addDependency(TxnServices.JBOSS_TXN_TRANSACTION_MANAGER,TransactionManager.class,utilities.getTransactionManagerInjector()).addDependency(TxnServices.JBOSS_TXN_SYNCHRONIZATION_REGISTRY,TransactionSynchronizationRegistry.class,utilities.getTransactionSynchronizationRegistryInjector()).addDependency(TxnServices.JBOSS_TXN_USER_TRANSACTION,UserTransaction.class,utilities.getUserTransactionInjector()).setInitialMode(ServiceController.Mode.ACTIVE).install();
        resultHandler.handleResultComplete();
      }
    }
);
    updateContext.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_DEPLOYMENT,new EjbJarParsingDeploymentUnitProcessor());
    updateContext.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_CREATE_COMPONENT_DESCRIPTIONS,new EJBComponentDescriptionFactory());
    updateContext.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_SESSION_BEAN_DD,new SessionBeanXmlDescriptorProcessor());
    updateContext.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_MDB_DD,new MessageDrivenBeanXmlDescriptorProcessor());
    updateContext.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_CONTEXT_BINDING,new EjbContextJndiBindingProcessor());
    updateContext.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_TIMERSERVICE_BINDING,new TimerServiceJndiBindingProcessor());
    updateContext.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_TRANSACTION_MANAGEMENT,new TransactionManagementAnnotationProcessor());
    updateContext.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_BUSINESS_VIEW_ANNOTATION,new BusinessViewAnnotationProcessor());
    updateContext.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_INJECTION_ANNOTATION,new EjbResourceInjectionAnnotationProcessor());
    updateContext.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_STARTUP_ANNOTATION,new StartupAnnotationProcessor());
    updateContext.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_CONCURRENCY_MANAGEMENT_ANNOTATION,new ConcurrencyManagementAnnotationProcessor());
    updateContext.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_LOCK_ANNOTATION,new LockAnnotationProcessor());
    updateContext.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_ACCESS_TIMEOUT_ANNOTATION,new AccessTimeoutAnnotationProcessor());
    updateContext.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_TRANSACTION_ATTR_ANNOTATION,new TransactionAttributeAnnotationProcessor());
    updateContext.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_SESSION_SYNCHRONIZATION,new SessionSynchronizationProcessor());
    updateContext.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_RESOURCE_ADAPTER_ANNOTATION,new ResourceAdapterAnnotationProcessor());
    updateContext.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_ASYNCHRONOUS_ANNOTATION,new AsynchronousAnnotationProcessor());
    updateContext.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_APPLICATION_EXCEPTION_ANNOTATION,new ApplicationExceptionAnnotationProcessor());
    updateContext.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_REMOVE_METHOD_ANNOTAION,new RemoveAnnotationProcessor());
    updateContext.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_DD_INTERCEPTORS,new InterceptorClassDeploymentDescriptorProcessor());
    updateContext.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_ASSEMBLY_DESC_DD,new AssemblyDescriptorProcessor());
    updateContext.addDeploymentProcessor(Phase.DEPENDENCIES,Phase.DEPENDENCIES_EJB,new EjbDependencyDeploymentUnitProcessor());
    updateContext.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_IMPLICIT_NO_INTERFACE_VIEW,new ImplicitLocalViewProcessor());
    updateContext.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_JNDI_BINDINGS,new EjbJndiBindingsDeploymentUnitProcessor());
    updateContext.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_MODULE_CONFIGURATION,new EjbJarConfigurationProcessor());
    updateContext.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_DD_INTERCEPTORS,new DeploymentDescriptorInterceptorBindingsProcessor());
    updateContext.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_DD_CONCURRENCY,new SingletonConcurrencyProcessor());
    updateContext.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_DD_METHOD_RESOLUTION,new DeploymentDescriptorMethodProcessor());
    updateContext.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_DD_REMOVE_METHOD,new RemoveMethodDeploymentDescriptorProcessor());
    updateContext.addDeploymentProcessor(Phase.INSTALL,Phase.INSTALL_EJB_REF,new EjbRefProcessor());
    updateContext.addDeploymentProcessor(Phase.INSTALL,Phase.INSTALL_DEPENDS_ON_ANNOTATION,new EjbDependsOnAnnotationProcessor());
  }
  context.getSubModel().setEmptyObject();
  resultHandler.handleResultComplete();
  return new BasicOperationResult(compensatingOperation);
}

{
  HttpClient client=HttpClients.createDefault();
  try {
    URI uri=SimpleServlet.createURI(baseURL);
    HttpResponse response=client.execute(new HttpGet(uri));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    URI longRunningURI=SimpleServlet.createURI(baseURL,REQUEST_DURATION);
    ExecutorService executor=Executors.newSingleThreadExecutor();
    Future<HttpResponse> future=executor.submit(new RequestTask(client,longRunningURI));
    Thread.sleep(1000);
    if (undeployOnly) {
      undeploy(DEPLOYMENT_1);
    }
 else {
      stop(CONTAINER_1);
    }
    try {
      response=future.get();
      try {
        Assert.assertEquals("Request should succeed since it initiated before undeply or shutdown.",HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      }
  finally {
        HttpClientUtils.closeQuietly(response);
      }
    }
 catch (    ExecutionException e) {
      e.printStackTrace(System.err);
      Assert.fail(e.getCause().getMessage());
    }
    if (undeployOnly) {
      response=client.execute(new HttpGet(uri));
      try {
        Assert.assertEquals("If we are only undeploying, then subsequent requests should return 404.",HttpServletResponse.SC_NOT_FOUND,response.getStatusLine().getStatusCode());
      }
  finally {
        HttpClientUtils.closeQuietly(response);
      }
    }
  }
  finally {
    HttpClientUtils.closeQuietly(client);
  }
}

{
  final EjbJarMetaData ejbJarMetaData=deploymentUnit.getAttachment(EjbDeploymentAttachmentKeys.EJB_JAR_METADATA);
  if (ejbJarMetaData == null) {
    return;
  }
  final SimpleSet<String> annotatedEJBs;
  if (appclient) {
    final List<ComponentDescription> additionalComponents=deploymentUnit.getAttachmentList(org.jboss.as.ee.component.Attachments.ADDITIONAL_RESOLVABLE_COMPONENTS);
    annotatedEJBs=new SimpleSet<String>(){
      @Override public boolean contains(      Object o){
        for (        final ComponentDescription component : additionalComponents) {
          if (component.getComponentName().equals(o)) {
            return true;
          }
        }
        return false;
      }
    }
;
  }
 else {
    final EjbJarDescription ejbJarDescription=getEjbJarDescription(deploymentUnit);
    annotatedEJBs=new SimpleSet<String>(){
      @Override public boolean contains(      Object o){
        return ejbJarDescription.hasComponent((String)o);
      }
    }
;
  }
  final EnterpriseBeansMetaData ejbs=ejbJarMetaData.getEnterpriseBeans();
  if (ejbs != null && !ejbs.isEmpty()) {
    for (    final EnterpriseBeanMetaData ejb : ejbs) {
      final String beanName=ejb.getName();
      if (annotatedEJBs.contains(beanName)) {
        continue;
      }
      processBeanMetaData(deploymentUnit,ejb);
    }
  }
  EjbDeploymentMarker.mark(deploymentUnit);
}

{
  ComponentConfiguration singletonComponentConfiguration=new ComponentConfiguration(this,classIndex,moduleClassLoader,moduleLoader);
  singletonComponentConfiguration.setComponentCreateServiceFactory(new SingletonComponentCreateServiceFactory(this.isInitOnStartup(),dependsOn));
  if (isSecurityEnabled()) {
    getConfigurators().add(new ComponentConfigurator(){
      @Override public void configure(      final DeploymentPhaseContext context,      final ComponentDescription description,      final ComponentConfiguration configuration) throws DeploymentUnitProcessingException {
        configuration.addPostConstructInterceptor(new SecurityContextInterceptorFactory(isSecurityEnabled(),false),InterceptorOrder.View.SECURITY_CONTEXT);
      }
    }
);
  }
  if (getTransactionManagementType().equals(TransactionManagementType.CONTAINER)) {
    getConfigurators().add(new ComponentConfigurator(){
      @Override public void configure(      final DeploymentPhaseContext context,      final ComponentDescription description,      final ComponentConfiguration configuration) throws DeploymentUnitProcessingException {
        final EEApplicationClasses applicationClasses=context.getDeploymentUnit().getAttachment(Attachments.EE_APPLICATION_CLASSES_DESCRIPTION);
        InterceptorClassDescription interceptorConfig=ComponentDescription.mergeInterceptorConfig(configuration.getComponentClass(),applicationClasses.getClassByName(description.getComponentClassName()),description,MetadataCompleteMarker.isMetadataComplete(context.getDeploymentUnit()));
        configuration.addPostConstructInterceptor(new LifecycleCMTTxInterceptor.Factory(interceptorConfig.getPostConstruct(),true),InterceptorOrder.ComponentPostConstruct.TRANSACTION_INTERCEPTOR);
        configuration.addPreDestroyInterceptor(new LifecycleCMTTxInterceptor.Factory(interceptorConfig.getPreDestroy(),true),InterceptorOrder.ComponentPreDestroy.TRANSACTION_INTERCEPTOR);
        configuration.addTimeoutViewInterceptor(TimerCMTTxInterceptor.FACTORY,InterceptorOrder.View.CMT_TRANSACTION_INTERCEPTOR);
      }
    }
);
  }
 else {
    getConfigurators().add(new ComponentConfigurator(){
      @Override public void configure(      final DeploymentPhaseContext context,      final ComponentDescription description,      final ComponentConfiguration configuration) throws DeploymentUnitProcessingException {
        configuration.addPostConstructInterceptor(EjbBMTInterceptor.FACTORY,InterceptorOrder.ComponentPostConstruct.TRANSACTION_INTERCEPTOR);
        configuration.addPreDestroyInterceptor(EjbBMTInterceptor.FACTORY,InterceptorOrder.ComponentPreDestroy.TRANSACTION_INTERCEPTOR);
        configuration.addComponentInterceptor(EjbBMTInterceptor.FACTORY,InterceptorOrder.Component.BMT_TRANSACTION_INTERCEPTOR,false);
      }
    }
);
  }
  return singletonComponentConfiguration;
}

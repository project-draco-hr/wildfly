{
  super(ID);
  setEnterHandler(GlobalCharacterHandlers.CONTENT_CHARACTER_HANDLER);
  final NameValueSeparatorState nvSep=new NameValueSeparatorState(valueState);
  enterState('=',nvSep);
  setDefaultHandler(new CharacterHandler(){
    @Override public void handle(    ParsingContext ctx) throws CommandFormatException {
      if (ctx.begins(Util.PROPERTY_START)) {
        ctx.replaceProperty(true);
      }
 else {
        WordCharacterHandler.IGNORE_LB_ESCAPE_ON.handle(ctx);
      }
    }
  }
);
  setWhitespaceHandler(new EnterStateCharacterHandler(new WhitespaceState()));
  setReturnHandler(new CharacterHandler(){
    @Override public void handle(    ParsingContext ctx) throws CommandFormatException {
      if (ctx.isEndOfContent()) {
        ctx.leaveState();
      }
 else       if (ctx.getCharacter() == '=') {
        ctx.enterState(nvSep);
      }
 else {
        ctx.leaveState();
      }
    }
  }
);
}

{
  ModelNode desc=readModelDescriptionWithAccessControlParameter(ReadResourceDescriptionHandler.AccessControl.NONE);
  Assert.assertFalse(desc.has(ACCESS_CONTROL));
  Assert.assertEquals("description",desc.get(ModelDescriptionConstants.DESCRIPTION).asString());
  Assert.assertTrue(desc.get(CHILDREN,TWO.getKey(),ModelDescriptionConstants.DESCRIPTION).isDefined());
  Assert.assertTrue(desc.hasDefined(ModelDescriptionConstants.ATTRIBUTES));
  Set<String> attributes=desc.get(ModelDescriptionConstants.ATTRIBUTES).keys();
  Assert.assertEquals(1,attributes.size());
  Assert.assertTrue(attributes.contains(ATTR_NONE));
  Assert.assertTrue(desc.hasDefined(ModelDescriptionConstants.OPERATIONS));
  Set<String> ops=desc.get(ModelDescriptionConstants.OPERATIONS).keys();
  Assert.assertEquals(3,ops.size());
  Assert.assertTrue(ops.contains(ModelDescriptionConstants.ADD));
  Assert.assertTrue(ops.contains(ModelDescriptionConstants.REMOVE));
  Assert.assertTrue(ops.contains(OP_CONFIG_RW_NONE));
  desc=getChildDescription(desc,TWO);
  Assert.assertFalse(desc.has(ACCESS_CONTROL));
  Assert.assertEquals("description",desc.get(ModelDescriptionConstants.DESCRIPTION).asString());
  Assert.assertTrue(desc.hasDefined(ModelDescriptionConstants.ATTRIBUTES));
  attributes=desc.get(ModelDescriptionConstants.ATTRIBUTES).keys();
  Assert.assertEquals(1,attributes.size());
  Assert.assertTrue(attributes.contains(ATTR_NONE));
  Assert.assertTrue(desc.hasDefined(ModelDescriptionConstants.OPERATIONS));
  ops=desc.get(ModelDescriptionConstants.OPERATIONS).keys();
  Assert.assertEquals(3,ops.size());
  Assert.assertTrue(ops.contains(ModelDescriptionConstants.ADD));
  Assert.assertTrue(ops.contains(ModelDescriptionConstants.REMOVE));
  Assert.assertTrue(ops.contains(OP_CONFIG_RW_NONE));
}

{
  registerAttributeVaultSensitivityResource();
  VaultExpressionSensitivityConfig.INSTANCE.setConfiguredRequiresAccessPermission(false);
  VaultExpressionSensitivityConfig.INSTANCE.setConfiguredRequiresReadPermission(true);
  VaultExpressionSensitivityConfig.INSTANCE.setConfiguredRequiresWritePermission(false);
  try {
    ModelNode op=createReadResourceDescriptionOperation(PathAddress.EMPTY_ADDRESS,StandardRole.MONITOR,true);
    ModelNode result=executeForResult(op);
    ResourceAccessControl accessControl=getResourceAccessControl(getChildDescription(result,ONE),ONE_A_ADDR);
    Map<String,ModelNode> defaultAttributes=checkAttributeAccessControlNames(accessControl.defaultControl,ATTR_NONE,ATTR_VAULT);
    checkAttributePermissions(defaultAttributes,ATTR_NONE,true,false);
    checkAttributePermissions(defaultAttributes,ATTR_VAULT,true,false);
    Map<String,ModelNode> exceptionAttributes=checkAttributeAccessControlNames(accessControl.exceptions.get(ONE_A_ADDR),ATTR_NONE,ATTR_VAULT);
    checkAttributePermissions(exceptionAttributes,ATTR_NONE,true,false);
    checkAttributePermissions(exceptionAttributes,ATTR_VAULT,false,false);
    Map<String,Boolean> defaultOps=checkOperationAccessControlNames(accessControl.defaultControl,ADD,REMOVE);
    Assert.assertEquals(false,defaultOps.get(ADD));
    Assert.assertEquals(false,defaultOps.get(REMOVE));
    Map<String,Boolean> exceptionOps=checkOperationAccessControlNames(accessControl.exceptions.get(ONE_A_ADDR),ADD,REMOVE);
    Assert.assertEquals(false,exceptionOps.get(ADD));
    Assert.assertEquals(false,exceptionOps.get(REMOVE));
  }
  finally {
    VaultExpressionSensitivityConfig.INSTANCE.setConfiguredRequiresAccessPermission(null);
    VaultExpressionSensitivityConfig.INSTANCE.setConfiguredRequiresReadPermission(null);
    VaultExpressionSensitivityConfig.INSTANCE.setConfiguredRequiresWritePermission(null);
  }
}

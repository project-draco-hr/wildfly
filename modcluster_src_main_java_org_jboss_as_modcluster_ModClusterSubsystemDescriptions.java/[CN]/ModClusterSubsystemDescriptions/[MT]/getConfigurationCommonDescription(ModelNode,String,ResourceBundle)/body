{
  node.get(DESCRIPTION).set(bundle.getString("modcluster.configuration"));
  node.get(type,CommonAttributes.ADVERTISE_SOCKET,TYPE).set(ModelType.STRING);
  node.get(type,CommonAttributes.ADVERTISE_SOCKET,DESCRIPTION).set(bundle.getString("modcluster.configuration.advertise-socket"));
  node.get(type,CommonAttributes.ADVERTISE_SOCKET,REQUIRED).set(false);
  node.get(type,CommonAttributes.PROXY_LIST,TYPE).set(ModelType.STRING);
  node.get(type,CommonAttributes.PROXY_LIST,DESCRIPTION).set(bundle.getString("modcluster.configuration.proxy-list"));
  node.get(type,CommonAttributes.PROXY_LIST,REQUIRED).set(false);
  node.get(type,CommonAttributes.PROXY_LIST,EXPRESSIONS_ALLOWED).set(true);
  node.get(type,CommonAttributes.PROXY_LIST,DEFAULT).set("");
  node.get(type,CommonAttributes.PROXY_URL,TYPE).set(ModelType.STRING);
  node.get(type,CommonAttributes.PROXY_URL,DESCRIPTION).set(bundle.getString("modcluster.configuration.proxy-url"));
  node.get(type,CommonAttributes.PROXY_URL,REQUIRED).set(false);
  node.get(type,CommonAttributes.PROXY_URL,EXPRESSIONS_ALLOWED).set(true);
  node.get(type,CommonAttributes.PROXY_URL,DEFAULT).set("/");
  node.get(type,CommonAttributes.ADVERTISE,TYPE).set(ModelType.BOOLEAN);
  node.get(type,CommonAttributes.ADVERTISE,DESCRIPTION).set(bundle.getString("modcluster.configuration.advertise"));
  node.get(type,CommonAttributes.ADVERTISE,REQUIRED).set(false);
  node.get(type,CommonAttributes.ADVERTISE,DEFAULT).set(true);
  node.get(type,CommonAttributes.ADVERTISE_SECURITY_KEY,TYPE).set(ModelType.STRING);
  node.get(type,CommonAttributes.ADVERTISE_SECURITY_KEY,DESCRIPTION).set(bundle.getString("modcluster.configuration.advertise-security-key"));
  node.get(type,CommonAttributes.ADVERTISE_SECURITY_KEY,REQUIRED).set(false);
  node.get(type,CommonAttributes.ADVERTISE_SECURITY_KEY,EXPRESSIONS_ALLOWED).set(true);
  node.get(type,CommonAttributes.EXCLUDED_CONTEXTS,TYPE).set(ModelType.STRING);
  node.get(type,CommonAttributes.EXCLUDED_CONTEXTS,DESCRIPTION).set(bundle.getString("modcluster.configuration.excluded-contexts"));
  node.get(type,CommonAttributes.EXCLUDED_CONTEXTS,REQUIRED).set(false);
  node.get(type,CommonAttributes.EXCLUDED_CONTEXTS,EXPRESSIONS_ALLOWED).set(true);
  node.get(type,CommonAttributes.EXCLUDED_CONTEXTS,DEFAULT).set("ROOT,invoker,jbossws,juddi,console");
  node.get(type,CommonAttributes.AUTO_ENABLE_CONTEXTS,TYPE).set(ModelType.BOOLEAN);
  node.get(type,CommonAttributes.AUTO_ENABLE_CONTEXTS,DESCRIPTION).set(bundle.getString("modcluster.configuration.auto-enable-contexts"));
  node.get(type,CommonAttributes.AUTO_ENABLE_CONTEXTS,REQUIRED).set(false);
  node.get(type,CommonAttributes.AUTO_ENABLE_CONTEXTS,DEFAULT).set(true);
  node.get(type,CommonAttributes.STOP_CONTEXT_TIMEOUT,TYPE).set(ModelType.INT);
  node.get(type,CommonAttributes.STOP_CONTEXT_TIMEOUT,DESCRIPTION).set(bundle.getString("modcluster.configuration.stop-context-timeout"));
  node.get(type,CommonAttributes.STOP_CONTEXT_TIMEOUT,REQUIRED).set(false);
  node.get(type,CommonAttributes.STOP_CONTEXT_TIMEOUT,DEFAULT).set(10);
  node.get(type,CommonAttributes.STOP_CONTEXT_TIMEOUT,ModelDescriptionConstants.UNIT).set(MeasurementUnit.SECONDS.getName());
  node.get(type,CommonAttributes.SOCKET_TIMEOUT,TYPE).set(ModelType.INT);
  node.get(type,CommonAttributes.SOCKET_TIMEOUT,DESCRIPTION).set(bundle.getString("modcluster.configuration.socket-timeout"));
  node.get(type,CommonAttributes.SOCKET_TIMEOUT,REQUIRED).set(false);
  node.get(type,CommonAttributes.SOCKET_TIMEOUT,DEFAULT).set(20);
  node.get(type,CommonAttributes.SOCKET_TIMEOUT,ModelDescriptionConstants.UNIT).set(MeasurementUnit.SECONDS.getName());
  node.get(type,CommonAttributes.STICKY_SESSION,TYPE).set(ModelType.BOOLEAN);
  node.get(type,CommonAttributes.STICKY_SESSION,DESCRIPTION).set(bundle.getString("modcluster.configuration.sticky-session"));
  node.get(type,CommonAttributes.STICKY_SESSION,REQUIRED).set(false);
  node.get(type,CommonAttributes.STICKY_SESSION,DEFAULT).set(true);
  node.get(type,CommonAttributes.STICKY_SESSION_REMOVE,TYPE).set(ModelType.BOOLEAN);
  node.get(type,CommonAttributes.STICKY_SESSION_REMOVE,DESCRIPTION).set(bundle.getString("modcluster.configuration.sticky-session-remove"));
  node.get(type,CommonAttributes.STICKY_SESSION_REMOVE,REQUIRED).set(false);
  node.get(type,CommonAttributes.STICKY_SESSION_REMOVE,DEFAULT).set(false);
  node.get(type,CommonAttributes.STICKY_SESSION_FORCE,TYPE).set(ModelType.BOOLEAN);
  node.get(type,CommonAttributes.STICKY_SESSION_FORCE,DESCRIPTION).set(bundle.getString("modcluster.configuration.sticky-session-force"));
  node.get(type,CommonAttributes.STICKY_SESSION_FORCE,REQUIRED).set(false);
  node.get(type,CommonAttributes.STICKY_SESSION_FORCE,DEFAULT).set(false);
  node.get(type,CommonAttributes.WORKER_TIMEOUT,TYPE).set(ModelType.INT);
  node.get(type,CommonAttributes.WORKER_TIMEOUT,DESCRIPTION).set(bundle.getString("modcluster.configuration.worker-timeout"));
  node.get(type,CommonAttributes.WORKER_TIMEOUT,REQUIRED).set(false);
  node.get(type,CommonAttributes.WORKER_TIMEOUT,DEFAULT).set(-1);
  node.get(type,CommonAttributes.WORKER_TIMEOUT,ModelDescriptionConstants.UNIT).set(MeasurementUnit.SECONDS.getName());
  node.get(type,CommonAttributes.MAX_ATTEMPTS,TYPE).set(ModelType.INT);
  node.get(type,CommonAttributes.MAX_ATTEMPTS,DESCRIPTION).set(bundle.getString("modcluster.configuration.max-attempts"));
  node.get(type,CommonAttributes.MAX_ATTEMPTS,REQUIRED).set(false);
  node.get(type,CommonAttributes.MAX_ATTEMPTS,DEFAULT).set(1);
  node.get(type,CommonAttributes.FLUSH_PACKETS,TYPE).set(ModelType.BOOLEAN);
  node.get(type,CommonAttributes.FLUSH_PACKETS,DESCRIPTION).set(bundle.getString("modcluster.configuration.flush-packets"));
  node.get(type,CommonAttributes.FLUSH_PACKETS,REQUIRED).set(false);
  node.get(type,CommonAttributes.FLUSH_PACKETS,DEFAULT).set(false);
  node.get(type,CommonAttributes.FLUSH_WAIT,TYPE).set(ModelType.INT);
  node.get(type,CommonAttributes.FLUSH_WAIT,DESCRIPTION).set(bundle.getString("modcluster.configuration.flush-wait"));
  node.get(type,CommonAttributes.FLUSH_WAIT,REQUIRED).set(false);
  node.get(type,CommonAttributes.FLUSH_WAIT,DEFAULT).set(-1);
  node.get(type,CommonAttributes.FLUSH_WAIT,ModelDescriptionConstants.UNIT).set(MeasurementUnit.MILLISECONDS.getName());
  node.get(type,CommonAttributes.PING,TYPE).set(ModelType.INT);
  node.get(type,CommonAttributes.PING,DESCRIPTION).set(bundle.getString("modcluster.configuration.ping"));
  node.get(type,CommonAttributes.PING,REQUIRED).set(false);
  node.get(type,CommonAttributes.PING,DEFAULT).set(10);
  node.get(type,CommonAttributes.PING,ModelDescriptionConstants.UNIT).set(MeasurementUnit.SECONDS.getName());
  node.get(type,CommonAttributes.SMAX,TYPE).set(ModelType.INT);
  node.get(type,CommonAttributes.SMAX,DESCRIPTION).set(bundle.getString("modcluster.configuration.smax"));
  node.get(type,CommonAttributes.SMAX,REQUIRED).set(false);
  node.get(type,CommonAttributes.SMAX,DEFAULT).set(-1);
  node.get(type,CommonAttributes.TTL,TYPE).set(ModelType.INT);
  node.get(type,CommonAttributes.TTL,DESCRIPTION).set(bundle.getString("modcluster.configuration.ttl"));
  node.get(type,CommonAttributes.TTL,REQUIRED).set(false);
  node.get(type,CommonAttributes.TTL,DEFAULT).set(-1);
  node.get(type,CommonAttributes.TTL,ModelDescriptionConstants.UNIT).set(MeasurementUnit.SECONDS.getName());
  node.get(type,CommonAttributes.NODE_TIMEOUT,TYPE).set(ModelType.INT);
  node.get(type,CommonAttributes.NODE_TIMEOUT,DESCRIPTION).set(bundle.getString("modcluster.configuration.node-timeout"));
  node.get(type,CommonAttributes.NODE_TIMEOUT,REQUIRED).set(false);
  node.get(type,CommonAttributes.NODE_TIMEOUT,DEFAULT).set(-1);
  node.get(type,CommonAttributes.NODE_TIMEOUT,ModelDescriptionConstants.UNIT).set(MeasurementUnit.SECONDS.getName());
  node.get(type,CommonAttributes.BALANCER,TYPE).set(ModelType.STRING);
  node.get(type,CommonAttributes.BALANCER,DESCRIPTION).set(bundle.getString("modcluster.configuration.balancer"));
  node.get(type,CommonAttributes.BALANCER,REQUIRED).set(false);
  node.get(type,CommonAttributes.BALANCER,EXPRESSIONS_ALLOWED).set(true);
  node.get(type,CommonAttributes.DOMAIN,TYPE).set(ModelType.STRING);
  node.get(type,CommonAttributes.DOMAIN,DESCRIPTION).set(bundle.getString("modcluster.configuration.domain"));
  node.get(type,CommonAttributes.DOMAIN,REQUIRED).set(false);
  node.get(type,CommonAttributes.DOMAIN,EXPRESSIONS_ALLOWED).set(true);
  if (ATTRIBUTES.equals(type)) {
    node.get(CHILDREN,CommonAttributes.SSL,DESCRIPTION).set(bundle.getString("modcluster.configuration.ssl"));
    node.get(CHILDREN,CommonAttributes.SSL,MODEL_DESCRIPTION).setEmptyObject();
  }
  return node;
}

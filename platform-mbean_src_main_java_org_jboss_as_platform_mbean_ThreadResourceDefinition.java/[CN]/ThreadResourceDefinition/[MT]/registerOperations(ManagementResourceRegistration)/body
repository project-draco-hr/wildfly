{
  super.registerOperations(threads);
  threads.registerOperationHandler(ReadResourceHandler.DEFINITION,ThreadMXBeanReadResourceHandler.INSTANCE);
  threads.registerOperationHandler(RESET_PEAK_THREAD_COUNT,ThreadMXBeanResetPeakThreadCountHandler.INSTANCE,ThreadMXBeanResetPeakThreadCountHandler.INSTANCE,RUNTIME_ONLY_FLAG);
  threads.registerOperationHandler(FIND_DEADLOCKED_THREADS,ThreadMXBeanFindDeadlockedThreadsHandler.INSTANCE,ThreadMXBeanFindDeadlockedThreadsHandler.INSTANCE,READ_ONLY_RUNTIME_ONLY_FLAG);
  threads.registerOperationHandler(FIND_MONITOR_DEADLOCKED_THREADS,ThreadMXBeanFindMonitorDeadlockedThreadsHandler.INSTANCE,ThreadMXBeanFindMonitorDeadlockedThreadsHandler.INSTANCE,READ_ONLY_RUNTIME_ONLY_FLAG);
  threads.registerOperationHandler(GET_THREAD_INFO,ThreadMXBeanThreadInfoHandler.INSTANCE,ThreadMXBeanThreadInfoHandler.INSTANCE,READ_ONLY_RUNTIME_ONLY_FLAG);
  threads.registerOperationHandler(GET_THREAD_INFOS,ThreadMXBeanThreadInfosHandler.INSTANCE,ThreadMXBeanThreadInfosHandler.INSTANCE,READ_ONLY_RUNTIME_ONLY_FLAG);
  threads.registerOperationHandler(GET_THREAD_CPU_TIME,ThreadMXBeanCpuTimeHandler.INSTANCE,ThreadMXBeanCpuTimeHandler.INSTANCE,READ_ONLY_RUNTIME_ONLY_FLAG);
  threads.registerOperationHandler(GET_THREAD_USER_TIME,ThreadMXBeanUserTimeHandler.INSTANCE,ThreadMXBeanUserTimeHandler.INSTANCE,READ_ONLY_RUNTIME_ONLY_FLAG);
  threads.registerOperationHandler(DUMP_ALL_THREADS,ThreadMXBeanDumpAllThreadsHandler.INSTANCE,ThreadMXBeanDumpAllThreadsHandler.INSTANCE,READ_ONLY_RUNTIME_ONLY_FLAG);
}

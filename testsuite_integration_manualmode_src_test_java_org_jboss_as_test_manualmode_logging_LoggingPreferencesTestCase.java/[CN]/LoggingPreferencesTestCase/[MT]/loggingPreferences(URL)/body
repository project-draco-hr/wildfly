{
  final ModelControllerClient client=TestSuiteEnvironment.getModelControllerClient();
  final ManagementClient managementClient=new ManagementClient(client,TestSuiteEnvironment.getServerAddress(),TestSuiteEnvironment.getServerPort(),"http-remoting");
  Assert.assertTrue("Container is not started",managementClient.isServerInRunningState());
  try {
    Response response=getResponse(new URL(url,"logger?msg=" + URLEncoder.encode(DEPLOYMENT_LOG_MESSAGE,"utf-8")));
    Assert.assertTrue("Invalid response statusCode: " + response + " URL: "+ url,response.statusCode == HttpServletResponse.SC_OK);
    checkLogs(DEPLOYMENT_LOG_MESSAGE,perDeployLog,true);
    checkLogs(DEPLOYMENT_LOG_MESSAGE,profileLog,false);
    ModelNode op=Operations.createWriteAttributeOperation(LOGGING_SUBSYSTEM,PER_DEPLOY_ATTRIBUTE,false);
    validateResponse(op,client);
    container.stop(CONTAINER);
    clearLogFiles();
    container.start(CONTAINER);
    response=getResponse(new URL(url,"logger?msg=" + URLEncoder.encode(LOGGING_PROFILE_MESSAGE,"utf-8")));
    Assert.assertTrue("Invalid response statusCode: " + response + " URL: "+ url,response.statusCode == HttpServletResponse.SC_OK);
    checkLogs(LOGGING_PROFILE_MESSAGE,perDeployLog,false);
    checkLogs(LOGGING_PROFILE_MESSAGE,profileLog,true);
  }
  finally {
    safeClose(managementClient);
    safeClose(client);
  }
}

{
  if (context.getRuntimeContext() != null) {
    context.getRuntimeContext().setRuntimeTask(new RuntimeTask(){
      public void execute(      RuntimeTaskContext context) throws OperationFailedException {
        final String attributeName=operation.require(NAME).asString();
        final String webContext=operation.require("context").asString();
        final String endpoint=operation.require("endpoint").asString();
        final ServiceController<?> controller=context.getServiceRegistry().getService(WSServices.REGISTRY_SERVICE);
        if (controller != null) {
          try {
            final EndpointRegistry registry=(EndpointRegistry)controller.getValue();
            final ModelNode result=new ModelNode();
            ObjectName endpointName=new ObjectName("jboss.ws:context=" + webContext + ",endpoint="+ endpoint);
            Endpoint ep=registry.getEndpoint(endpointName);
            if (ep != null && ep.getEndpointMetrics() != null) {
              EndpointMetrics epMt=ep.getEndpointMetrics();
              if (START_TIME.equals(attributeName)) {
                result.set("" + epMt.getStartTime());
              }
 else               if (STOP_TIME.equals(attributeName)) {
                result.set("" + epMt.getStopTime());
              }
 else               if (MIN_PROCESSING_TIME.equals(attributeName)) {
                result.set("" + epMt.getMinProcessingTime());
              }
 else               if (MAX_PROCESSING_TIME.equals(attributeName)) {
                result.set("" + epMt.getMaxProcessingTime());
              }
 else               if (TOTAL_PROCESSING_TIME.equals(attributeName)) {
                result.set("" + epMt.getTotalProcessingTime());
              }
 else               if (REQUEST_COUNT.equals(attributeName)) {
                result.set("" + epMt.getRequestCount());
              }
 else               if (RESPONSE_COUNT.equals(attributeName)) {
                result.set("" + epMt.getResponseCount());
              }
 else               if (FAULT_COUNT.equals(attributeName)) {
                result.set("" + epMt.getFaultCount());
              }
            }
 else {
              result.set("","no endpoint avaiable");
            }
            resultHandler.handleResultFragment(new String[0],result);
            resultHandler.handleResultComplete();
          }
 catch (          Exception e) {
            throw new OperationFailedException(new ModelNode().set("failed to get metrics" + e.getMessage()));
          }
        }
 else {
          resultHandler.handleResultFragment(NO_LOCATION,new ModelNode().set("no metrics available"));
          resultHandler.handleResultComplete();
        }
      }
    }
);
  }
 else {
    resultHandler.handleResultFragment(NO_LOCATION,new ModelNode().set("no metrics available"));
    resultHandler.handleResultComplete();
  }
  return new BasicOperationResult();
}

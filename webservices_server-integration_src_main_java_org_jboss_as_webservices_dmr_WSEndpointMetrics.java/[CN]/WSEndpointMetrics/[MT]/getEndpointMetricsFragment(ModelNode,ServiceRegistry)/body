{
  final PathAddress address=PathAddress.pathAddress(operation.require(OP_ADDR));
  String endpointId;
  try {
    endpointId=URLDecoder.decode(address.getLastElement().getValue(),"UTF-8");
  }
 catch (  final UnsupportedEncodingException e) {
    throw new RuntimeException(e);
  }
  final String metricName=operation.require(NAME).asString();
  final String webContext=endpointId.substring(0,endpointId.indexOf(":"));
  final String endpointName=endpointId.substring(endpointId.indexOf(":") + 1);
  ServiceName endpointServiceName=WSServices.ENDPOINT_SERVICE.append("context=" + webContext).append(endpointName);
  ServiceController<Endpoint> service=(ServiceController<Endpoint>)WSServices.getContainerRegistry().getService(endpointServiceName);
  Endpoint endpoint=service.getValue();
  final ModelNode result=new ModelNode();
  if (endpoint != null && endpoint.getEndpointMetrics() != null) {
    final EndpointMetrics endpointMetrics=endpoint.getEndpointMetrics();
    if (MIN_PROCESSING_TIME.getName().equals(metricName)) {
      result.set(String.valueOf(endpointMetrics.getMinProcessingTime()));
    }
 else     if (MAX_PROCESSING_TIME.getName().equals(metricName)) {
      result.set(String.valueOf(endpointMetrics.getMaxProcessingTime()));
    }
 else     if (AVERAGE_PROCESSING_TIME.getName().equals(metricName)) {
      result.set(String.valueOf(endpointMetrics.getAverageProcessingTime()));
    }
 else     if (TOTAL_PROCESSING_TIME.getName().equals(metricName)) {
      result.set(String.valueOf(endpointMetrics.getTotalProcessingTime()));
    }
 else     if (REQUEST_COUNT.getName().equals(metricName)) {
      result.set(String.valueOf(endpointMetrics.getRequestCount()));
    }
 else     if (RESPONSE_COUNT.getName().equals(metricName)) {
      result.set(String.valueOf(endpointMetrics.getResponseCount()));
    }
 else     if (FAULT_COUNT.getName().equals(metricName)) {
      result.set(String.valueOf(endpointMetrics.getFaultCount()));
    }
  }
 else {
    result.set(getFallbackMessage());
  }
  return result;
}

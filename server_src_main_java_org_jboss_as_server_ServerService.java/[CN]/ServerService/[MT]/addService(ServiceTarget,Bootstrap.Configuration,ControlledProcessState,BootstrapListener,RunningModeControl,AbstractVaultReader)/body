{
  final ThreadGroup threadGroup=new ThreadGroup("ServerService ThreadGroup");
  final String namePattern="ServerService Thread Pool -- %t";
  final ThreadFactory threadFactory=new JBossThreadFactory(threadGroup,Boolean.FALSE,null,namePattern,null,null,AccessController.getContext());
  final ServerExecutorService serverExecutorService=new ServerExecutorService(threadFactory);
  serviceTarget.addService(Services.JBOSS_SERVER_EXECUTOR,serverExecutorService).install();
  ServerService service=new ServerService(configuration,processState,null,bootstrapListener,runningModeControl,vaultReader);
  ServiceBuilder<?> serviceBuilder=serviceTarget.addService(Services.JBOSS_SERVER_CONTROLLER,service);
  serviceBuilder.addDependency(DeploymentMountProvider.SERVICE_NAME,DeploymentMountProvider.class,service.injectedDeploymentRepository);
  serviceBuilder.addDependency(ContentRepository.SERVICE_NAME,ContentRepository.class,service.injectedContentRepository);
  serviceBuilder.addDependency(Services.JBOSS_SERVICE_MODULE_LOADER,ServiceModuleLoader.class,service.injectedModuleLoader);
  serviceBuilder.addDependency(Services.JBOSS_EXTERNAL_MODULE_SERVICE,ExternalModuleService.class,service.injectedExternalModuleService);
  serviceBuilder.addDependency(PathManagerService.SERVICE_NAME,PathManager.class,service.injectedPathManagerService);
  if (configuration.getServerEnvironment().isAllowModelControllerExecutor()) {
    serviceBuilder.addDependency(Services.JBOSS_SERVER_EXECUTOR,ExecutorService.class,service.getExecutorServiceInjector());
  }
  serviceBuilder.install();
}

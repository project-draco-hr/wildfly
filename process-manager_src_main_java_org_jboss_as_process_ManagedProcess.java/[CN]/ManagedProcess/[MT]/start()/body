{
  System.out.println("Starting " + processName);
synchronized (this) {
    if (start) {
      return;
    }
    final ProcessBuilder processBuilder=new ProcessBuilder(command);
    final Map<String,String> env=processBuilder.environment();
    env.clear();
    env.putAll(this.env);
    processBuilder.directory(new File(workingDirectory));
    final Process process;
synchronized (ManagedProcess.class) {
      process=processBuilder.start();
    }
    final ErrorStreamHandler errorStreamHandler=new ErrorStreamHandler(processName,process.getErrorStream());
    final Thread errorThread=new Thread(errorStreamHandler);
    errorThread.setName("Process " + processName + " stderr thread");
    final OutputStreamHandler outputStreamHandler=new OutputStreamHandler(process.getInputStream());
    final Thread outputThread=new Thread(outputStreamHandler);
    outputThread.setName("Process " + processName + " stdout thread");
    errorThread.start();
    outputThread.start();
    this.process=process;
    start=true;
  }
}

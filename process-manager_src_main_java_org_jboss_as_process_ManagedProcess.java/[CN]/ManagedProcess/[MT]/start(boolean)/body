{
synchronized (this) {
    if (start) {
      return;
    }
    final ProcessBuilder processBuilder=new ProcessBuilder(command);
    final Map<String,String> env=processBuilder.environment();
    env.clear();
    env.putAll(this.env);
    processBuilder.directory(new File(workingDirectory));
    final Process process;
synchronized (ManagedProcess.class) {
      process=processBuilder.start();
    }
    stdinStream=process.getOutputStream();
    final ErrorStreamHandler errorStreamHandler=new ErrorStreamHandler(processName,process.getErrorStream());
    final Thread errorThread=new Thread(errorStreamHandler);
    errorThread.setName("Process " + processName + " stderr thread");
    final Thread monitorThread=new Thread(new ProcessMonitor(process));
    monitorThread.setName("Process " + processName + " monitor thread");
    errorThread.start();
    monitorThread.start();
    start=true;
    stopped=false;
    if (!isRespawn)     respawnCount=0;
  }
}

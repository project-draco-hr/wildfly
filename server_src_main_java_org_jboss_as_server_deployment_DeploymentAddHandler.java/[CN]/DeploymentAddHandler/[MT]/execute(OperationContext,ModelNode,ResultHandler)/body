{
  try {
    String failure=validator.validate(operation);
    if (failure == null) {
      byte[] hash=operation.get(HASH).asBytes();
      if (deploymentRepository.hasDeploymentContent(hash)) {
        ModelNode opAddr=operation.get(OP_ADDR);
        PathAddress address=PathAddress.pathAddress(opAddr);
        String name=address.getLastElement().getValue();
        String runtimeName=has(operation,RUNTIME_NAME) ? operation.get(RUNTIME_NAME).asString() : name;
        ModelNode subModel=context.getSubModel();
        subModel.get(NAME).set(name);
        subModel.get(RUNTIME_NAME).set(runtimeName);
        subModel.get(HASH).set(hash);
        subModel.get(START).set(operation.has(START) && operation.get(START).asBoolean());
      }
 else {
        failure=String.format("No deployment content with hash %s is available in the deployment content repository.",HashUtil.bytesToHexString(hash));
      }
    }
    if (failure != null) {
      throw new OperationFailedException(new ModelNode().set(failure));
    }
  }
 catch (  Exception e) {
    throw new OperationFailedException(new ModelNode().set(e.getLocalizedMessage()));
  }
  resultHandler.handleResultComplete();
  return new BasicOperationResult(Util.getResourceRemoveOperation(operation.get(OP_ADDR)));
}

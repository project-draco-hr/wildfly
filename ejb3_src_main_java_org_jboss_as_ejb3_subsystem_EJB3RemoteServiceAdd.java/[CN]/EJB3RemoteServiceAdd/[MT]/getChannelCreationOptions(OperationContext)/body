{
  final ModelNode fullModel=Resource.Tools.readModel(context.readResource(PathAddress.EMPTY_ADDRESS));
  final ModelNode channelCreationOptions=fullModel.get(EJB3SubsystemModel.CHANNEL_CREATION_OPTIONS);
  if (channelCreationOptions.isDefined() && channelCreationOptions.asInt() > 0) {
    final ClassLoader loader=this.getClass().getClassLoader();
    final OptionMap.Builder builder=OptionMap.builder();
    for (    final Property optionProperty : channelCreationOptions.asPropertyList()) {
      final String name=optionProperty.getName();
      final ModelNode propValueModel=optionProperty.getValue();
      final String type=ChannelCreationOptionResource.CHANNEL_CREATION_OPTION_TYPE.resolveModelAttribute(context,propValueModel).asString();
      final String optionClassName=this.getClassNameForChannelOptionType(type);
      final String fullyQualifiedOptionName=optionClassName + "." + name;
      final Option option=Option.fromString(fullyQualifiedOptionName,loader);
      final String value=ChannelCreationOptionResource.CHANNEL_CREATION_OPTION_VALUE.resolveModelAttribute(context,propValueModel).asString();
      builder.set(option,option.parseValue(value,loader));
    }
    return builder.getMap();
  }
 else {
    return OptionMap.EMPTY;
  }
}

{
  step.predecessor=this.activeStep;
  this.activeStep=step;
  try {
    try {
      ClassLoader oldTccl=WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(step.handler.getClass());
      try {
        step.handler.execute(this,step.operation);
        if (isErrorLoggingNecessary() && step.response.hasDefined(FAILURE_DESCRIPTION)) {
          MGMT_OP_LOGGER.operationFailed(step.operation.get(OP),step.operation.get(OP_ADDR),step.response.get(FAILURE_DESCRIPTION));
        }
      }
  finally {
        WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(oldTccl);
      }
    }
 catch (    Throwable t) {
      if (!(t instanceof OperationClientException)) {
        logAuditRecord();
        throw t;
      }
 else       if (currentStage != Stage.DONE) {
        final ModelNode failDesc=OperationClientException.class.cast(t).getFailureDescription();
        step.response.get(FAILURE_DESCRIPTION).set(failDesc);
        if (isErrorLoggingNecessary()) {
          MGMT_OP_LOGGER.operationFailed(step.operation.get(OP),step.operation.get(OP_ADDR),step.response.get(FAILURE_DESCRIPTION));
        }
 else {
          MGMT_OP_LOGGER.operationFailedOnClientError(step.operation.get(OP),step.operation.get(OP_ADDR),step.response.get(FAILURE_DESCRIPTION));
        }
        completeStepInternal();
      }
 else {
        throw t;
      }
    }
  }
 catch (  Throwable t) {
    if (t instanceof StackOverflowError) {
      MGMT_OP_LOGGER.operationFailed(t,step.operation.get(OP),step.operation.get(OP_ADDR),AbstractControllerService.BOOT_STACK_SIZE_PROPERTY,AbstractControllerService.DEFAULT_BOOT_STACK_SIZE);
    }
 else {
      MGMT_OP_LOGGER.operationFailed(t,step.operation.get(OP),step.operation.get(OP_ADDR));
    }
    if (currentStage != Stage.DONE) {
      if (!step.response.hasDefined(FAILURE_DESCRIPTION)) {
        step.response.get(FAILURE_DESCRIPTION).set(MESSAGES.operationHandlerFailed(t.getLocalizedMessage()));
      }
      step.response.get(OUTCOME).set(FAILED);
      resultAction=getFailedResultAction(t);
      if (resultAction == ResultAction.ROLLBACK) {
        step.response.get(ROLLED_BACK).set(true);
      }
    }
 else {
      report(MessageSeverity.WARN,MESSAGES.stepHandlerFailed(step.handler));
    }
  }
 finally {
    finishStep(step);
  }
}

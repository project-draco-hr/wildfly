{
  try {
    finalizeInternal();
  }
 catch (  RuntimeException t) {
    if (toThrow == null) {
      toThrow=t;
    }
  }
catch (  Error t) {
    if (toThrow == null) {
      toThrow=t;
    }
  }
  Step step=this.predecessor;
  while (step != null) {
    if (step.resultHandler != null) {
      try {
        step.finalizeInternal();
      }
 catch (      RuntimeException t) {
        if (toThrow == null) {
          toThrow=t;
        }
      }
catch (      Error t) {
        if (toThrow == null) {
          toThrow=t;
        }
      }
      step=step.predecessor;
    }
 else {
      AbstractOperationContext.this.activeStep=step;
      break;
    }
  }
  throwThrowable(toThrow);
}

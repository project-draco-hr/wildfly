{
  final PathAddress pa=PathAddress.pathAddress(PathAddress.pathAddress(operation.require(OP_ADDR)));
  AuthorizationResult authResult=context.authorize(operation,EFFECTS);
  if (authResult.getDecision() != AuthorizationResult.Decision.PERMIT) {
    throw ControllerMessages.MESSAGES.unauthorized(operation.require(OP).asString(),pa,authResult.getExplanation());
  }
  final Resource resource=context.readResourceFromRoot(getBaseAddress());
  final ModelNode model=Resource.Tools.readModel(resource);
  try {
    final ByteArrayOutputStream baos=new ByteArrayOutputStream();
    try {
      BufferedOutputStream output=new BufferedOutputStream(baos);
      configPersister.marshallAsXml(model,output);
      output.close();
      baos.close();
    }
  finally {
      safeClose(baos);
    }
    String xml=new String(baos.toByteArray());
    context.getResult().set(xml);
  }
 catch (  RuntimeException e) {
    throw e;
  }
catch (  Exception e) {
    MGMT_OP_LOGGER.failedExecutingOperation(e,operation.require(ModelDescriptionConstants.OP),PathAddress.pathAddress(operation.get(ModelDescriptionConstants.OP_ADDR)));
    context.getFailureDescription().set(e.toString());
  }
  context.stepCompleted();
}

{
  final FineSessionCacheEntry<L> entry=this.findValue(id);
  if (entry != null) {
    Operation<SessionAttributeCacheKey,MarshalledValue<Object,MarshallingContext>,Void> evictOperation=new Operation<SessionAttributeCacheKey,MarshalledValue<Object,MarshallingContext>,Void>(){
      @Override public Void invoke(      Cache<SessionAttributeCacheKey,MarshalledValue<Object,MarshallingContext>> cache){
        for (        String attribute : entry.getAttributes()) {
          try {
            cache.evict(new SessionAttributeCacheKey(id,attribute));
          }
 catch (          CacheException e) {
            InfinispanWebLogger.ROOT_LOGGER.failedToPassivateSessionAttribute(e,id,attribute);
          }
        }
        return null;
      }
    }
;
    this.invoker.invoke(this.attributeCache,evictOperation,Flag.SKIP_LOCKING);
    if (!this.invoker.invoke(this.sessionCache,new PreLockedEvictOperation<String,FineSessionCacheEntry<L>>(id)).booleanValue()) {
      InfinispanWebLogger.ROOT_LOGGER.failedToPassivateSession(id);
    }
  }
}

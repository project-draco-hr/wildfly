{
  WebLogger.WEB_SSO_LOGGER.tracef("handling request %s",request.getRequestURI());
  request.removeNote(Constants.REQ_SSOID_NOTE);
  WebLogger.WEB_SSO_LOGGER.tracef("Process request for '%s'",request.getRequestURI());
  if (request.getUserPrincipal() != null) {
    WebLogger.WEB_SSO_LOGGER.tracef("Principal '%s' has already been authenticated",request.getUserPrincipal().getName());
    getNext().invoke(request,response);
    return;
  }
  Cookie cookie=null;
  Cookie[] cookies=request.getCookies();
  if (cookies == null) {
    cookies=new Cookie[0];
  }
  for (int i=0; i < cookies.length; i++) {
    if (Constants.SINGLE_SIGN_ON_COOKIE.equals(cookies[i].getName())) {
      cookie=cookies[i];
      break;
    }
  }
  if (cookie == null) {
    WebLogger.WEB_SSO_LOGGER.trace("SSO cookie is not present");
    getNext().invoke(request,response);
    return;
  }
  String ssoId=cookie.getValue();
  WebLogger.WEB_SSO_LOGGER.tracef("Checking for cached principal for %s",ssoId);
  SingleSignOnEntry entry=getSingleSignOnEntry(cookie.getValue());
  if (entry != null && isValid(ssoId,entry)) {
    Principal ssoPrinc=entry.getPrincipal();
    WebLogger.WEB_SSO_LOGGER.tracef("Found cached principal '%s' with auth type '%s'",(ssoPrinc == null ? "NULL" : ssoPrinc.getName()),entry.getAuthType());
    request.setNote(Constants.REQ_SSOID_NOTE,cookie.getValue());
    if (!getRequireReauthentication() && ssoPrinc != null) {
      request.setAuthType(entry.getAuthType());
      request.setUserPrincipal(ssoPrinc);
    }
  }
 else {
    WebLogger.WEB_SSO_LOGGER.tracef("No cached principal found, erasing SSO cookie");
    cookie.setMaxAge(0);
    response.addCookie(cookie);
  }
  getNext().invoke(request,response);
}

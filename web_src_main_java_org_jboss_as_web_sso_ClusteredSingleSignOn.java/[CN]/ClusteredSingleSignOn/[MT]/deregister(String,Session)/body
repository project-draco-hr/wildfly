{
synchronized (reverse) {
    reverse.remove(session);
  }
  SingleSignOnEntry sso=getSingleSignOnEntry(ssoId);
  if (sso == null)   return;
  boolean removed=sso.removeSession2(session);
  if (ssoClusterManager != null) {
    if (removed) {
      ssoClusterManager.removeSession(ssoId,getFullyQualifiedSessionId(session));
      WebLogger.WEB_SSO_LOGGER.tracef("deregister will notify cluster of removed session %s sso id %s",session,ssoId);
    }
 else {
      WebLogger.WEB_SSO_LOGGER.tracef("deregister didn't find session %s sso id %s cluster notification not sent",session,ssoId);
    }
  }
  if (sso.getSessionCount() == 0) {
    WebLogger.WEB_SSO_LOGGER.tracef("deregister detected zero sessions for sso id %s",ssoId);
synchronized (cache) {
      sso=(SingleSignOnEntry)cache.remove(ssoId);
    }
  }
}

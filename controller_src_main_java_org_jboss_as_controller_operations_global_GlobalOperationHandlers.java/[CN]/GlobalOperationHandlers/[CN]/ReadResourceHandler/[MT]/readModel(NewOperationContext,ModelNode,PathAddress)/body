{
  final ModelNodeRegistration registry=context.getModelNodeRegistration();
  final ModelNode model=context.readModel(address);
  final ModelNode result;
  if (readOperation.get(RECURSIVE).asBoolean(false)) {
    result=model.clone();
  }
 else {
    result=new ModelNode();
    final Set<String> childNames=registry != null ? registry.getChildNames(address) : Collections.<String>emptySet();
    final ModelNode subModel=model.clone();
    for (    final String key : subModel.keys()) {
      final ModelNode child=subModel.get(key);
      if (childNames.contains(key)) {
        if (subModel.get(key).isDefined()) {
          for (          final String childKey : child.keys()) {
            subModel.get(key,childKey).set(new ModelNode());
          }
        }
        result.get(key).set(child);
      }
 else {
        result.get(key).set(child);
      }
    }
    final boolean queryRuntime=readOperation.get(INCLUDE_RUNTIME).asBoolean(false);
    final Set<String> attributeNames=registry != null ? registry.getAttributeNames(address) : Collections.<String>emptySet();
    for (    final String attributeName : attributeNames) {
      final AttributeAccess access=registry.getAttributeAccess(address,attributeName);
      if (access == null) {
        continue;
      }
 else {
        final AttributeAccess.Storage storage=access.getStorageType();
        if (!queryRuntime && storage != AttributeAccess.Storage.CONFIGURATION) {
          continue;
        }
        final AccessType type=access.getAccessType();
        final NewStepHandler handler=access.getReadHandler();
        if (handler != null) {
          final ModelNode attributeOperation=readOperation.clone();
          attributeOperation.get(NAME).set(attributeName);
          context.addStep(result.get(attributeName),attributeOperation,handler,NewOperationContext.Stage.MODEL);
        }
      }
    }
  }
  return result;
}

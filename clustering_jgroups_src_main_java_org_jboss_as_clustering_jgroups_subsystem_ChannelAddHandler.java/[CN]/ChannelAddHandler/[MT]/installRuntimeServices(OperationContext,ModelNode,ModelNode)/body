{
  String name=Operations.getPathAddress(operation).getLastElement().getValue();
  String stack=ModelNodes.asString(ChannelResourceDefinition.STACK.resolveModelAttribute(context,model),ChannelFactoryService.DEFAULT);
  ModuleIdentifier module=ModelNodes.asModuleIdentifier(ChannelResourceDefinition.MODULE.resolveModelAttribute(context,model));
  ServiceTarget target=context.getServiceTarget();
  new InjectedValueServiceBuilder(target).build(ChannelService.getFactoryServiceName(name),ChannelFactoryService.getServiceName(stack),ChannelFactory.class).install();
  ChannelService.build(target,name).setInitialMode(ON_DEMAND).install();
  ConnectedChannelService.build(target,name).setInitialMode(ON_DEMAND).install();
  new BinderServiceBuilder(target).build(ChannelService.createChannelBinding(name),ChannelService.getServiceName(name),Channel.class).install();
  ForkChannelFactoryService.build(target,name).setInitialMode(ON_DEMAND).install();
  new BinderServiceBuilder(target).build(ChannelFactoryService.createChannelFactoryBinding(name),ChannelFactoryService.getServiceName(name),ChannelFactory.class).install();
  for (  GroupServiceInstaller installer : ServiceLoader.load(ClusteredGroupServiceInstaller.class,ClusteredGroupServiceInstaller.class.getClassLoader())) {
    JGroupsLogger.ROOT_LOGGER.debugf("Installing %s for channel %s",installer.getClass().getSimpleName(),name);
    installer.install(target,name,module);
  }
}

{
  exchange.setResponseCode(operationResult.getStatus());
  final HeaderMap responseHeaders=exchange.getResponseHeaders();
  final String contentType=operationResult.isEncode() ? Common.APPLICATION_DMR_ENCODED : Common.APPLICATION_JSON;
  responseHeaders.put(Headers.CONTENT_TYPE,contentType + ";" + Common.UTF_8);
  if (operationResult.getMaxAge() > 0) {
    responseHeaders.put(Headers.CACHE_CONTROL,"max-age=" + operationResult.getMaxAge() + ", private");
  }
  if (operationResult.getLastModified() != null) {
    responseHeaders.put(Headers.LAST_MODIFIED,DateUtils.toDateString(operationResult.getLastModified()));
  }
  ModelNode response=operationResult.getResponse();
  if (exchange.getRequestMethod().equals(Methods.GET) && operationResult.getStatus() == 200) {
    response=response.get(RESULT);
  }
  OutputStream out=new ChannelOutputStream(exchange.getResponseChannel());
  PrintWriter print=new PrintWriter(out);
  try {
    try {
      if (operationResult.isEncode()) {
        response.writeBase64(out);
      }
 else {
        response.writeJSONString(print,!operationResult.isPretty());
      }
    }
  finally {
      print.flush();
      try {
        out.flush();
      }
  finally {
        IoUtils.safeClose(print);
        IoUtils.safeClose(out);
      }
    }
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
}

{
  ModelNodeRegistration reg=c.getRegistry().registerSubModel(PathElement.pathElement("profile","web"),NULL_PROVIDER);
  reg=reg.registerSubModel(PathElement.pathElement("subsystem","remoting"),NewRemotingSubsystemProviders.SUBSYSTEM);
  reg.registerOperationHandler(ADD,new NewRemotingSubsystemAdd(),NewRemotingSubsystemProviders.SUBSYSTEM_ADD,false);
  reg=reg.registerSubModel(PathElement.pathElement("connector"),NULL_PROVIDER);
  reg.registerOperationHandler(ADD,new NewConnectorAdd(),NewRemotingSubsystemProviders.CONNECTOR_ADD,false);
  reg.registerOperationHandler(REMOVE,new NewConnectorRemove(),NewRemotingSubsystemProviders.CONNECTOR_REMOVE,false);
  try {
    System.out.println(model);
{
      final ModelNode operation=new ModelNode();
      operation.get(OP_ADDR).set(subsystemRoot.clone());
      operation.get(OP).set(ADD);
      operation.get("thread-pool").set("remoting-thread-pool");
      final ModelNode response=c.execute(operation);
    }
    System.out.println(model);
{
      final ModelNode operation=new ModelNode();
      operation.get(OP_ADDR).set(connectorRoot.clone().add("one"));
      operation.get(OP).set(ADD);
      operation.get("socket-binding").set("sb-one");
      operation.get("sasl");
      final ModelNode response=c.execute(operation);
      System.out.println(model);
    }
{
      final ModelNode operation=new ModelNode();
      operation.get(OP_ADDR).set(connectorRoot.clone().add("two"));
      operation.get(OP).set(ADD);
      operation.get("socket-binding").set("sb-two");
      final ModelNode response=c.execute(operation);
    }
{
      final ModelNode operation=new ModelNode();
      operation.get(OP_ADDR).set(connectorRoot.clone().add("three"));
      operation.get(OP).set(ADD);
      operation.get("socket-binding").set("sb-three");
      operation.get("authentication-provider").set("test");
      final ModelNode response=c.execute(operation);
    }
    System.out.println(model);
    System.out.println("----");
{
      final ModelNode operation=new ModelNode();
      operation.get(OP_ADDR).set(connectorRoot.clone().add("two"));
      operation.get(OP).set(REMOVE);
      final ModelNode response=c.execute(operation);
    }
    System.out.println(model);
    System.out.println("----");
{
      final ModelNode operation=new ModelNode();
      operation.get(OP_ADDR).set(connectorRoot.clone().add("two"));
      operation.get(OP).set(ADD);
      operation.get("socket-binding").set("sb-two");
      operation.get("sasl");
      final ModelNode response=c.execute(operation);
    }
  }
 catch (  final OperationFailedException e) {
    e.printStackTrace();
    System.err.println(e.getFailureDescription());
  }
}

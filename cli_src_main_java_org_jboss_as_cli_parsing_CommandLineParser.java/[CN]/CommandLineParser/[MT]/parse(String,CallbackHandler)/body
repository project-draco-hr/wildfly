{
  if (commandLine == null || commandLine.isEmpty()) {
    return;
  }
  final ParsingStateCallbackHandler callbackHandler=new ParsingStateCallbackHandler(){
    private String name;
    private int nameStart=-1;
    final StringBuilder buffer=new StringBuilder();
    private int valueStart=-1;
    @Override public void enteredState(    ParsingContext ctx) throws OperationFormatException {
      final String id=ctx.getState().getId();
      if (ArgumentState.ID.equals(id)) {
        nameStart=ctx.getLocation();
      }
 else       if (ArgumentValueState.ID.equals(id)) {
        if (buffer.length() > 0) {
          name=buffer.toString();
          buffer.setLength(0);
          valueStart=ctx.getLocation() + 1;
        }
 else {
          valueStart=ctx.getLocation();
        }
      }
    }
    @Override public void leavingState(    ParsingContext ctx) throws CommandFormatException {
      final String id=ctx.getState().getId();
      if (ArgumentState.ID.equals(id)) {
        if (buffer.length() > 0) {
          final int endIndex=ctx.getLocation();
          argHandler.argument(buffer.toString(),nameStart,null,-1,endIndex);
        }
        buffer.setLength(0);
        name=null;
        nameStart=-1;
      }
 else       if (ArgumentValueState.ID.equals(id)) {
        final int endIndex=ctx.getLocation();
        argHandler.argument(name,nameStart,buffer.toString(),valueStart,endIndex);
        buffer.setLength(0);
        valueStart=-1;
      }
 else       if (OutputTargetState.ID.equals(id)) {
        argHandler.outputTarget(buffer.toString().trim());
        buffer.setLength(0);
      }
    }
    @Override public void character(    ParsingContext ctx) throws OperationFormatException {
      buffer.append(ctx.getCharacter());
    }
  }
;
  StateParser.parse(commandLine,callbackHandler,ArgumentListState.INSTANCE);
}

{
  File workDir=null;
  try {
    workDir=File.createTempFile("patch","work",tempDir);
    workDir.mkdir();
    final File cachedContent=new File(workDir,"content");
    FileOutputStream os=null;
    try {
      os=new FileOutputStream(cachedContent);
      PatchUtils.copyStream(content,os);
      os.close();
    }
  finally {
      PatchUtils.safeClose(os);
    }
    unpack(cachedContent,workDir);
    final File patchXml=new File(workDir,PatchXml.PATCH_XML);
    final InputStream patchIS=new FileInputStream(patchXml);
    final Patch patch;
    try {
      patch=PatchXml.parse(patchIS);
      patchIS.close();
    }
  finally {
      PatchUtils.safeClose(patchIS);
    }
    final PatchContentLoader loader=new PatchContentLoader(workDir);
    final PatchingContext context=new PatchingContext(patch,patchInfo,structure,loader);
    return execute(patch,context);
  }
 catch (  IOException e) {
    throw new PatchingException(e);
  }
catch (  XMLStreamException e) {
    throw new PatchingException(e);
  }
 finally {
    if (workDir != null && !recursiveDelete(workDir)) {
      PatchLogger.ROOT_LOGGER.debugf("failed to remove work directory (%s)",workDir);
    }
  }
}

{
  final List<String> rollbacks;
  final Patch.PatchType type=patch.getPatchType();
  if (type == Patch.PatchType.CUMULATIVE) {
    rollbacks=patchInfo.getPatchIDs();
  }
 else {
    rollbacks=Collections.emptyList();
  }
  final Map<Location,PatchingTasks.ContentTaskDefinition> definitions=new LinkedHashMap<Location,PatchingTasks.ContentTaskDefinition>();
  for (  final String oneOff : rollbacks) {
    try {
      context.recordRollback(oneOff,definitions);
    }
 catch (    Exception e) {
      throw new PatchingException(e);
    }
  }
  try {
    context.applyPatch(patch,definitions);
  }
 catch (  Exception e) {
    throw new PatchingException(e);
  }
  return executeTasks(patch,definitions,context);
}

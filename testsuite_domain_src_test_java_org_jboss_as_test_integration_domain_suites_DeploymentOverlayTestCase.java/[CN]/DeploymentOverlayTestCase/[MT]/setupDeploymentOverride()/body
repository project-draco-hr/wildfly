{
  ModelNode op=new ModelNode();
  op.get(ModelDescriptionConstants.OP_ADDR).set(ModelDescriptionConstants.DEPLOYMENT_OVERLAY,TEST_OVERLAY);
  op.get(ModelDescriptionConstants.OP).set(ModelDescriptionConstants.ADD);
  executeOnMaster(op);
  op=new ModelNode();
  OperationBuilder builder=new OperationBuilder(op,true);
  ModelNode addr=new ModelNode();
  addr.add(ModelDescriptionConstants.DEPLOYMENT_OVERLAY,TEST_OVERLAY);
  addr.add(ModelDescriptionConstants.CONTENT,"WEB-INF/web.xml");
  op.get(ModelDescriptionConstants.OP_ADDR).set(addr);
  op.get(ModelDescriptionConstants.OP).set(ModelDescriptionConstants.ADD);
  op.get(ModelDescriptionConstants.CONTENT).get(INPUT_STREAM_INDEX).set(0);
  builder.addInputStream(getClass().getClassLoader().getResourceAsStream("deploymentoverlay/override.xml"));
  executeOnMaster(builder.build());
  op=new ModelNode();
  addr=new ModelNode();
  addr.add(ModelDescriptionConstants.SERVER_GROUP,"main-server-group");
  addr.add(ModelDescriptionConstants.DEPLOYMENT_OVERLAY,TEST_OVERLAY);
  op.get(ModelDescriptionConstants.OP_ADDR).set(addr);
  op.get(ModelDescriptionConstants.OP).set(ModelDescriptionConstants.ADD);
  executeOnMaster(op);
  op=new ModelNode();
  addr=new ModelNode();
  addr.add(ModelDescriptionConstants.SERVER_GROUP,"main-server-group");
  addr.add(ModelDescriptionConstants.DEPLOYMENT_OVERLAY,TEST_OVERLAY);
  addr.add(ModelDescriptionConstants.DEPLOYMENT,"test.war");
  op.get(ModelDescriptionConstants.OP_ADDR).set(addr);
  op.get(ModelDescriptionConstants.OP).set(ModelDescriptionConstants.ADD);
  executeOnMaster(op);
  final ModelNode composite=new ModelNode();
  final OperationBuilder opBuilder=new OperationBuilder(composite,true);
  composite.get(Util.OPERATION).set(Util.COMPOSITE);
  composite.get(Util.ADDRESS).setEmptyList();
  final ModelNode steps=composite.get(Util.STEPS);
  op=new ModelNode();
  op.get(ModelDescriptionConstants.OP_ADDR).set(ModelDescriptionConstants.DEPLOYMENT_OVERLAY,TEST_WILDCARD);
  op.get(ModelDescriptionConstants.OP).set(ModelDescriptionConstants.ADD);
  steps.add(op);
  op=new ModelNode();
  addr=new ModelNode();
  addr.add(ModelDescriptionConstants.DEPLOYMENT_OVERLAY,TEST_WILDCARD);
  addr.add(ModelDescriptionConstants.CONTENT,"WEB-INF/web.xml");
  op.get(ModelDescriptionConstants.OP_ADDR).set(addr);
  op.get(ModelDescriptionConstants.OP).set(ModelDescriptionConstants.ADD);
  op.get(ModelDescriptionConstants.CONTENT).get(ModelDescriptionConstants.BYTES).set(FileUtils.readFile(getClass().getClassLoader().getResource("deploymentoverlay/wildcard-override.xml")).getBytes());
  steps.add(op);
  op=new ModelNode();
  addr=new ModelNode();
  addr.add(ModelDescriptionConstants.DEPLOYMENT_OVERLAY,TEST_WILDCARD);
  addr.add(ModelDescriptionConstants.CONTENT,"WEB-INF/classes/wildcard-new-file");
  op.get(ModelDescriptionConstants.OP_ADDR).set(addr);
  op.get(ModelDescriptionConstants.OP).set(ModelDescriptionConstants.ADD);
  op.get(ModelDescriptionConstants.CONTENT).get(ModelDescriptionConstants.INPUT_STREAM_INDEX).set(0);
  opBuilder.addInputStream(new ByteArrayInputStream("new file".getBytes()));
  steps.add(op);
  op=new ModelNode();
  addr=new ModelNode();
  addr.add(ModelDescriptionConstants.SERVER_GROUP,"main-server-group");
  addr.add(ModelDescriptionConstants.DEPLOYMENT_OVERLAY,TEST_WILDCARD);
  op.get(ModelDescriptionConstants.OP_ADDR).set(addr);
  op.get(ModelDescriptionConstants.OP).set(ModelDescriptionConstants.ADD);
  steps.add(op);
  op=new ModelNode();
  addr=new ModelNode();
  addr.add(ModelDescriptionConstants.SERVER_GROUP,"main-server-group");
  addr.add(ModelDescriptionConstants.DEPLOYMENT_OVERLAY,TEST_WILDCARD);
  addr.add(ModelDescriptionConstants.DEPLOYMENT,"*.war");
  op.get(ModelDescriptionConstants.OP_ADDR).set(addr);
  op.get(ModelDescriptionConstants.OP).set(ModelDescriptionConstants.ADD);
  op.get(ModelDescriptionConstants.REGULAR_EXPRESSION).set(true);
  steps.add(op);
  executeOnMaster(opBuilder.build());
}

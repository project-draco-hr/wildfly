{
  registration.registerOperationHandler(WRITE_ATTRIBUTE_OPERATION,GlobalOperationHandlers.WRITE_ATTRIBUTE,CommonProviders.WRITE_ATTRIBUTE_PROVIDER,true);
  ManagementResourceRegistration sysProps=registration.registerSubModel(PathElement.pathElement(SYSTEM_PROPERTY),new DescriptionProvider(){
    @Override public ModelNode getModelDescription(    Locale locale){
      return new ModelNode();
    }
  }
);
  ProcessEnvironment environment=new ProcessEnvironment(){
    @Override protected void systemPropertyUpdated(    String propertyName,    String propertyValue){
    }
    @Override protected void setProcessName(    String processName){
    }
    @Override protected boolean isRuntimeSystemPropertyUpdateAllowed(    String propertyName,    String propertyValue,    boolean bootTime) throws OperationFailedException {
      return true;
    }
    @Override protected String getProcessName(){
      return "xxx";
    }
  }
;
  sysProps.registerOperationHandler(SystemPropertyAddHandler.OPERATION_NAME,new SystemPropertyAddHandler(environment,false),SystemPropertyAddHandler.INSTANCE_WITHOUT_BOOTTIME,false);
  sysProps.registerOperationHandler(SystemPropertyRemoveHandler.OPERATION_NAME,SystemPropertyRemoveHandler.INSTANCE,SystemPropertyRemoveHandler.INSTANCE,false);
  sysProps.registerReadWriteAttribute(VALUE,null,new SystemPropertyValueWriteAttributeHandler(environment),AttributeAccess.Storage.CONFIGURATION);
}

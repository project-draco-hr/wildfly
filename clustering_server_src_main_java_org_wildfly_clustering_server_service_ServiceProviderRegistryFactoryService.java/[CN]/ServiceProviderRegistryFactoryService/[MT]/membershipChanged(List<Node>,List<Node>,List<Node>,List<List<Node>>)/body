{
  if (this.dispatcherFactory.getValue().isCoordinator()) {
    Operation<Void> operation=new Operation<Void>(){
      @Override public Void invoke(      Cache<ServiceName,Set<Node>> cache){
        if (!deadNodes.isEmpty()) {
          for (          ServiceName service : cache.keySet()) {
            Set<Node> nodes=cache.get(service);
            if (nodes != null) {
              if (nodes.removeAll(deadNodes)) {
                cache.getAdvancedCache().withFlags(Flag.IGNORE_RETURN_VALUES).replace(service,nodes);
              }
            }
          }
        }
        if (groups != null) {
          for (          Node node : newNodes) {
            List<ServiceName> services=ServiceProviderRegistryFactoryService.this.getServices(node);
            for (            ServiceName service : services) {
              Set<Node> nodes=new HashSet<>(Collections.singleton(node));
              Set<Node> existing=cache.putIfAbsent(service,nodes);
              if (existing != null) {
                if (existing.add(node)) {
                  cache.getAdvancedCache().withFlags(Flag.IGNORE_RETURN_VALUES).replace(service,existing);
                }
              }
            }
          }
        }
        return null;
      }
    }
;
    this.invoker.invoke(this.cache,operation);
  }
}

{
  final BatchBuilder batchBuilder=updateContext.getBatchBuilder();
  batchBuilder.addServiceValueIfNotExist(DeploymentChainProviderService.SERVICE_NAME,new DeploymentChainProviderService());
  final Value<DeploymentChain> deploymentChainValue=Values.immediateValue((DeploymentChain)new DeploymentChainImpl(SAR_DEPLOYMENT_CHAIN_SERVICE_NAME.toString()));
  final DeploymentChainService deploymentChainService=new DeploymentChainService(deploymentChainValue);
  batchBuilder.addService(SAR_DEPLOYMENT_CHAIN_SERVICE_NAME,deploymentChainService).addDependency(DeploymentChainProviderService.SERVICE_NAME,DeploymentChainProvider.class,new DeploymentChainProviderInjector<DeploymentChain>(deploymentChainValue,new SarDeploymentChainSelector(),SAR_DEPLOYMENT_CHAIN_PRIORITY));
  addDeploymentProcessor(batchBuilder,new ManifestAttachmentProcessor(),ManifestAttachmentProcessor.PRIORITY);
  addDeploymentProcessor(batchBuilder,new ServiceActivatorDependencyProcessor(),ServiceActivatorDependencyProcessor.PRIORITY);
  addDeploymentProcessor(batchBuilder,new ModuleDependencyProcessor(),ModuleDependencyProcessor.PRIORITY);
  addDeploymentProcessor(batchBuilder,new SarModuleDependencyProcessor(),SarModuleDependencyProcessor.PRIORITY);
  addDeploymentProcessor(batchBuilder,new NestedJarInlineProcessor(),NestedJarInlineProcessor.PRIORITY);
  addDeploymentProcessor(batchBuilder,new ModuleConfigProcessor(),ModuleConfigProcessor.PRIORITY);
  final InjectedValue<DeploymentModuleLoader> deploymentModuleLoaderValue=new InjectedValue<DeploymentModuleLoader>();
  addDeploymentProcessor(batchBuilder,new DeploymentModuleLoaderProcessor(deploymentModuleLoaderValue),DeploymentModuleLoaderProcessor.PRIORITY).addDependency(DeploymentModuleLoaderService.SERVICE_NAME,DeploymentModuleLoader.class,deploymentModuleLoaderValue);
  addDeploymentProcessor(batchBuilder,new ModuleDeploymentProcessor(),ModuleDeploymentProcessor.PRIORITY);
  addDeploymentProcessor(batchBuilder,new ServiceDeploymentParsingProcessor(),ServiceDeploymentParsingProcessor.PRIORITY);
  addDeploymentProcessor(batchBuilder,new ModuleContextProcessor(),ModuleContextProcessor.PRIORITY);
  addDeploymentProcessor(batchBuilder,new ServiceActivatorProcessor(),ServiceActivatorProcessor.PRIORITY);
  addDeploymentProcessor(batchBuilder,new ParsedServiceDeploymentProcessor(),ParsedServiceDeploymentProcessor.PRIORITY);
}

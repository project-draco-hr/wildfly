{
  final File bundles=new File(distributionRoot,"bundles");
  final File modules=new File(distributionRoot,"modules");
  for (  final PatchElement element : patch.getElements()) {
    final File elementRoot=new File(targetRoot,element.getId());
    final String base=element.getProvider().isAddOn() ? Constants.DEFAULT_ADD_ONS_PATH : Constants.DEFAULT_LAYERS_PATH;
    final PatchContentLoader elementLoader=PatchContentLoader.create(elementRoot);
    final PatchContentWriter elementWriter=new PatchContentWriter(){
      @Override File getSourceFile(      ContentItem item) throws IOException {
        if (item.getContentType() == ContentType.BUNDLE) {
          final File root=new File(bundles,base);
          final File layer=new File(root,element.getProvider().getName());
          return PatchContentLoader.getModulePath(layer,(ModuleItem)item);
        }
 else         if (item.getContentType() == ContentType.MODULE) {
          final File root=new File(modules,base);
          final File layer=new File(root,element.getProvider().getName());
          return PatchContentLoader.getModulePath(layer,(ModuleItem)item);
        }
        throw processingError("invalid content item for patch-element %s",item);
      }
      @Override File getTargetFile(      ContentItem item) throws IOException {
        return elementLoader.getFile(item);
      }
    }
;
    elementWriter.copyItems(element.getModifications());
  }
  final File patchRoot=new File(targetRoot,patch.getPatchId());
  final PatchContentLoader targetLoader=PatchContentLoader.create(patchRoot);
  final PatchContentWriter writer=new PatchContentWriter(){
    @Override File getSourceFile(    ContentItem item) throws IOException {
      if (item.getContentType() == ContentType.MISC) {
        return PatchContentLoader.getMiscPath(distributionRoot,(MiscContentItem)item);
      }
      throw processingError("invalid content item for identity %s",item);
    }
    @Override File getTargetFile(    ContentItem item) throws IOException {
      return targetLoader.getFile(item);
    }
  }
;
  writer.copyItems(patch.getModifications());
}

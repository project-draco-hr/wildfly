{
  InfinispanLogger.ROOT_LOGGER.activatingSubsystem();
  OperationStepHandler step=new AbstractDeploymentChainStep(){
    @Override protected void execute(    DeploymentProcessorTarget target){
      target.addDeploymentProcessor(InfinispanExtension.SUBSYSTEM_NAME,Phase.DEPENDENCIES,Phase.DEPENDENCIES_CLUSTERING,new ClusteringDependencyProcessor());
    }
  }
;
  context.addStep(step,OperationContext.Stage.RUNTIME);
  for (  GroupBuilderProvider provider : ServiceLoader.load(LocalGroupBuilderProvider.class,LocalGroupBuilderProvider.class.getClassLoader())) {
    InfinispanLogger.ROOT_LOGGER.debugf("Installing %s for %s group",provider.getClass().getSimpleName(),LocalGroupBuilderProvider.LOCAL);
    for (    Builder<?> builder : provider.getBuilders(context.getCapabilityServiceSupport(),LocalGroupBuilderProvider.LOCAL)) {
      builder.build(context.getServiceTarget()).install();
    }
  }
}

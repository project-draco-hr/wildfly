{
  super.updateRuntime(context,serviceBuilder,name,service,model);
  final ModelNode append=APPEND.validateResolvedOperation(model);
  if (append.isDefined()) {
    service.setAppend(append.asBoolean());
  }
  final ServiceTarget serviceTarget=context.getServiceTarget();
  final ModelNode file=FILE.validateResolvedOperation(model);
  if (file.isDefined()) {
    final HandlerFileService fileService=new HandlerFileService(PATH.validateOperation(file).asString());
    final ServiceBuilder<?> fileBuilder=serviceTarget.addService(LogServices.handlerFileName(name),fileService);
    final ModelNode relativeTo=RELATIVE_TO.validateResolvedOperation(file);
    if (relativeTo.isDefined()) {
      fileBuilder.addDependency(AbstractPathService.pathNameOf(relativeTo.asString()),String.class,fileService.getRelativeToInjector());
    }
    fileBuilder.setInitialMode(ServiceController.Mode.ACTIVE).install();
    serviceBuilder.addDependency(LogServices.handlerFileName(name),String.class,service.getFileNameInjector());
  }
}

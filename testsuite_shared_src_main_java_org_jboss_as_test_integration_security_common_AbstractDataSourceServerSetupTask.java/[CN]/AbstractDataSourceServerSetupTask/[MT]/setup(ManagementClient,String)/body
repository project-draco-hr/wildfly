{
  final DataSource[] dataSourceConfigurations=getDataSourceConfigurations(managementClient,containerId);
  if (dataSourceConfigurations == null) {
    LOGGER.warn("Null DataSourceConfiguration array provided");
    return;
  }
  final List<ModelNode> updates=new ArrayList<ModelNode>();
  for (  final DataSource config : dataSourceConfigurations) {
    final String name=config.getName();
    LOGGER.info("Adding datasource " + name);
    final ModelNode dsNode=new ModelNode();
    dsNode.get(OP).set(ADD);
    dsNode.get(OP_ADDR).add(SUBSYSTEM,SUBSYSTEM_DATASOURCES);
    dsNode.get(OP_ADDR).add(DATASOURCE,name);
    dsNode.get("connection-url").set(config.getConnectionUrl());
    dsNode.get("jndi-name").set(config.getJndiName());
    dsNode.get("driver-name").set(config.getDriver());
    dsNode.get("enabled").set("false");
    if (StringUtils.isNotEmpty(config.getUsername())) {
      dsNode.get("user-name").set(config.getUsername());
    }
    if (StringUtils.isNotEmpty(config.getPassword())) {
      dsNode.get("password").set(config.getPassword());
    }
    updates.add(dsNode);
    final ModelNode enableNode=new ModelNode();
    enableNode.get(OP).set(ENABLE);
    enableNode.get(OP_ADDR).add(SUBSYSTEM,SUBSYSTEM_DATASOURCES);
    enableNode.get(OP_ADDR).add(DATASOURCE,name);
    updates.add(enableNode);
  }
  CoreUtils.applyUpdates(updates,managementClient.getControllerClient());
}

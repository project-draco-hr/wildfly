{
  Map<String,Integer> callCount=new HashMap<String,Integer>();
  int maxNumOfProcessedCalls=-1;
  int minNumOfProcessedCalls=Integer.MAX_VALUE;
  for (int i=0; i < numCalls; i++) {
    String nodeName=bean.getNodeName();
    Integer count=callCount.get(nodeName);
    count=count == null ? 1 : ++count;
    callCount.put(nodeName,count);
  }
  Assert.assertEquals("It was running " + expectedServers + " servers but not all of them were used for loadbalancing.",expectedServers,callCount.size());
  for (  Integer count : callCount.values()) {
    maxNumOfProcessedCalls=count > maxNumOfProcessedCalls ? count : maxNumOfProcessedCalls;
    minNumOfProcessedCalls=count < minNumOfProcessedCalls ? count : minNumOfProcessedCalls;
  }
  Assert.assertTrue("Minimal number of calls done to all servers have to be " + minPercentage * numCalls + " but was " + minNumOfProcessedCalls,minPercentage * numCalls <= minNumOfProcessedCalls);
  log.info("All " + expectedServers + " servers processed at least "+ minNumOfProcessedCalls+ " of calls");
}

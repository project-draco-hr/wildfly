{
synchronized (this) {
    running=true;
    if (cancelledFlag.get()) {
      return;
    }
  }
  Object result;
  try {
    result=runInvocation();
  }
 catch (  Exception e) {
    setFailed(e);
    return;
  }
  Future<?> asyncResult=(Future<?>)result;
  try {
    if (asyncResult != null) {
      result=asyncResult.get();
    }
  }
 catch (  InterruptedException e) {
    setFailed(new IllegalStateException(e));
    return;
  }
catch (  ExecutionException e) {
    try {
      throw e.getCause();
    }
 catch (    Exception ex) {
      setFailed(ex);
      return;
    }
catch (    Throwable throwable) {
      setFailed(new UndeclaredThrowableException(throwable));
      return;
    }
  }
  setResult(result);
  return;
}

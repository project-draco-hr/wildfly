{
  context.startSubsystemElement(Namespace.CURRENT.getUriString(),false);
  final ModelNode model=context.getModelNode();
  RemotingSubsystemRootResource.WORKER_READ_THREADS.marshallAsAttribute(model,false,writer);
  RemotingSubsystemRootResource.WORKER_TASK_CORE_THREADS.marshallAsAttribute(model,false,writer);
  RemotingSubsystemRootResource.WORKER_TASK_KEEPALIVE.marshallAsAttribute(model,false,writer);
  RemotingSubsystemRootResource.WORKER_TASK_LIMIT.marshallAsAttribute(model,false,writer);
  RemotingSubsystemRootResource.WORKER_TASK_MAX_THREADS.marshallAsAttribute(model,false,writer);
  RemotingSubsystemRootResource.WORKER_WRITE_THREADS.marshallAsAttribute(model,false,writer);
  if (model.hasDefined(CONNECTOR)) {
    final ModelNode connector=model.get(CONNECTOR);
    for (    String name : connector.keys()) {
      writeConnector(writer,connector.require(name),name);
    }
  }
  if (model.hasDefined(OUTBOUND_CONNECTION) || model.hasDefined(REMOTE_OUTBOUND_CONNECTION) || model.hasDefined(LOCAL_OUTBOUND_CONNECTION)) {
    writer.writeStartElement(Element.OUTBOUND_CONNECTIONS.getLocalName());
    if (model.hasDefined(OUTBOUND_CONNECTION)) {
      this.writeOutboundConnection(writer,model);
    }
    if (model.hasDefined(REMOTE_OUTBOUND_CONNECTION)) {
      this.writeRemoteOutboundConnection(writer,model);
    }
    if (model.hasDefined(LOCAL_OUTBOUND_CONNECTION)) {
      this.writeLocalOutboundConnection(writer,model);
    }
    writer.writeEndElement();
  }
  writer.writeEndElement();
}

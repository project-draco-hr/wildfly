{
  final EnumSet<Attribute> required=EnumSet.of(Attribute.NAME,Attribute.VALUE);
  final int count=reader.getAttributeCount();
  String optionName=null;
  String optionValue=null;
  for (int i=0; i < count; i++) {
    requireNoNamespaceAttribute(reader,i);
    final String value=reader.getAttributeValue(i);
    final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
    required.remove(attribute);
switch (attribute) {
case NAME:
{
        if (value.trim().isEmpty()) {
          throw ParseUtils.invalidAttributeValue(reader,i);
        }
        optionName=value;
        break;
      }
case VALUE:
{
      optionValue=value;
      break;
    }
default :
  throw unexpectedAttribute(reader,i);
}
}
if (!required.isEmpty()) {
throw missingRequired(reader,required);
}
requireNoContent(reader);
return Collections.singletonMap(optionName,optionValue);
}

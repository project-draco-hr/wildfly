{
  super(reader);
  if (reader.getAttributeCount() > 0) {
    throw unexpectedAttribute(reader,0);
  }
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
switch (Namespace.forUri(reader.getNamespaceURI())) {
case TRANSACTIONS_1_0:
{
        final Element element=Element.forName(reader.getLocalName());
switch (element) {
case RECOVERY_ENVIRONMENT:
{
            recoveryEnvironmentElement=new RecoveryEnvironmentElement(reader);
            break;
          }
case CORE_ENVIRONMENT:
{
          coreEnvironmentElement=new CoreEnvironmentElement(reader);
          break;
        }
case COORDINATOR_ENVIRONMENT:
{
        coordinatorEnvironmentElement=new CoordinatorEnvironmentElement(reader);
        break;
      }
case OBJECT_STORE:
{
      objectStoreEnvironmentElement=new ObjectStoreEnvironmentElement(reader);
      break;
    }
default :
  throw unexpectedElement(reader);
}
break;
}
default :
throw unexpectedElement(reader);
}
}
if (recoveryEnvironmentElement == null) {
throw missingRequiredElement(reader,Collections.singleton(Element.RECOVERY_ENVIRONMENT.getLocalName()));
}
if (coreEnvironmentElement == null) {
throw missingRequiredElement(reader,Collections.singleton(Element.CORE_ENVIRONMENT.getLocalName()));
}
if (coordinatorEnvironmentElement == null) {
coordinatorEnvironmentElement=new CoordinatorEnvironmentElement();
}
if (objectStoreEnvironmentElement == null) {
objectStoreEnvironmentElement=new ObjectStoreEnvironmentElement();
}
}

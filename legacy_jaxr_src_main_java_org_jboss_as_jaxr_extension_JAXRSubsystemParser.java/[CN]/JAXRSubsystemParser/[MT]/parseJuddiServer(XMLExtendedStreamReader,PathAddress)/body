{
  List<ModelNode> result=new ArrayList<ModelNode>();
  Set<Attribute> required=EnumSet.of(Attribute.PUBLISH_URL,Attribute.QUERY_URL);
  int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    requireNoNamespaceAttribute(reader,i);
    final String attrValue=reader.getAttributeValue(i);
    final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
    required.remove(attribute);
switch (attribute) {
case PUBLISH_URL:
{
        ModelNode propOp=Util.createAddOperation(parent.append(ModelDescriptionConstants.PROPERTY,"javax.xml.registry.lifeCycleManagerURL"));
        VALUE.parseAndSetParameter(attrValue,propOp,reader);
        result.add(propOp);
        break;
      }
case QUERY_URL:
{
      ModelNode propOp=Util.createAddOperation(parent.append(ModelDescriptionConstants.PROPERTY,"javax.xml.registry.queryManagerURL"));
      VALUE.parseAndSetParameter(attrValue,propOp,reader);
      result.add(propOp);
      break;
    }
default :
  throw unexpectedAttribute(reader,i);
}
}
if (required.size() > 0) {
throw missingRequired(reader,required);
}
requireNoContent(reader);
return result;
}

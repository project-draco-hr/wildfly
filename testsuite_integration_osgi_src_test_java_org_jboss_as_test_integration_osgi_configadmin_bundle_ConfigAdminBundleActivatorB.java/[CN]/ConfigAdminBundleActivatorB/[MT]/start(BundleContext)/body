{
  Hashtable<String,String> props=new Hashtable<String,String>();
  props.put(Constants.SERVICE_PID,context.getBundle().getLocation());
  context.registerService(new String[]{ManagedService.class.getName(),ConfiguredService.class.getName()},new ConfiguredService(),props);
  tracker=new ServiceTracker(context,ConfigurationAdmin.class.getName(),null){
    @Override public Object addingService(    ServiceReference reference){
      ConfigurationAdmin service=(ConfigurationAdmin)super.addingService(reference);
      try {
        Configuration config=service.getConfiguration(context.getBundle().getLocation());
        Hashtable<String,String> props=new Hashtable<String,String>();
        props.put("foo","bar");
        config.update(props);
      }
 catch (      IOException ex) {
        throw new IllegalStateException(ex);
      }
      return service;
    }
  }
;
  tracker.open();
}

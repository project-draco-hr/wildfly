{
  try {
    final Properties jobProperties=new Properties();
    jobProperties.setProperty("reader.end","10");
    final JobOperator jobOperator=BatchRuntime.getJobOperator();
    long executionId=jobOperator.start("chunk-suspend",jobProperties);
    JobExecution jobExecution=jobOperator.getJobExecution(executionId);
    waitForTermination(jobExecution,5);
    Assert.assertEquals(BatchStatus.COMPLETED,jobExecution.getBatchStatus());
    Assert.assertEquals(10,countingItemWriter.getWrittenItemSize());
    managementClient.getControllerClient().execute(Operations.createOperation("suspend"));
    executionId=jobOperator.start("chunk-suspend",jobProperties);
    try {
      jobOperator.getJobExecution(executionId);
    }
 catch (    NoSuchJobExecutionException expected) {
      Assert.fail("Job should not exist as the server is suspended: " + executionId);
    }
    managementClient.getControllerClient().execute(Operations.createOperation("resume"));
    jobExecution=jobOperator.getJobExecution(executionId);
    waitForTermination(jobExecution,5);
    Assert.assertEquals(BatchStatus.COMPLETED,jobExecution.getBatchStatus());
    Assert.assertEquals(20,countingItemWriter.getWrittenItemSize());
  }
  finally {
    managementClient.getControllerClient().execute(Operations.createOperation("resume"));
  }
}

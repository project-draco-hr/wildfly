{
  String name=JcaWorkManagerDefinition.WmParameters.NAME.getAttribute().resolveModelAttribute(context,resource.getModel()).asString();
  ServiceTarget serviceTarget=context.getServiceTarget();
  WorkManager wm=new NamedWorkManager(name);
  WorkManagerService wmService=new WorkManagerService(wm);
  ServiceBuilder builder=serviceTarget.addService(ConnectorServices.WORKMANAGER_SERVICE.append(name),wmService);
  builder.addDependency(ServiceBuilder.DependencyType.OPTIONAL,ThreadsServices.EXECUTOR.append(WORKMANAGER_LONG_RUNNING).append(name),Executor.class,wmService.getExecutorLongInjector());
  builder.addDependency(ThreadsServices.EXECUTOR.append(WORKMANAGER_SHORT_RUNNING).append(name),Executor.class,wmService.getExecutorShortInjector());
  builder.addDependency(TxnServices.JBOSS_TXN_XA_TERMINATOR,JBossXATerminator.class,wmService.getXaTerminatorInjector()).setInitialMode(ServiceController.Mode.ON_DEMAND).install();
  WorkManagerStatisticsService wmStatsService=new WorkManagerStatisticsService(context.getResourceRegistrationForUpdate(),name,true);
  serviceTarget.addService(ConnectorServices.WORKMANAGER_STATS_SERVICE.append(name),wmStatsService).addDependency(ConnectorServices.WORKMANAGER_SERVICE.append(name),WorkManager.class,wmStatsService.getWorkManagerInjector()).setInitialMode(ServiceController.Mode.PASSIVE).install();
  PathElement peLocaldWm=PathElement.pathElement(org.jboss.as.connector.subsystems.resourceadapters.Constants.STATISTICS_NAME,"local");
  final Resource wmResource=new IronJacamarResource.IronJacamarRuntimeResource();
  if (!resource.hasChild(peLocaldWm))   resource.registerChild(peLocaldWm,wmResource);
}

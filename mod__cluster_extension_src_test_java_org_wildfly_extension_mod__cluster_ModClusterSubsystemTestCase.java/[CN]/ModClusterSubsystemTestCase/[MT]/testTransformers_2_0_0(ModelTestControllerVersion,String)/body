{
  String subsystemXml=getSubsystemXml();
  ModelVersion modelVersion=ModelVersion.create(2,0,0);
  KernelServicesBuilder builder=createKernelServicesBuilder(createAdditionalInitialization()).setSubsystemXml(subsystemXml);
  builder.createLegacyKernelServicesBuilder(null,controllerVersion,modelVersion).addMavenResourceURL("org.wildfly:wildfly-mod_cluster-extension:" + controllerVersion.getMavenGavVersion()).addMavenResourceURL("org.jboss.mod_cluster:mod_cluster-core:" + modClusterJarVersion).setExtensionClassName("org.wildfly.extension.mod_cluster.ModClusterExtension");
  KernelServices mainServices=builder.build();
  KernelServices legacyServices=mainServices.getLegacyServices(modelVersion);
  Assert.assertNotNull(legacyServices);
  Assert.assertTrue(mainServices.isSuccessfulBoot());
  Assert.assertTrue(legacyServices.isSuccessfulBoot());
  checkSubsystemModelTransformation(mainServices,modelVersion);
}

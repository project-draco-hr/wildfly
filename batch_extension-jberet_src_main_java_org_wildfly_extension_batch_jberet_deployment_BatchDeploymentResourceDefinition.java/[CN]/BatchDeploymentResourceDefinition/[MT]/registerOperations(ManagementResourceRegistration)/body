{
  super.registerOperations(resourceRegistration);
  resourceRegistration.registerOperationHandler(START_JOB,new JobOperationStepHandler(){
    @Override protected void execute(    final OperationContext context,    final ModelNode operation,    final JobOperator jobOperator) throws OperationFailedException {
      final String jobName=resolveValue(context,operation,JOB_XML_NAME).asString();
      final Properties properties=resolvePropertyValue(context,operation,PROPERTIES);
      try {
        final long executionId=jobOperator.start(jobName,properties);
        context.getResult().set(executionId);
      }
 catch (      JobStartException|JobSecurityException e) {
        throw createOperationFailure(e);
      }
    }
  }
);
  resourceRegistration.registerOperationHandler(STOP_JOB,new JobOperationStepHandler(){
    @Override protected void execute(    final OperationContext context,    final ModelNode operation,    final JobOperator jobOperator) throws OperationFailedException {
      final long executionId=resolveValue(context,operation,EXECUTION_ID).asLong();
      try {
        jobOperator.stop(executionId);
      }
 catch (      NoSuchJobExecutionException|JobExecutionNotRunningException|JobSecurityException e) {
        throw createOperationFailure(e);
      }
    }
  }
);
  resourceRegistration.registerOperationHandler(RESTART_JOB,new JobOperationStepHandler(){
    @Override protected void execute(    final OperationContext context,    final ModelNode operation,    final JobOperator jobOperator) throws OperationFailedException {
      final long executionId=resolveValue(context,operation,EXECUTION_ID).asLong();
      final Properties properties=resolvePropertyValue(context,operation,PROPERTIES);
      try {
        final long newExecutionId=jobOperator.restart(executionId,properties);
        context.getResult().set(newExecutionId);
      }
 catch (      JobExecutionAlreadyCompleteException|NoSuchJobExecutionException|JobExecutionNotMostRecentException|JobRestartException|JobSecurityException e) {
        throw createOperationFailure(e);
      }
    }
  }
);
}

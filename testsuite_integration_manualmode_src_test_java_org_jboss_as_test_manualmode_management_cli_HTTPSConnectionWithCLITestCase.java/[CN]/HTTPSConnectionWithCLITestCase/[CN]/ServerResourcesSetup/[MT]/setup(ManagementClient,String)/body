{
  FileUtils.deleteDirectory(WORK_DIR);
  WORK_DIR.mkdirs();
  Utils.createKeyMaterial(WORK_DIR);
  FileUtils.write(TRUSTED_JBOSS_CLI_FILE,Utils.propertiesReplacer(JBOSS_CLI_FILE,CLIENT_KEYSTORE_FILE,CLIENT_TRUSTSTORE_FILE,SecurityTestConstants.KEYSTORE_PASSWORD));
  FileUtils.write(UNTRUSTED_JBOSS_CLI_FILE,Utils.propertiesReplacer(JBOSS_CLI_FILE,UNTRUSTED_KEYSTORE_FILE,CLIENT_TRUSTSTORE_FILE,SecurityTestConstants.KEYSTORE_PASSWORD));
  final ModelControllerClient client=managementClient.getControllerClient();
  ModelNode operation=createOpNode("core-service=management/management-interface=http-interface",ModelDescriptionConstants.WRITE_ATTRIBUTE_OPERATION);
  operation.get(NAME).set("security-realm");
  operation.get(VALUE).set(MANAGEMENT_NATIVE_REALM);
  Utils.applyUpdate(operation,client);
  operation=createOpNode("core-service=management/management-interface=http-interface",ModelDescriptionConstants.WRITE_ATTRIBUTE_OPERATION);
  operation.get(NAME).set("secure-socket-binding");
  operation.get(VALUE).set("management-https");
  Utils.applyUpdate(operation,client);
  operation=createOpNode("core-service=management/management-interface=native-interface",ModelDescriptionConstants.ADD);
  operation.get("security-realm").set("ManagementRealm");
  operation.get("interface").set("management");
  operation.get("port").set(MANAGEMENT_NATIVE_PORT);
  Utils.applyUpdate(operation,client);
}

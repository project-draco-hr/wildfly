{
  Pattern pattern=null;
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    final String value=reader.getAttributeValue(i);
    if (reader.getAttributeNamespace(i) != null) {
      throw ParseUtils.unexpectedAttribute(reader,i);
    }
 else {
      final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case PATTERN:
{
          try {
            pattern=Pattern.compile(value);
          }
 catch (          PatternSyntaxException e) {
            throw new XMLStreamException("Invalid pattern " + value + " ("+ e.getLocalizedMessage()+ ")",reader.getLocation(),e);
          }
          break;
        }
default :
      throw ParseUtils.unexpectedAttribute(reader,i);
  }
}
}
if (pattern == null) {
throw ParseUtils.missingRequired(reader,Collections.singleton(Attribute.PATTERN));
}
ParseUtils.requireNoContent(reader);
return new NicMatchCriteriaElement(pattern);
}

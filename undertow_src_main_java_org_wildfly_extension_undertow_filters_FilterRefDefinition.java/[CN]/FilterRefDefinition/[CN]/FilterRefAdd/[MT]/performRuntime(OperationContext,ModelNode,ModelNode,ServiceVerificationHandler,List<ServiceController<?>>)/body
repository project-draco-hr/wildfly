{
  final PathAddress address=PathAddress.pathAddress(operation.get(OP_ADDR));
  final String name=address.getLastElement().getValue();
  Predicate predicate=null;
  if (model.hasDefined(PREDICATE.getName())) {
    String predicateString=model.get(PREDICATE.getName()).asString();
    predicate=PredicateParser.parse(predicateString,getClass().getClassLoader());
  }
  int priority=PRIORITY.resolveModelAttribute(context,operation).asInt();
  final FilterRef service=new FilterRef(predicate,priority);
  final ServiceTarget target=context.getServiceTarget();
  ServiceController<?> sc=target.addService(UndertowService.getFilterRefServiceName(address,name),service).addDependency(UndertowService.FILTER.append(name),FilterService.class,service.getFilter()).setInitialMode(ServiceController.Mode.ACTIVE).install();
  if (newControllers != null) {
    newControllers.add(sc);
  }
}

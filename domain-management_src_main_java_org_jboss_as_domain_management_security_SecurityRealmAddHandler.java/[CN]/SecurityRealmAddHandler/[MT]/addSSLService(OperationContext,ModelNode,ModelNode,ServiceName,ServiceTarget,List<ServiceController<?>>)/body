{
  ServiceName sslServiceName=realmServiceName.append(SSLIdentityService.SERVICE_SUFFIX);
  ServiceName keystoreServiceName=null;
  char[] password=null;
  if (ssl != null && ssl.hasDefined(KEYSTORE_PATH)) {
    keystoreServiceName=realmServiceName.append(FileKeystoreService.KEYSTORE_SUFFIX);
    password=addFileKeystoreService(context,ssl,keystoreServiceName,serviceTarget,newControllers);
  }
  ServiceName truststoreServiceName=null;
  if (trustStore != null) {
    truststoreServiceName=realmServiceName.append(FileKeystoreService.TRUSTSTORE_SUFFIX);
    addFileKeystoreService(context,trustStore,truststoreServiceName,serviceTarget,newControllers);
  }
  String protocol="TLS";
  if (ssl != null && ssl.hasDefined(PROTOCOL)) {
    protocol=ssl.get(PROTOCOL).asString();
  }
  SSLIdentityService sslIdentityService=new SSLIdentityService(protocol,password);
  ServiceBuilder<?> sslBuilder=serviceTarget.addService(sslServiceName,sslIdentityService);
  if (keystoreServiceName != null) {
    sslBuilder.addDependency(keystoreServiceName,KeyStore.class,sslIdentityService.getKeyStoreInjector());
  }
  if (truststoreServiceName != null) {
    sslBuilder.addDependency(truststoreServiceName,KeyStore.class,sslIdentityService.getTrustStoreInjector());
  }
  final ServiceController<?> serviceController=sslBuilder.setInitialMode(ON_DEMAND).install();
  if (newControllers != null) {
    newControllers.add(serviceController);
  }
  return sslServiceName;
}

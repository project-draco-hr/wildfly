{
  ServiceName plugInServiceName=PlugInAuthenticationCallbackHandler.ServiceUtil.createServiceName(realmName);
  final String pluginName=PlugInAuthorizationResourceDefinition.NAME.resolveModelAttribute(context,model).asString();
  final Map<String,String> properties=resolveProperties(context,model);
  String mechanismName=PlugInAuthenticationResourceDefinition.MECHANISM.resolveModelAttribute(context,model).asString();
  AuthMechanism mechanism=AuthMechanism.valueOf(mechanismName);
  PlugInAuthenticationCallbackHandler plugInService=new PlugInAuthenticationCallbackHandler(registry.getName(),pluginName,properties,mechanism);
  ServiceBuilder<CallbackHandlerService> plugInBuilder=serviceTarget.addService(plugInServiceName,plugInService);
  PlugInLoaderService.ServiceUtil.addDependency(plugInBuilder,plugInService.getPlugInLoaderServiceValue(),realmName,false);
  final ServiceController<CallbackHandlerService> sc=plugInBuilder.setInitialMode(ON_DEMAND).install();
  if (newControllers != null) {
    newControllers.add(sc);
  }
  CallbackHandlerService.ServiceUtil.addDependency(realmBuilder,injector,plugInServiceName,false);
}

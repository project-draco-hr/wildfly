{
  ServiceName propsServiceName=realmServiceName.append(PropertiesCallbackHandler.SERVICE_SUFFIX);
  final String path=PropertiesAuthenticationResourceDefinition.PATH.resolveModelAttribute(context,properties).asString();
  final ModelNode relativeTo=PropertiesAuthenticationResourceDefinition.RELATIVE_TO.resolveModelAttribute(context,properties);
  final boolean plainText=PropertiesAuthenticationResourceDefinition.PLAIN_TEXT.resolveModelAttribute(context,properties).asBoolean();
  PropertiesCallbackHandler propsCallbackHandler=new PropertiesCallbackHandler(realmName,path,plainText);
  ServiceBuilder<?> propsBuilder=serviceTarget.addService(propsServiceName,propsCallbackHandler);
  if (relativeTo.isDefined()) {
    propsBuilder.addDependency(pathName(relativeTo.asString()),String.class,propsCallbackHandler.getRelativeToInjector());
  }
  final ServiceController<?> serviceController=propsBuilder.setInitialMode(ON_DEMAND).install();
  if (newControllers != null) {
    newControllers.add(serviceController);
  }
  return propsServiceName;
}

{
  final OptionMap optionMap;
  if (channelCreationOptionsNode.isDefined()) {
    final OptionMap.Builder optionMapBuilder=OptionMap.builder();
    final ClassLoader loader=this.getClass().getClassLoader();
    for (    final Property optionProperty : channelCreationOptionsNode.asPropertyList()) {
      final String name=optionProperty.getName();
      final ModelNode propValueModel=optionProperty.getValue();
      final String type=RemoteConnectorChannelCreationOptionResource.CHANNEL_CREATION_OPTION_TYPE.resolveModelAttribute(context,propValueModel).asString();
      final String optionClassName=this.getClassNameForChannelOptionType(type);
      final String fullyQualifiedOptionName=optionClassName + "." + name;
      final Option option=Option.fromString(fullyQualifiedOptionName,loader);
      final String value=RemoteConnectorChannelCreationOptionResource.CHANNEL_CREATION_OPTION_VALUE.resolveModelAttribute(context,propValueModel).asString();
      optionMapBuilder.set(option,option.parseValue(value,loader));
    }
    optionMap=optionMapBuilder.getMap();
  }
 else {
    optionMap=OptionMap.EMPTY;
  }
  return optionMap;
}

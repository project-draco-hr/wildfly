{
  Set<AttributeDefinition> attributesWithoutMutuals=new HashSet<>(Arrays.asList(attributes));
  attributesWithoutMutuals.remove(USE_JOURNAL_STORE);
  attributesWithoutMutuals.remove(USE_JDBC_STORE);
  attributesWithoutMutuals.remove(DEFAULT_TIMEOUT);
  attributesWithoutMutuals.remove(JDBC_STORE_DATASOURCE);
  attributesWithoutMutuals.remove(PROCESS_ID_UUID);
  attributesWithoutMutuals.remove(PROCESS_ID_SOCKET_BINDING);
  attributesWithoutMutuals.remove(PROCESS_ID_SOCKET_MAX_PORTS);
  OperationStepHandler writeHandler=new ReloadRequiredWriteAttributeHandler(attributesWithoutMutuals);
  for (  final AttributeDefinition def : attributesWithoutMutuals) {
    resourceRegistration.registerReadWriteAttribute(def,null,writeHandler);
  }
  OperationStepHandler mutualWriteHandler=new ObjectStoreMutualWriteHandler(USE_JOURNAL_STORE,USE_JDBC_STORE);
  resourceRegistration.registerReadWriteAttribute(USE_JOURNAL_STORE,null,mutualWriteHandler);
  resourceRegistration.registerReadWriteAttribute(USE_JDBC_STORE,null,mutualWriteHandler);
  resourceRegistration.registerReadWriteAttribute(DEFAULT_TIMEOUT,null,new DefaultTimeoutHandler(DEFAULT_TIMEOUT));
  resourceRegistration.registerReadWriteAttribute(JDBC_STORE_DATASOURCE,null,new JdbcStoreDatasourceWriteHandler(JDBC_STORE_DATASOURCE));
  OperationStepHandler mutualProcessIdWriteHandler=new ProcessIdWriteHandler(PROCESS_ID_UUID,PROCESS_ID_SOCKET_BINDING,PROCESS_ID_SOCKET_MAX_PORTS);
  resourceRegistration.registerReadWriteAttribute(PROCESS_ID_UUID,null,mutualProcessIdWriteHandler);
  resourceRegistration.registerReadWriteAttribute(PROCESS_ID_SOCKET_BINDING,null,mutualProcessIdWriteHandler);
  resourceRegistration.registerReadWriteAttribute(PROCESS_ID_SOCKET_MAX_PORTS,null,mutualProcessIdWriteHandler);
  AliasedHandler esh=new AliasedHandler(STATISTICS_ENABLED.getName());
  resourceRegistration.registerReadWriteAttribute(ENABLE_STATISTICS,esh,esh);
  AliasedHandler hsh=new AliasedHandler(USE_JOURNAL_STORE.getName());
  resourceRegistration.registerReadWriteAttribute(USE_HORNETQ_STORE,hsh,hsh);
  AliasedHandler hseh=new AliasedHandler(JOURNAL_STORE_ENABLE_ASYNC_IO.getName());
  resourceRegistration.registerReadWriteAttribute(HORNETQ_STORE_ENABLE_ASYNC_IO,hseh,hseh);
  if (registerRuntimeOnly) {
    TxStatsHandler.INSTANCE.registerMetrics(resourceRegistration);
  }
}

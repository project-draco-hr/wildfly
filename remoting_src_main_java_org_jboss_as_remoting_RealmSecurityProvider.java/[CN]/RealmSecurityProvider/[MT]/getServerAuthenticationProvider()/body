{
  return new ServerAuthenticationProvider(){
    @Override public AuthorizingCallbackHandler getCallbackHandler(    String mechanismName){
      final CallbackHandler cbh=RealmSecurityProvider.this.getCallbackHandler(mechanismName);
      if (cbh instanceof AuthorizingCallbackHandler) {
        return (AuthorizingCallbackHandler)cbh;
      }
 else {
        return new AuthorizingCallbackHandler(){
          @Override public void handle(          Callback[] callbacks) throws IOException, UnsupportedCallbackException {
            cbh.handle(callbacks);
          }
          @Override public UserInfo createUserInfo(          final Collection<Principal> remotingPrincipals){
            return new UserInfo(){
              @Override public Collection<Principal> getPrincipals(){
                return remotingPrincipals;
              }
            }
;
          }
        }
;
      }
    }
  }
;
}

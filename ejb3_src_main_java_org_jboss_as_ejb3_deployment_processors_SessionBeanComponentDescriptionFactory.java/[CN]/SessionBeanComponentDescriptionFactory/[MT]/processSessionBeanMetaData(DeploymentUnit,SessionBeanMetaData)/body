{
  final EjbJarDescription ejbJarDescription=getEjbJarDescription(deploymentUnit);
  final String beanName=sessionBean.getName();
  if (ejbJarDescription.hasComponent(beanName))   return;
  final SessionType sessionType=sessionBean.getSessionType();
  if (sessionType == null) {
    throw new DeploymentUnitProcessingException("Unknown session-type for session bean: " + sessionBean.getName() + " in deployment unit: "+ deploymentUnit);
  }
  final String beanClassName=sessionBean.getEjbClass();
  final SessionBeanComponentDescription sessionBeanDescription;
switch (sessionType) {
case Stateless:
    sessionBeanDescription=new StatelessComponentDescription(beanName,beanClassName,ejbJarDescription,deploymentUnit.getServiceName());
  break;
case Stateful:
sessionBeanDescription=new StatefulComponentDescription(beanName,beanClassName,ejbJarDescription,deploymentUnit.getServiceName());
break;
case Singleton:
sessionBeanDescription=new SingletonComponentDescription(beanName,beanClassName,ejbJarDescription,deploymentUnit.getServiceName());
break;
default :
throw new IllegalArgumentException("Unknown session bean type: " + sessionType);
}
ejbJarDescription.getEEModuleDescription().addComponent(sessionBeanDescription);
}

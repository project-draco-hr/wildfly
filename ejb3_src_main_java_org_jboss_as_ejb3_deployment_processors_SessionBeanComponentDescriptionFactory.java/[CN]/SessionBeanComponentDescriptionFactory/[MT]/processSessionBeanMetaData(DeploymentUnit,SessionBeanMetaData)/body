{
  final EjbJarDescription ejbJarDescription=getEjbJarDescription(deploymentUnit);
  final CompositeIndex compositeIndex=deploymentUnit.getAttachment(org.jboss.as.server.deployment.Attachments.COMPOSITE_ANNOTATION_INDEX);
  final String beanName=sessionBean.getName();
  SessionType sessionType=sessionBean.getSessionType();
  if (sessionType == null && sessionBean instanceof GenericBeanMetaData) {
    final GenericBeanMetaData bean=(GenericBeanMetaData)sessionBean;
    if (bean.getEjbType() == EjbType.SESSION) {
      sessionType=determineSessionType(sessionBean.getEjbClass(),compositeIndex);
      if (sessionType == null) {
        throw EjbLogger.ROOT_LOGGER.sessionTypeNotSpecified(beanName);
      }
    }
 else {
      return;
    }
  }
 else   if (sessionType == null) {
    sessionType=determineSessionType(sessionBean.getEjbClass(),compositeIndex);
    if (sessionType == null) {
      throw EjbLogger.ROOT_LOGGER.sessionTypeNotSpecified(beanName);
    }
  }
  final String beanClassName=sessionBean.getEjbClass();
  final SessionBeanComponentDescription sessionBeanDescription;
switch (sessionType) {
case Stateless:
    sessionBeanDescription=new StatelessComponentDescription(beanName,beanClassName,ejbJarDescription,deploymentUnit.getServiceName(),sessionBean);
  break;
case Stateful:
sessionBeanDescription=new StatefulComponentDescription(beanName,beanClassName,ejbJarDescription,deploymentUnit.getServiceName(),sessionBean);
if (sessionBean instanceof SessionBean32MetaData && ((SessionBean32MetaData)sessionBean).isPassivationCapable() != null) {
((StatefulComponentDescription)sessionBeanDescription).setPassivationApplicable(((SessionBean32MetaData)sessionBean).isPassivationCapable());
}
break;
case Singleton:
sessionBeanDescription=new SingletonComponentDescription(beanName,beanClassName,ejbJarDescription,deploymentUnit.getServiceName(),sessionBean);
break;
default :
throw EjbLogger.ROOT_LOGGER.unknownSessionBeanType(sessionType.name());
}
addComponent(deploymentUnit,sessionBeanDescription);
}

{
  ParseUtils.requireNoAttributes(reader);
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
switch (Namespace.forUri(reader.getNamespaceURI())) {
case DOMAIN_1_0:
{
        final Element element=Element.forName(reader.getLocalName());
        if (element == Element.OPTION) {
          String value=null;
          int count=reader.getAttributeCount();
          for (int i=0; i < count; i++) {
            final String attrValue=reader.getAttributeValue(i);
            if (reader.getAttributeNamespace(i) != null) {
              throw ParseUtils.unexpectedAttribute(reader,i);
            }
 else {
              final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case VALUE:
{
                  value=attrValue;
                  break;
                }
default :
              throw ParseUtils.unexpectedAttribute(reader,i);
          }
        }
      }
      addOption(value);
      ParseUtils.requireNoContent(reader);
    }
 else {
      throw ParseUtils.unexpectedElement(reader);
    }
    break;
  }
default :
throw ParseUtils.unexpectedElement(reader);
}
}
if (options.size() == 0) {
throw ParseUtils.missingRequiredElement(reader,Collections.singleton(Element.OPTION));
}
}

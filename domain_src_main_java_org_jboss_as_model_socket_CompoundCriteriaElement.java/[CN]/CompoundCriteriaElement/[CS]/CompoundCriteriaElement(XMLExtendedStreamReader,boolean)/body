{
  super(reader,isAny ? Element.ANY : Element.NOT);
  Set<InterfaceCriteria> criteria=new HashSet<InterfaceCriteria>(interfaceCriteria.size());
  for (  AbstractInterfaceCriteriaElement<?> element : interfaceCriteria.values()) {
    criteria.add(element.getInterfaceCriteria());
  }
  InterfaceCriteria ours=isAny ? new AnyInterfaceCriteria(criteria) : new NotInterfaceCriteria(criteria);
  setInterfaceCriteria(ours);
  requireNoAttributes(reader);
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
switch (Namespace.forUri(reader.getNamespaceURI())) {
case DOMAIN_1_0:
{
        final Element element=Element.forName(reader.getLocalName());
        AbstractInterfaceCriteriaElement<?> aice=ParsingUtil.parseSimpleInterfaceCriteria(reader,element);
        interfaceCriteria.put(aice.getElement(),aice);
        break;
      }
default :
    throw unexpectedElement(reader);
}
}
if (interfaceCriteria.isEmpty()) {
throw ParsingUtil.missingCriteria(reader,ParsingUtil.SIMPLE_CRITERIA_STRING);
}
}

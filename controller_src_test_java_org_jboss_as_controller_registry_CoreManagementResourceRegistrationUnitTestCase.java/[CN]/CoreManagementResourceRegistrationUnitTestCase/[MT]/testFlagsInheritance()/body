{
  rootRegistration.registerOperationHandler("one",TestHandler.INSTANCE,new TestDescriptionProvider("one"),true,OperationEntry.EntryType.PUBLIC,EnumSet.of(OperationEntry.Flag.READ_ONLY));
  rootRegistration.registerOperationHandler("two",TestHandler.INSTANCE,new TestDescriptionProvider("two"),true,OperationEntry.EntryType.PUBLIC,EnumSet.of(OperationEntry.Flag.READ_ONLY));
  rootRegistration.registerOperationHandler("three",TestHandler.INSTANCE,new TestDescriptionProvider("three"),true,OperationEntry.EntryType.PUBLIC,EnumSet.of(OperationEntry.Flag.READ_ONLY));
  rootRegistration.registerOperationHandler("four",TestHandler.INSTANCE,new TestDescriptionProvider("four"),false,OperationEntry.EntryType.PUBLIC,EnumSet.of(OperationEntry.Flag.READ_ONLY));
  ModelNodeRegistration child=rootRegistration.registerSubModel(childElement,new TestDescriptionProvider("child"));
  child.registerOperationHandler("one",TestHandler.INSTANCE,new TestDescriptionProvider("one"));
  child.registerOperationHandler("two",TestHandler.INSTANCE,new TestDescriptionProvider("two"),false,OperationEntry.EntryType.PUBLIC,EnumSet.of(OperationEntry.Flag.DEPLOYMENT_UPLOAD));
  Set<OperationEntry.Flag> oneFlags=child.getOperationFlags(PathAddress.EMPTY_ADDRESS,"one");
  assertNotNull(oneFlags);
  assertEquals(0,oneFlags.size());
  Set<OperationEntry.Flag> twoFlags=child.getOperationFlags(PathAddress.EMPTY_ADDRESS,"two");
  assertNotNull(twoFlags);
  assertEquals(1,twoFlags.size());
  assertTrue(twoFlags.contains(OperationEntry.Flag.DEPLOYMENT_UPLOAD));
  Set<OperationEntry.Flag> threeFlags=child.getOperationFlags(PathAddress.EMPTY_ADDRESS,"three");
  assertNotNull(threeFlags);
  assertEquals(1,threeFlags.size());
  assertTrue(threeFlags.contains(OperationEntry.Flag.READ_ONLY));
  oneFlags=rootRegistration.getOperationFlags(childAddress,"one");
  assertNotNull(oneFlags);
  assertEquals(0,oneFlags.size());
  twoFlags=rootRegistration.getOperationFlags(childAddress,"two");
  assertNotNull(twoFlags);
  assertEquals(1,twoFlags.size());
  assertTrue(twoFlags.contains(OperationEntry.Flag.DEPLOYMENT_UPLOAD));
  threeFlags=child.getOperationFlags(childAddress,"three");
  assertNotNull(threeFlags);
  assertEquals(1,threeFlags.size());
  assertTrue(threeFlags.contains(OperationEntry.Flag.READ_ONLY));
  Set<OperationEntry.Flag> fourFlags=child.getOperationFlags(PathAddress.EMPTY_ADDRESS,"four");
  assertNull(fourFlags);
  fourFlags=rootRegistration.getOperationFlags(childAddress,"four");
  assertNull(fourFlags);
  fourFlags=rootRegistration.getOperationFlags(PathAddress.EMPTY_ADDRESS,"four");
  assertNotNull(fourFlags);
  assertEquals(1,fourFlags.size());
  assertTrue(fourFlags.contains(OperationEntry.Flag.READ_ONLY));
}

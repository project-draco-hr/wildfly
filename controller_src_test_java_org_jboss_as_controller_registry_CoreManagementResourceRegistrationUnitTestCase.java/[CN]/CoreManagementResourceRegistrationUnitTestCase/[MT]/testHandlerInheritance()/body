{
  rootRegistration.registerOperationHandler("one",TestHandler.PARENT,new TestDescriptionProvider("one"),true,OperationEntry.EntryType.PUBLIC,EnumSet.of(OperationEntry.Flag.READ_ONLY));
  rootRegistration.registerOperationHandler("two",TestHandler.PARENT,new TestDescriptionProvider("two"),true,OperationEntry.EntryType.PUBLIC,EnumSet.of(OperationEntry.Flag.READ_ONLY));
  rootRegistration.registerOperationHandler("three",TestHandler.PARENT,new TestDescriptionProvider("three"),true,OperationEntry.EntryType.PUBLIC,EnumSet.of(OperationEntry.Flag.READ_ONLY));
  rootRegistration.registerOperationHandler("four",TestHandler.PARENT,new TestDescriptionProvider("four"),false,OperationEntry.EntryType.PUBLIC,EnumSet.of(OperationEntry.Flag.READ_ONLY));
  ManagementResourceRegistration child=rootRegistration.registerSubModel(childElement,new TestDescriptionProvider("child"));
  child.registerOperationHandler("one",TestHandler.CHILD,new TestDescriptionProvider("one"),true);
  child.registerOperationHandler("two",TestHandler.CHILD,new TestDescriptionProvider("two"),true,OperationEntry.EntryType.PUBLIC,EnumSet.of(OperationEntry.Flag.DEPLOYMENT_UPLOAD));
  ManagementResourceRegistration grandchild=child.registerSubModel(grandchildElement,new TestDescriptionProvider("grandchild"));
  OperationStepHandler oneHandler=child.getOperationHandler(PathAddress.EMPTY_ADDRESS,"one");
  assertSame(TestHandler.CHILD,oneHandler);
  OperationStepHandler twoHandler=child.getOperationHandler(PathAddress.EMPTY_ADDRESS,"two");
  assertSame(TestHandler.CHILD,twoHandler);
  OperationStepHandler threeHandler=child.getOperationHandler(PathAddress.EMPTY_ADDRESS,"three");
  assertSame(TestHandler.PARENT,threeHandler);
  oneHandler=rootRegistration.getOperationHandler(childAddress,"one");
  assertSame(TestHandler.CHILD,oneHandler);
  twoHandler=rootRegistration.getOperationHandler(childAddress,"two");
  assertSame(TestHandler.CHILD,twoHandler);
  threeHandler=child.getOperationHandler(childAddress,"three");
  assertSame(TestHandler.PARENT,threeHandler);
  OperationStepHandler fourHandler=child.getOperationHandler(PathAddress.EMPTY_ADDRESS,"four");
  assertNull(fourHandler);
  fourHandler=rootRegistration.getOperationHandler(childAddress,"four");
  assertNull(fourHandler);
  fourHandler=rootRegistration.getOperationHandler(PathAddress.EMPTY_ADDRESS,"four");
  assertSame(TestHandler.PARENT,fourHandler);
  oneHandler=rootRegistration.getOperationHandler(grandchildAddress,"one");
  assertSame(TestHandler.CHILD,oneHandler);
  oneHandler=rootRegistration.getOperationHandler(fullGrandchildAddress,"one");
  assertSame(TestHandler.CHILD,oneHandler);
  oneHandler=grandchild.getOperationHandler(PathAddress.EMPTY_ADDRESS,"one");
  assertSame(TestHandler.CHILD,oneHandler);
  twoHandler=rootRegistration.getOperationHandler(grandchildAddress,"two");
  assertSame(TestHandler.CHILD,twoHandler);
  twoHandler=rootRegistration.getOperationHandler(fullGrandchildAddress,"two");
  assertSame(TestHandler.CHILD,twoHandler);
  twoHandler=grandchild.getOperationHandler(PathAddress.EMPTY_ADDRESS,"two");
  assertSame(TestHandler.CHILD,twoHandler);
  threeHandler=rootRegistration.getOperationHandler(grandchildAddress,"three");
  assertSame(TestHandler.PARENT,threeHandler);
  threeHandler=rootRegistration.getOperationHandler(fullGrandchildAddress,"three");
  assertSame(TestHandler.PARENT,threeHandler);
  threeHandler=grandchild.getOperationHandler(PathAddress.EMPTY_ADDRESS,"three");
  assertSame(TestHandler.PARENT,threeHandler);
}

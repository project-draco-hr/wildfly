{
  rootRegistration.registerOperationHandler(getOpDef("one",OperationEntry.Flag.READ_ONLY),TestHandler.PARENT,true);
  rootRegistration.registerOperationHandler(getOpDef("two",OperationEntry.Flag.READ_ONLY),TestHandler.PARENT,true);
  rootRegistration.registerOperationHandler(getOpDef("three",OperationEntry.Flag.READ_ONLY),TestHandler.PARENT,true);
  rootRegistration.registerOperationHandler(getOpDef("four",OperationEntry.Flag.READ_ONLY),TestHandler.PARENT,false);
  ManagementResourceRegistration child=rootRegistration.registerSubModel(new SimpleResourceDefinition(childElement,new NonResolvingResourceDescriptionResolver()));
  child.registerOperationHandler(getOpDef("one"),TestHandler.CHILD,true);
  child.registerOperationHandler(getOpDef("two",OperationEntry.Flag.MASTER_HOST_CONTROLLER_ONLY),TestHandler.CHILD,true);
  ManagementResourceRegistration grandchild=child.registerSubModel(new SimpleResourceDefinition(grandchildElement,new NonResolvingResourceDescriptionResolver()));
  OperationStepHandler oneHandler=child.getOperationHandler(PathAddress.EMPTY_ADDRESS,"one");
  assertSame(TestHandler.CHILD,oneHandler);
  OperationStepHandler twoHandler=child.getOperationHandler(PathAddress.EMPTY_ADDRESS,"two");
  assertSame(TestHandler.CHILD,twoHandler);
  OperationStepHandler threeHandler=child.getOperationHandler(PathAddress.EMPTY_ADDRESS,"three");
  assertSame(TestHandler.PARENT,threeHandler);
  oneHandler=rootRegistration.getOperationHandler(childAddress,"one");
  assertSame(TestHandler.CHILD,oneHandler);
  twoHandler=rootRegistration.getOperationHandler(childAddress,"two");
  assertSame(TestHandler.CHILD,twoHandler);
  threeHandler=child.getOperationHandler(PathAddress.EMPTY_ADDRESS,"three");
  assertSame(TestHandler.PARENT,threeHandler);
  OperationStepHandler fourHandler=child.getOperationHandler(PathAddress.EMPTY_ADDRESS,"four");
  assertNull(fourHandler);
  fourHandler=rootRegistration.getOperationHandler(childAddress,"four");
  assertNull(fourHandler);
  fourHandler=rootRegistration.getOperationHandler(PathAddress.EMPTY_ADDRESS,"four");
  assertSame(TestHandler.PARENT,fourHandler);
  oneHandler=rootRegistration.getOperationHandler(grandchildAddress,"one");
  assertSame(TestHandler.CHILD,oneHandler);
  oneHandler=rootRegistration.getOperationHandler(fullGrandchildAddress,"one");
  assertSame(TestHandler.CHILD,oneHandler);
  oneHandler=grandchild.getOperationHandler(PathAddress.EMPTY_ADDRESS,"one");
  assertSame(TestHandler.CHILD,oneHandler);
  twoHandler=rootRegistration.getOperationHandler(grandchildAddress,"two");
  assertSame(TestHandler.CHILD,twoHandler);
  twoHandler=rootRegistration.getOperationHandler(fullGrandchildAddress,"two");
  assertSame(TestHandler.CHILD,twoHandler);
  twoHandler=grandchild.getOperationHandler(PathAddress.EMPTY_ADDRESS,"two");
  assertSame(TestHandler.CHILD,twoHandler);
  threeHandler=rootRegistration.getOperationHandler(grandchildAddress,"three");
  assertSame(TestHandler.PARENT,threeHandler);
  threeHandler=rootRegistration.getOperationHandler(fullGrandchildAddress,"three");
  assertSame(TestHandler.PARENT,threeHandler);
  threeHandler=grandchild.getOperationHandler(PathAddress.EMPTY_ADDRESS,"three");
  assertSame(TestHandler.PARENT,threeHandler);
}

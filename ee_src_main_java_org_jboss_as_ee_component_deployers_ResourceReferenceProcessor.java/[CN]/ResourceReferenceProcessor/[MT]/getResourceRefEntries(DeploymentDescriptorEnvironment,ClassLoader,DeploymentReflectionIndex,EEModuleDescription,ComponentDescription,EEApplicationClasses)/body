{
  List<BindingConfiguration> bindings=new ArrayList<BindingConfiguration>();
  final ResourceReferencesMetaData resourceRefs=environment.getEnvironment().getResourceReferences();
  if (resourceRefs == null) {
    return bindings;
  }
  for (  ResourceReferenceMetaData resourceRef : resourceRefs) {
    final String name;
    if (resourceRef.getName().startsWith("java:")) {
      name=resourceRef.getName();
    }
 else {
      name=environment.getDefaultContext() + resourceRef.getName();
    }
    Class<?> classType=null;
    if (resourceRef.getType() != null) {
      try {
        classType=classLoader.loadClass(resourceRef.getType());
      }
 catch (      ClassNotFoundException e) {
        throw new DeploymentUnitProcessingException("Could not load " + resourceRef.getType() + " referenced in env-entry ",e);
      }
    }
    LookupInjectionSource injectionSource=new LookupInjectionSource(name);
    classType=processInjectionTargets(moduleDescription,componentDescription,applicationClasses,injectionSource,classLoader,deploymentReflectionIndex,resourceRef,classType);
    final BindingConfiguration bindingConfiguration;
    if (!isEmpty(resourceRef.getLookupName())) {
      bindingConfiguration=new BindingConfiguration(name,new LookupInjectionSource(resourceRef.getLookupName()));
    }
 else     if (!isEmpty(resourceRef.getResUrl())) {
      if (classType.equals(URL.class)) {
        try {
          bindingConfiguration=new BindingConfiguration(name,new EnvEntryInjectionSource(new URL(resourceRef.getResUrl())));
        }
 catch (        MalformedURLException e) {
          throw new DeploymentUnitProcessingException("Unable to parse resource-ref URL: " + resourceRef.getResUrl(),e);
        }
      }
 else       if (classType.equals(URI.class)) {
        try {
          bindingConfiguration=new BindingConfiguration(name,new EnvEntryInjectionSource(new URI(resourceRef.getResUrl())));
        }
 catch (        URISyntaxException e) {
          throw new DeploymentUnitProcessingException("Unable to parse resource-ref URI: " + resourceRef.getResUrl(),e);
        }
      }
 else {
        bindingConfiguration=new BindingConfiguration(name,new EnvEntryInjectionSource(resourceRef.getResUrl()));
      }
    }
 else {
      if (classType == null) {
        throw new DeploymentUnitProcessingException("Could not determine type for resource-ref " + name);
      }
      final String lookup=ResourceInjectionAnnotationParsingProcessor.FIXED_LOCATIONS.get(classType.getName());
      if (lookup != null) {
        bindingConfiguration=new BindingConfiguration(name,new LookupInjectionSource(lookup));
      }
 else       if (!resourceRef.getResourceRefName().startsWith("java:")) {
        bindingConfiguration=new BindingConfiguration(name,new LookupInjectionSource("java:jboss/resources/" + resourceRef.getResourceRefName()));
      }
 else {
        logger.warnf("Could not resolve resource-ref %s",name);
        continue;
      }
    }
    bindings.add(bindingConfiguration);
  }
  return bindings;
}

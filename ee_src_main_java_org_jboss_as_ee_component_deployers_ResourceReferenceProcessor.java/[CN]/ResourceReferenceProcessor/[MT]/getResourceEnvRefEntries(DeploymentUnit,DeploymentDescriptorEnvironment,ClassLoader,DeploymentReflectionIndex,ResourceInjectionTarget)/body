{
  List<BindingConfiguration> bindings=new ArrayList<BindingConfiguration>();
  final ResourceEnvironmentReferencesMetaData resourceEnvRefs=environment.getEnvironment().getResourceEnvironmentReferences();
  final EEResourceReferenceProcessorRegistry registry=deploymentUnit.getAttachment(Attachments.RESOURCE_REFERENCE_PROCESSOR_REGISTRY);
  if (resourceEnvRefs == null) {
    return bindings;
  }
  for (  ResourceEnvironmentReferenceMetaData resourceEnvRef : resourceEnvRefs) {
    final String name;
    if (resourceEnvRef.getName().startsWith("java:")) {
      name=resourceEnvRef.getName();
    }
 else {
      name=environment.getDefaultContext() + resourceEnvRef.getName();
    }
    Class<?> classType=null;
    if (resourceEnvRef.getType() != null) {
      try {
        classType=classLoader.loadClass(resourceEnvRef.getType());
      }
 catch (      ClassNotFoundException e) {
        throw EeLogger.ROOT_LOGGER.cannotLoad(e,resourceEnvRef.getType());
      }
    }
    InjectionSource injectionSource=new LookupInjectionSource(name);
    classType=processInjectionTargets(resourceInjectionTarget,injectionSource,classLoader,deploymentReflectionIndex,resourceEnvRef,classType);
    if (!isEmpty(resourceEnvRef.getLookupName())) {
      injectionSource=new LookupInjectionSource(resourceEnvRef.getLookupName(),classType != null && JAVAX_NAMING_CONTEXT.equals(classType.getName()));
    }
 else {
      if (classType == null) {
        throw EeLogger.ROOT_LOGGER.cannotDetermineType(name);
      }
      final String lookup=ResourceInjectionAnnotationParsingProcessor.FIXED_LOCATIONS.get(classType.getName());
      if (lookup != null) {
        injectionSource=new LookupInjectionSource(lookup);
      }
 else {
        final EEResourceReferenceProcessor resourceReferenceProcessor=registry.getResourceReferenceProcessor(classType.getName());
        if (resourceReferenceProcessor != null) {
          injectionSource=resourceReferenceProcessor.getResourceReferenceBindingSource();
        }
 else {
          if (resourceEnvRef.getResourceEnvRefName().startsWith("java:")) {
            ROOT_LOGGER.cannotResolve("resource-env-ref",name);
            continue;
          }
 else {
            injectionSource=new LookupInjectionSource("java:jboss/resources/" + resourceEnvRef.getResourceEnvRefName());
          }
        }
      }
    }
    bindings.add(new BindingConfiguration(name,injectionSource));
  }
  return bindings;
}

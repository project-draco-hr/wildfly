{
  MockProcessManager pm=MockProcessManager.create(1);
  ServerModel cfg=getServer("standard","server-one");
  MockServerManager serverManager=MockServerManager.create();
  MockServerManagerMessageHandler managerMessageHandler=new MockServerManagerMessageHandler();
  MockDirectServerManagerCommunicationListener managerListener=MockDirectServerManagerCommunicationListener.create(serverManager,InetAddress.getLocalHost(),0,10,managerMessageHandler);
  QueuedNewConnectionListener newConnectionListener=new QueuedNewConnectionListener();
  pm.setNewConnectionListener(newConnectionListener);
  ServerStarter.createServer("Server:server-one",pm,managerListener.getSmPort());
  newConnectionListener.assertWaitForConnection("Server:server-one");
  assertReadCommand(managerMessageHandler,ServerManagerProtocolCommand.SERVER_AVAILABLE);
  MockDirectServerManagerCommunicationHandler managerHandler=managerListener.getManagerHandler("Server:server-one");
  Assert.assertNotNull(managerHandler);
  managerHandler.sendMessage(ServerManagerProtocolUtils.createCommandBytes(ServerManagerProtocolCommand.START_SERVER,cfg));
  assertReadCommand(managerMessageHandler,ServerManagerProtocolCommand.SERVER_STARTED);
  managerHandler.sendMessage(ServerManagerProtocolCommand.STOP_SERVER.createCommandBytes(null));
  assertReadCommand(managerMessageHandler,ServerManagerProtocolCommand.SERVER_STOPPED);
  waitForClose(managerHandler,5000);
  waitForServerToClose();
}

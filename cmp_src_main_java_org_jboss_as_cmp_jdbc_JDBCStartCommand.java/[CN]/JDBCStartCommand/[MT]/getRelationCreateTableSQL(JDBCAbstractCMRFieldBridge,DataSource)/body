{
  JDBCFieldBridge[] leftKeys=cmrField.getTableKeyFields();
  JDBCFieldBridge[] rightKeys=cmrField.getRelatedCMRField().getTableKeyFields();
  JDBCFieldBridge[] fieldsArr=new JDBCFieldBridge[leftKeys.length + rightKeys.length];
  System.arraycopy(leftKeys,0,fieldsArr,0,leftKeys.length);
  System.arraycopy(rightKeys,0,fieldsArr,leftKeys.length,rightKeys.length);
  StringBuffer sql=new StringBuffer();
  sql.append(SQLUtil.CREATE_TABLE).append(cmrField.getQualifiedTableName()).append(" (").append(SQLUtil.getCreateTableColumnsClause(fieldsArr));
  final JDBCRelationMetaData relationMetaData=cmrField.getMetaData().getRelationMetaData();
  if (relationMetaData.hasPrimaryKeyConstraint()) {
    JDBCFunctionMappingMetaData pkConstraint=manager.getMetaData().getTypeMapping().getPkConstraintTemplate();
    if (pkConstraint == null) {
      throw MESSAGES.pkConstraintNotAllowed();
    }
    String name="pk_" + relationMetaData.getDefaultTableName();
    name=SQLUtil.fixConstraintName(name,dataSource);
    String[] args=new String[]{name,SQLUtil.getColumnNamesClause(fieldsArr,new StringBuffer(100).toString(),new StringBuffer()).toString()};
    sql.append(SQLUtil.COMMA);
    pkConstraint.getFunctionSql(args,sql);
  }
  sql.append(')');
  return sql.toString();
}

{
  StringBuffer sql=new StringBuffer();
  sql.append(SQLUtil.CREATE_TABLE).append(entity.getQualifiedTableName()).append(" (");
  boolean comma=false;
  JDBCFieldBridge[] fields=entity.getTableFields();
  for (int i=0; i < fields.length; ++i) {
    JDBCFieldBridge field=fields[i];
    JDBCType type=field.getJDBCType();
    if (comma) {
      sql.append(SQLUtil.COMMA);
    }
 else {
      comma=true;
    }
    addField(type,sql);
  }
  if (entityMetaData.hasPrimaryKeyConstraint()) {
    JDBCFunctionMappingMetaData pkConstraint=manager.getMetaData().getTypeMapping().getPkConstraintTemplate();
    if (pkConstraint == null) {
      throw CmpMessages.MESSAGES.pkNotAllowedForDatasource();
    }
    String defTableName=entity.getManager().getMetaData().getDefaultTableName();
    String name="pk_" + SQLUtil.unquote(defTableName,dataSource);
    name=SQLUtil.fixConstraintName(name,dataSource);
    String[] args=new String[]{name,SQLUtil.getColumnNamesClause(entity.getPrimaryKeyFields(),new StringBuffer(100)).toString()};
    sql.append(SQLUtil.COMMA);
    pkConstraint.getFunctionSql(args,sql);
  }
  return sql.append(')').toString();
}

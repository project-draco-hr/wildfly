{
  String address=randomUUID().toString();
  String queueName=randomUUID().toString();
  final ModelNode readQueueResourceOp=getQueueOperation("read-resource",queueName);
  final ModelNode readRuntimeQueueResourceOp=getRuntimeQueueOperation("read-resource",queueName);
  readRuntimeQueueResourceOp.get(INCLUDE_RUNTIME).set(true);
  ModelNode result=execute(readQueueResourceOp,false);
  assertTrue(result.toJSONString(false),result.asString().contains("JBAS014807"));
  result=execute(readRuntimeQueueResourceOp,false);
  assertTrue(result.toJSONString(false),result.asString().contains("JBAS014807"));
  session.createQueue(address,queueName,false);
  result=execute(readQueueResourceOp,false);
  assertTrue(result.toJSONString(false),result.asString().contains("JBAS014807"));
  result=execute(readRuntimeQueueResourceOp,true);
  assertTrue(result.isDefined());
  assertEquals(address,result.get("queue-address").asString());
  session.deleteQueue(queueName);
  result=execute(readQueueResourceOp,false);
  assertTrue(result.toJSONString(false),result.asString().contains("JBAS014807"));
  result=execute(readRuntimeQueueResourceOp,false);
  assertTrue(result.toJSONString(false),result.asString().contains("JBAS014807"));
}

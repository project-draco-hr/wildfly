{
  String name=CachedAuthenticatedSessionHandler.class.getName() + ".AuthenticatedSession";
  SessionAttributes attributes=mock(SessionAttributes.class);
  Account account=mock(Account.class);
  AuthenticatedSession session=new AuthenticatedSession(account,HttpServletRequest.FORM_AUTH);
  Account oldAccount=mock(Account.class);
  when(this.session.getAttributes()).thenReturn(attributes);
  when(attributes.setAttribute(name,account)).thenReturn(oldAccount);
  AuthenticatedSession result=(AuthenticatedSession)this.adapter.setAttribute(name,session);
  assertSame(oldAccount,result.getAccount());
  assertSame(HttpServletRequest.FORM_AUTH,result.getMechanism());
  when(attributes.setAttribute(name,account)).thenReturn(null);
  result=(AuthenticatedSession)this.adapter.setAttribute(name,session);
  assertNull(result);
  session=new AuthenticatedSession(account,HttpServletRequest.BASIC_AUTH);
  AuthenticatedSession oldSession=new AuthenticatedSession(oldAccount,HttpServletRequest.BASIC_AUTH);
  LocalSessionContext context=mock(LocalSessionContext.class);
  when(this.session.getLocalContext()).thenReturn(context);
  when(context.getAuthenticatedSession()).thenReturn(oldSession);
  result=(AuthenticatedSession)this.adapter.setAttribute(name,session);
  verify(context).setAuthenticatedSession(same(session));
  assertSame(oldSession,result);
}

{
  final BatchBuilder batchBuilder=context.getBatchBuilder();
  batchBuilder.addServiceValueIfNotExist(DeploymentChainProviderService.SERVICE_NAME,new DeploymentChainProviderService());
  final Value<DeploymentChain> deploymentChainValue=Values.immediateValue((DeploymentChain)new DeploymentChainImpl(JAR_DEPLOYMENT_CHAIN_SERVICE_NAME.toString()));
  final DeploymentChainService deploymentChainService=new DeploymentChainService(deploymentChainValue);
  batchBuilder.addService(JAR_DEPLOYMENT_CHAIN_SERVICE_NAME,deploymentChainService).addDependency(DeploymentChainProviderService.SERVICE_NAME,DeploymentChainProvider.class,new DeploymentChainProviderInjector<DeploymentChain>(deploymentChainValue,new JarDeploymentChainSelector(),JAR_DEPLOYMENT_CHAIN_PRIORITY));
  addDeploymentProcessor(batchBuilder,new ManifestAttachmentProcessor(),ManifestAttachmentProcessor.PRIORITY);
  addDeploymentProcessor(batchBuilder,new AnnotationIndexProcessor(),AnnotationIndexProcessor.PRIORITY);
  addDeploymentProcessor(batchBuilder,new ModuleDependencyProcessor(),ModuleDependencyProcessor.PRIORITY);
  addDeploymentProcessor(batchBuilder,new ModuleConfigProcessor(),ModuleConfigProcessor.PRIORITY);
  final InjectedValue<DeploymentModuleLoader> moduleLoaderInjector=new InjectedValue<DeploymentModuleLoader>();
  addDeploymentProcessor(batchBuilder,new DeploymentModuleLoaderProcessor(moduleLoaderInjector),DeploymentModuleLoaderProcessor.PRIORITY).addDependency(DeploymentModuleLoaderService.SERVICE_NAME,DeploymentModuleLoader.class,moduleLoaderInjector);
  addDeploymentProcessor(batchBuilder,new ModuleDeploymentProcessor(),ModuleDeploymentProcessor.PRIORITY);
  addDeploymentProcessor(batchBuilder,new ModuleContextProcessor(),ModuleContextProcessor.PRIORITY);
  addDeploymentProcessor(batchBuilder,new ServiceActivatorDependencyProcessor(),ServiceActivatorDependencyProcessor.PRIORITY);
  addDeploymentProcessor(batchBuilder,new ServiceActivatorProcessor(),ServiceActivatorProcessor.PRIORITY);
}

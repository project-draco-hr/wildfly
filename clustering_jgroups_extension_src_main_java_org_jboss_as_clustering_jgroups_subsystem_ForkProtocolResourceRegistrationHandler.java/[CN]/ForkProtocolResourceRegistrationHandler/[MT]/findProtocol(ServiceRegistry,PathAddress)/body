{
  String channelName=address.getElement(address.size() - 3).getValue();
  String forkName=address.getElement(address.size() - 2).getValue();
  String protocolName=address.getElement(address.size() - 1).getValue();
  ServiceController<?> controller=registry.getService(ChannelServiceName.CHANNEL.getServiceName(channelName));
  if (controller != null) {
    Channel channel=(Channel)controller.getValue();
    if (channel != null) {
      FORK fork=(FORK)channel.getProtocolStack().findProtocol(FORK.class);
      if (fork != null) {
        controller=registry.getService(ProtocolStackServiceName.CHANNEL_FACTORY.getServiceName(channelName));
        if (controller != null) {
          ChannelFactory factory=(ChannelFactory)controller.getValue();
          if (factory != null) {
            ProtocolStackConfiguration configuration=factory.getProtocolStackConfiguration();
            for (            ProtocolConfiguration protocol : configuration.getProtocols()) {
              if (protocol.getName().equals(protocolName)) {
                Class<? extends Protocol> protocolClass=configuration.getModuleLoader().loadModule(protocol.getModule()).getClassLoader().loadClass(protocol.getProtocolClassName()).asSubclass(Protocol.class);
                return fork.get(forkName).getProtocolStack().findProtocol(protocolClass);
              }
            }
          }
        }
      }
    }
  }
  return null;
}

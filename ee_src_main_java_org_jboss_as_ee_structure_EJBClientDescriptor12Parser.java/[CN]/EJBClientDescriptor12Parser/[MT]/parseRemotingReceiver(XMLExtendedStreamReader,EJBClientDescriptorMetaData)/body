{
  String outboundConnectionRef=null;
  final Set<Attribute> required=EnumSet.of(Attribute.OUTBOUND_CONNECTION_REF);
  final int count=reader.getAttributeCount();
  EJBClientDescriptorMetaData.RemotingReceiverConfiguration remotingReceiverConfiguration=null;
  long connectTimeout=5000;
  for (int i=0; i < count; i++) {
    final Attribute attribute=Attribute.of(reader.getAttributeName(i));
    required.remove(attribute);
switch (attribute) {
case OUTBOUND_CONNECTION_REF:
      outboundConnectionRef=reader.getAttributeValue(i).trim();
    remotingReceiverConfiguration=ejbClientDescriptorMetaData.addRemotingReceiverConnectionRef(outboundConnectionRef);
  break;
case CONNECT_TIMEOUT:
connectTimeout=reader.getLongAttributeValue(i);
break;
default :
unexpectedContent(reader);
}
}
if (!required.isEmpty()) {
missingAttributes(reader.getLocation(),required);
}
remotingReceiverConfiguration.setConnectionTimeout(connectTimeout);
while (reader.hasNext()) {
switch (reader.nextTag()) {
case END_ELEMENT:
{
return;
}
case START_ELEMENT:
{
final Element element=Element.of(reader.getName());
switch (element) {
case CHANNEL_CREATION_OPTIONS:
final Properties channelCreationOptions=this.parseChannelCreationOptions(reader);
remotingReceiverConfiguration.setChannelCreationOptions(channelCreationOptions);
break;
default :
this.unexpectedElement(reader);
}
break;
}
default :
{
unexpectedContent(reader);
}
}
}
unexpectedEndOfDocument(reader.getLocation());
}

{
  streamWriter.writeStartElement(ResourceAdapter.Tag.CONNECTION_DEFINITION.getLocalName());
  CLASS_NAME.marshallAsAttribute(conDef,streamWriter);
  JNDINAME.marshallAsAttribute(conDef,streamWriter);
  ENABLED.marshallAsAttribute(conDef,streamWriter);
  USE_JAVA_CONTEXT.marshallAsAttribute(conDef,streamWriter);
  streamWriter.writeAttribute("pool-name",poolName);
  USE_CCM.marshallAsAttribute(conDef,streamWriter);
  writeNewConfigProperties(streamWriter,conDef);
  if (conDef.hasDefined(MAX_POOL_SIZE.getName()) || conDef.hasDefined(MIN_POOL_SIZE.getName()) || conDef.hasDefined(POOL_USE_STRICT_MIN.getName())|| conDef.hasDefined(POOL_PREFILL.getName())|| conDef.hasDefined(POOL_FLUSH_STRATEGY.getName())) {
    if (isXa) {
      streamWriter.writeStartElement(CommonConnDef.Tag.XA_POOL.getLocalName());
      MIN_POOL_SIZE.marshallAsElement(conDef,streamWriter);
      MAX_POOL_SIZE.marshallAsElement(conDef,streamWriter);
      POOL_PREFILL.marshallAsElement(conDef,streamWriter);
      POOL_USE_STRICT_MIN.marshallAsElement(conDef,streamWriter);
      POOL_FLUSH_STRATEGY.marshallAsElement(conDef,streamWriter);
      SAME_RM_OVERRIDE.marshallAsElement(conDef,streamWriter);
      if (conDef.hasDefined(INTERLEAVING.getName()) && conDef.get(INTERLEAVING.getName()).asBoolean()) {
        streamWriter.writeEmptyElement(INTERLEAVING.getXmlName());
      }
 else {
        INTERLEAVING.marshallAsElement(conDef,streamWriter);
      }
      if (conDef.hasDefined(NOTXSEPARATEPOOL.getName()) && conDef.get(NOTXSEPARATEPOOL.getName()).asBoolean()) {
        streamWriter.writeEmptyElement(NOTXSEPARATEPOOL.getXmlName());
      }
 else {
        NOTXSEPARATEPOOL.marshallAsElement(conDef,streamWriter);
      }
      PAD_XID.marshallAsElement(conDef,streamWriter);
      WRAP_XA_RESOURCE.marshallAsElement(conDef,streamWriter);
      streamWriter.writeEndElement();
    }
 else {
      streamWriter.writeStartElement(CommonConnDef.Tag.POOL.getLocalName());
      MIN_POOL_SIZE.marshallAsElement(conDef,streamWriter);
      MAX_POOL_SIZE.marshallAsElement(conDef,streamWriter);
      POOL_PREFILL.marshallAsElement(conDef,streamWriter);
      POOL_USE_STRICT_MIN.marshallAsElement(conDef,streamWriter);
      POOL_FLUSH_STRATEGY.marshallAsElement(conDef,streamWriter);
      streamWriter.writeEndElement();
    }
  }
  if (conDef.hasDefined(APPLICATION.getName()) || conDef.hasDefined(SECURITY_DOMAIN.getName()) || conDef.hasDefined(SECURITY_DOMAIN_AND_APPLICATION.getName())) {
    streamWriter.writeStartElement(CommonConnDef.Tag.SECURITY.getLocalName());
    if (conDef.hasDefined(APPLICATION.getName()) && conDef.get(APPLICATION.getName()).asBoolean()) {
      streamWriter.writeEmptyElement(APPLICATION.getXmlName());
    }
 else {
      APPLICATION.marshallAsElement(conDef,streamWriter);
    }
    SECURITY_DOMAIN.marshallAsElement(conDef,streamWriter);
    SECURITY_DOMAIN_AND_APPLICATION.marshallAsElement(conDef,streamWriter);
    streamWriter.writeEndElement();
  }
  if (conDef.hasDefined(BLOCKING_TIMEOUT_WAIT_MILLIS.getName()) || conDef.hasDefined(IDLETIMEOUTMINUTES.getName()) || conDef.hasDefined(ALLOCATION_RETRY.getName())|| conDef.hasDefined(ALLOCATION_RETRY_WAIT_MILLIS.getName())|| conDef.hasDefined(XA_RESOURCE_TIMEOUT.getName())) {
    streamWriter.writeStartElement(CommonConnDef.Tag.TIMEOUT.getLocalName());
    BLOCKING_TIMEOUT_WAIT_MILLIS.marshallAsElement(conDef,streamWriter);
    IDLETIMEOUTMINUTES.marshallAsElement(conDef,streamWriter);
    ALLOCATION_RETRY.marshallAsElement(conDef,streamWriter);
    ALLOCATION_RETRY_WAIT_MILLIS.marshallAsElement(conDef,streamWriter);
    XA_RESOURCE_TIMEOUT.marshallAsElement(conDef,streamWriter);
    streamWriter.writeEndElement();
  }
  if (conDef.hasDefined(BACKGROUNDVALIDATION.getName()) || conDef.hasDefined(BACKGROUNDVALIDATIONMILLIS.getName()) || conDef.hasDefined(USE_FAST_FAIL.getName())) {
    streamWriter.writeStartElement(CommonConnDef.Tag.VALIDATION.getLocalName());
    BACKGROUNDVALIDATION.marshallAsElement(conDef,streamWriter);
    BACKGROUNDVALIDATIONMILLIS.marshallAsElement(conDef,streamWriter);
    USE_FAST_FAIL.marshallAsElement(conDef,streamWriter);
    streamWriter.writeEndElement();
  }
  if (conDef.hasDefined(RECOVERY_USERNAME.getName()) || conDef.hasDefined(RECOVERY_PASSWORD.getName()) || conDef.hasDefined(RECOVERY_SECURITY_DOMAIN.getName())|| conDef.hasDefined(RECOVERLUGIN_CLASSNAME.getName())|| conDef.hasDefined(RECOVERLUGIN_PROPERTIES.getName())|| conDef.hasDefined(NO_RECOVERY.getName())) {
    streamWriter.writeStartElement(CommonConnDef.Tag.RECOVERY.getLocalName());
    NO_RECOVERY.marshallAsAttribute(conDef,streamWriter);
    if (conDef.hasDefined(RECOVERY_USERNAME.getName()) || conDef.hasDefined(RECOVERY_PASSWORD.getName()) || conDef.hasDefined(RECOVERY_SECURITY_DOMAIN.getName())) {
      streamWriter.writeStartElement(Recovery.Tag.RECOVER_CREDENTIAL.getLocalName());
      RECOVERY_USERNAME.marshallAsElement(conDef,streamWriter);
      RECOVERY_PASSWORD.marshallAsElement(conDef,streamWriter);
      RECOVERY_SECURITY_DOMAIN.marshallAsElement(conDef,streamWriter);
      streamWriter.writeEndElement();
    }
    if (conDef.hasDefined(RECOVERLUGIN_CLASSNAME.getName()) || conDef.hasDefined(RECOVERLUGIN_PROPERTIES.getName())) {
      streamWriter.writeStartElement(Recovery.Tag.RECOVER_PLUGIN.getLocalName());
      RECOVERLUGIN_CLASSNAME.marshallAsAttribute(conDef,streamWriter);
      if (conDef.hasDefined(RECOVERLUGIN_PROPERTIES.getName())) {
        for (        Property property : conDef.get(RECOVERLUGIN_PROPERTIES.getName()).asPropertyList()) {
          writeProperty(streamWriter,conDef,property.getName(),property.getValue().asString(),org.jboss.jca.common.api.metadata.common.Extension.Tag.CONFIG_PROPERTY.getLocalName());
        }
      }
      streamWriter.writeEndElement();
    }
    streamWriter.writeEndElement();
  }
  streamWriter.writeEndElement();
}

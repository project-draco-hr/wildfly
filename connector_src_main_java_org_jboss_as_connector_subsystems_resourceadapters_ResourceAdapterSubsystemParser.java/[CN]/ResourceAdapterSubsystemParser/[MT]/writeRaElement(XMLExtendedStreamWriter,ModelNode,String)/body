{
  streamWriter.writeStartElement(Activations.Tag.RESOURCE_ADAPTER.getLocalName());
  streamWriter.writeAttribute(ResourceAdapterParser.Attribute.ID.getLocalName(),name);
  STATISTICS_ENABLED.marshallAsAttribute(ra,streamWriter);
  ARCHIVE.marshallAsElement(ra,streamWriter);
  MODULE.marshallAsElement(ra,streamWriter);
  BOOTSTRAP_CONTEXT.marshallAsElement(ra,streamWriter);
  if (ra.hasDefined(BEANVALIDATION_GROUPS.getName())) {
    streamWriter.writeStartElement(Activation.Tag.BEAN_VALIDATION_GROUPS.getLocalName());
    for (    ModelNode bvg : ra.get(BEANVALIDATION_GROUPS.getName()).asList()) {
      streamWriter.writeStartElement(BEANVALIDATION_GROUPS.getXmlName());
      streamWriter.writeCharacters(bvg.asString());
      streamWriter.writeEndElement();
    }
    streamWriter.writeEndElement();
  }
  TRANSACTION_SUPPORT.marshallAsElement(ra,streamWriter);
  writeNewConfigProperties(streamWriter,ra);
  TransactionSupportEnum transactionSupport=ra.hasDefined(TRANSACTION_SUPPORT.getName()) ? TransactionSupportEnum.valueOf(ra.get(TRANSACTION_SUPPORT.getName()).asString()) : null;
  boolean isXa=false;
  if (transactionSupport == TransactionSupportEnum.XATransaction) {
    isXa=true;
  }
  if (ra.hasDefined(WM_SECURITY.getName()) && ra.get(WM_SECURITY.getName()).asBoolean()) {
    streamWriter.writeStartElement(Activation.Tag.WORKMANAGER.getLocalName());
    streamWriter.writeStartElement(WorkManager.Tag.SECURITY.getLocalName());
    WM_SECURITY_MAPPING_REQUIRED.marshallAsElement(ra,streamWriter);
    WM_SECURITY_DOMAIN.marshallAsElement(ra,streamWriter);
    WM_SECURITY_DEFAULT_PRINCIPAL.marshallAsElement(ra,streamWriter);
    if (ra.hasDefined(WM_SECURITY_DEFAULT_GROUPS.getName())) {
      streamWriter.writeStartElement(WM_SECURITY_DEFAULT_GROUPS.getXmlName());
      for (      ModelNode group : ra.get(WM_SECURITY_DEFAULT_GROUPS.getName()).asList()) {
        streamWriter.writeStartElement(WM_SECURITY_DEFAULT_GROUP.getXmlName());
        streamWriter.writeCharacters(group.asString());
        streamWriter.writeEndElement();
      }
      streamWriter.writeEndElement();
    }
    if (ra.hasDefined(WM_SECURITY_MAPPING_USERS.getName()) || ra.hasDefined(WM_SECURITY_MAPPING_GROUPS.getName())) {
      streamWriter.writeStartElement(WorkManagerSecurity.Tag.MAPPINGS.getLocalName());
      if (ra.hasDefined(WM_SECURITY_MAPPING_USERS.getName())) {
        streamWriter.writeStartElement(WorkManagerSecurity.Tag.USERS.getLocalName());
        for (        ModelNode node : ra.get(WM_SECURITY_MAPPING_USERS.getName()).asList()) {
          streamWriter.writeStartElement(WorkManagerSecurity.Tag.MAP.getLocalName());
          WM_SECURITY_MAPPING_FROM.marshallAsAttribute(node,streamWriter);
          WM_SECURITY_MAPPING_TO.marshallAsAttribute(node,streamWriter);
          streamWriter.writeEndElement();
        }
        streamWriter.writeEndElement();
      }
      if (ra.hasDefined(WM_SECURITY_MAPPING_GROUPS.getName())) {
        streamWriter.writeStartElement(WorkManagerSecurity.Tag.GROUPS.getLocalName());
        for (        ModelNode node : ra.get(WM_SECURITY_MAPPING_GROUPS.getName()).asList()) {
          streamWriter.writeStartElement(WorkManagerSecurity.Tag.MAP.getLocalName());
          WM_SECURITY_MAPPING_FROM.marshallAsAttribute(node,streamWriter);
          WM_SECURITY_MAPPING_TO.marshallAsAttribute(node,streamWriter);
          streamWriter.writeEndElement();
        }
        streamWriter.writeEndElement();
      }
      streamWriter.writeEndElement();
    }
    streamWriter.writeEndElement();
    streamWriter.writeEndElement();
  }
  if (ra.hasDefined(CONNECTIONDEFINITIONS_NAME)) {
    streamWriter.writeStartElement(Activation.Tag.CONNECTION_DEFINITIONS.getLocalName());
    for (    Property conDef : ra.get(CONNECTIONDEFINITIONS_NAME).asPropertyList()) {
      writeConDef(streamWriter,conDef.getValue(),conDef.getName(),isXa);
    }
    streamWriter.writeEndElement();
  }
  if (ra.hasDefined(ADMIN_OBJECTS_NAME)) {
    streamWriter.writeStartElement(Activation.Tag.ADMIN_OBJECTS.getLocalName());
    for (    Property adminObject : ra.get(ADMIN_OBJECTS_NAME).asPropertyList()) {
      writeAdminObject(streamWriter,adminObject.getValue(),adminObject.getName());
    }
    streamWriter.writeEndElement();
  }
  streamWriter.writeEndElement();
}

{
  Session<LocalSessionContext> oldSession=this.entry.getKey();
  validate(oldSession);
  SessionManager<LocalSessionContext,Batch> manager=this.manager.getSessionManager();
  String id=manager.createIdentifier();
  try (BatchContext context=this.manager.getSessionManager().getBatcher().resumeBatch(this.batch)){
    Session<LocalSessionContext> newSession=manager.createSession(id);
    for (    String name : oldSession.getAttributes().getAttributeNames()) {
      newSession.getAttributes().setAttribute(name,oldSession.getAttributes().getAttribute(name));
    }
    newSession.getMetaData().setMaxInactiveInterval(oldSession.getMetaData().getMaxInactiveInterval());
    newSession.getMetaData().setLastAccessedTime(oldSession.getMetaData().getLastAccessedTime());
    newSession.getLocalContext().setAuthenticatedSession(oldSession.getLocalContext().getAuthenticatedSession());
    config.setSessionId(exchange,id);
    this.entry=new SimpleImmutableEntry<>(newSession,config);
    oldSession.invalidate();
  }
   this.manager.getSessionListeners().sessionIdChanged(this,oldSession.getId());
  return id;
}

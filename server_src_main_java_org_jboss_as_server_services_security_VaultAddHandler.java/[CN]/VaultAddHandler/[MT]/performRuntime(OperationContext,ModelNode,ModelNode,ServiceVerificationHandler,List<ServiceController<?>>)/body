{
  ModelNode codeNode=VaultResourceDefinition.CODE.resolveModelAttribute(context,model);
  ModelNode moduleNode=VaultResourceDefinition.MODULE.resolveModelAttribute(context,model);
  String vaultClass=codeNode.isDefined() ? codeNode.asString() : null;
  String module=moduleNode.isDefined() ? moduleNode.asString() : null;
  if (vaultReader != null) {
    final Map<String,Object> vaultOptions=new HashMap<String,Object>();
    if (operation.hasDefined(VaultResourceDefinition.VAULT_OPTIONS.getName())) {
      for (      Map.Entry<String,String> vaultOption : VaultResourceDefinition.VAULT_OPTIONS.unwrap(context,model).entrySet()) {
        vaultOptions.put(vaultOption.getKey(),vaultOption.getValue());
      }
    }
    try {
      vaultReader.createVault(vaultClass,module,vaultOptions);
    }
 catch (    VaultReaderException e) {
      throw ServerLogger.ROOT_LOGGER.cannotCreateVault(e,e);
    }
    final SystemPropertyDeferredProcessor deferredResolver=context.getAttachment(SystemPropertyDeferredProcessor.ATTACHMENT_KEY);
    if (deferredResolver != null) {
      deferredResolver.processDeferredProperties(context);
    }
  }
}

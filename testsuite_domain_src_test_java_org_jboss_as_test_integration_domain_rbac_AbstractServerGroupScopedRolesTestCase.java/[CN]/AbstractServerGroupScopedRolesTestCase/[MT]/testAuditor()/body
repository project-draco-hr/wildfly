{
  ModelControllerClient client=getClientForUser(AUDITOR_USER,isAllowLocalAuth(),masterClientConfig);
  readWholeConfig(client,Outcome.SUCCESS,AUDITOR_USER);
  checkStandardReads(client,null,null,AUDITOR_USER);
  checkRootRead(client,null,null,Outcome.SUCCESS,AUDITOR_USER);
  checkRootRead(client,MASTER,null,Outcome.SUCCESS,AUDITOR_USER);
  checkRootRead(client,MASTER,MASTER_A,Outcome.SUCCESS,AUDITOR_USER);
  checkRootRead(client,MASTER,SLAVE_B,Outcome.HIDDEN,AUDITOR_USER);
  readResource(client,AUTHORIZATION,null,null,Outcome.HIDDEN,AUDITOR_USER);
  readResource(client,AUTHORIZATION,MASTER,MASTER_A,Outcome.SUCCESS,AUDITOR_USER);
  readResource(client,AUTHORIZATION,SLAVE,SLAVE_B,Outcome.HIDDEN,AUDITOR_USER);
  checkSecurityDomainRead(client,null,null,Outcome.SUCCESS,AUDITOR_USER);
  checkSecurityDomainRead(client,MASTER,MASTER_A,Outcome.SUCCESS,AUDITOR_USER);
  checkSecurityDomainRead(client,MASTER,SLAVE_B,Outcome.HIDDEN,AUDITOR_USER);
  checkSensitiveAttribute(client,null,null,true,AUDITOR_USER);
  checkSensitiveAttribute(client,MASTER,MASTER_A,true,AUDITOR_USER);
  if (readOnly)   return;
  runGC(client,MASTER,null,Outcome.UNAUTHORIZED,AUDITOR_USER);
  runGC(client,MASTER,MASTER_A,Outcome.UNAUTHORIZED,AUDITOR_USER);
  runGC(client,SLAVE,null,Outcome.UNAUTHORIZED,AUDITOR_USER);
  runGC(client,SLAVE,SLAVE_B,Outcome.HIDDEN,AUDITOR_USER);
  addDeployment2(client,Outcome.UNAUTHORIZED,AUDITOR_USER);
  addPath(client,Outcome.UNAUTHORIZED,AUDITOR_USER);
  addJvm(client,SERVER_GROUP,SERVER_GROUP_A,Outcome.UNAUTHORIZED,AUDITOR_USER);
  addJvm(client,SERVER_GROUP,SERVER_GROUP_B,Outcome.HIDDEN,AUDITOR_USER);
  addJvm(client,HOST,MASTER,Outcome.UNAUTHORIZED,AUDITOR_USER);
  addJvm(client,HOST,SLAVE,Outcome.UNAUTHORIZED,AUDITOR_USER);
  testWFLY2089(client,AUDITOR_USER);
  testWFLY1916(client,Outcome.UNAUTHORIZED,AUDITOR_USER);
  testWLFY2299(client,Outcome.UNAUTHORIZED,AUDITOR_USER);
  testWFLY2190(client,AUDITOR_USER);
}

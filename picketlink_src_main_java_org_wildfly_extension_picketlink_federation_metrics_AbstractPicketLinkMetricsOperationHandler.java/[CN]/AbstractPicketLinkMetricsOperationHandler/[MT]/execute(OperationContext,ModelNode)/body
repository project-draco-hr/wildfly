{
  context.addStep(new OperationStepHandler(){
    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {
      final PathAddress address=PathAddress.pathAddress(operation.require(OP_ADDR));
      final String name=address.getLastElement().getValue();
      final String attributeName=operation.require(NAME).asString();
      final ServiceController<?> controller=context.getServiceRegistry(false).getRequiredService(createServiceName(name));
      try {
        PicketLinkFederationService<?> service=(PicketLinkFederationService<?>)controller.getValue();
        doPopulateResult(service.getMetrics(),context.getResult(),attributeName);
      }
 catch (      Exception e) {
        throw MESSAGES.failedToGetMetrics(e.getMessage());
      }
      context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);
    }
  }
,OperationContext.Stage.RUNTIME);
  context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);
}

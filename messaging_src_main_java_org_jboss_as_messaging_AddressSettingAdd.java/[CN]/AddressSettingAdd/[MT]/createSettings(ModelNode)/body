{
  final AddressSettings settings=new AddressSettings();
  final AddressFullMessagePolicy addressPolicy=config.hasDefined(ADDRESS_FULL_MESSAGE_POLICY.getName()) ? AddressFullMessagePolicy.valueOf(config.get(ADDRESS_FULL_MESSAGE_POLICY.getName()).asString()) : AddressSettings.DEFAULT_ADDRESS_FULL_MESSAGE_POLICY;
  settings.setAddressFullMessagePolicy(addressPolicy);
  settings.setDeadLetterAddress(asSimpleString(config.get(DEAD_LETTER_ADDRESS.getName()),null));
  settings.setLastValueQueue(config.get(LVQ.getName()).asBoolean(AddressSettings.DEFAULT_LAST_VALUE_QUEUE));
  settings.setMaxDeliveryAttempts(config.get(MAX_DELIVERY_ATTEMPTS.getName()).asInt(AddressSettings.DEFAULT_MAX_DELIVERY_ATTEMPTS));
  settings.setMaxSizeBytes(config.get(MAX_SIZE_BYTES_NODE_NAME.getName()).asInt((int)AddressSettings.DEFAULT_MAX_SIZE_BYTES));
  settings.setMessageCounterHistoryDayLimit(config.get(MESSAGE_COUNTER_HISTORY_DAY_LIMIT.getName()).asInt(AddressSettings.DEFAULT_MESSAGE_COUNTER_HISTORY_DAY_LIMIT));
  settings.setExpiryAddress(asSimpleString(config.get(EXPIRY_ADDRESS.getName()),null));
  settings.setRedeliveryDelay(config.get(REDELIVERY_DELAY.getName()).asInt((int)AddressSettings.DEFAULT_REDELIVER_DELAY));
  settings.setRedistributionDelay(config.get(REDISTRIBUTION_DELAY.getName()).asInt((int)AddressSettings.DEFAULT_REDISTRIBUTION_DELAY));
  settings.setPageSizeBytes(config.get(PAGE_SIZE_BYTES_NODE_NAME.getName()).asInt((int)AddressSettings.DEFAULT_PAGE_SIZE));
  settings.setSendToDLAOnNoRoute(config.get(SEND_TO_DLA_ON_NO_ROUTE.getName()).asBoolean(AddressSettings.DEFAULT_SEND_TO_DLA_ON_NO_ROUTE));
  return settings;
}

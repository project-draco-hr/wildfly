{
  final FlushableDataOutputImpl output=writeMessage(header.getExecutionId());
  try {
    final ManagementRequestHandler requestHandler;
    try {
      final ManagementOperationHandler operationHandler=getOperationHandler(header);
      expectHeader(input,ManagementProtocol.REQUEST_OPERATION);
      requestHandler=getRequestHandler(operationHandler,input);
      expectHeader(input,ManagementProtocol.REQUEST_START);
      expectHeader(input,ManagementProtocol.REQUEST_BODY);
      requestHandler.setContext(new ManagementRequestContext(ManagementChannel.this,header));
      requestHandler.readRequest(input);
      expectHeader(input,ManagementProtocol.REQUEST_END);
    }
 catch (    Exception e) {
      throw e;
    }
 finally {
      writeResponseHeader(header,output);
      output.writeByte(ManagementProtocol.RESPONSE_START);
      output.writeByte(ManagementProtocol.RESPONSE_BODY);
    }
    requestHandler.writeResponse(output);
    output.writeByte(ManagementProtocol.RESPONSE_END);
  }
 catch (  Exception e) {
    e.printStackTrace();
    if (e instanceof IOException) {
      throw (IOException)e;
    }
    throw new IOException(e);
  }
 finally {
    IoUtils.safeClose(output);
  }
}

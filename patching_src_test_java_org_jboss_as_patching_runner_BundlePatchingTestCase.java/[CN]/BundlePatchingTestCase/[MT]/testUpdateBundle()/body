{
  String bundleName=randomString();
  File baseBundleDir=newFile(env.getInstalledImage().getBundlesDir(),SYSTEM,LAYERS,BASE);
  File bundleDir=createBundle0(baseBundleDir,bundleName,"bundle content");
  byte[] existingHash=hashFile(bundleDir);
  String patchID=randomString();
  String baseLayerPatchID=randomString();
  File patchDir=mkdir(tempDir,patchID);
  ContentModification bundleUpdated=ContentModificationUtils.modifyBundle(patchDir,baseLayerPatchID,bundleDir,"updated bundle content");
  Patch patch=PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).oneOffPatchIdentity(productConfig.getProductName(),productConfig.getProductVersion()).getParent().oneOffPatchElement(baseLayerPatchID,BASE,false).addContentModification(bundleUpdated).getParent().build();
  createPatchXMLFile(patchDir,patch);
  File zippedPatch=createZippedPatchFile(patchDir,patchID);
  PatchingResult result=executePatch(zippedPatch);
  assertPatchHasBeenApplied(result,patch);
  InstalledIdentity updatedInstalledIdentity=loadInstalledIdentity();
  File bundlesPatchingDirectory=updatedInstalledIdentity.getLayers().get(0).loadTargetInfo().getDirectoryStructure().getBundlesPatchDirectory(baseLayerPatchID);
  assertDirExists(bundlesPatchingDirectory);
  assertDefinedBundle(bundlesPatchingDirectory,bundleName,bundleUpdated.getItem().getContentHash());
}

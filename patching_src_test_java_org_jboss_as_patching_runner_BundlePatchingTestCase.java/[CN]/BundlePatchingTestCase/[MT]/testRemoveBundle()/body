{
  String bundleName=randomString();
  File baseBundleDir=newFile(env.getInstalledImage().getBundlesDir(),SYSTEM,LAYERS,BASE);
  File bundleDir=createBundle0(baseBundleDir,bundleName,"bundle content");
  ContentModification bundleRemoved=ContentModificationUtils.removeBundle(bundleDir);
  String baseLayerPatchID=randomString();
  Patch patch=PatchBuilder.create().setPatchId(randomString()).setDescription(randomString()).oneOffPatchIdentity(productConfig.getProductName(),productConfig.getProductVersion(),Constants.NOT_PATCHED).getParent().oneOffPatchElement(baseLayerPatchID,BASE,NOT_PATCHED,false).addContentModification(bundleRemoved).getParent().build();
  File patchDir=mkdir(tempDir,patch.getPatchId());
  createPatchXMLFile(patchDir,patch);
  File zippedPatch=createZippedPatchFile(patchDir,patch.getPatchId());
  PatchingResult result=executePatch(zippedPatch);
  assertPatchHasBeenApplied(result,patch);
  InstalledIdentity updatedInstalledIdentity=loadInstalledIdentity();
  File bundlesPatchDirectory=updatedInstalledIdentity.getLayers().get(0).loadTargetInfo().getDirectoryStructure().getBundlesPatchDirectory(baseLayerPatchID);
  assertDirExists(bundlesPatchDirectory);
  assertDefinedAbsentBundle(bundlesPatchDirectory,bundleName);
}

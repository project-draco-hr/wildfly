{
  Properties toSave=(Properties)properties.clone();
  File backup=new File(propertiesFile.getCanonicalPath() + ".bak");
  if (backup.exists()) {
    if (backup.delete() == false) {
      throw new IllegalStateException("Unable to delete backup properties file.");
    }
  }
  if (propertiesFile.renameTo(backup) == false) {
    throw new IllegalStateException("Unable to backup properties file.");
  }
  FileReader fr=new FileReader(backup);
  BufferedReader br=new BufferedReader(fr);
  BufferedWriter bw=new BufferedWriter(new OutputStreamWriter(new FileOutputStream(propertiesFile),"UTF8"));
  try {
    String line;
    while ((line=br.readLine()) != null) {
      String trimmed=line.trim();
      if (trimmed.startsWith("#")) {
        bw.append(line);
        bw.newLine();
      }
 else       if (trimmed.length() == 0) {
        bw.newLine();
      }
 else {
        int equals=trimmed.indexOf('=');
        if (equals > 0) {
          String userName=trimmed.substring(0,equals);
          if (toSave.containsKey(userName)) {
            String escapedUserName=escapeString(userName,ESCAPE_ARRAY);
            bw.append(escapedUserName + "=" + toSave.getProperty(userName));
            bw.newLine();
            toSave.remove(userName);
          }
        }
      }
    }
    for (    Object currentKey : toSave.keySet()) {
      String escapedUserName=escapeString((String)currentKey,ESCAPE_ARRAY);
      bw.append(escapedUserName + "=" + toSave.getProperty((String)currentKey));
      bw.newLine();
    }
  }
  finally {
    safeClose(bw);
    safeClose(br);
    safeClose(fr);
  }
}

{
  final List<PatchElement> elements=new ArrayList<PatchElement>();
  for (  final PatchEntry entry : getLayers()) {
    final PatchElement element=createRollbackElement(entry);
    elements.add(element);
  }
  for (  final PatchEntry entry : getAddOns()) {
    final PatchElement element=createRollbackElement(entry);
    elements.add(element);
  }
  final InstalledIdentity installedIdentity=modification.getUnmodifiedInstallationState();
  final String name=installedIdentity.getIdentity().getName();
  final IdentityImpl identity=new IdentityImpl(name,modification.getVersion());
  if (patchType == Patch.PatchType.UPGRADE) {
    identity.setPatchType(Patch.PatchType.UPGRADE);
    identity.setResultingVersion(installedIdentity.getIdentity().getVersion());
  }
 else   if (patchType == Patch.PatchType.ONE_OFF) {
    identity.setPatchType(Patch.PatchType.ONE_OFF);
    identity.setCumulativePatchId(modification.getCumulativeID());
  }
  final List<ContentModification> modifications=identityEntry.rollbackActions;
  final Patch delegate=new PatchImpl(patchId,"rollback patch",identity,elements,modifications);
  return new PatchImpl.RollbackPatchImpl(delegate,installedIdentity);
}

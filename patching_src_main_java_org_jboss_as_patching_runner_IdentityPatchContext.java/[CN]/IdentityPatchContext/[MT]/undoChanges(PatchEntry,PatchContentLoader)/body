{
  final List<ContentModification> modifications=new ArrayList<ContentModification>(entry.rollbackActions);
  for (  final ContentModification modification : modifications) {
    final ContentItem item=modification.getItem();
    if (item.getContentType() != ContentType.MISC) {
      continue;
    }
    final PatchingTaskDescription description=new PatchingTaskDescription(entry.applyPatchId,modification,loader,false,false);
    try {
      final PatchingTask task=PatchingTask.Factory.create(description,entry);
      task.execute(entry);
    }
 catch (    Exception e) {
      PatchLogger.ROOT_LOGGER.failedToUndoChange(item.toString());
    }
  }
}

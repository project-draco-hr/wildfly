{
  final long hungTaskThreshold=DefaultManagedExecutorServiceResourceDefinition.HUNG_TASK_THRESHOLD_AD.resolveModelAttribute(context,model).asLong();
  final boolean longRunningTasks=DefaultManagedExecutorServiceResourceDefinition.LONG_RUNNING_TASKS_AD.resolveModelAttribute(context,model).asBoolean();
  final int coreThreads=DefaultManagedExecutorServiceResourceDefinition.CORE_THREADS_AD.resolveModelAttribute(context,model).asInt();
  final int maxThreads=DefaultManagedExecutorServiceResourceDefinition.MAX_THREADS_AD.resolveModelAttribute(context,model).asInt();
  final long keepAliveTime=DefaultManagedExecutorServiceResourceDefinition.KEEPALIVE_TIME_AD.resolveModelAttribute(context,model).asLong();
  final TimeUnit keepAliveTimeUnit=TimeUnit.MILLISECONDS;
  final long threadLifeTime=0L;
  final int queueLength=DefaultManagedExecutorServiceResourceDefinition.QUEUE_LENGTH_AD.resolveModelAttribute(context,model).asInt();
  final AbstractManagedExecutorService.RejectPolicy rejectPolicy=AbstractManagedExecutorService.RejectPolicy.valueOf(DefaultManagedExecutorServiceResourceDefinition.REJECT_POLICY_AD.resolveModelAttribute(context,model).asString());
  final ManagedExecutorServiceService service=new ManagedExecutorServiceService(ConcurrentServiceNames.DEFAULT_NAME,hungTaskThreshold,longRunningTasks,coreThreads,maxThreads,keepAliveTime,keepAliveTimeUnit,threadLifeTime,queueLength,rejectPolicy);
  final ServiceBuilder serviceBuilder=context.getServiceTarget().addService(ConcurrentServiceNames.DEFAULT_MANAGED_EXECUTOR_SERVICE_SERVICE_NAME,service).addDependency(ConcurrentServiceNames.DEFAULT_CONTEXT_SERVICE_SERVICE_NAME,ContextServiceImpl.class,service.getContextServiceInjector()).addListener(verificationHandler);
  newControllers.add(serviceBuilder.install());
  context.addStep(new AbstractDeploymentChainStep(){
    protected void execute(    DeploymentProcessorTarget processorTarget){
      processorTarget.addDeploymentProcessor(EeExtension.SUBSYSTEM_NAME,Phase.PARSE,Phase.PARSE_EE_CONCURRENT_DEFAULT_MANAGED_EXECUTOR_SERVICE,new EEConcurrentDefaultManagedExecutorServiceProcessor());
    }
  }
,OperationContext.Stage.RUNTIME);
}

{
  ModelVersion oldVersion=ModelVersion.create(1,0,0);
  KernelServicesBuilder builder=createKernelServicesBuilder(AdditionalInitialization.MANAGEMENT);
  builder.createLegacyKernelServicesBuilder(null,controllerVersion,oldVersion).setExtensionClassName(FederationExtension.class.getName()).addMavenResourceURL("org.wildfly:wildfly-picketlink:" + controllerVersion.getMavenGavVersion()).addMavenResourceURL("org.picketlink.distribution:picketlink-jbas7:" + picketLinkJBossAs7Version).dontPersistXml();
  KernelServices mainServices=builder.build();
  KernelServices legacyServices=mainServices.getLegacyServices(oldVersion);
  Assert.assertNotNull(legacyServices);
  Assert.assertTrue(mainServices.isSuccessfulBoot());
  Assert.assertTrue(legacyServices.isSuccessfulBoot());
  List<ModelNode> ops=builder.parseXmlResource("federation-subsystem-2.0.xml");
  ModelTestUtils.checkFailedTransformedBootOperations(mainServices,oldVersion,ops,new FailedOperationTransformationConfig().addFailedAttribute(PathAddress.pathAddress(PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,FederationExtension.SUBSYSTEM_NAME),PathElement.pathElement(ModelElement.FEDERATION.getName()),KeyStoreProviderResourceDefinition.INSTANCE.getPathElement(),KeyResourceDefinition.INSTANCE.getPathElement()),FailedOperationTransformationConfig.REJECTED_RESOURCE));
}

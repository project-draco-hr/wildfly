{
  final String dsName="XaDsName";
  final String jndiDsName="XaJndiDsName";
  final ModelNode address=new ModelNode();
  address.add("subsystem","datasources");
  address.add("xa-data-source",dsName);
  address.protect();
  final ModelNode operation=new ModelNode();
  operation.get(OP).set("add");
  operation.get(OP_ADDR).set(address);
  operation.get("name").set(dsName);
  operation.get("jndi-name").set("java:jboss/datasources/" + jndiDsName);
  operation.get("enabled").set(true);
  operation.get("driver-name").set("h2");
  operation.get("pool-name").set(dsName + "_Pool");
  operation.get("xa-datasource-properties","URL").set("jdbc:h2:mem:test");
  operation.get("user-name").set("sa");
  operation.get("password").set("sa");
  final ModelNode compensatingOperation=new ModelNode();
  compensatingOperation.get(OP).set("remove");
  compensatingOperation.get(OP_ADDR).set(address);
  final ModelNode result=getModelControllerClient().execute(operation);
  Assert.assertEquals(SUCCESS,result.get(OUTCOME).asString());
  List<ModelNode> newList=marshalAndReparseDsResources("xa-data-source");
  Assert.assertNotNull(newList);
  final Map<String,ModelNode> parseChildren=getChildren(newList.get(1));
  Assert.assertFalse(parseChildren.isEmpty());
  Assert.assertEquals("java:jboss/datasources/XaJndiDsName",parseChildren.get("jndi-name").asString());
  final ModelNode compensatinResult=getModelControllerClient().execute(compensatingOperation);
  Assert.assertEquals(SUCCESS,compensatinResult.get(OUTCOME).asString());
  marshalAndReparseDsResources("xa-data-source");
}

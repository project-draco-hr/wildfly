{
  super(slsbComponentCreateService);
  StatelessObjectFactory<StatelessSessionComponentInstance> factory=new StatelessObjectFactory<StatelessSessionComponentInstance>(){
    @Override public StatelessSessionComponentInstance create(){
      return (StatelessSessionComponentInstance)createInstance();
    }
    @Override public void destroy(    StatelessSessionComponentInstance obj){
      obj.destroy();
    }
  }
;
  final PoolConfig poolConfig=slsbComponentCreateService.getPoolConfig();
  if (poolConfig == null) {
    ROOT_LOGGER.debugf("Pooling is disabled for Stateless EJB %s",slsbComponentCreateService.getComponentName());
    this.pool=null;
    this.poolName=null;
  }
 else {
    ROOT_LOGGER.debugf("Using pool config %s to create pool for Stateless EJB %s",poolConfig,slsbComponentCreateService.getComponentName());
    this.pool=poolConfig.createPool(factory);
    this.poolName=poolConfig.getPoolName();
  }
  this.timeoutMethod=slsbComponentCreateService.getTimeoutMethod();
  this.weakAffinity=slsbComponentCreateService.getWeakAffinity();
}

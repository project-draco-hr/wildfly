{
  if (!subModel.isDefined() || subModel.asInt() == 0) {
    return null;
  }
  final Set<InterfaceCriteria> criteriaSet=new HashSet<InterfaceCriteria>();
  for (  final Property nestedProperty : subModel.asPropertyList()) {
    final Element element=Element.forName(nestedProperty.getName());
switch (element) {
case INET_ADDRESS:
case NIC:
case NIC_MATCH:
case SUBNET_MATCH:
{
        if (nestedProperty.getValue().getType() == ModelType.LIST) {
          for (          ModelNode item : nestedProperty.getValue().asList()) {
            Property prop=new Property(nestedProperty.getName(),item);
            InterfaceCriteria itemCriteria=parseCriteria(prop,true,context);
            if (itemCriteria != null) {
              criteriaSet.add(itemCriteria);
            }
          }
          break;
        }
      }
default :
{
      final InterfaceCriteria criteria=parseCriteria(nestedProperty,true,context);
      if (criteria != null) {
        criteriaSet.add(criteria);
      }
    }
}
}
if (criteriaSet.isEmpty()) {
return null;
}
return any ? new AnyInterfaceCriteria(criteriaSet) : new NotInterfaceCriteria(criteriaSet);
}

{
  String value;
  String[] split=null;
  try {
    value=model.asString();
    split=value.split("/");
    if (split.length != 2) {
      throw new ParsingException(String.format("Invalid 'value' %s -- must be of the form address/mask",value));
    }
    final InetAddress addr=InetAddress.getByName(split[0]);
    final byte[] net=addr.getAddress();
    final int mask=Integer.parseInt(split[1]);
    return new SubnetMatchInterfaceCriteria(net,mask);
  }
 catch (  final ParsingException e) {
    throw e;
  }
catch (  final NumberFormatException e) {
    throw new ParsingException(String.format("Invalid mask %s (%s)",split[0],e.getLocalizedMessage()));
  }
catch (  final UnknownHostException e) {
    throw new ParsingException(String.format("Invalid address %s (%s)",split[1],e.getLocalizedMessage()));
  }
}

{
  final ModelNode address=new ModelNode();
  address.add(ModelDescriptionConstants.SUBSYSTEM,DATASOURCES);
  address.protect();
  final ModelNode subsystem=new ModelNode();
  subsystem.get(OP).set(ADD);
  subsystem.get(OP_ADDR).set(address);
  list.add(subsystem);
  DataSources dataSources=null;
  try {
    String localName=null;
switch (Namespace.forUri(reader.getNamespaceURI())) {
case DATASOURCES_1_0:
{
        localName=reader.getLocalName();
        Element element=Element.forName(reader.getLocalName());
        log.tracef("%s -> %s",localName,element);
switch (element) {
case SUBSYSTEM:
{
            final DsParser parser=new DsParser();
            dataSources=parser.parse(reader);
            requireNoContent(reader);
            break;
          }
      }
    }
}
}
 catch (Exception e) {
throw new XMLStreamException(e);
}
if (dataSources != null) {
for (DataSource dataSource : dataSources.getDataSource()) {
  final ModelNode dsAddress=address.clone();
  dsAddress.add(DATA_SOURCE,dataSource.getJndiName());
  dsAddress.protect();
  final ModelNode operation=new ModelNode();
  operation.get(OP_ADDR).set(dsAddress);
  operation.get(OP).set(ADD);
  fillFrom(operation,dataSource);
  list.add(operation);
}
for (XaDataSource xaDataSource : dataSources.getXaDataSource()) {
  final ModelNode dsAddress=address.clone();
  dsAddress.add(XA_DATA_SOURCE,xaDataSource.getJndiName());
  dsAddress.protect();
  final ModelNode operation=new ModelNode();
  operation.get(OP_ADDR).set(dsAddress);
  operation.get(OP).set(ADD);
  fillFrom(operation,xaDataSource);
  list.add(operation);
}
for (Driver driver : dataSources.getDrivers()) {
  final ModelNode driverAddress=address.clone();
  driverAddress.add(JDBC_DRIVER,driver.getName());
  driverAddress.protect();
  final ModelNode op=Util.getEmptyOperation(ADD,driverAddress);
  op.get(DRIVER_NAME).set(driver.getName());
  op.get(DRIVER_MODULE_NAME).set(driver.getModule());
  if (driver.getMajorVersion() != null)   op.get(DRIVER_MAJOR_VERSION).set(driver.getMajorVersion());
  if (driver.getMinorVersion() != null)   op.get(DRIVER_MINOR_VERSION).set(driver.getMinorVersion());
  if (driver.getDriverClass() != null)   op.get(DRIVER_CLASS_NAME).set(driver.getDriverClass());
  if (driver.getXaDataSourceClass() != null)   op.get(DRIVER_XA_DATASOURCE_CLASS_NAME).set(driver.getXaDataSourceClass());
  list.add(op);
}
}
}

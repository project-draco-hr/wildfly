{
  final ModelNode address=new ModelNode();
  address.add(ModelDescriptionConstants.SUBSYSTEM,DATASOURCES);
  address.protect();
  final ModelNode subsystem=new ModelNode();
  subsystem.get(OP).set(ADD);
  subsystem.get(OP_ADDR).set(address);
  list.add(subsystem);
  try {
    String localName=null;
switch (Namespace.forUri(reader.getNamespaceURI())) {
case DATASOURCES_1_0:
{
        localName=reader.getLocalName();
        Element element=Element.forName(reader.getLocalName());
        SUBSYSTEM_DATASOURCES_LOGGER.tracef("%s -> %s",localName,element);
switch (element) {
case SUBSYSTEM:
{
            final DsParser parser=new DsParser();
            parser.parse(reader,list,address);
            requireNoContent(reader);
            break;
          }
      }
    }
}
}
 catch (Exception e) {
throw new XMLStreamException(e);
}
}

{
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
switch (Namespace.forUri(reader.getNamespaceURI())) {
case DATASOURCES_1_0:
{
        final Element element=Element.forName(reader.getLocalName());
switch (element) {
case DRIVER:
{
            final ModelNode op=new ModelNode();
            list.add(op);
            op.get(OP).set(ADD);
            String moduleName=null;
            for (int i=0; i < reader.getAttributeCount(); i++) {
              final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case MODULE:
{
                  moduleName=reader.getAttributeValue(i);
                  break;
                }
default :
{
                throw unexpectedAttribute(reader,i);
              }
          }
        }
        if (moduleName == null) {
          throw missingRequired(reader,Collections.singleton("module"));
        }
        op.get(MODULE).set(moduleName);
        final ModelNode address=parentAddress.clone();
        address.add(JDBC_DRIVER,moduleName);
        address.protect();
        op.get(OP_ADDR).set(address);
        requireNoContent(reader);
        break;
      }
default :
{
      throw unexpectedElement(reader);
    }
}
break;
}
default :
{
throw unexpectedElement(reader);
}
}
}
}

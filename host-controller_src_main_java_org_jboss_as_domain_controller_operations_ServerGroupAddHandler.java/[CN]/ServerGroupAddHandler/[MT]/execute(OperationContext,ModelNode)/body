{
  final Resource resource=context.createResource(PathAddress.EMPTY_ADDRESS);
  final ModelNode model=resource.getModel();
  for (  AttributeDefinition attr : ServerGroupResourceDefinition.ADD_ATTRIBUTES) {
    attr.validateAndSet(operation,model);
  }
  boolean reloadRequired=false;
  final String profile=PROFILE.resolveModelAttribute(context,model).asString();
  try {
    context.readResourceFromRoot(PathAddress.pathAddress(PathElement.pathElement(PROFILE.getName(),profile)));
  }
 catch (  Exception e) {
    if (master) {
      throw DomainControllerMessages.MESSAGES.noProfileCalled(profile);
    }
 else {
      reloadRequired=true;
      context.reloadRequired();
    }
  }
  final String socketBindingGroup;
  if (operation.hasDefined(SOCKET_BINDING_GROUP.getName())) {
    socketBindingGroup=SOCKET_BINDING_GROUP.resolveModelAttribute(context,model).asString();
    try {
      context.readResourceFromRoot(PathAddress.pathAddress(PathElement.pathElement(SOCKET_BINDING_GROUP.getName(),socketBindingGroup)));
    }
 catch (    NoSuchElementException e) {
      if (master) {
        throw new OperationFailedException(new ModelNode().set(MESSAGES.unknown(SOCKET_BINDING_GROUP.getName(),socketBindingGroup)));
      }
 else {
        reloadRequired=true;
        context.reloadRequired();
      }
    }
  }
 else {
    socketBindingGroup=null;
  }
  final boolean revertReloadRequiredOnRollback=reloadRequired;
  context.completeStep(new OperationContext.ResultHandler(){
    @Override public void handleResult(    ResultAction resultAction,    OperationContext context,    ModelNode operation){
      if (resultAction == ResultAction.ROLLBACK) {
        if (revertReloadRequiredOnRollback) {
          context.revertReloadRequired();
        }
      }
    }
  }
);
}

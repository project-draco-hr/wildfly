{
  final Resource resource=context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS);
  final String attribute=operation.require(ModelDescriptionConstants.NAME).asString();
  final AttributeDefinition def=getAttributeDefinition(attribute);
  if (def == null) {
    context.getFailureDescription().set(new ModelNode().set(String.format("no such attribute (%s) ",attribute)));
  }
  def.getValidator().validateParameter(ModelDescriptionConstants.VALUE,operation);
  resource.getModel().get(attribute).set(operation.get(ModelDescriptionConstants.VALUE));
  if (context.getType() == OperationContext.Type.SERVER) {
    context.addStep(new OperationStepHandler(){
      @Override public void execute(      final OperationContext context,      final ModelNode operation) throws OperationFailedException {
        final HornetQServer server=AddressSettingAdd.getServer(context);
        if (server != null) {
          final ModelNode model=resource.getModel();
          final PathAddress address=PathAddress.pathAddress(operation.require(ModelDescriptionConstants.OP_ADDR));
          final AddressSettings settings=AddressSettingAdd.createSettings(model);
          server.getAddressSettingsRepository().addMatch(address.getLastElement().getValue(),settings);
        }
        context.completeStep();
      }
    }
,OperationContext.Stage.RUNTIME);
  }
  context.completeStep();
}

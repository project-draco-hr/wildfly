{
  ModelControllerClient client=getClientForUser(userName);
  ModelNode operation=createOpNode(MASKED_DS,READ_RESOURCE_OPERATION);
  ModelNode result=RbacUtil.executeOperation(client,operation,Outcome.SUCCESS);
  assertEquals(userName + " should " + (canRead ? "" : "NOT")+ " be able to read",canRead,result.get(RESULT).hasDefined(NEW_CONNECTION_SQL));
  if (!canRead) {
    assertTrue(result.hasDefined(RESPONSE_HEADERS));
    List<ModelNode> filteredAttributes=result.get(RESPONSE_HEADERS,ACCESS_CONTROL).get(0).get("filtered-attributes").asList();
    assertTrue(filteredAttributes.contains(new ModelNode(NEW_CONNECTION_SQL)));
  }
  operation=createOpNode(MASKED_DS,READ_ATTRIBUTE_OPERATION);
  operation.get(NAME).set(NEW_CONNECTION_SQL);
  RbacUtil.executeOperation(client,operation,canRead ? Outcome.SUCCESS : Outcome.UNAUTHORIZED);
  operation=createOpNode(MASKED_DS,WRITE_ATTRIBUTE_OPERATION);
  operation.get(NAME).set(NEW_CONNECTION_SQL);
  operation.get(VALUE).set(VAULT_PASSWORD);
  RbacUtil.executeOperation(client,operation,canWrite ? Outcome.SUCCESS : Outcome.UNAUTHORIZED);
}

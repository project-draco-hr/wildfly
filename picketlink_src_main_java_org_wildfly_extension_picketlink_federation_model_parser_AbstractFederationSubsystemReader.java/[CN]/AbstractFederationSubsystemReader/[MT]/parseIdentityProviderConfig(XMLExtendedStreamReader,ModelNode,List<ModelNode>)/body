{
  ModelNode identityProviderNode=parseConfig(reader,IDENTITY_PROVIDER,COMMON_NAME.getName(),federationNode,Arrays.asList(IdentityProviderResourceDefinition.ATTRIBUTE_DEFINITIONS),addOperations);
  parseElement(new ElementParser(){
    @Override public void parse(    final XMLExtendedStreamReader reader,    final ModelElement element,    final ModelNode parentNode,    List<ModelNode> addOperations) throws XMLStreamException {
switch (element) {
case IDENTITY_PROVIDER_TRUST_DOMAIN:
        parseConfig(reader,IDENTITY_PROVIDER_TRUST_DOMAIN,COMMON_NAME.getName(),parentNode,TrustDomainResourceDefinition.INSTANCE.getAttributes(),addOperations);
      break;
case IDENTITY_PROVIDER_ROLE_GENERATOR:
    parseConfig(reader,IDENTITY_PROVIDER_ROLE_GENERATOR,COMMON_NAME.getName(),parentNode,RoleGeneratorResourceDefinition.INSTANCE.getAttributes(),addOperations);
  break;
case IDENTITY_PROVIDER_ATTRIBUTE_MANAGER:
parseConfig(reader,IDENTITY_PROVIDER_ATTRIBUTE_MANAGER,COMMON_NAME.getName(),parentNode,AttributeManagerResourceDefinition.INSTANCE.getAttributes(),addOperations);
break;
case COMMON_HANDLER:
parseHandlerConfig(reader,parentNode,addOperations);
break;
default :
throw unexpectedElement(reader);
}
}
}
,IDENTITY_PROVIDER,identityProviderNode,reader,addOperations);
}

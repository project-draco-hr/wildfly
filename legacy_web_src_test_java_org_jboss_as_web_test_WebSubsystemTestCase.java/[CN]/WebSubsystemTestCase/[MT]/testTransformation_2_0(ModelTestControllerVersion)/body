{
  ModelVersion modelVersion=ModelVersion.create(2,0,0);
  String subsystemXml=readResource("subsystem-2.0.0.xml");
  KernelServicesBuilder builder=createKernelServicesBuilder(createAdditionalInitialization()).setSubsystemXml(subsystemXml);
  builder.createLegacyKernelServicesBuilder(null,controllerVersion,modelVersion).addMavenResourceURL("org.wildfly:wildfly-web:" + controllerVersion.getMavenGavVersion()).setExtensionClassName("org.jboss.as.web.WebExtension").configureReverseControllerCheck(createAdditionalInitialization(),null);
  KernelServices mainServices=builder.build();
  KernelServices legacyServices=mainServices.getLegacyServices(modelVersion);
  Assert.assertTrue(mainServices.isSuccessfulBoot());
  Assert.assertTrue(legacyServices.isSuccessfulBoot());
  checkSubsystemModelTransformation(mainServices,modelVersion,new ModelFixer.CumulativeModelFixer(SSLConfigurationNameFixer.INSTANCE,AccessLogPrefixFixer_1_2_0.INSTANCE));
}

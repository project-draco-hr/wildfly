{
  ModelNode operation=createOperation(READ_RESOURCE_DESCRIPTION_OPERATION);
  operation.get(OPERATIONS).set(true);
  ModelNode result=executeForResult(operation);
  checkRootNodeDescription(result,false,true);
  assertTrue(result.require(OPERATIONS).isDefined());
  Set<String> ops=result.require(OPERATIONS).keys();
  assertTrue(ops.contains(READ_ATTRIBUTE_OPERATION));
  assertTrue(ops.contains(READ_CHILDREN_NAMES_OPERATION));
  assertTrue(ops.contains(READ_CHILDREN_TYPES_OPERATION));
  assertTrue(ops.contains(READ_OPERATION_DESCRIPTION_OPERATION));
  assertTrue(ops.contains(READ_OPERATION_NAMES_OPERATION));
  assertTrue(ops.contains(READ_RESOURCE_DESCRIPTION_OPERATION));
  assertTrue(ops.contains(READ_RESOURCE_OPERATION));
  for (  String op : ops) {
    assertEquals(op,result.require(OPERATIONS).require(op).require(OPERATION_NAME).asString());
  }
  operation=createOperation(READ_RESOURCE_DESCRIPTION_OPERATION,"profile","profileA","subsystem","subsystem1");
  operation.get(OPERATIONS).set(true);
  result=executeForResult(operation);
  checkSubsystem1Description(result,false,true);
  operation=createOperation(READ_RESOURCE_DESCRIPTION_OPERATION,"profile","profileA","subsystem","subsystem1","type1","thing1");
  operation.get(OPERATIONS).set(true);
  result=executeForResult(operation);
  checkType1Description(result);
  operation=createOperation(READ_RESOURCE_DESCRIPTION_OPERATION,"profile","profileA","subsystem","subsystem1","type1","thing2");
  operation.get(OPERATIONS).set(true);
  result=executeForResult(operation);
  checkType1Description(result);
  operation=createOperation(READ_RESOURCE_DESCRIPTION_OPERATION,"profile","profileA","subsystem","subsystem1","type2","other");
  operation.get(OPERATIONS).set(true);
  result=executeForResult(operation);
  checkType2Description(result);
}

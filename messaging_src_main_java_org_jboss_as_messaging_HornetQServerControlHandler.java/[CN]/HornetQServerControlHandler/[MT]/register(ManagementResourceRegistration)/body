{
  for (  String attr : ATTRIBUTES) {
    registry.registerReadOnlyAttribute(attr,this,AttributeAccess.Storage.RUNTIME);
  }
  registry.registerOperationHandler(GET_CONNECTORS_AS_JSON,this,new DescriptionProvider(){
    @Override public ModelNode getModelDescription(    Locale locale){
      return MessagingDescriptions.getNoArgSimpleReplyOperation(locale,GET_CONNECTORS_AS_JSON,HQ_SERVER,ModelType.STRING,true);
    }
  }
);
  registry.registerOperationHandler(RESET_ALL_MESSAGE_COUNTERS,this,new DescriptionProvider(){
    @Override public ModelNode getModelDescription(    Locale locale){
      return MessagingDescriptions.getDescriptionOnlyOperation(locale,RESET_ALL_MESSAGE_COUNTERS,HQ_SERVER);
    }
  }
);
  registry.registerOperationHandler(RESET_ALL_MESSAGE_COUNTER_HISTORIES,this,new DescriptionProvider(){
    @Override public ModelNode getModelDescription(    Locale locale){
      return MessagingDescriptions.getDescriptionOnlyOperation(locale,RESET_ALL_MESSAGE_COUNTER_HISTORIES,HQ_SERVER);
    }
  }
);
  registry.registerOperationHandler(LIST_PREPARED_TRANSACTIONS,this,new DescriptionProvider(){
    @Override public ModelNode getModelDescription(    Locale locale){
      return MessagingDescriptions.getNoArgSimpleListReplyOperation(locale,LIST_PREPARED_TRANSACTIONS,HQ_SERVER,ModelType.STRING,true);
    }
  }
);
  registry.registerOperationHandler(LIST_PREPARED_TRANSACTION_DETAILS_AS_JSON,this,new DescriptionProvider(){
    @Override public ModelNode getModelDescription(    Locale locale){
      return MessagingDescriptions.getNoArgSimpleReplyOperation(locale,LIST_PREPARED_TRANSACTION_DETAILS_AS_JSON,HQ_SERVER,ModelType.STRING,true);
    }
  }
);
  registry.registerOperationHandler(LIST_PREPARED_TRANSACTION_DETAILS_AS_HTML,this,new DescriptionProvider(){
    @Override public ModelNode getModelDescription(    Locale locale){
      return MessagingDescriptions.getNoArgSimpleReplyOperation(locale,LIST_PREPARED_TRANSACTION_DETAILS_AS_HTML,HQ_SERVER,ModelType.STRING,true);
    }
  }
);
  registry.registerOperationHandler(LIST_HEURISTIC_COMMITTED_TRANSACTIONS,this,new DescriptionProvider(){
    @Override public ModelNode getModelDescription(    Locale locale){
      return MessagingDescriptions.getNoArgSimpleListReplyOperation(locale,LIST_HEURISTIC_COMMITTED_TRANSACTIONS,HQ_SERVER,ModelType.STRING,true);
    }
  }
);
  registry.registerOperationHandler(LIST_HEURISTIC_ROLLED_BACK_TRANSACTIONS,this,new DescriptionProvider(){
    @Override public ModelNode getModelDescription(    Locale locale){
      return MessagingDescriptions.getNoArgSimpleListReplyOperation(locale,LIST_HEURISTIC_ROLLED_BACK_TRANSACTIONS,HQ_SERVER,ModelType.STRING,true);
    }
  }
);
  registry.registerOperationHandler(COMMIT_PREPARED_TRANSACTION,this,new DescriptionProvider(){
    @Override public ModelNode getModelDescription(    Locale locale){
      return MessagingDescriptions.getSingleParamSimpleReplyOperation(locale,COMMIT_PREPARED_TRANSACTION,HQ_SERVER,TRANSACTION_AS_BASE_64,ModelType.STRING,true,ModelType.BOOLEAN,true);
    }
  }
);
  registry.registerOperationHandler(ROLLBACK_PREPARED_TRANSACTION,this,new DescriptionProvider(){
    @Override public ModelNode getModelDescription(    Locale locale){
      return MessagingDescriptions.getSingleParamSimpleReplyOperation(locale,ROLLBACK_PREPARED_TRANSACTION,HQ_SERVER,TRANSACTION_AS_BASE_64,ModelType.STRING,true,ModelType.BOOLEAN,true);
    }
  }
);
  registry.registerOperationHandler(LIST_REMOTE_ADDRESSES,this,new DescriptionProvider(){
    @Override public ModelNode getModelDescription(    Locale locale){
      return MessagingDescriptions.getSingleParamSimpleListReplyOperation(locale,LIST_REMOTE_ADDRESSES,HQ_SERVER,ADDRESS_MATCH,ModelType.STRING,true,ModelType.STRING,true);
    }
  }
);
  registry.registerOperationHandler(CLOSE_CONNECTIONS_FOR_ADDRESS,this,new DescriptionProvider(){
    @Override public ModelNode getModelDescription(    Locale locale){
      return MessagingDescriptions.getSingleParamSimpleReplyOperation(locale,CLOSE_CONNECTIONS_FOR_ADDRESS,HQ_SERVER,IP_ADDRESS,ModelType.STRING,false,ModelType.BOOLEAN,true);
    }
  }
);
  registry.registerOperationHandler(LIST_CONNECTION_IDS,this,new DescriptionProvider(){
    @Override public ModelNode getModelDescription(    Locale locale){
      return MessagingDescriptions.getNoArgSimpleListReplyOperation(locale,LIST_CONNECTION_IDS,HQ_SERVER,ModelType.STRING,true);
    }
  }
);
  registry.registerOperationHandler(LIST_PRODUCERS_INFO_AS_JSON,this,new DescriptionProvider(){
    @Override public ModelNode getModelDescription(    Locale locale){
      return MessagingDescriptions.getNoArgSimpleReplyOperation(locale,LIST_PRODUCERS_INFO_AS_JSON,HQ_SERVER,ModelType.STRING,true);
    }
  }
);
  registry.registerOperationHandler(LIST_SESSIONS,this,new DescriptionProvider(){
    @Override public ModelNode getModelDescription(    Locale locale){
      return MessagingDescriptions.getSingleParamSimpleListReplyOperation(locale,LIST_SESSIONS,HQ_SERVER,CONNECTION_ID,ModelType.STRING,true,ModelType.STRING,true);
    }
  }
);
  registry.registerOperationHandler(GET_ROLES,this,new DescriptionProvider(){
    @Override public ModelNode getModelDescription(    Locale locale){
      return MessagingDescriptions.getGetRoles(locale);
    }
  }
);
  registry.registerOperationHandler(GET_ROLES_AS_JSON,this,new DescriptionProvider(){
    @Override public ModelNode getModelDescription(    Locale locale){
      return MessagingDescriptions.getSingleParamSimpleReplyOperation(locale,GET_ROLES_AS_JSON,HQ_SERVER,ADDRESS_MATCH,ModelType.STRING,false,ModelType.STRING,true);
    }
  }
);
  registry.registerOperationHandler(GET_ADDRESS_SETTINGS_AS_JSON,this,new DescriptionProvider(){
    @Override public ModelNode getModelDescription(    Locale locale){
      return MessagingDescriptions.getSingleParamSimpleReplyOperation(locale,GET_ADDRESS_SETTINGS_AS_JSON,HQ_SERVER,ADDRESS_MATCH,ModelType.STRING,false,ModelType.STRING,true);
    }
  }
);
  registry.registerOperationHandler(FORCE_FAILOVER,this,new DescriptionProvider(){
    @Override public ModelNode getModelDescription(    Locale locale){
      return MessagingDescriptions.getDescriptionOnlyOperation(locale,FORCE_FAILOVER,HQ_SERVER);
    }
  }
);
}

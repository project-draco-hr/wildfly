{
  Integer pmPort=null;
  InetAddress pmAddress=null;
  Integer smPort=null;
  InetAddress smAddress=null;
  String workingDir=args[0];
  int i=1;
  for (; i < args.length; i++) {
    String arg=args[i];
    if (arg.startsWith("-")) {
      if (arg.equals(CommandLineConstants.INTERPROCESS_PM_PORT)) {
        try {
          pmPort=Integer.valueOf(args[++i]);
        }
 catch (        NumberFormatException e) {
          System.err.printf("Value for %s is not an Integer -- %s\n",CommandLineConstants.INTERPROCESS_PM_PORT,args[i]);
          return null;
        }
      }
 else       if (arg.equals(CommandLineConstants.INTERPROCESS_PM_ADDRESS)) {
        try {
          pmAddress=InetAddress.getByName(args[++i]);
        }
 catch (        UnknownHostException e) {
          System.err.printf("Value for %s-interprocess-address is not a known host -- %s\n",CommandLineConstants.INTERPROCESS_PM_ADDRESS,args[i]);
          return null;
        }
      }
 else       if (arg.equals(CommandLineConstants.INTERPROCESS_SM_PORT)) {
        try {
          smPort=Integer.valueOf(args[++i]);
        }
 catch (        NumberFormatException e) {
          System.err.printf("Value for %s is not an Integer -- %s\n",CommandLineConstants.INTERPROCESS_SM_PORT,args[i]);
          return null;
        }
      }
 else       if (arg.equals(CommandLineConstants.INTERPROCESS_SM_ADDRESS)) {
        try {
          smAddress=InetAddress.getByName(args[++i]);
        }
 catch (        UnknownHostException e) {
          System.err.printf("Value for %s-interprocess-address is not a known host -- %s\n",CommandLineConstants.INTERPROCESS_SM_ADDRESS,args[i]);
          return null;
        }
      }
    }
 else {
      break;
    }
  }
  List<String> command=new ArrayList<String>(Arrays.asList(args).subList(i,args.length));
  pmPort=pmPort != null ? pmPort : Integer.valueOf(0);
  smPort=smPort != null ? smPort : Integer.valueOf(0);
  if (pmAddress == null) {
    pmAddress=getLocalHost();
    if (pmAddress == null)     return null;
  }
  if (smAddress == null) {
    smAddress=getLocalHost();
    if (smAddress == null)     return null;
  }
  return new ParsedArgs(pmPort,pmAddress,smPort,smAddress,workingDir,command);
}

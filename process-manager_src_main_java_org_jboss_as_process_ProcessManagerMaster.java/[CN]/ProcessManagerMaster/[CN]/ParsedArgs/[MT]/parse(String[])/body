{
  Integer port=null;
  InetAddress address=null;
  String workingDir=args[0];
  int i=1;
  for (; i < args.length; i++) {
    String arg=args[i];
    if (arg.startsWith("-")) {
      if (arg.equals(CommandLineConstants.INTERPROCESS_PORT)) {
        try {
          port=Integer.valueOf(args[++i]);
        }
 catch (        NumberFormatException e) {
          System.err.printf("Value for %s is not an Integer -- %s\n",CommandLineConstants.INTERPROCESS_PORT,args[i]);
          return null;
        }
      }
 else       if (arg.equals(CommandLineConstants.INTERPROCESS_ADDRESS)) {
        try {
          address=InetAddress.getByName(args[++i]);
        }
 catch (        UnknownHostException e) {
          System.err.printf("Value for %s-interprocess-address is not a known host -- %s\n",CommandLineConstants.INTERPROCESS_ADDRESS,args[i]);
          return null;
        }
      }
    }
 else {
      break;
    }
  }
  List<String> command=new ArrayList<String>(Arrays.asList(args).subList(i,args.length));
  port=port != null ? port : Integer.valueOf(0);
  if (address == null) {
    try {
      address=InetAddress.getLocalHost();
    }
 catch (    UnknownHostException e) {
      System.err.printf("Could not determine local host");
      return null;
    }
  }
  return new ParsedArgs(port,address,workingDir,command);
}

{
  boolean ok=false;
  try {
    InputStream in=socket.getInputStream();
    StringBuilder sb=new StringBuilder();
    Status status=StreamUtils.readWord(in,sb);
    if (status != Status.MORE) {
      log.errorf("Process acceptor: received '%s' but no more",sb);
      return;
    }
    if (!sb.toString().equals("STARTED")) {
      log.errorf("Process acceptor: received unknown start command '%s'",sb);
      return;
    }
    sb=new StringBuilder();
    while (status == Status.MORE) {
      status=StreamUtils.readWord(in,sb);
    }
    String processName=sb.toString();
    final Map<String,ManagedProcess> processes=ProcessManagerMaster.this.processes;
    ManagedProcess process=null;
synchronized (processes) {
      process=processes.get(processName);
      if (process == null) {
        log.errorf("Process acceptor: received start command for unknown process '%s' (%s)",processName,processes.keySet());
        return;
      }
      if (!process.isStart()) {
        log.errorf("Process acceptor: received start command for not started process '%s'",process);
        return;
      }
    }
    process.setSocket(socket);
    ok=true;
  }
 catch (  IOException e) {
    log.errorf("Process acceptor: error reading from socket: %s",e);
  }
 finally {
    if (!ok) {
      try {
        socket.close();
      }
 catch (      IOException ignore) {
      }
    }
  }
}

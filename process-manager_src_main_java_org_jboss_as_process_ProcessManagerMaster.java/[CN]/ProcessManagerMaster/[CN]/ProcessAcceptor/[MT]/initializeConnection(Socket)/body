{
  InputStream in=socket.getInputStream();
  StringBuilder sb=new StringBuilder();
  Status status=StreamUtils.readWord(in,sb);
  if (status != Status.MORE) {
    throw new InitialSocketRequestException("Process acceptor: received '" + sb.toString() + "' but no more");
  }
  if (!sb.toString().equals("CONNECTED")) {
    throw new InitialSocketRequestException("Process acceptor: received unknown start command '" + sb.toString() + "'");
  }
  sb=new StringBuilder();
  while (status == Status.MORE) {
    status=StreamUtils.readWord(in,sb);
  }
  String processName=sb.toString();
  final Map<String,ManagedProcess> processes=ProcessManagerMaster.this.processes;
  ManagedProcess process=null;
synchronized (processes) {
    process=processes.get(processName);
    if (process == null) {
      throw new InitialSocketRequestException("Process acceptor: received connect command for unknown process '" + processName + "' ("+ processes.keySet()+ ")");
    }
    if (!process.isStart()) {
      throw new InitialSocketRequestException("Process acceptor: received connect command for not started process '" + process + "'");
    }
  }
  SocketConnection connection=SocketConnection.accepted(socket);
  process.setSocket(connection);
}

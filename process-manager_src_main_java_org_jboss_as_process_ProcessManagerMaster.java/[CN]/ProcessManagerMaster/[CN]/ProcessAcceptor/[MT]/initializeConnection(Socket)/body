{
  InputStream in=socket.getInputStream();
  StringBuilder sb=new StringBuilder();
  socket.setSoTimeout(10000);
  Status status;
  String processName;
  try {
    status=StreamUtils.readWord(in,sb);
    if (status != Status.MORE) {
      throw new InitialSocketRequestException("Process acceptor: received '" + sb.toString() + "' but no more");
    }
    if (!sb.toString().equals("CONNECTED")) {
      throw new InitialSocketRequestException("Process acceptor: received unknown start command '" + sb.toString() + "'");
    }
    sb=new StringBuilder();
    while (status == Status.MORE) {
      status=StreamUtils.readWord(in,sb);
    }
    processName=sb.toString();
  }
 catch (  SocketTimeoutException e) {
    throw new InitialSocketRequestException("Process acceptor: did not receive any data on socket within 10 seconds");
  }
  final Map<String,ManagedProcess> processes=ProcessManagerMaster.this.processes;
  ManagedProcess process=null;
synchronized (processes) {
    process=processes.get(processName);
    if (process == null) {
      throw new InitialSocketRequestException("Process acceptor: received connect command for unknown process '" + processName + "' ("+ processes.keySet()+ ")");
    }
  }
  socket.setSoTimeout(0);
  SocketConnection connection=SocketConnection.accepted(socket);
  process.setSocket(connection);
  acceptedConnection(processName,connection);
}

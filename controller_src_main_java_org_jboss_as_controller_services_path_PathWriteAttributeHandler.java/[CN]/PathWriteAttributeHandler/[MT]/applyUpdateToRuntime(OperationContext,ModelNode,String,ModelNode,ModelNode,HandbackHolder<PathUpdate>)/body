{
  final String pathName=PathAddress.pathAddress(operation.get(OP_ADDR)).getLastElement().getValue();
  final PathEntry pathEntry=pathManager.getPathEntry(pathName);
  final PathEntry backup=new PathEntry(pathEntry);
  final PathEventContextImpl pathEventContext=pathManager.checkRestartRequired(context,pathName,Event.UPDATED);
  if (pathEventContext.isInstallServices()) {
    final ServiceVerificationHandler verificationHandler=new ServiceVerificationHandler();
    context.addStep(verificationHandler,Stage.VERIFY);
    if (attributeName.equals(PATH)) {
      String pathVal=resolvedValue.asString();
      pathManager.changePath(pathName,pathVal);
      pathManager.changePathServices(context,pathName,pathVal,verificationHandler);
    }
 else     if (attributeName.equals(RELATIVE_TO)) {
      String relToVal=resolvedValue.isDefined() ? resolvedValue.asString() : null;
      pathManager.changeRelativePath(pathName,relToVal,true);
      pathManager.changeRelativePathServices(context,pathName,relToVal,verificationHandler);
    }
  }
  handbackHolder.setHandback(new PathUpdate(backup,pathEventContext));
  return false;
}

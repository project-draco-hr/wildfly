{
  final String pathName=PathAddress.pathAddress(operation.get(OP_ADDR)).getLastElement().getValue();
  final ModelNode model=Resource.Tools.readModel(context.readResource(PathAddress.EMPTY_ADDRESS));
  if (model.get(READ_ONLY.getName()).asBoolean(false)) {
    throw ControllerMessages.MESSAGES.cannotModifyReadOnlyPath(pathName);
  }
  if (services) {
    final PathEntry pathEntry=pathManager.getPathEntry(pathName);
    if (pathEntry.isReadOnly()) {
      throw MESSAGES.pathEntryIsReadOnly(operation.require(OP_ADDR).asString());
    }
    context.addStep(new OperationStepHandler(){
      public void execute(      OperationContext context,      ModelNode operation) throws OperationFailedException {
        final PathEntry backup=new PathEntry(pathEntry);
        final ServiceVerificationHandler verificationHandler=new ServiceVerificationHandler();
        final PathEventContextImpl pathEventContext=pathManager.checkRestartRequired(context,pathName,Event.UPDATED);
        if (pathEventContext.isInstallServices()) {
          if (attributeName.equals(PATH)) {
            pathManager.changePath(pathName,newValue.asString());
            pathManager.changePathServices(context,pathName,newValue.asString(),verificationHandler);
          }
 else           if (attributeName.equals(RELATIVE_TO)) {
            pathManager.changeRelativePath(pathName,newValue.isDefined() ? newValue.asString() : null,true);
            pathManager.changeRelativePathServices(context,pathName,newValue.isDefined() ? newValue.asString() : null,verificationHandler);
          }
        }
        context.addStep(verificationHandler,Stage.VERIFY);
        context.completeStep(new OperationContext.RollbackHandler(){
          public void handleRollback(          OperationContext context,          ModelNode operation){
            if (pathEventContext.isInstallServices()) {
              if (attributeName.equals(PATH)) {
                pathManager.changePath(pathName,backup.getPath());
                pathManager.changePathServices(context,pathName,currentValue.asString(),null);
              }
 else               if (attributeName.equals(RELATIVE_TO)) {
                try {
                  pathManager.changeRelativePath(pathName,backup.getRelativeTo(),false);
                }
 catch (                OperationFailedException e) {
                  throw new RuntimeException(e);
                }
                pathManager.changeRelativePathServices(context,pathName,currentValue.isDefined() ? currentValue.asString() : null,null);
              }
            }
 else {
              pathEventContext.revert();
            }
          }
        }
);
      }
    }
,Stage.RUNTIME);
  }
  context.completeStep();
}

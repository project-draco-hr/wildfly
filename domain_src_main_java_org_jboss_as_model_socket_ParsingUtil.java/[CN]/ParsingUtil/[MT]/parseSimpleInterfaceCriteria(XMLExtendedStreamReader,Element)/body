{
  AbstractInterfaceCriteriaElement<?> result=null;
switch (element) {
case LINK_LOCAL_ADDRESS:
{
      result=new SimpleCriteriaElement(reader,element,LinkLocalInterfaceCriteria.INSTANCE);
      break;
    }
case LOOPBACK:
{
    result=new SimpleCriteriaElement(reader,element,LoopbackInterfaceCriteria.INSTANCE);
    break;
  }
case MULTICAST:
{
  result=new SimpleCriteriaElement(reader,element,SupportsMulticastInterfaceCriteria.INSTANCE);
  break;
}
case POINT_TO_POINT:
{
result=new SimpleCriteriaElement(reader,element,PointToPointInterfaceCriteria.INSTANCE);
break;
}
case PUBLIC_ADDRESS:
{
result=new SimpleCriteriaElement(reader,element,PublicAddressInterfaceCriteria.INSTANCE);
break;
}
case SITE_LOCAL_ADDRESS:
{
result=new SimpleCriteriaElement(reader,element,SiteLocalInterfaceCriteria.INSTANCE);
break;
}
case UP:
{
result=new SimpleCriteriaElement(reader,element,UpInterfaceCriteria.INSTANCE);
break;
}
case VIRTUAL:
{
result=new SimpleCriteriaElement(reader,element,VirtualInterfaceCriteria.INSTANCE);
break;
}
case NIC:
{
result=new NicCriteriaElement(reader);
break;
}
case NIC_MATCH:
{
result=new NicMatchCriteriaElement(reader);
break;
}
case SUBNET_MATCH:
{
result=new SubnetMatchCriteriaElement(reader);
break;
}
default :
throw new XMLStreamException("Unexpected element '" + reader.getName() + "' encountered",reader.getLocation());
}
return result;
}

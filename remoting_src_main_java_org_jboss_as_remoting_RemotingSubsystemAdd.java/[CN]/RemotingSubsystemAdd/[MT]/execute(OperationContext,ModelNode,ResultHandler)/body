{
  String threadPoolName=operation.require(THREAD_POOL).asString();
  context.getSubModel().get(THREAD_POOL).set(threadPoolName);
  context.getSubModel().get(CONNECTOR).setEmptyObject();
  final ModelNode compensating=Util.getResourceRemoveOperation(operation.require(OP_ADDR));
  if (context instanceof RuntimeOperationContext) {
    final RuntimeOperationContext updateContext=(RuntimeOperationContext)context;
    final EndpointService endpointService=new EndpointService();
    endpointService.setOptionMap(OptionMap.EMPTY);
    final Injector<Executor> executorInjector=endpointService.getExecutorInjector();
    updateContext.getServiceTarget().addService(RemotingServices.ENDPOINT,endpointService).addDependency(ThreadsServices.executorName(threadPoolName),new CastingInjector<Executor>(executorInjector,Executor.class)).setInitialMode(ServiceController.Mode.ACTIVE).install();
  }
  resultHandler.handleResultComplete(compensating);
  return Cancellable.NULL;
}

{
  final String nodeName=SecurityActions.getSystemProperty(RemotingExtension.NODE_NAME_PROPERTY);
  final EndpointService endpointService=new EndpointService(nodeName,EndpointService.EndpointType.SUBSYSTEM);
  final OptionMap map=OptionMap.builder().set(Options.WORKER_READ_THREADS,RemotingSubsystemRootResource.WORKER_READ_THREADS.resolveModelAttribute(context,model).asInt()).set(Options.WORKER_TASK_CORE_THREADS,RemotingSubsystemRootResource.WORKER_TASK_CORE_THREADS.resolveModelAttribute(context,model).asInt()).set(Options.WORKER_TASK_KEEPALIVE,RemotingSubsystemRootResource.WORKER_TASK_KEEPALIVE.resolveModelAttribute(context,model).asInt()).set(Options.WORKER_TASK_LIMIT,RemotingSubsystemRootResource.WORKER_TASK_LIMIT.resolveModelAttribute(context,model).asInt()).set(Options.WORKER_TASK_MAX_THREADS,RemotingSubsystemRootResource.WORKER_TASK_MAX_THREADS.resolveModelAttribute(context,model).asInt()).set(Options.WORKER_WRITE_THREADS,RemotingSubsystemRootResource.WORKER_WRITE_THREADS.resolveModelAttribute(context,model).asInt()).set(Options.WORKER_READ_THREADS,RemotingSubsystemRootResource.WORKER_READ_THREADS.resolveModelAttribute(context,model).asInt()).getMap();
  endpointService.setOptionMap(map);
  ServiceBuilder<?> builder=context.getServiceTarget().addService(RemotingServices.SUBSYSTEM_ENDPOINT,endpointService);
  if (verificationHandler != null) {
    builder.addListener(verificationHandler);
  }
  ServiceController<?> controller=builder.install();
  if (newControllers != null) {
    newControllers.add(controller);
  }
}

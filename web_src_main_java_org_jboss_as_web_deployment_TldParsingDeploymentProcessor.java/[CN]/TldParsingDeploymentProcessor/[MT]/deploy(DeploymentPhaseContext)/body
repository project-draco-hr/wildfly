{
  final DeploymentUnit deploymentUnit=phaseContext.getDeploymentUnit();
  if (!DeploymentTypeMarker.isType(DeploymentType.WAR,deploymentUnit)) {
    return;
  }
  final VirtualFile deploymentRoot=deploymentUnit.getAttachment(Attachments.DEPLOYMENT_ROOT).getRoot();
  TldsMetaData tldsMetaData=deploymentUnit.getAttachment(TldsMetaData.ATTACHMENT_KEY);
  if (tldsMetaData == null) {
    tldsMetaData=new TldsMetaData();
    deploymentUnit.putAttachment(TldsMetaData.ATTACHMENT_KEY,tldsMetaData);
  }
  Map<String,TldMetaData> tlds=new HashMap<String,TldMetaData>();
  tldsMetaData.setTlds(tlds);
  List<ResourceRoot> resourceRoots=deploymentUnit.getAttachmentList(Attachments.RESOURCE_ROOTS);
  for (  ResourceRoot resourceRoot : resourceRoots) {
    if (resourceRoot.getRoot().getName().toLowerCase(Locale.ENGLISH).endsWith(".jar")) {
      VirtualFile webFragment=resourceRoot.getRoot().getChild(META_INF);
      if (webFragment.exists() && webFragment.isDirectory()) {
        processTlds(deploymentRoot,webFragment.getChildren(),tlds);
      }
    }
  }
  VirtualFile webInf=deploymentRoot.getChild(WEB_INF);
  if (webInf.exists() && webInf.isDirectory()) {
    for (    VirtualFile file : webInf.getChildren()) {
      if (file.isFile() && file.getName().toLowerCase(Locale.ENGLISH).endsWith(TLD)) {
        String pathNameRelativeToRoot;
        try {
          pathNameRelativeToRoot=file.getPathNameRelativeTo(deploymentRoot);
        }
 catch (        IllegalArgumentException e) {
          throw new DeploymentUnitProcessingException(MESSAGES.tldFileNotContainedInRoot(file.getPathName(),deploymentRoot.getPathName()),e);
        }
        tlds.put("/" + pathNameRelativeToRoot,parseTLD(file));
      }
 else       if (file.isDirectory() && !CLASSES.equals(file.getName()) && !LIB.equals(file.getName())) {
        processTlds(deploymentRoot,file.getChildren(),tlds);
      }
    }
  }
}

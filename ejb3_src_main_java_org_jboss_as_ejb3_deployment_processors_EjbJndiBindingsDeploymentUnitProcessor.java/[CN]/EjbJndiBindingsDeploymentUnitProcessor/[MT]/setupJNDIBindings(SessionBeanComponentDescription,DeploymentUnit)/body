{
  List<ViewDescription> views=sessionBean.getViews();
  if (views == null || views.isEmpty()) {
    logger.info("No jndi bindings will be created for EJB: " + sessionBean.getEJBName() + " since no views are exposed");
    return;
  }
  String applicationName=this.getEarName(deploymentUnit);
  String globalJNDIBaseName="java:global/" + (applicationName != null ? applicationName + "/" : "") + sessionBean.getModuleName()+ "/"+ sessionBean.getEJBName();
  String appJNDIBaseName="java:app/" + sessionBean.getModuleName() + "/"+ sessionBean.getEJBName();
  String moduleJNDIBaseName="java:module/" + sessionBean.getEJBName();
  ServiceName baseServiceName=deploymentUnit.getServiceName().append("component").append(sessionBean.getComponentName());
  for (  ViewDescription viewDescription : views) {
    String viewClassName=viewDescription.getViewClassName();
    String globalJNDIName=globalJNDIBaseName + "!" + viewClassName;
    final InjectionSource globalBindingSource=new ViewBindingInjectionSource(baseServiceName.append("VIEW").append(viewClassName));
    final BindingConfiguration globalBinding=new BindingConfiguration(globalJNDIName,globalBindingSource);
    this.addBindingConfiguration(viewDescription,globalBinding);
    logger.debug("Added java:global jndi binding at " + globalJNDIName + " for view: "+ viewClassName+ " of session bean: "+ sessionBean.getEJBName());
    String appJNDIName=appJNDIBaseName + "!" + viewClassName;
    final InjectionSource appBindingSource=new ViewBindingInjectionSource(baseServiceName.append("VIEW").append(viewClassName));
    final BindingConfiguration appBinding=new BindingConfiguration(appJNDIName,appBindingSource);
    this.addBindingConfiguration(viewDescription,appBinding);
    logger.debug("Added java:app jndi binding at " + appJNDIName + " for view: "+ viewClassName+ " of session bean: "+ sessionBean.getEJBName());
    String moduleJNDIName=moduleJNDIBaseName + "!" + viewClassName;
    final InjectionSource moduleBindingSource=new ViewBindingInjectionSource(baseServiceName.append("VIEW").append(viewClassName));
    final BindingConfiguration moduleBinding=new BindingConfiguration(moduleJNDIName,moduleBindingSource);
    this.addBindingConfiguration(viewDescription,moduleBinding);
    logger.debug("Added java:module jndi binding at " + moduleJNDIName + " for view: "+ viewClassName+ " of session bean: "+ sessionBean.getEJBName());
  }
  if (views.size() == 1) {
    final ViewDescription viewDescription=views.get(0);
    final String viewClassName=viewDescription.getViewClassName();
    final InjectionSource globalBindingSource=new ViewBindingInjectionSource(baseServiceName.append("VIEW").append(viewClassName));
    final BindingConfiguration globalBinding=new BindingConfiguration(globalJNDIBaseName,globalBindingSource);
    this.addBindingConfiguration(viewDescription,globalBinding);
    logger.debug("Added java:global jndi binding at " + globalJNDIBaseName + " for view: "+ viewClassName+ " of session bean: "+ sessionBean.getEJBName());
    final InjectionSource appBindingSource=new ViewBindingInjectionSource(baseServiceName.append("VIEW").append(viewClassName));
    final BindingConfiguration appBinding=new BindingConfiguration(appJNDIBaseName,appBindingSource);
    this.addBindingConfiguration(viewDescription,appBinding);
    logger.debug("Added java:app jndi binding at " + appJNDIBaseName + " for view: "+ viewClassName+ " of session bean: "+ sessionBean.getEJBName());
    final InjectionSource moduleBindingSource=new ViewBindingInjectionSource(baseServiceName.append("VIEW").append(viewClassName));
    final BindingConfiguration moduleBinding=new BindingConfiguration(moduleJNDIBaseName,moduleBindingSource);
    this.addBindingConfiguration(viewDescription,moduleBinding);
    logger.debug("Added java:module jndi binding at " + moduleJNDIBaseName + " for view: "+ viewClassName+ " of session bean: "+ sessionBean.getEJBName());
  }
}

{
  Set<String> views=sessionBean.getViewClassNames();
  if (views == null || views.isEmpty()) {
    logger.info("No jndi bindings will be created for EJB: " + sessionBean.getEJBName() + " since no views are exposed");
    return;
  }
  String applicationName=this.getEarName(deploymentUnit);
  String globalJNDIBaseName="java:global/" + (applicationName != null ? applicationName + "/" : "") + sessionBean.getModuleName()+ "/"+ sessionBean.getEJBName();
  String appJNDIBaseName="java:app/" + sessionBean.getModuleName() + "/"+ sessionBean.getEJBName();
  String moduleJNDIBaseName="java:module/" + sessionBean.getEJBName();
  ServiceName baseServiceName=deploymentUnit.getServiceName().append("component").append(sessionBean.getComponentName());
  for (  String viewClassName : views) {
    String globalJNDIName=globalJNDIBaseName + "!" + viewClassName;
    final BindingDescription globalBinding=new BindingDescription(globalJNDIName);
    globalBinding.setBindingType(viewClassName);
    globalBinding.setReferenceSourceDescription(new ServiceBindingSourceDescription(baseServiceName.append("VIEW").append(viewClassName)));
    sessionBean.addBinding(globalBinding);
    logger.debug("Added java:global jndi binding at " + globalJNDIName + " for view: "+ viewClassName+ " of session bean: "+ sessionBean.getEJBName());
    String appJNDIName=appJNDIBaseName + "!" + viewClassName;
    final BindingDescription appBinding=new BindingDescription(appJNDIName);
    appBinding.setBindingType(viewClassName);
    appBinding.setReferenceSourceDescription(new ServiceBindingSourceDescription(baseServiceName.append("VIEW").append(viewClassName)));
    sessionBean.addBinding(appBinding);
    logger.debug("Added java:app jndi binding at " + appJNDIName + " for view: "+ viewClassName+ " of session bean: "+ sessionBean.getEJBName());
    String moduleJNDIName=moduleJNDIBaseName + "!" + viewClassName;
    final BindingDescription moduleBinding=new BindingDescription(moduleJNDIName);
    moduleBinding.setBindingType(viewClassName);
    moduleBinding.setReferenceSourceDescription(new ServiceBindingSourceDescription(baseServiceName.append("VIEW").append(viewClassName)));
    sessionBean.addBinding(moduleBinding);
    logger.debug("Added java:module jndi binding at " + moduleJNDIName + " for view: "+ viewClassName+ " of session bean: "+ sessionBean.getEJBName());
  }
  if (views.size() == 1) {
    final BindingDescription globalBinding=new BindingDescription(globalJNDIBaseName);
    String viewClassName=views.iterator().next();
    globalBinding.setBindingType(viewClassName);
    globalBinding.setReferenceSourceDescription(new ServiceBindingSourceDescription(baseServiceName.append("VIEW").append(viewClassName)));
    sessionBean.addBinding(globalBinding);
    logger.debug("Added java:global jndi binding at " + globalJNDIBaseName + " for view: "+ viewClassName+ " of session bean: "+ sessionBean.getEJBName());
    final BindingDescription appBinding=new BindingDescription(appJNDIBaseName);
    appBinding.setBindingType(viewClassName);
    appBinding.setReferenceSourceDescription(new ServiceBindingSourceDescription(baseServiceName.append("VIEW").append(viewClassName)));
    sessionBean.addBinding(appBinding);
    logger.debug("Added java:app jndi binding at " + appJNDIBaseName + " for view: "+ viewClassName+ " of session bean: "+ sessionBean.getEJBName());
    final BindingDescription moduleBinding=new BindingDescription(moduleJNDIBaseName);
    moduleBinding.setBindingType(viewClassName);
    moduleBinding.setReferenceSourceDescription(new ServiceBindingSourceDescription(baseServiceName.append("VIEW").append(viewClassName)));
    sessionBean.addBinding(moduleBinding);
    logger.debug("Added java:module jndi binding at " + moduleJNDIBaseName + " for view: "+ viewClassName+ " of session bean: "+ sessionBean.getEJBName());
  }
}

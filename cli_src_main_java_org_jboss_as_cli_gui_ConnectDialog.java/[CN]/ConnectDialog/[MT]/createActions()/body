{
  actionConnect=new AbstractAction(TEXT_CONNECT){
    public void actionPerformed(    ActionEvent ev){
      if (!isEnabled() || !isVisible()) {
        return;
      }
      String controller=null;
      String user=null;
      String password=null;
      if (tfURL.getText().length() > 0) {
        controller=tfURL.getText();
        if (tfUserName.getText().length() > 0) {
          user=tfUserName.getText();
          password=tfPassword.getText();
        }
      }
      try {
        final CommandContext cmdCtx;
        if (user == null) {
          cmdCtx=CommandContextFactory.getInstance().newCommandContext();
        }
 else {
          cmdCtx=CommandContextFactory.getInstance().newCommandContext(user,password.toCharArray());
        }
        cmdCtx.connectController(controller);
        plugin.init(cmdCtx);
      }
 catch (      CliInitializationException e) {
        statusBar.setText(e.getMessage());
        e.printStackTrace();
        return;
      }
catch (      NumberFormatException e) {
        statusBar.setText(e.getMessage());
        e.printStackTrace();
        return;
      }
catch (      CommandLineException e) {
        e.printStackTrace();
        statusBar.setText(e.getMessage());
        return;
      }
      setVisible(false);
      clearStatus();
    }
  }
;
  actionCancel=new AbstractAction(TEXT_CANCEL){
    public void actionPerformed(    ActionEvent ev){
      clearStatus();
      tfURL.setText(DEFAULT_REMOTE);
      tfPassword.setText("");
      tfUserName.setText("");
    }
  }
;
}

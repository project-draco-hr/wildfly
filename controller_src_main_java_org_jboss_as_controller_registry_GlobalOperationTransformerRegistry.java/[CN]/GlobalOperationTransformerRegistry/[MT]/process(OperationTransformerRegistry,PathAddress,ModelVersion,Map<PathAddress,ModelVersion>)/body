{
  final OperationTransformerRegistry current=registryUpdater.get(this,version);
  if (current != null) {
    final Map<String,OperationTransformerRegistry.TransformerEntry> transformers=current.getTransformers();
    for (    final Map.Entry<String,OperationTransformerRegistry.TransformerEntry> transformer : transformers.entrySet()) {
      registry.registerTransformer(address,transformer.getKey(),transformer.getValue().getTransformer());
    }
  }
  final Map<String,SubRegistry> snapshot=subRegistriesUpdater.get(this);
  if (snapshot != null) {
    for (    final Map.Entry<String,SubRegistry> registryEntry : snapshot.entrySet()) {
      final String key=registryEntry.getKey();
      final SubRegistry subRegistry=registryEntry.getValue();
      final Map<String,GlobalOperationTransformerRegistry> children=SubRegistry.childrenUpdater.get(subRegistry);
      for (      final Map.Entry<String,GlobalOperationTransformerRegistry> childEntry : children.entrySet()) {
        final String value=childEntry.getKey();
        final GlobalOperationTransformerRegistry child=childEntry.getValue();
        final PathAddress childAddress=address.append(PathElement.pathElement(key,value));
        final ModelVersion childVersion=versions.containsKey(childAddress) ? versions.get(childAddress) : version;
        child.process(registry,childAddress,childVersion,versions);
      }
    }
  }
}

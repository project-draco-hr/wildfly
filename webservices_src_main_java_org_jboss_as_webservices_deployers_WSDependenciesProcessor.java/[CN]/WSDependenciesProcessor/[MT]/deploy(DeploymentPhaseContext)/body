{
  final DeploymentUnit deploymentUnit=phaseContext.getDeploymentUnit();
  if (isWSDeployment(deploymentUnit)) {
    final ModuleLoader moduleLoader=Module.getSystemModuleLoader();
    deploymentUnit.addToAttachmentList(Attachments.MODULE_DEPENDENCIES,new ModuleDependency(moduleLoader,JAXB_IMPL,false,false,true));
    deploymentUnit.addToAttachmentList(Attachments.MODULE_DEPENDENCIES,new ModuleDependency(moduleLoader,JBOSS_WS_SPI,false,false,true));
    deploymentUnit.addToAttachmentList(Attachments.MODULE_DEPENDENCIES,new ModuleDependency(moduleLoader,JBOSS_WS_COMMON,false,false,true));
    deploymentUnit.addToAttachmentList(Attachments.MODULE_DEPENDENCIES,new ModuleDependency(moduleLoader,JBOSS_WS_CXF_CLIENT,false,false,true));
    deploymentUnit.addToAttachmentList(Attachments.MODULE_DEPENDENCIES,new ModuleDependency(moduleLoader,JBOSS_WS_CXF_FACTORIES,false,false,true));
    deploymentUnit.addToAttachmentList(Attachments.MODULE_DEPENDENCIES,new ModuleDependency(moduleLoader,JBOSS_WS_CXF_SERVER,false,false,true));
    ModuleDependency apacheCxfDep=new ModuleDependency(moduleLoader,APACHE_CXF,false,false,true);
    apacheCxfDep.getImportFilters().add(new FilterSpecification(PathFilters.match("META-INF/cxf"),true));
    apacheCxfDep.getImportFilters().add(new FilterSpecification(PathFilters.match("META-INF/spring.*"),true));
    deploymentUnit.addToAttachmentList(Attachments.MODULE_DEPENDENCIES,apacheCxfDep);
    deploymentUnit.addToAttachmentList(Attachments.MODULE_DEPENDENCIES,new ModuleDependency(moduleLoader,JBOSS_WEBSERVICES,false,false,true));
    deploymentUnit.addToAttachmentList(Attachments.MODULE_DEPENDENCIES,new ModuleDependency(moduleLoader,WSDL4J,false,false,true));
  }
}

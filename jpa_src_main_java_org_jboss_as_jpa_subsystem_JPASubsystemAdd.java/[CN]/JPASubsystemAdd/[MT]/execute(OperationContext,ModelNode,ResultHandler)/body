{
  if (context instanceof BootOperationContext) {
    javax.persistence.spi.PersistenceProviderResolverHolder.setPersistenceProviderResolver(new PersistenceProviderResolverImpl());
    final BootOperationContext updateContext=(BootOperationContext)context;
    updateContext.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_PERSISTENCE_UNIT,new PersistenceUnitParseProcessor());
    updateContext.addDeploymentProcessor(Phase.DEPENDENCIES,Phase.DEPENDENCIES_JPA,new JPADependencyProcessor());
    updateContext.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_PERSISTENCE_ANNOTATION,new JPAAnnotationParseProcessor());
    updateContext.addDeploymentProcessor(Phase.INSTALL,Phase.INSTALL_PERSISTENTUNIT,new PersistenceUnitDeploymentProcessor());
  }
  final ModelNode compensatingOperation=new ModelNode();
  compensatingOperation.get(OP).set(REMOVE);
  compensatingOperation.get(OP_ADDR).set(operation.require(OP_ADDR));
  context.getSubModel().setEmptyObject();
  resultHandler.handleResultComplete();
  return new BasicOperationResult(compensatingOperation);
}

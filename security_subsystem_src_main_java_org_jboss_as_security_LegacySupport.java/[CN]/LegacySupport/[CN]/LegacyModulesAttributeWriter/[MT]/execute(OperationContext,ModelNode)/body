{
  Resource existing=context.readResource(PathAddress.EMPTY_ADDRESS);
  OperationStepHandler addHandler=context.getResourceRegistration().getSubModel(PathAddress.EMPTY_ADDRESS.append(newKeyName)).getOperationHandler(PathAddress.EMPTY_ADDRESS,"add");
  ModelNode value=operation.get(VALUE);
  if (value.isDefined()) {
    List<ModelNode> modules=new ArrayList<ModelNode>(value.asList());
    Collections.reverse(modules);
    for (    ModelNode module : modules) {
      ModelNode addModuleOp=module.clone();
      String code=addModuleOp.get(Constants.CODE).asString();
      PathElement relativePath=PathElement.pathElement(newKeyName,code);
      PathAddress address=PathAddress.pathAddress(operation.get(OP_ADDR)).append(relativePath);
      addModuleOp.get(OP_ADDR).set(address.toModelNode());
      addModuleOp.get(OP).set(ADD);
      context.addStep(new ModelNode(),addModuleOp,addHandler,OperationContext.Stage.MODEL,true);
    }
  }
  for (  Resource.ResourceEntry entry : existing.getChildren(newKeyName)) {
    PathAddress address=PathAddress.pathAddress(operation.get(OP_ADDR)).append(entry.getPathElement());
    ModelNode removeModuleOp=Util.createRemoveOperation(address);
    context.addStep(new ModelNode(),removeModuleOp,new SecurityDomainReloadRemoveHandler(),OperationContext.Stage.MODEL,true);
  }
}

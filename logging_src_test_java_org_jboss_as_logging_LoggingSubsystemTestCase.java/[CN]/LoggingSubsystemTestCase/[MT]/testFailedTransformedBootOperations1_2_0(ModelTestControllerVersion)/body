{
  final ModelVersion modelVersion=ModelVersion.create(1,2,0);
  final KernelServicesBuilder builder=createKernelServicesBuilder(LoggingTestEnvironment.getManagementInstance());
  builder.createLegacyKernelServicesBuilder(LoggingTestEnvironment.getManagementInstance(),controllerVersion,modelVersion).addMavenResourceURL("org.jboss.as:jboss-as-logging:" + controllerVersion.getMavenGavVersion()).addSingleChildFirstClass(LoggingTestEnvironment.class,LoggingTestEnvironment.LoggingInitializer.class);
  KernelServices mainServices=builder.build();
  KernelServices legacyServices=mainServices.getLegacyServices(modelVersion);
  Assert.assertNotNull(legacyServices);
  Assert.assertTrue("main services did not boot",mainServices.isSuccessfulBoot());
  Assert.assertTrue(legacyServices.isSuccessfulBoot());
  final List<ModelNode> ops=builder.parseXmlResource("/expressions.xml");
  ModelTestUtils.checkFailedTransformedBootOperations(mainServices,modelVersion,ops,new FailedOperationTransformationConfig().addFailedAttribute(SUBSYSTEM_ADDRESS,new NewAttributesConfig(LoggingRootResource.ADD_LOGGING_API_DEPENDENCIES)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(FileHandlerResourceDefinition.FILE_HANDLER_PATH),new NewAttributesConfig(FileHandlerResourceDefinition.NAMED_FORMATTER)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(SizeRotatingHandlerResourceDefinition.SIZE_ROTATING_HANDLER_PATH),new NewAttributesConfig(SizeRotatingHandlerResourceDefinition.ROTATE_ON_BOOT)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(PatternFormatterResourceDefinition.PATTERN_FORMATTER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(FileHandlerResourceDefinition.FILE_HANDLER_PATH),new NewAttributesConfig(FileHandlerResourceDefinition.NAMED_FORMATTER)).addFailedAttribute(SUBSYSTEM_ADDRESS.append(CommonAttributes.LOGGING_PROFILE).append(PatternFormatterResourceDefinition.PATTERN_FORMATTER_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE));
}

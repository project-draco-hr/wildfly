{
  final int majorVer=driver.getMajorVersion();
  final int minorVer=driver.getMinorVersion();
  if ((majorVersion != null && majorVersion.intValue() != majorVer) || (minorVersion != null && minorVersion.intValue() != minorVer)) {
    throw MESSAGES.driverVersionMismatch();
  }
  final boolean compliant=driver.jdbcCompliant();
  if (compliant) {
    SUBSYSTEM_DATASOURCES_LOGGER.deployingCompliantJdbcDriver(driver.getClass(),Integer.valueOf(majorVer),Integer.valueOf(minorVer));
  }
 else {
    SUBSYSTEM_DATASOURCES_LOGGER.deployingNonCompliantJdbcDriver(driver.getClass(),Integer.valueOf(majorVer),Integer.valueOf(minorVer));
  }
  InstalledDriver driverMetadata=new InstalledDriver(driverName,moduleId,driver.getClass().getName(),dataSourceClassName,xaDataSourceClassName,majorVer,minorVer,compliant);
  DriverService driverService=new DriverService(driverMetadata,driver);
  target.addService(ServiceName.JBOSS.append("jdbc-driver",driverName.replaceAll("\\.","_")),driverService).addDependency(ConnectorServices.JDBC_DRIVER_REGISTRY_SERVICE,DriverRegistry.class,driverService.getDriverRegistryServiceInjector()).setInitialMode(ServiceController.Mode.ACTIVE).install();
}

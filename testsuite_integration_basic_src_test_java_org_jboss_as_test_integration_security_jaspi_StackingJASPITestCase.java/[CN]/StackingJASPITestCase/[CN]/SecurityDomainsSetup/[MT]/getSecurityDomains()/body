{
  final LoginModuleStack lmStack=new LoginModuleStack.Builder().name("lmStack").loginModules(new SecurityModule.Builder().name("UsersRoles").build()).build();
  final AuthnModule failureAuthnModule=new AuthnModule.Builder().name(FailureAuthModule.class.getName()).flag(Constants.REQUIRED).build();
  final AuthnModule.Builder authnModuleBuilder=new AuthnModule.Builder().name(HTTPBasicServerAuthModule.class.getName()).flag(Constants.REQUIRED).loginModuleStackRef("lmStack");
  final SecurityDomain sd1=new SecurityDomain.Builder().name(SECURITY_DOMAIN1).jaspiAuthn(new JaspiAuthn.Builder().loginModuleStacks(lmStack).authnModules(authnModuleBuilder.build(),new AuthnModule.Builder().name(SuccessAuthModule.class.getName()).flag(Constants.REQUIRED).build()).build()).build();
  final SecurityDomain sd2=new SecurityDomain.Builder().name(SECURITY_DOMAIN2).jaspiAuthn(new JaspiAuthn.Builder().loginModuleStacks(lmStack).authnModules(authnModuleBuilder.build(),failureAuthnModule).build()).build();
  final SecurityDomain sd3=new SecurityDomain.Builder().name(SECURITY_DOMAIN3).jaspiAuthn(new JaspiAuthn.Builder().loginModuleStacks(lmStack).authnModules(authnModuleBuilder.flag(Constants.SUFFICIENT).build(),failureAuthnModule).build()).build();
  return new SecurityDomain[]{sd1,sd2,sd3};
}

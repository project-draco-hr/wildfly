{
  ModelNode subsystemAddress=new ModelNode();
  subsystemAddress.add(ModelDescriptionConstants.SUBSYSTEM,InfinispanExtension.SUBSYSTEM_NAME);
  subsystemAddress.protect();
  ModelNode subsystem=Util.getEmptyOperation(ModelDescriptionConstants.ADD,subsystemAddress);
  for (int i=0; i < reader.getAttributeCount(); i++) {
    ParseUtils.requireNoNamespaceAttribute(reader,i);
    String value=reader.getAttributeValue(i);
    Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case DEFAULT_CACHE_CONTAINER:
{
        CommonAttributes.DEFAULT_CACHE_CONTAINER.parseAndSetParameter(value,subsystem,reader);
        break;
      }
default :
{
      throw ParseUtils.unexpectedAttribute(reader,i);
    }
}
}
if (!subsystem.hasDefined(ModelKeys.DEFAULT_CACHE_CONTAINER)) {
throw ParseUtils.missingRequired(reader,EnumSet.of(Attribute.DEFAULT_CACHE_CONTAINER));
}
operations.add(subsystem);
while (reader.hasNext() && (reader.nextTag() != XMLStreamConstants.END_ELEMENT)) {
Element element=Element.forName(reader.getLocalName());
switch (element) {
case CACHE_CONTAINER:
{
    parseContainer(reader,subsystemAddress,operations);
    break;
  }
default :
{
  throw ParseUtils.unexpectedElement(reader);
}
}
}
}

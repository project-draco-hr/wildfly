{
  ModelNode writeBehindAddress=store.get(ModelDescriptionConstants.OP_ADDR).clone();
  writeBehindAddress.add(ModelKeys.WRITE_BEHIND,ModelKeys.WRITE_BEHIND_NAME);
  writeBehindAddress.protect();
  ModelNode writeBehind=Util.getEmptyOperation(ModelDescriptionConstants.ADD,writeBehindAddress);
  for (int i=0; i < reader.getAttributeCount(); i++) {
    String value=reader.getAttributeValue(i);
    Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case FLUSH_LOCK_TIMEOUT:
{
        StoreWriteBehindResource.FLUSH_LOCK_TIMEOUT.parseAndSetParameter(value,writeBehind,reader);
        break;
      }
case MODIFICATION_QUEUE_SIZE:
{
      StoreWriteBehindResource.MODIFICATION_QUEUE_SIZE.parseAndSetParameter(value,writeBehind,reader);
      break;
    }
case SHUTDOWN_TIMEOUT:
{
    StoreWriteBehindResource.SHUTDOWN_TIMEOUT.parseAndSetParameter(value,writeBehind,reader);
    break;
  }
case THREAD_POOL_SIZE:
{
  StoreWriteBehindResource.THREAD_POOL_SIZE.parseAndSetParameter(value,writeBehind,reader);
  break;
}
default :
throw ParseUtils.unexpectedAttribute(reader,i);
}
}
ParseUtils.requireNoContent(reader);
operations.add(writeBehind);
}

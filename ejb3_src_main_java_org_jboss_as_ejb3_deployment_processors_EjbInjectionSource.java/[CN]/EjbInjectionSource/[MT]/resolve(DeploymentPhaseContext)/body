{
  final Set<ViewDescription> componentsForViewName=getViews(phaseContext);
  if (componentsForViewName.isEmpty()) {
    error="No component found for type '" + typeName + "' with name "+ beanName+ " for binding "+ bindingName;
    return;
  }
  if (componentsForViewName.size() > 1) {
    error="More than 1 component found for type '" + typeName + "' and bean name "+ beanName+ " for binding "+ bindingName;
    return;
  }
  ViewDescription description=componentsForViewName.iterator().next();
  if (description instanceof EJBViewDescription) {
    final EJBViewDescription ejbViewDescription=(EJBViewDescription)description;
    if (ejbViewDescription.getMethodIntf() == MethodIntf.REMOTE || ejbViewDescription.getMethodIntf() == MethodIntf.HOME) {
      final EJBComponentDescription componentDescription=(EJBComponentDescription)description.getComponentDescription();
      final EEModuleDescription moduleDescription=componentDescription.getModuleDescription();
      final String earApplicationName=moduleDescription.getEarApplicationName();
      remoteFactory=new RemoteViewManagedReferenceFactory(earApplicationName,moduleDescription.getModuleName(),moduleDescription.getDistinctName(),componentDescription.getComponentName(),description.getViewClassName(),componentDescription.isStateful());
    }
  }
  ServiceName serviceName=description.getServiceName();
  resolvedViewName=serviceName;
}

{
  if (!resolved) {
synchronized (this) {
      if (!resolved) {
        final Set<ViewDescription> views=getViews();
        final Set<EJBViewDescription> ejbsForViewName=new HashSet<EJBViewDescription>();
        for (        final ViewDescription view : views) {
          if (view instanceof EJBViewDescription) {
            final MethodIntf viewType=((EJBViewDescription)view).getMethodIntf();
            if (viewType == MethodIntf.SERVICE_ENDPOINT || viewType == MethodIntf.MESSAGE_ENDPOINT) {
              continue;
            }
            ejbsForViewName.add((EJBViewDescription)view);
          }
        }
        if (ejbsForViewName.isEmpty()) {
          if (beanName == null) {
            error=EjbLogger.ROOT_LOGGER.ejbNotFound(typeName,bindingName);
          }
 else {
            error=EjbLogger.ROOT_LOGGER.ejbNotFound(typeName,beanName,bindingName);
          }
        }
 else         if (ejbsForViewName.size() > 1) {
          if (beanName == null) {
            error=EjbLogger.ROOT_LOGGER.moreThanOneEjbFound(typeName,bindingName,ejbsForViewName);
          }
 else {
            error=EjbLogger.ROOT_LOGGER.moreThanOneEjbFound(typeName,beanName,bindingName,ejbsForViewName);
          }
        }
 else {
          final EJBViewDescription description=ejbsForViewName.iterator().next();
          final EJBViewDescription ejbViewDescription=(EJBViewDescription)description;
          if (ejbViewDescription.getMethodIntf() == MethodIntf.REMOTE || ejbViewDescription.getMethodIntf() == MethodIntf.HOME) {
            final EJBComponentDescription componentDescription=(EJBComponentDescription)description.getComponentDescription();
            final EEModuleDescription moduleDescription=componentDescription.getModuleDescription();
            final String earApplicationName=moduleDescription.getEarApplicationName();
            final Value<ClassLoader> viewClassLoader=new Value<ClassLoader>(){
              @Override public ClassLoader getValue() throws IllegalStateException, IllegalArgumentException {
                final Module module=deploymentUnit.getAttachment(Attachments.MODULE);
                return module != null ? module.getClassLoader() : null;
              }
            }
;
            remoteFactory=new RemoteViewManagedReferenceFactory(earApplicationName,moduleDescription.getModuleName(),moduleDescription.getDistinctName(),componentDescription.getComponentName(),description.getViewClassName(),componentDescription.isStateful(),viewClassLoader);
          }
          final ServiceName serviceName=description.getServiceName();
          resolvedViewName=serviceName;
        }
        resolved=true;
      }
    }
  }
}

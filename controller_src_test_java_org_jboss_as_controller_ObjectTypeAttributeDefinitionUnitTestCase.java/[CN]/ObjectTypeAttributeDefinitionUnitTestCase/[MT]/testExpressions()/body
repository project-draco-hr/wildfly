{
  AttributeDefinition a=SimpleAttributeDefinitionBuilder.create("a",ModelType.INT).build();
  AttributeDefinition b=SimpleAttributeDefinitionBuilder.create("b",ModelType.BOOLEAN).setAllowExpression(true).build();
  ObjectTypeAttributeDefinition ld=new ObjectTypeAttributeDefinition.Builder("test",a,b).setAllowExpression(true).build();
  ModelNode op=new ModelNode();
  op.get("test","a").set(2);
  op.get("test","b").set("${test:1}");
  ModelNode validated=ld.validateOperation(op);
  Assert.assertEquals(op.get("test","a"),validated.get("a"));
  Assert.assertEquals(new ModelNode().setExpression(op.get("test","b").asString()),validated.get("b"));
  ModelNode model=new ModelNode();
  ld.validateAndSet(op,model);
  Assert.assertEquals(op.get("test","a"),model.get("test","a"));
  Assert.assertEquals(new ModelNode().setExpression(op.get("test","b").asString()),model.get("test","b"));
  op=new ModelNode();
  op.get("test","a").set("${test:1}");
  op.get("test","b").set(true);
  try {
    ld.validateOperation(op);
    org.junit.Assert.fail("Did not reject " + op);
  }
 catch (  OperationFailedException good) {
  }
  try {
    ld.validateAndSet(op,new ModelNode());
    org.junit.Assert.fail("Did not reject " + op);
  }
 catch (  OperationFailedException good) {
  }
}

{
  LOGGER.infoActivatingSubsystem();
  final ServiceTarget serviceTarget=context.getServiceTarget();
  final Activation activationMode=getActivationMode(operation);
  final InitialDeploymentTracker deploymentTracker=new InitialDeploymentTracker(context,activationMode);
  context.addStep(new OperationStepHandler(){
    public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {
      newControllers.add(BundleInstallIntegration.addService(serviceTarget));
      newControllers.add(FrameworkBootstrapService.addService(serviceTarget,resource,verificationHandler));
      newControllers.add(PersistentBundlesIntegration.addService(serviceTarget,deploymentTracker));
      context.completeStep();
    }
  }
,OperationContext.Stage.RUNTIME);
  context.addStep(new AbstractDeploymentChainStep(){
    protected void execute(    DeploymentProcessorTarget processorTarget){
      processorTarget.addDeploymentProcessor(Phase.STRUCTURE,Phase.STRUCTURE_OSGI_MANIFEST,new OSGiManifestStructureProcessor());
      processorTarget.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_OSGI_BUNDLE_INFO,new OSGiBundleInfoParseProcessor());
      processorTarget.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_OSGI_XSERVICE_PROPERTIES,new OSGiXServiceParseProcessor());
      processorTarget.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_OSGI_DEPLOYMENT,new BundleDeploymentProcessor());
      processorTarget.addDeploymentProcessor(Phase.INSTALL,Phase.INSTALL_BUNDLE_CONTEXT_BINDING,new BundleContextBindingProcessor());
      processorTarget.addDeploymentProcessor(Phase.INSTALL,Phase.INSTALL_OSGI_DEPLOYMENT,new BundleInstallProcessor(deploymentTracker));
      processorTarget.addDeploymentProcessor(Phase.INSTALL,Phase.INSTALL_OSGI_MODULE,new ModuleRegisterProcessor());
    }
  }
,OperationContext.Stage.RUNTIME);
  newControllers.add(SubsystemState.addService(serviceTarget,activationMode));
}

{
  Map<Set<ServerIdentity>,ModelNode> result=null;
  if (address.size() > 1) {
    String type=address.getElement(1).getKey();
    if (JVM.equals(type)) {
      result=Collections.emptyMap();
    }
 else     if (DEPLOYMENT.equals(type)) {
      String groupName=address.getElement(0).getValue();
      Set<ServerIdentity> servers=getServersForGroup(groupName,host,localHostName,serverProxies);
      ModelNode serverOp=operation.clone();
      if (ADD.equals(serverOp.get(OP).asString())) {
        ModelNode domainDeployment=domain.get(DEPLOYMENT,address.getElement(1).getValue());
        if (!serverOp.hasDefined(RUNTIME_NAME)) {
          serverOp.get(RUNTIME_NAME).set(domainDeployment.get(RUNTIME_NAME));
        }
        byte[] deploymentBytes=getDeploymentBytes(domainDeployment);
        serverOp.get(CONTENT).add(BYTES,deploymentBytes);
      }
      PathAddress serverAddress=address.subAddress(1);
      serverOp.get(OP_ADDR).set(serverAddress.toModelNode());
      result=Collections.singletonMap(servers,serverOp);
    }
 else     if (SYSTEM_PROPERTY.equals(type)) {
      String affectedGroup=address.getElement(0).getValue();
      result=getServerSystemPropertyOperations(operation,address,Level.SERVER_GROUP,domain,affectedGroup,host);
    }
  }
 else   if (REPLACE_DEPLOYMENT.equals(operation.require(OP).asString())) {
    String groupName=address.getElement(0).getValue();
    Set<ServerIdentity> servers=getServersForGroup(groupName,host,localHostName,serverProxies);
    ModelNode serverOp=operation.clone();
    serverOp.get(OP_ADDR).setEmptyList();
    ModelNode domainDeployment=domain.get(DEPLOYMENT,operation.require(NAME).asString());
    serverOp.get(RUNTIME_NAME).set(domainDeployment.get(RUNTIME_NAME));
    serverOp.get(CONTENT).set(domainDeployment.require(CONTENT));
    result=Collections.singletonMap(servers,serverOp);
  }
  if (result == null) {
    result=Collections.emptyMap();
  }
  return result;
}

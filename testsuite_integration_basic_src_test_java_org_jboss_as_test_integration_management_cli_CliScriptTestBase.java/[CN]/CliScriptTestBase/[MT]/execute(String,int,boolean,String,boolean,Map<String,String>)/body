{
  cliOutput=null;
  final String jbossDist=TestSuiteEnvironment.getSystemProperty("jboss.dist");
  if (jbossDist == null) {
    fail("jboss.dist system property is not set");
  }
  final String modulePath=TestSuiteEnvironment.getSystemProperty("module.path");
  if (modulePath == null) {
    fail("module.path system property is not set");
  }
  final ProcessBuilder builder=new ProcessBuilder();
  builder.redirectErrorStream(true);
  final List<String> command=new ArrayList<String>();
  command.add(TestSuiteEnvironment.getJavaPath());
  TestSuiteEnvironment.getIpv6Args(command);
  command.add("-Djboss.cli.config=" + jbossDist + File.separator+ "bin"+ File.separator+ "jboss-cli.xml");
  if (props != null && !props.isEmpty()) {
    for (    String name : props.keySet()) {
      command.add("-D" + name + "="+ props.get(name));
    }
  }
  command.add("-jar");
  command.add(jbossDist + File.separatorChar + "jboss-modules.jar");
  command.add("-mp");
  command.add(modulePath);
  command.add("org.jboss.as.cli");
  if (connect) {
    command.add("-c");
  }
  command.add("--controller=" + host + ":"+ port);
  command.add(cmd);
  builder.command(command);
  Process cliProc=null;
  try {
    cliProc=builder.start();
  }
 catch (  IOException e) {
    fail("Failed to start CLI process: " + e.getLocalizedMessage());
  }
  final InputStream cliStream=cliProc.getInputStream();
  final StringBuilder cliOutBuf=new StringBuilder();
  boolean wait=true;
  int runningTime=0;
  int exitCode=0;
  do {
    try {
      Thread.sleep(STATUS_CHECK_INTERVAL);
    }
 catch (    InterruptedException e) {
    }
    runningTime+=STATUS_CHECK_INTERVAL;
    readStream(cliOutBuf,cliStream);
    try {
      exitCode=cliProc.exitValue();
      wait=false;
      readStream(cliOutBuf,cliStream);
    }
 catch (    IllegalThreadStateException e) {
    }
    if (wait && runningTime >= CLI_PROC_TIMEOUT) {
      readStream(cliOutBuf,cliStream);
      cliOutput=cliOutBuf.toString();
      cliProc.destroy();
      wait=false;
      if (logFailure) {
        logErrors(cmd,cliProc);
      }
      fail("The cli process has timed out in " + runningTime);
    }
  }
 while (wait);
  cliOutput=cliOutBuf.toString();
  if (logFailure && exitCode != 0) {
    logErrors(cmd,cliProc);
  }
  return exitCode;
}

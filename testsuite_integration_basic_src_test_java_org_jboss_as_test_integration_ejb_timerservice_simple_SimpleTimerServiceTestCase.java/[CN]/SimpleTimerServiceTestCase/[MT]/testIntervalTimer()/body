{
  InitialContext ctx=new InitialContext();
  TimerConfig timerConfig=new TimerConfig();
  timerConfig.setInfo("info");
  AnnotationTimerServiceBean bean1=(AnnotationTimerServiceBean)ctx.lookup("java:module/" + AnnotationTimerServiceBean.class.getSimpleName());
  bean1.resetTimerServiceCalled();
  long ts=(new Date()).getTime() + 100L;
  Timer timer1=bean1.getTimerService().createIntervalTimer(new Date(ts),100,timerConfig);
  Assert.assertTrue(AnnotationTimerServiceBean.awaitTimerCall());
  bean1.resetTimerServiceCalled();
  Assert.assertTrue(AnnotationTimerServiceBean.awaitTimerCall());
  timer1.cancel();
  TimedObjectTimerServiceBean bean2=(TimedObjectTimerServiceBean)ctx.lookup("java:module/" + TimedObjectTimerServiceBean.class.getSimpleName());
  bean2.resetTimerServiceCalled();
  Timer timer2=bean2.getTimerService().createIntervalTimer(100,100,timerConfig);
  Assert.assertTrue(TimedObjectTimerServiceBean.awaitTimerCall());
  bean2.resetTimerServiceCalled();
  Assert.assertTrue(TimedObjectTimerServiceBean.awaitTimerCall());
  timer2.cancel();
}

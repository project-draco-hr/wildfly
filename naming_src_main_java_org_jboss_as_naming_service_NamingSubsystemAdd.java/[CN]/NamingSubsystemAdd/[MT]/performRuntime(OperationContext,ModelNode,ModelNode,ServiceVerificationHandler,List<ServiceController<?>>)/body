{
  log.info("Activating Naming Subsystem");
  NamingContext.initializeNamingManager();
  final NamingStore namingStore=new InMemoryNamingStore(new NamingEventCoordinator());
  final ServiceTarget target=context.getServiceTarget();
  newControllers.add(target.addService(NamingService.SERVICE_NAME,new NamingService(namingStore)).addAliases(ContextNames.JAVA_CONTEXT_SERVICE_NAME).setInitialMode(ServiceController.Mode.ACTIVE).addListener(verificationHandler).install());
  newControllers.add(addGlobalContextFactory(target,"global",verificationHandler));
  newControllers.add(addGlobalContextFactory(target,"jboss",verificationHandler));
  newControllers.add(addContextFactory(target,"app",verificationHandler));
  newControllers.add(addContextFactory(target,"module",verificationHandler));
  newControllers.add(addContextFactory(target,"comp",verificationHandler));
  newControllers.add(InitialContextFactoryService.addService(target,verificationHandler));
  final JndiView jndiView=new JndiView();
  newControllers.add(target.addService(ServiceName.JBOSS.append("naming","jndi","view"),jndiView).addDependency(ServiceBuilder.DependencyType.OPTIONAL,ServiceName.JBOSS.append("mbean","server"),MBeanServer.class,jndiView.getMBeanServerInjector()).addListener(verificationHandler).install());
  if (context.isBooting()) {
    context.addStep(new AbstractDeploymentChainStep(){
      protected void execute(      DeploymentProcessorTarget processorTarget){
        processorTarget.addDeploymentProcessor(Phase.INSTALL,Phase.INSTALL_JNDI_DEPENDENCY_SETUP,new JndiNamingDependencySetupProcessor());
        processorTarget.addDeploymentProcessor(Phase.INSTALL,Phase.INSTALL_JNDI_DEPENDENCIES,new JndiNamingDependencyProcessor());
      }
    }
,OperationContext.Stage.RUNTIME);
  }
}

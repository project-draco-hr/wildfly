{
  ModelNode op;
  op=new ModelNode();
  op.get(OP).set(REMOVE);
  op.get(OP_ADDR).add(SUBSYSTEM,"datasources");
  op.get(OP_ADDR).add("data-source",VAULT_BLOCK);
  managementClient.getControllerClient().execute(new OperationBuilder(op).build());
  op=new ModelNode();
  op.get(OP).set(REMOVE);
  op.get(OP_ADDR).add(SUBSYSTEM,"datasources");
  op.get(OP_ADDR).add("data-source",VAULT_BLOCK_WRONG);
  managementClient.getControllerClient().execute(new OperationBuilder(op).build());
  op=new ModelNode();
  op.get(OP).set(REMOVE);
  op.get(OP_ADDR).add(CORE_SERVICE,VAULT);
  managementClient.getControllerClient().execute(new OperationBuilder(op).build());
  if (originalVault.get("KEYSTORE_URL") != null) {
    op=new ModelNode();
    op.get(OP).set(ADD);
    op.get(OP_ADDR).add(CORE_SERVICE,VAULT);
    ModelNode vaultOption=op.get(VAULT_OPTIONS);
    vaultOption.get("KEYSTORE_URL").set(originalVault.get("KEYSTORE_URL"));
    vaultOption.get("KEYSTORE_PASSWORD").set(originalVault.get("KEYSTORE_PASSWORD"));
    vaultOption.get("KEYSTORE_ALIAS").set(originalVault.get("KEYSTORE_ALIAS"));
    vaultOption.get("SALT").set(originalVault.get("SALT"));
    vaultOption.get("ITERATION_COUNT").set(originalVault.get("ITERATION_COUNT"));
    vaultOption.get("ENC_FILE_DIR").set(originalVault.get("ENC_FILE_DIR"));
    managementClient.getControllerClient().execute(new OperationBuilder(op).build());
  }
  if (keyStoreFile.exists())   keyStoreFile.delete();
  File datFile1=new File(ENC_DAT_FILE);
  if (datFile1.exists())   datFile1.delete();
  File datFile2=new File(SHARED_DAT_FILE);
  if (datFile2.exists())   datFile2.delete();
  File datFile3=new File(VAULT_DAT_FILE);
  if (datFile3.exists())   datFile3.delete();
  executeUpdate(connection,"DROP TABLE TestPeople");
  connection.close();
  server.shutdown();
}

{
  final ModelNode add=createEmptyAddOperation();
  final ModelNode model=context.readModel(PathAddress.EMPTY_ADDRESS);
  if (model.hasDefined(BEAN_VALIDATION_ENABLED)) {
    add.get(BEAN_VALIDATION_ENABLED).set(model.get(BEAN_VALIDATION_ENABLED));
  }
  if (model.hasDefined(ARCHIVE_VALIDATION_ENABLED)) {
    add.get(ARCHIVE_VALIDATION_ENABLED).set(model.get(ARCHIVE_VALIDATION_ENABLED));
  }
  if (model.hasDefined(ARCHIVE_VALIDATION_FAIL_ON_ERROR)) {
    add.get(ARCHIVE_VALIDATION_FAIL_ON_ERROR).set(model.get(ARCHIVE_VALIDATION_FAIL_ON_ERROR));
  }
  if (model.hasDefined(ARCHIVE_VALIDATION_FAIL_ON_WARN)) {
    add.get(ARCHIVE_VALIDATION_FAIL_ON_WARN).set(model.get(ARCHIVE_VALIDATION_FAIL_ON_WARN));
  }
  if (model.hasDefined(CACHED_CONNECTION_MANAGER_DEBUG)) {
    add.get(CACHED_CONNECTION_MANAGER_DEBUG).set(model.get(CACHED_CONNECTION_MANAGER_DEBUG));
  }
  if (model.hasDefined(CACHED_CONNECTION_MANAGER_ERROR)) {
    add.get(CACHED_CONNECTION_MANAGER_ERROR).set(model.get(CACHED_CONNECTION_MANAGER_ERROR));
  }
  final ModelNode result=context.getResult();
  result.add(add);
  if (model.hasDefined(THREAD_POOL)) {
    ModelNode pools=model.get(THREAD_POOL);
    for (    Property poolProp : pools.asPropertyList()) {
      if (poolProp.getName().equals(LONG_RUNNING_THREADS)) {
        addBoundedQueueThreadPool(result,poolProp.getValue(),PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,SUBSYSTEM_NAME),PathElement.pathElement(THREAD_POOL,LONG_RUNNING_THREADS));
      }
 else       if (poolProp.getName().equals(SHORT_RUNNING_THREADS)) {
        addBoundedQueueThreadPool(result,poolProp.getValue(),PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,SUBSYSTEM_NAME),PathElement.pathElement(THREAD_POOL,SHORT_RUNNING_THREADS));
      }
    }
  }
  context.completeStep();
}

{
  final ModelNode distributedWorkManagerOperation=new ModelNode();
  distributedWorkManagerOperation.get(OP).set(ADD);
  final int cnt=reader.getAttributeCount();
  String name=null;
  for (int i=0; i < cnt; i++) {
    final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case NAME:
{
        name=rawAttributeText(reader,JcaDistributedWorkManagerDefinition.DWmParameters.NAME.getAttribute().getXmlName());
        ((SimpleAttributeDefinition)JcaDistributedWorkManagerDefinition.DWmParameters.NAME.getAttribute()).parseAndSetParameter(name,distributedWorkManagerOperation,reader);
        break;
      }
default :
{
      throw unexpectedAttribute(reader,i);
    }
}
}
if (name == null) {
throw ControllerLogger.ROOT_LOGGER.missingRequiredAttributes(new StringBuilder(name),reader.getLocation());
}
final ModelNode distributedWorkManagerAddress=parentAddress.clone();
distributedWorkManagerAddress.add(DISTRIBUTED_WORKMANAGER,name);
distributedWorkManagerAddress.protect();
distributedWorkManagerOperation.get(OP_ADDR).set(distributedWorkManagerAddress);
list.add(distributedWorkManagerOperation);
while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
final Element element=Element.forName(reader.getLocalName());
Namespace readerNS=Namespace.forUri(reader.getNamespaceURI());
switch (element) {
case LONG_RUNNING_THREADS:
{
switch (readerNS) {
case JCA_1_0:
{
        org.jboss.as.threads.Namespace ns=org.jboss.as.threads.Namespace.THREADS_1_0;
        ThreadsParser.getInstance().parseBlockingBoundedQueueThreadPool(reader,readerNS.getUriString(),ns,distributedWorkManagerAddress,list,WORKMANAGER_LONG_RUNNING,name);
        break;
      }
default :
{
      org.jboss.as.threads.Namespace ns=org.jboss.as.threads.Namespace.THREADS_1_1;
      ThreadsParser.getInstance().parseBlockingBoundedQueueThreadPool(reader,readerNS.getUriString(),ns,distributedWorkManagerAddress,list,WORKMANAGER_LONG_RUNNING,name);
    }
}
break;
}
case SHORT_RUNNING_THREADS:
{
switch (readerNS) {
case JCA_1_0:
{
  org.jboss.as.threads.Namespace ns=org.jboss.as.threads.Namespace.THREADS_1_0;
  ThreadsParser.getInstance().parseBlockingBoundedQueueThreadPool(reader,readerNS.getUriString(),ns,distributedWorkManagerAddress,list,WORKMANAGER_SHORT_RUNNING,name);
  break;
}
default :
{
org.jboss.as.threads.Namespace ns=org.jboss.as.threads.Namespace.THREADS_1_1;
ThreadsParser.getInstance().parseBlockingBoundedQueueThreadPool(reader,readerNS.getUriString(),ns,distributedWorkManagerAddress,list,WORKMANAGER_SHORT_RUNNING,name);
break;
}
}
break;
}
case POLICY:
{
switch (readerNS) {
case JCA_2_0:
case JCA_3_0:
{
parsePolicy(reader,distributedWorkManagerOperation);
break;
}
default :
{
throw unexpectedElement(reader);
}
}
break;
}
case SELECTOR:
{
switch (readerNS) {
case JCA_2_0:
case JCA_3_0:
{
parseSelector(reader,distributedWorkManagerOperation);
break;
}
default :
{
throw unexpectedElement(reader);
}
}
break;
}
case TRANSPORT:
{
switch (readerNS) {
case JCA_2_0:
case JCA_3_0:
{
parseTransport(reader,distributedWorkManagerOperation);
break;
}
default :
{
throw unexpectedElement(reader);
}
}
break;
}
default :
throw unexpectedElement(reader);
}
}
}

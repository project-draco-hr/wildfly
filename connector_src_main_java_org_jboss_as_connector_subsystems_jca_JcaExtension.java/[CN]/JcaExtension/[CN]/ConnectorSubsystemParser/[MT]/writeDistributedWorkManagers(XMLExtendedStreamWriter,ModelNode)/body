{
  if (parentNode.hasDefined(DISTRIBUTED_WORKMANAGER) && parentNode.get(DISTRIBUTED_WORKMANAGER).asList().size() != 0) {
    ModelNode channel=null;
    ModelNode stack=null;
    ModelNode timeout=null;
    for (    Property property : parentNode.get(DISTRIBUTED_WORKMANAGER).asPropertyList()) {
      writer.writeStartElement(Element.DISTRIBUTED_WORKMANAGER.getLocalName());
      ((SimpleAttributeDefinition)JcaDistributedWorkManagerDefinition.DWmParameters.NAME.getAttribute()).marshallAsAttribute(property.getValue(),writer);
      for (      Property prop : property.getValue().asPropertyList()) {
        if (WORKMANAGER_LONG_RUNNING.equals(prop.getName()) && prop.getValue().isDefined() && prop.getValue().asPropertyList().size() != 0) {
          ThreadsParser.getInstance().writeBoundedQueueThreadPool(writer,prop.getValue().asProperty(),Element.LONG_RUNNING_THREADS.getLocalName(),false);
        }
        if (WORKMANAGER_SHORT_RUNNING.equals(prop.getName()) && prop.getValue().isDefined() && prop.getValue().asPropertyList().size() != 0) {
          ThreadsParser.getInstance().writeBoundedQueueThreadPool(writer,prop.getValue().asProperty(),Element.SHORT_RUNNING_THREADS.getLocalName(),false);
        }
        if (JcaDistributedWorkManagerDefinition.DWmParameters.POLICY.getAttribute().getName().equals(prop.getName()) && prop.getValue().isDefined()) {
          writer.writeStartElement(Element.POLICY.getLocalName());
          writer.writeAttribute(JcaDistributedWorkManagerDefinition.DWmParameters.NAME.getAttribute().getXmlName(),prop.getValue().asString());
          if (property.getValue().hasDefined(JcaDistributedWorkManagerDefinition.DWmParameters.POLICY_OPTIONS.getAttribute().getName())) {
            for (            Property option : property.getValue().get(JcaDistributedWorkManagerDefinition.DWmParameters.POLICY_OPTIONS.getAttribute().getName()).asPropertyList()) {
              writeProperty(writer,option.getName(),option.getValue().asString(),Element.OPTION.getLocalName());
            }
          }
          writer.writeEndElement();
        }
        if (JcaDistributedWorkManagerDefinition.DWmParameters.SELECTOR.getAttribute().getName().equals(prop.getName()) && prop.getValue().isDefined()) {
          writer.writeStartElement(Element.SELECTOR.getLocalName());
          writer.writeAttribute(JcaDistributedWorkManagerDefinition.DWmParameters.NAME.getAttribute().getXmlName(),prop.getValue().asString());
          if (property.getValue().hasDefined(JcaDistributedWorkManagerDefinition.DWmParameters.SELECTOR_OPTIONS.getAttribute().getName())) {
            for (            Property option : property.getValue().get(JcaDistributedWorkManagerDefinition.DWmParameters.SELECTOR_OPTIONS.getAttribute().getName()).asPropertyList()) {
              writeProperty(writer,option.getName(),option.getValue().asString(),Element.OPTION.getLocalName());
            }
          }
          writer.writeEndElement();
        }
      }
      writer.writeStartElement(Element.TRANSPORT.getLocalName());
      ((SimpleAttributeDefinition)JcaDistributedWorkManagerDefinition.DWmParameters.TRANSPORT_JGROPUS_STACK.getAttribute()).marshallAsAttribute(property.getValue(),writer);
      ((SimpleAttributeDefinition)JcaDistributedWorkManagerDefinition.DWmParameters.TRANSPORT_JGROPUS_CLUSTER.getAttribute()).marshallAsAttribute(property.getValue(),writer);
      ((SimpleAttributeDefinition)JcaDistributedWorkManagerDefinition.DWmParameters.TRANSPORT_REQUEST_TIMEOUT.getAttribute()).marshallAsAttribute(property.getValue(),writer);
      writer.writeEndElement();
      writer.writeEndElement();
    }
  }
}

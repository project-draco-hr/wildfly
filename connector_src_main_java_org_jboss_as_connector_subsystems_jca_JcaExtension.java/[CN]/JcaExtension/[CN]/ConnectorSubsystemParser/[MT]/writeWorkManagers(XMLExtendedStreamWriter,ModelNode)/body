{
  if (parentNode.hasDefined(WORKMANAGER) && parentNode.get(WORKMANAGER).asList().size() != 0) {
    for (    Property property : parentNode.get(WORKMANAGER).asPropertyList()) {
      if ("default".equals(property.getValue().get(NAME).asString())) {
        writer.writeStartElement(Element.DEFAULT_WORKMANAGER.getLocalName());
      }
 else {
        writer.writeStartElement(Element.WORKMANAGER.getLocalName());
        JcaWorkManagerDefinition.WmParameters.NAME.getAttribute().marshallAsAttribute(property.getValue(),writer);
      }
      for (      Property prop : property.getValue().asPropertyList()) {
        if (WORKMANAGER_LONG_RUNNING.equals(prop.getName()) && prop.getValue().isDefined() && prop.getValue().asPropertyList().size() != 0) {
          ThreadsParser.getInstance().writeBoundedQueueThreadPool(writer,prop.getValue().asProperty().getValue(),Element.LONG_RUNNING_THREADS.getLocalName(),false);
        }
        if (WORKMANAGER_SHORT_RUNNING.equals(prop.getName()) && prop.getValue().isDefined() && prop.getValue().asPropertyList().size() != 0) {
          ThreadsParser.getInstance().writeBoundedQueueThreadPool(writer,prop.getValue().asProperty().getValue(),Element.SHORT_RUNNING_THREADS.getLocalName(),false);
        }
      }
      writer.writeEndElement();
    }
  }
}

{
  BatchLogger.LOGGER.debugf("Creating batch environment; %s",classLoader);
  final BatchConfiguration batchConfiguration=batchConfigurationInjector.getValue();
  JobExecutor jobExecutor=jobExecutorInjector.getOptionalValue();
  if (jobExecutor == null) {
    jobExecutor=batchConfiguration.getDefaultJobExecutor();
  }
  JobRepository jobRepository=jobRepositoryInjector.getOptionalValue();
  if (jobRepository == null) {
    jobRepository=batchConfiguration.getDefaultJobRepository();
  }
  final BatchEnvironment batchEnvironment=new WildFlyBatchEnvironment(beanManagerInjector.getOptionalValue(),jobExecutor,transactionManagerInjector.getValue(),jobRepository,jobXmlResolver,controlPoint);
  BatchEnvironmentFactory.getInstance().add(classLoader,batchEnvironment);
  this.batchEnvironment=batchEnvironment;
  suspendControllerInjector.getValue().registerActivity(serverActivity);
  final RequestController requestController=requestControllerInjector.getOptionalValue();
  if (requestController != null) {
    controlPoint=requestController.getControlPoint(deploymentName,"batch-executor-service");
  }
 else {
    controlPoint=null;
  }
}

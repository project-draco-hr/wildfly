{
  SAXParserFactory factory=SAXParserFactory.newInstance();
  factory.setValidating(true);
  factory.setNamespaceAware(true);
  if (beansXml == null) {
    throw new org.jboss.weld.exceptions.IllegalStateException(LOAD_ERROR,"unknown");
  }
  SAXParser parser;
  try {
    parser=factory.newSAXParser();
  }
 catch (  SAXException e) {
    throw new DeploymentUnitProcessingException(e);
  }
catch (  ParserConfigurationException e) {
    throw new DeploymentUnitProcessingException(e);
  }
  InputStream beansXmlInputStream=null;
  try {
    beansXmlInputStream=beansXml.openStream();
    InputSource source=new InputSource(beansXmlInputStream);
    if (source.getByteStream().available() == 0) {
      return EMPTY_BEANS_XML;
    }
    BeansXmlHandler handler=new BeansXmlHandler(beansXml);
    try {
      parser.setProperty("http://java.sun.com/xml/jaxp/properties/schemaLanguage","http://www.w3.org/2001/XMLSchema");
      parser.setProperty("http://java.sun.com/xml/jaxp/properties/schemaSource",loadXsds());
    }
 catch (    SAXNotRecognizedException e) {
    }
catch (    SAXNotSupportedException e) {
    }
    parser.parse(source,handler);
    return handler.createBeansXml();
  }
 catch (  IOException e) {
    throw new DeploymentUnitProcessingException("IOException parsing " + beansXml,e);
  }
catch (  SAXException e) {
    throw new DeploymentUnitProcessingException("SAXException parsing " + beansXml,e);
  }
 finally {
    if (beansXmlInputStream != null) {
      try {
        beansXmlInputStream.close();
      }
 catch (      IOException e) {
      }
    }
  }
}

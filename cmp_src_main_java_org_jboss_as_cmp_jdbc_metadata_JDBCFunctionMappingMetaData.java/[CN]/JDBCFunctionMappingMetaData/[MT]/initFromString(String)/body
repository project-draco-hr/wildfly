{
  ArrayList<String> chunkList=new ArrayList<String>();
  ArrayList<Integer> parameterList=new ArrayList<Integer>();
  if (sql.charAt(0) == '?') {
    chunkList.add("");
  }
  StringBuffer chunk=new StringBuffer();
  StringReader reader=new StringReader(sql);
  try {
    for (int c=reader.read(); c >= 0; c=reader.read()) {
      if (c != '?') {
        chunk.append((char)c);
      }
 else {
        chunkList.add(chunk.toString());
        chunk=new StringBuffer();
        StringBuffer number=new StringBuffer();
        for (int digit=reader.read(); digit >= 0; digit=reader.read()) {
          if (Character.isDigit((char)digit)) {
            number.append((char)digit);
          }
 else {
            if (digit >= 0) {
              chunk.append((char)digit);
            }
            break;
          }
        }
        if (number.length() == 0) {
          throw MESSAGES.invalidParameterInFunction(sql);
        }
        Integer parameter;
        try {
          parameter=new Integer(number.toString());
        }
 catch (        NumberFormatException e) {
          throw MESSAGES.invalidParameterNumberInFunction(number.toString(),sql);
        }
        parameterList.add(parameter);
      }
    }
  }
 catch (  IOException e) {
    throw MESSAGES.errorParsingFunction(sql);
  }
  chunkList.add(chunk.toString());
  sqlChunks=new String[chunkList.size()];
  chunkList.toArray(sqlChunks);
  parameters=new int[parameterList.size()];
  for (int i=0; i < parameters.length; i++) {
    parameters[i]=parameterList.get(i) - 1;
  }
}

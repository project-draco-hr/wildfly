{
  ModelVersion version120=ModelVersion.create(1,2);
  KernelServicesBuilder builder=createKernelServicesBuilder(AdditionalInitialization.MANAGEMENT).setSubsystemXmlResource("empty_subsystem_1_4.xml");
  builder.createLegacyKernelServicesBuilder(null,ModelTestControllerVersion.MASTER,version120).addMavenResourceURL("org.hornetq:hornetq-server:2.3.0.CR1").addMavenResourceURL("org.hornetq:hornetq-jms-server:2.3.0.CR1").addMavenResourceURL("org.hornetq:hornetq-core-client:2.3.0.CR1").addMavenResourceURL("org.hornetq:hornetq-jms-client:2.3.0.CR1").addMavenResourceURL("org.hornetq:hornetq-ra:2.3.0.CR1").configureReverseControllerCheck(null,FIXER_1_1_0).addMavenResourceURL("org.jboss.as:jboss-as-messaging:7.2.0.Final");
  KernelServices mainServices=builder.build();
  KernelServices legacyServices=mainServices.getLegacyServices(version120);
  assertNotNull(legacyServices);
  assertTrue("main services did not boot",mainServices.isSuccessfulBoot());
  assertTrue(legacyServices.isSuccessfulBoot());
  clusteredTo120Test(version120,mainServices,true);
  clusteredTo120Test(version120,mainServices,false);
}

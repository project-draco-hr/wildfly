{
  if (encode) {
    try {
      ModelNode response=new ModelNode();
      response.set(msg);
      ByteArrayOutputStream bout=new ByteArrayOutputStream();
      response.writeBase64(bout);
      byte[] bytes=bout.toByteArray();
      exchange.getResponseHeaders().put(Headers.CONTENT_TYPE,APPLICATION_DMR_ENCODED + "; charset=" + UTF_8);
      exchange.getResponseHeaders().put(Headers.CONTENT_LENGTH,String.valueOf(bytes.length));
      exchange.setResponseCode(errorCode);
      exchange.getResponseSender().send(new String(bytes),IoCallback.END_EXCHANGE);
    }
 catch (    IOException e) {
      sendError(exchange,false,msg);
    }
  }
 else {
    StringWriter stringWriter=new StringWriter();
    final PrintWriter print=new PrintWriter(stringWriter);
    try {
      msg.writeJSONString(print,false);
    }
  finally {
      print.flush();
      stringWriter.flush();
      print.close();
    }
    String msgString=stringWriter.toString();
    byte[] bytes=msgString.getBytes();
    exchange.getResponseHeaders().put(Headers.CONTENT_TYPE,TEXT_PLAIN + "; charset=" + UTF_8);
    exchange.getResponseHeaders().put(Headers.CONTENT_LENGTH,String.valueOf(bytes.length));
    exchange.setResponseCode(errorCode);
    exchange.getResponseSender().send(msgString,IoCallback.END_EXCHANGE);
  }
}

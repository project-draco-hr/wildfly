{
  final AnnotationValue nameValue=annotationInstance.value("name");
  if (nameValue == null || nameValue.asString().isEmpty()) {
    throw MESSAGES.annotationAttributeMissing("@MailSessionDefinition","name");
  }
  MailSessionMetaData metaData=new MailSessionMetaData();
  metaData.setTransportProtocol(asString(annotationInstance,"transportProtocol"));
  metaData.setStoreProtocol(asString(annotationInstance,"storeProtocol"));
  metaData.setHost(asString(annotationInstance,"host"));
  metaData.setUser(asString(annotationInstance,"user"));
  metaData.setPassword(asString(annotationInstance,"password"));
  metaData.setFrom(asString(annotationInstance,"from"));
  metaData.setName(nameValue.asString());
  String jndiName=MailSessionAdd.getJndiName(nameValue.asString());
  for (  String fullProp : asArray(annotationInstance,"properties")) {
    PropertyMetaData p=new PropertyMetaData();
    String[] prop=fullProp.split("=",2);
    p.setName(prop[0]);
    p.setValue(prop[1]);
    metaData.getProperties().add(p);
  }
  SessionProvider provider=SessionProviderFactory.create(metaData);
  final DirectMailSessionInjectionSource source=new DirectMailSessionInjectionSource(jndiName,provider);
  return new BindingConfiguration(jndiName,source);
}

{
  if (view.getMethodIntf() == MethodIntf.REMOTE || view.getMethodIntf() == MethodIntf.HOME) {
    view.getConfigurators().add(new ViewConfigurator(){
      @Override public void configure(      final DeploymentPhaseContext context,      final ComponentConfiguration componentConfiguration,      final ViewDescription description,      final ViewConfiguration configuration) throws DeploymentUnitProcessingException {
        if (Remote.class.isAssignableFrom(configuration.getViewClass())) {
          configuration.addViewInterceptor(EjbExceptionTransformingInterceptorFactories.REMOTE_INSTANCE,InterceptorOrder.View.REMOTE_EXCEPTION_TRANSFORMER);
        }
      }
    }
);
    if (view.getMethodIntf() == MethodIntf.HOME) {
      view.getConfigurators().add(new ViewConfigurator(){
        @Override public void configure(        final DeploymentPhaseContext context,        final ComponentConfiguration componentConfiguration,        final ViewDescription description,        final ViewConfiguration configuration) throws DeploymentUnitProcessingException {
          if (Remote.class.isAssignableFrom(configuration.getViewClass())) {
            final String earApplicationName=componentConfiguration.getComponentDescription().getModuleDescription().getEarApplicationName();
            configuration.setViewInstanceFactory(new RemoteHomeViewInstanceFactory(earApplicationName,componentConfiguration.getModuleName(),componentConfiguration.getComponentDescription().getModuleDescription().getDistinctName(),componentConfiguration.getComponentName()));
          }
        }
      }
);
    }
    view.getConfigurators().add(new EJBRemoteTransactionsViewConfigurator());
  }
}

{
  this.getConfigurators().add(new ComponentConfigurator(){
    @Override public void configure(    DeploymentPhaseContext context,    ComponentDescription description,    ComponentConfiguration componentConfiguration) throws DeploymentUnitProcessingException {
      if (this.hasRemoteView((EJBComponentDescription)description)) {
        componentConfiguration.getCreateDependencies().add(new DependencyConfigurator<EJBComponentCreateService>(){
          @Override public void configureDependency(          ServiceBuilder<?> serviceBuilder,          EJBComponentCreateService ejbComponentCreateService) throws DeploymentUnitProcessingException {
            serviceBuilder.addDependency(EJBRemoteTransactionsRepository.SERVICE_NAME,EJBRemoteTransactionsRepository.class,ejbComponentCreateService.getEJBRemoteTransactionsRepositoryInjector());
          }
        }
);
      }
    }
    /** 
 * Returns true if the passed EJB component description has atleast one remote view
 * @param ejbComponentDescription
 * @return
 */
    private boolean hasRemoteView(    final EJBComponentDescription ejbComponentDescription){
      final Set<ViewDescription> views=ejbComponentDescription.getViews();
      for (      final ViewDescription view : views) {
        if (!(view instanceof EJBViewDescription)) {
          continue;
        }
        final MethodIntf viewType=((EJBViewDescription)view).getMethodIntf();
        if (viewType == MethodIntf.REMOTE || viewType == MethodIntf.HOME) {
          return true;
        }
      }
      return false;
    }
  }
);
}

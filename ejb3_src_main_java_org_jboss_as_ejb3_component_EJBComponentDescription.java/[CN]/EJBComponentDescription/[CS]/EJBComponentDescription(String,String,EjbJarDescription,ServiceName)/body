{
  super(componentName,componentClassName,ejbJarDescription.getEEModuleDescription(),ejbJarDescription.getEEModuleDescription().getOrAddClassByName(componentClassName),deploymentUnitServiceName);
  if (ejbJarDescription.isWar()) {
    setNamingMode(ComponentNamingMode.USE_MODULE);
  }
 else {
    setNamingMode(ComponentNamingMode.CREATE);
  }
  getConfigurators().addFirst(new NamespaceConfigurator());
  getConfigurators().add(new EjbJarConfigurationConfigurator());
  getConfigurators().add(new ComponentConfigurator(){
    @Override public void configure(    DeploymentPhaseContext context,    ComponentDescription description,    ComponentConfiguration configuration) throws DeploymentUnitProcessingException {
      configuration.addComponentInterceptor(new SecurityContextInterceptorFactory(),InterceptorOrder.Component.SECURITY_CONTEXT,true);
    }
  }
);
  this.addDependency(EJBUtilities.SERVICE_NAME,ServiceBuilder.DependencyType.REQUIRED);
  this.addCurrentInvocationContextFactory();
}

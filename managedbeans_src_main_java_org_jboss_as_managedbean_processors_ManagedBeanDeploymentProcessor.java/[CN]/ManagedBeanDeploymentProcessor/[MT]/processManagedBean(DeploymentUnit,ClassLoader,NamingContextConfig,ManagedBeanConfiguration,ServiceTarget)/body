{
  final Class<?> beanClass=managedBeanConfiguration.getType();
  final String managedBeanName=managedBeanConfiguration.getName();
  final List<ResourceInjection<?>> resourceInjections=new ArrayList<ResourceInjection<?>>();
  final List<ManagedBeanInterceptor<?>> interceptors=new ArrayList<ManagedBeanInterceptor<?>>();
  final ManagedBeanService<?> managedBeanService=createManagedBeanService(beanClass,classLoader,managedBeanConfiguration,resourceInjections,interceptors);
  final ServiceName moduleContextServiceName=moduleContext.getContextServiceName();
  final ServiceName managedBeanServiceName=ManagedBeanService.SERVICE_NAME.append(deploymentContext.getName(),managedBeanName);
  final ServiceBuilder<?> serviceBuilder=serviceTarget.addService(managedBeanServiceName,managedBeanService);
  final ServiceName moduleEnvContextServiceName=moduleContextServiceName.append("env");
  final ServiceName managedBeanContextServiceName=moduleEnvContextServiceName.append(managedBeanName);
  final JndiName managedBeanContextJndiName=ContextNames.MODULE_CONTEXT_NAME.append("env").append(managedBeanName);
  for (  ResourceConfiguration resourceConfiguration : managedBeanConfiguration.getResourceConfigurations()) {
    final ResourceInjection<?> resourceInjection=processResource(deploymentContext,moduleContext,resourceConfiguration.getInjectedType(),resourceConfiguration,serviceTarget,serviceBuilder,managedBeanContextServiceName,managedBeanContextJndiName);
    if (resourceInjection != null) {
      resourceInjections.add(resourceInjection);
    }
  }
  for (  InterceptorConfiguration interceptorConfiguration : managedBeanConfiguration.getInterceptorConfigurations()) {
    interceptors.add(processInterceptor(interceptorConfiguration.getInterceptorClass(),deploymentContext,moduleContext,interceptorConfiguration,serviceTarget,serviceBuilder,managedBeanContextServiceName,managedBeanContextJndiName));
  }
  serviceBuilder.install();
  final ContextService actualBeanContext=new ContextService(managedBeanContextJndiName);
  serviceTarget.addService(managedBeanContextServiceName,actualBeanContext).addDependency(moduleEnvContextServiceName,Context.class,actualBeanContext.getParentContextInjector()).install();
  final Reference managedBeanFactoryReference=ManagedBeanObjectFactory.createReference(beanClass,managedBeanServiceName.toString());
  final ResourceBinder<Reference> managedBeanFactoryBinder=new ResourceBinder<Reference>(ContextNames.MODULE_CONTEXT_NAME.append(managedBeanName),Values.immediateValue(managedBeanFactoryReference));
  final ServiceName referenceBinderName=moduleContextServiceName.append(managedBeanName);
  serviceTarget.addService(referenceBinderName,managedBeanFactoryBinder).addDependency(moduleContextServiceName,Context.class,managedBeanFactoryBinder.getContextInjector()).addDependency(managedBeanServiceName).install();
}

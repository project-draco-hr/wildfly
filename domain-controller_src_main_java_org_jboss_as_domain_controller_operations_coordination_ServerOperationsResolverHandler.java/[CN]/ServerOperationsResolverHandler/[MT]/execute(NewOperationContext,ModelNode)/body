{
  if (localResponse.has(FAILURE_DESCRIPTION)) {
    context.getFailureDescription().set(localResponse.get(FAILURE_DESCRIPTION));
  }
 else {
    final ModelNode domainModel=context.getModel();
    ParsedOp.ServerOperationProvider provider=new ParsedOp.ServerOperationProvider(){
      @Override public Map<Set<ServerIdentity>,ModelNode> getServerOperations(      ModelNode domainOp,      PathAddress address){
        return ServerOperationsResolverHandler.this.getServerOperations(domainOp,address,domainModel,domainModel.get(HOST).get(localHostName));
      }
    }
;
    ModelNode localResult=localResponse.get(RESULT);
    localResponse.remove(RESULT);
    ModelNode responseNode=recordResponse ? context.getResult() : localResponse.get(RESULT);
    boolean ignored=(ModelType.STRING == localResult.getType() && IGNORED.equals(localResult.asString()));
    if (ignored) {
      responseNode.set(localResult);
    }
 else {
      Map<Set<ServerIdentity>,ModelNode> serverOps=parsedOp.getServerOps(provider);
      createOverallResult(serverOps,localResult,responseNode);
    }
    System.out.println("ServerOperationResolverHandler responseNode is " + responseNode);
    if (!recordResponse) {
      System.out.println("ServerOperationResolverHandler localResponse is " + localResponse);
    }
  }
  context.completeStep();
}

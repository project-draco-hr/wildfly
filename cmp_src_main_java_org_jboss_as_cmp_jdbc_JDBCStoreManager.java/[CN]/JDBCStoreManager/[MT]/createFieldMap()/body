{
  Map<String,Method> abstractAccessors=getAbstractAccessors();
  List<FieldBridge> fields=entityBridge.getFields();
  Map<String,EntityBridgeInvocationHandler.BridgeInvoker> map=new HashMap<String,EntityBridgeInvocationHandler.BridgeInvoker>(fields.size() * 2);
  for (  FieldBridge field : fields) {
    String fieldName=field.getFieldName();
    String fieldBaseName=Character.toUpperCase(fieldName.charAt(0)) + fieldName.substring(1);
    String getterName="get" + fieldBaseName;
    String setterName="set" + fieldBaseName;
    Method getterMethod=abstractAccessors.get(getterName);
    Method setterMethod=abstractAccessors.get(setterName);
    if (getterMethod != null && setterMethod == null) {
      throw new RuntimeException("Getter was found but no setter was found for field " + fieldName + " in entity "+ entityBridge.getEntityName());
    }
 else     if (getterMethod == null && setterMethod != null) {
      throw new RuntimeException("Setter was found but no getter was found for field " + fieldName + " in entity "+ entityBridge.getEntityName());
    }
 else     if (getterMethod != null && setterMethod != null) {
      map.put(getterMethod.getName(),new EntityBridgeInvocationHandler.FieldGetInvoker(field));
      map.put(setterMethod.getName(),new EntityBridgeInvocationHandler.FieldSetInvoker(field));
      abstractAccessors.remove(getterName);
      abstractAccessors.remove(setterName);
    }
  }
  return Collections.unmodifiableMap(map);
}

{
  final CompositeOperationBuilder operationBuilder=CompositeOperationBuilder.create();
  ModelNode address=Operations.createAddress("subsystem","datasources","data-source","batch-ds");
  ModelNode op=Operations.createAddOperation(address);
  op.get("driver-name").set("h2");
  op.get("jndi-name").set("java:jboss/datasources/batch");
  op.get("connection-url").set("jdbc:h2:batch-test");
  operationBuilder.addStep(op);
  address=Operations.createAddress("subsystem","batch-jberet","jdbc-job-repository","batch-ds");
  op=Operations.createAddOperation(address);
  op.get("data-source").set("batch-ds");
  operationBuilder.addStep(op);
  address=Operations.createAddress("subsystem","batch-jberet","in-memory-job-repository","batch-in-mem");
  operationBuilder.addStep(Operations.createAddOperation(address));
  address=Operations.createAddress("subsystem","batch-jberet","thread-pool","deployment-thread-pool");
  op=Operations.createAddOperation(address);
  op.get("max-threads").set(5L);
  final ModelNode keepAlive=op.get("keepalive-time");
  keepAlive.get("time").set(200L);
  keepAlive.get("unit").set(TimeUnit.MILLISECONDS.toString());
  operationBuilder.addStep(op);
  execute(managementClient.getControllerClient(),operationBuilder.build());
}

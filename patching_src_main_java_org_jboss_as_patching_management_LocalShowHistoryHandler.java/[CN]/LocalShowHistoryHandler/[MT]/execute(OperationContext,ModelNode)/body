{
  context.acquireControllerLock();
  final PatchInfoService service=(PatchInfoService)context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME).getValue();
  try {
    final PatchInfo info=service.getValue();
    final InstalledImage installedImage=service.getStructure().getInstalledImage();
    ModelNode result=new ModelNode();
    result.setEmptyList();
    String cumulativePatchID=info.getCumulativeID();
    if (!BASE.equals(cumulativePatchID)) {
      fillHistory(result,CUMULATIVE,cumulativePatchID,installedImage.getPatchHistoryDir(cumulativePatchID));
    }
    List<String> oneOffPatchIDs=info.getPatchIDs();
    for (    String oneOffPatchID : oneOffPatchIDs) {
      File historyDir=installedImage.getPatchHistoryDir(oneOffPatchID);
      fillHistory(result,ONE_OFF,oneOffPatchID,historyDir);
    }
    context.getResult().set(result);
    context.stepCompleted();
  }
 catch (  Throwable t) {
    t.printStackTrace();
    throw PatchManagementMessages.MESSAGES.failedToShowHistory(t);
  }
}

{
  context.acquireControllerLock();
  final InstallationManager installationManager=(InstallationManager)context.getServiceRegistry(false).getRequiredService(InstallationManagerService.NAME).getValue();
  try {
    final PatchableTarget.TargetInfo info=installationManager.getIdentity().loadTargetInfo();
    final InstalledImage installedImage=info.getDirectoryStructure().getInstalledImage();
    final ModelNode result=new ModelNode();
    result.setEmptyList();
    final String cumulativePatchID=info.getCumulativeID();
    if (!BASE.equals(cumulativePatchID)) {
      fillHistory(result,CUMULATIVE,cumulativePatchID,installedImage.getPatchHistoryDir(cumulativePatchID));
    }
    final List<String> oneOffPatchIDs=info.getPatchIDs();
    for (    String oneOffPatchID : oneOffPatchIDs) {
      File historyDir=installedImage.getPatchHistoryDir(oneOffPatchID);
      fillHistory(result,ONE_OFF,oneOffPatchID,historyDir);
    }
    context.getResult().set(result);
    context.stepCompleted();
  }
 catch (  Throwable t) {
    t.printStackTrace();
    throw PatchManagementMessages.MESSAGES.failedToShowHistory(t);
  }
}

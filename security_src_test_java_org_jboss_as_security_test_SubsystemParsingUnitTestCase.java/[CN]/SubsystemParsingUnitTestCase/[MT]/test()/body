{
  List<ModelNode> operations=parse("subsystem.xml");
  assertNotNull(operations);
  ModelNode node=operations.get(1);
  assertNotNull(node);
  ModelNode address=node.get(OP_ADDR);
  List<Property> properties=address.asPropertyList();
  assertEquals(2,properties.size());
  for (  Property prop : properties) {
    String propName=prop.getName();
    if (!(propName.equals(SUBSYSTEM) || propName.equals(SECURITY_DOMAIN)))     fail("either subsystem or security-domain expected");
    if (propName.equals(SECURITY_DOMAIN)) {
      ModelNode securityDomainValue=prop.getValue();
      String value=securityDomainValue.asString();
      assertEquals("other",value);
    }
  }
  ModelNode auth=node.get("authentication");
  assertNotNull(auth);
  List<ModelNode> domainNodes=auth.asList();
  assertEquals(1,domainNodes.size());
  ModelNode modelNode=domainNodes.get(0);
  ModelNode code=modelNode.get("code");
  assertEquals("org.jboss.security.auth.spi.UsersRolesLoginModule",code.asString());
  ModelNode flag=modelNode.get("flag");
  assertEquals("required",flag.asString());
}

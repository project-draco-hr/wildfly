{
  final ConnectorXmlDescriptor connectorXmlDescriptor=context.getAttachment(ConnectorXmlDescriptor.ATTACHMENT_KEY);
  ResourceAdapters raxmls=null;
  raxmls=raxmlValue.getValue();
  if (raxmls == null)   return;
  log.tracef("processing Raxml");
  Module module=context.getAttachment(ModuleDeploymentProcessor.MODULE_ATTACHMENT_KEY);
  if (module == null)   throw new DeploymentUnitProcessingException("Failed to get module attachment for deployment: " + context.getName());
  try {
    final ClassLoader classLoader=module.getClassLoader();
    final BatchBuilder batchBuilder=context.getBatchBuilder();
    for (    org.jboss.jca.common.api.metadata.resourceadapter.ResourceAdapter raxml : raxmls.getResourceAdapters()) {
      String archive=raxml.getArchive();
      URL deployment=null;
      Set<String> deployments=mdr.getValue().getResourceAdapters();
      for (      String s : deployments) {
        if (s.endsWith(archive) || s.endsWith(archive.substring(0,archive.indexOf(".rar"))))         deployment=new URL(s);
      }
      if (deployment != null) {
        Connector cmd=mdr.getValue().getResourceAdapter(deployment.toExternalForm());
        IronJacamar ijmd=mdr.getValue().getIronJacamar(deployment.toExternalForm());
        File root=mdr.getValue().getRoot(deployment.toExternalForm());
        cmd=(new Merger()).mergeConnectorWithCommonIronJacamar(raxml,cmd);
        String deploymentName=archive.substring(0,archive.indexOf(".rar"));
        AS7RaDeployer raDeployer=new AS7RaDeployer();
        raDeployer.setConfiguration(config.getValue());
        CommonDeployment raxmlDeployment=raDeployer.doDeploy(connectorXmlDescriptor.getUrl(),deploymentName,root,classLoader,cmd,ijmd,raxml);
        ResourceAdapterDeployment dply=new ResourceAdapterDeployment(module.getIdentifier(),raxmlDeployment);
        ResourceAdapterXmlDeploymentService service=new ResourceAdapterXmlDeploymentService(dply);
        batchBuilder.addService(ConnectorServices.RESOURCE_ADAPTER_XML_SERVICE_PREFIX.append(deploymentName),service).addDependency(MdrServices.IRONJACAMAR_MDR,MetadataRepository.class,service.getMdrInjector()).addDependency(ConnectorServices.RESOURCE_ADAPTER_REGISTRY_SERVICE,ResourceAdapterDeploymentRegistry.class,service.getRegistryInjector()).setInitialMode(Mode.ACTIVE);
        registry.getValue().registerResourceAdapterDeployment(dply);
      }
    }
  }
 catch (  Throwable t) {
    throw new DeploymentUnitProcessingException(t);
  }
}

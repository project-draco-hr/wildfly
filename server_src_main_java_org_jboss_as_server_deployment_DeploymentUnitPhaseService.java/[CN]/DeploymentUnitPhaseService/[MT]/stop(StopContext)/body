{
  context.asynchronous();
  final DeploymentUnit deploymentUnitContext=deploymentUnitInjector.getValue();
  final DeployerChains chains=deployerChainsInjector.getValue();
  final List<DeploymentUnitProcessor> list=chains.getChain(phase);
  final ListIterator<DeploymentUnitProcessor> iterator=list.listIterator();
  while (iterator.hasPrevious()) {
    final DeploymentUnitProcessor prev=iterator.previous();
    safeUndeploy(deploymentUnitContext,phase,prev);
  }
  final MultipleRemoveListener<LifecycleContext> listener=MultipleRemoveListener.create(context);
  final ServiceContainer container=context.getController().getServiceContainer();
  for (  ServiceName serviceName : serviceNames) {
    final ServiceController<?> controller=container.getService(serviceName);
    if (controller != null) {
      controller.setMode(ServiceController.Mode.REMOVE);
      controller.addListener(listener);
    }
  }
  listener.done();
}

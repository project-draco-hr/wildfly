{
  if (Arrays.equals(values.userName.toCharArray(),values.password)) {
    return new ErrorState("Username must not match the password",new PromptNewUserState(values));
  }
  for (  char currentChar : values.userName.toCharArray()) {
    if ((Character.isLetter(currentChar) || Character.isDigit(currentChar)) == false) {
      values.userName=null;
      return new ErrorState("Only alpha/numeric usernames accepted.",new PromptNewUserState(values));
    }
  }
  boolean weakUserName=false;
  for (  String current : badUsernames) {
    if (current.equals(values.userName.toLowerCase())) {
      weakUserName=true;
      break;
    }
  }
  if (weakUserName) {
    theConsole.printf("The username '%s' is easy to guess\n",values.userName);
    String temp=theConsole.readLine("Are you sure you want to add user '%s' yes/no? ",values.userName);
    boolean yes=temp != null && "yes".equals(temp.toLowerCase());
    if (yes == false) {
      values.userName=null;
      return new PromptNewUserState(values);
    }
  }
  return new ConfirmNewUser(values);
}

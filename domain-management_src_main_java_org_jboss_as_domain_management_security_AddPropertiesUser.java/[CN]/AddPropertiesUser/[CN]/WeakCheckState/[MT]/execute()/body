{
  if (Arrays.equals(values.userName.toCharArray(),values.password)) {
    if (values.nonInteractive) {
      return new ErrorState("Username must not match the password");
    }
 else {
      return new ErrorState("Username must not match the password",new PromptNewUserState(values));
    }
  }
  for (  char currentChar : values.userName.toCharArray()) {
    if ((Character.isLetter(currentChar) || Character.isDigit(currentChar)) == false) {
      if (values.nonInteractive) {
        return new ErrorState("Only alpha/numeric usernames accepted.");
      }
 else {
        values.userName=null;
        return new ErrorState("Only alpha/numeric usernames accepted.",new PromptNewUserState(values));
      }
    }
  }
  boolean weakUserName=false;
  for (  String current : badUsernames) {
    if (current.equals(values.userName.toLowerCase())) {
      weakUserName=true;
      break;
    }
  }
  State addState=new AddUser(values);
  final State continuingState;
  if (values.nonInteractive) {
    continuingState=addState;
  }
 else {
    String message=String.format("About to add user '%s' for realm '%s'\n",values.userName,values.realm);
    String prompt="Is this correct";
    continuingState=new ConfirmationChoice(message,prompt,addState,new PromptNewUserState(values));
  }
  if (weakUserName && values.nonInteractive == false) {
    String message=String.format("The username '%s' is easy to guess\n",values.userName);
    String prompt=String.format("Are you sure you want to add user '%s'",values.userName);
    State noState=new PromptNewUserState(values);
    return new ConfirmationChoice(message,prompt,continuingState,noState);
  }
  return continuingState;
}

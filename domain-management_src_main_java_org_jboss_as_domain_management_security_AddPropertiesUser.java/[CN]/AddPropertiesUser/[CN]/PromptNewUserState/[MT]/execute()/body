{
  State continuingState=new PromptPasswordState(values);
  if (values.isSilentOrNonInteractive() == false) {
    theConsole.printf(NEW_LINE);
    theConsole.printf(MESSAGES.enterNewUserDetails());
    theConsole.printf(NEW_LINE);
    values.password=null;
    theConsole.printf(MESSAGES.realmPrompt(values.realm));
    String temp=theConsole.readLine(" : ");
    if (temp == null) {
      theConsole.printf(NEW_LINE);
      return null;
    }
    if (temp.length() > 0) {
      values.realm=temp;
    }
    String existingUsername=values.userName;
    String usernamePrompt=existingUsername == null ? MESSAGES.usernamePrompt() : MESSAGES.usernamePrompt(existingUsername);
    theConsole.printf(usernamePrompt);
    temp=theConsole.readLine(" : ");
    if (temp != null && temp.length() > 0) {
      existingUsername=temp;
    }
    if (temp == null || existingUsername == null || existingUsername.length() == 0) {
      return new ErrorState(MESSAGES.noUsernameExiting());
    }
    values.userName=existingUsername;
    if (knownUsers.contains(values.userName)) {
      State duplicateContinuing=values.isSilentOrNonInteractive() ? null : new PromptNewUserState(values);
      if (values.isSilentOrNonInteractive()) {
        continuingState=new ErrorState(MESSAGES.duplicateUser(values.userName),duplicateContinuing,values);
      }
 else {
        String message=MESSAGES.aboutToUpdateUser(values.userName);
        String prompt=MESSAGES.isCorrectPrompt();
        values.existingUser=true;
        continuingState=new ConfirmationChoice(message,prompt,continuingState,duplicateContinuing);
      }
    }
  }
  return continuingState;
}

{
  final ResourceBundle bundle=getResourceBundle(locale);
  final ModelNode root=new ModelNode();
  root.get(DESCRIPTION).set(bundle.getString("server"));
  root.get(HEAD_COMMENT_ALLOWED).set(true);
  root.get(TAIL_COMMENT_ALLOWED).set(true);
  root.get(ATTRIBUTES,NAMESPACES).set(CommonDescriptions.getNamespacePrefixAttribute(locale));
  root.get(ATTRIBUTES,SCHEMA_LOCATIONS).set(CommonDescriptions.getSchemaLocationAttribute(locale));
  root.get(ATTRIBUTES,NAME,DESCRIPTION).set(bundle.getString("server.name"));
  root.get(ATTRIBUTES,NAME,TYPE).set(ModelType.STRING);
  root.get(ATTRIBUTES,NAME,REQUIRED).set(false);
  root.get(ATTRIBUTES,NAME,NILLABLE).set(true);
  root.get(ATTRIBUTES,NAME,MIN_LENGTH).set(1);
  root.get(ATTRIBUTES,MANAGEMENT,DESCRIPTION).set(bundle.getString("server.management"));
  root.get(ATTRIBUTES,MANAGEMENT,TYPE).set(ModelType.OBJECT);
  root.get(ATTRIBUTES,MANAGEMENT,VALUE_TYPE,INTERFACE,TYPE).set(ModelType.STRING);
  root.get(ATTRIBUTES,MANAGEMENT,VALUE_TYPE,INTERFACE,DESCRIPTION).set(bundle.getString("server.management.interface"));
  root.get(ATTRIBUTES,MANAGEMENT,VALUE_TYPE,INTERFACE,REQUIRED).set(false);
  root.get(ATTRIBUTES,MANAGEMENT,VALUE_TYPE,PORT,TYPE).set(ModelType.STRING);
  root.get(ATTRIBUTES,MANAGEMENT,VALUE_TYPE,PORT,DESCRIPTION).set(bundle.getString("server.management.port"));
  root.get(ATTRIBUTES,MANAGEMENT,VALUE_TYPE,PORT,REQUIRED).set(false);
  root.get(ATTRIBUTES,MANAGEMENT,REQUIRED).set(true);
  root.get(ATTRIBUTES,MANAGEMENT,HEAD_COMMENT_ALLOWED).set(true);
  root.get(ATTRIBUTES,MANAGEMENT,TAIL_COMMENT_ALLOWED).set(false);
  root.get(ATTRIBUTES,PROFILE_NAME,DESCRIPTION).set(bundle.getString("server.profile"));
  root.get(ATTRIBUTES,PROFILE_NAME,TYPE).set(ModelType.STRING);
  root.get(ATTRIBUTES,PROFILE_NAME,REQUIRED).set(true);
  root.get(ATTRIBUTES,PROFILE_NAME,MIN_LENGTH).set(1);
  root.get(ATTRIBUTES,PROFILE_NAME,HEAD_COMMENT_ALLOWED).set(true);
  root.get(ATTRIBUTES,PROFILE_NAME,TAIL_COMMENT_ALLOWED).set(true);
  root.get(OPERATIONS);
  root.get(CHILDREN,EXTENSION,DESCRIPTION).set(bundle.getString("server.extension"));
  root.get(CHILDREN,EXTENSION,MIN_OCCURS).set(0);
  root.get(CHILDREN,EXTENSION,MODEL_DESCRIPTION);
  root.get(CHILDREN,PATH,DESCRIPTION).set(bundle.getString("server.path"));
  root.get(CHILDREN,PATH,MIN_OCCURS).set(0);
  root.get(CHILDREN,PATH,MODEL_DESCRIPTION);
  root.get(CHILDREN,SUBSYSTEM,DESCRIPTION).set(bundle.getString("server.subsystem"));
  root.get(CHILDREN,SUBSYSTEM,MIN_OCCURS).set(1);
  root.get(CHILDREN,SUBSYSTEM,MODEL_DESCRIPTION);
  root.get(CHILDREN,INTERFACE,DESCRIPTION).set(bundle.getString("server.interface"));
  root.get(CHILDREN,INTERFACE,MIN_OCCURS).set(0);
  root.get(CHILDREN,INTERFACE,MODEL_DESCRIPTION);
  root.get(CHILDREN,SOCKET_BINDING_GROUP,DESCRIPTION).set(bundle.getString("server.socket-binding"));
  root.get(CHILDREN,SOCKET_BINDING_GROUP,MIN_OCCURS).set(0);
  root.get(CHILDREN,SOCKET_BINDING_GROUP,MODEL_DESCRIPTION);
  root.get(CHILDREN,SYSTEM_PROPERTY,DESCRIPTION).set(bundle.getString("server.system-property"));
  root.get(CHILDREN,SYSTEM_PROPERTY,MIN_OCCURS).set(0);
  root.get(CHILDREN,SYSTEM_PROPERTY,MODEL_DESCRIPTION);
  root.get(CHILDREN,DEPLOYMENT,DESCRIPTION).set(bundle.getString("server.deployment"));
  root.get(CHILDREN,DEPLOYMENT,MIN_OCCURS).set(0);
  root.get(CHILDREN,DEPLOYMENT,MODEL_DESCRIPTION);
  return root;
}

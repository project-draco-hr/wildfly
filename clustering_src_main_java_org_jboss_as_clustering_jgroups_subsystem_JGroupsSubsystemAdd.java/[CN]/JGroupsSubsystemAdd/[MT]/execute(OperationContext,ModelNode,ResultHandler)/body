{
  log.info("Activating JGroups subsystem.");
  populate(operation,context.getSubModel());
  RuntimeOperationContext runtime=context.getRuntimeContext();
  if (runtime != null) {
    RuntimeTask task=new RuntimeTask(){
      @Override public void execute(      RuntimeTaskContext context) throws OperationFailedException {
        ServiceTarget target=context.getServiceTarget();
        target.addService(ProtocolDefaultsService.SERVICE_NAME,new ProtocolDefaultsService()).install();
        String stack=operation.require(ModelKeys.DEFAULT_STACK).asString();
        InjectedValue<ChannelFactory> factory=new InjectedValue<ChannelFactory>();
        ValueService<ChannelFactory> service=new ValueService<ChannelFactory>(factory);
        target.addService(ChannelFactoryService.getServiceName(),service).addDependency(ChannelFactoryService.getServiceName(stack),ChannelFactory.class,factory).install();
      }
    }
;
    runtime.setRuntimeTask(task);
  }
  BasicOperationResult operationResult=new BasicOperationResult(Util.getResourceRemoveOperation(operation.require(ModelDescriptionConstants.OP_ADDR)));
  resultHandler.handleResultComplete();
  return operationResult;
}

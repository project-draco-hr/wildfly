{
  Set joinedAliases=new LinkedHashSet();
  if (!ctermJoinPaths.isEmpty()) {
    for (Iterator iter=ctermJoinPaths.iterator(); iter.hasNext(); ) {
      ASTPath path=(ASTPath)iter.next();
      for (int i=0; i < path.size(); i++) {
        createThetaJoin(path,i,joinedAliases,buf);
      }
    }
  }
  if (!ctermCollectionMemberJoinPaths.isEmpty()) {
    for (Iterator iter=ctermCollectionMemberJoinPaths.entrySet().iterator(); iter.hasNext(); ) {
      Map.Entry entry=(Map.Entry)iter.next();
      String childAlias=(String)entry.getKey();
      ASTPath path=(ASTPath)entry.getValue();
      createThetaJoin(path,path.size() - 1,joinedAliases,childAlias,buf);
      for (int i=0; i < path.size() - 1; i++) {
        createThetaJoin(path,i,joinedAliases,buf);
      }
    }
  }
  if (!ctermLeftJoinPaths.isEmpty()) {
    Set allLeftJoins=new LinkedHashSet();
    for (Iterator iter=ctermLeftJoinPaths.values().iterator(); iter.hasNext(); ) {
      allLeftJoins.addAll((Set)iter.next());
    }
    for (Iterator iter=allLeftJoins.iterator(); iter.hasNext(); ) {
      ASTPath path=(ASTPath)iter.next();
      for (int i=0; i < path.size() - 1; i++) {
        createThetaJoin(path,i,joinedAliases,buf);
      }
    }
  }
}

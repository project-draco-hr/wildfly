{
  StringBuffer buf=(StringBuffer)data;
  final Node child0=node.jjtGetChild(0);
  if (child0 instanceof ASTPath) {
    ASTPath path=(ASTPath)child0;
    if (path.isCMRField()) {
      JDBCCMRFieldBridge cmrField=(JDBCCMRFieldBridge)path.getCMRField();
      if (cmrField.getRelationMetaData().isTableMappingStyle()) {
        existsClause(path,buf,!node.not);
        return buf;
      }
    }
    String alias=aliasManager.getAlias(path.getPath(path.size() - 2));
    JDBCFieldBridge field=(JDBCFieldBridge)path.getField();
    if (field.getJDBCType() == null) {
      existsClause(path,buf,!node.not);
      return buf;
    }
    if (path.fieldList.size() > 2) {
      for (int i=0; i < path.fieldList.size(); ++i) {
        Object pathEl=path.fieldList.get(i);
        if (pathEl instanceof JDBCCMRFieldBridge) {
          addJoinPath(path);
          break;
        }
      }
    }
    buf=SQLUtil.getIsNullClause(node.not,field,alias,buf);
  }
 else   if (child0 instanceof ASTParameter) {
    ASTParameter param=(ASTParameter)child0;
    Class type=getParameterType(param.number);
    QueryParameter queryParam=new QueryParameter(param.number - 1,typeFactory.getJDBCType(type));
    inputParameters.add(queryParam);
    buf.append("? IS ");
    if (node.not) {
      buf.append(SQLUtil.NOT);
    }
    buf.append(SQLUtil.NULL);
  }
 else {
    throw MESSAGES.unexpectedNodeInNull(node);
  }
  return buf;
}

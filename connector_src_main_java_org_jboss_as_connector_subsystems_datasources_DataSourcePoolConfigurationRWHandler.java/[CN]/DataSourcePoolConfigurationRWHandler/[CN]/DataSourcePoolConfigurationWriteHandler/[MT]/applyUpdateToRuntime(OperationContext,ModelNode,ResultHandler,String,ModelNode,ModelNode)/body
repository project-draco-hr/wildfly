{
  if (context.getRuntimeContext() != null) {
    context.getRuntimeContext().setRuntimeTask(new RuntimeTask(){
      public void execute(      RuntimeTaskContext runtimeCtx) throws OperationFailedException {
        final PathAddress address=PathAddress.pathAddress(operation.require(OP_ADDR));
        final String jndiName=address.getLastElement().getValue();
        final ServiceController<?> managementRepoService=runtimeCtx.getServiceRegistry().getService(ConnectorServices.MANAGEMENT_REPOSISTORY_SERVICE);
        if (managementRepoService != null) {
          try {
            final ManagementRepository repository=(ManagementRepository)managementRepoService.getValue();
            if (repository.getDataSources() != null) {
              for (              DataSource ds : repository.getDataSources()) {
                if (jndiName.equalsIgnoreCase(ds.getJndiName())) {
                  if (MAX_POOL_SIZE.equals(parameterName)) {
                    ds.getPoolConfiguration().setMaxSize(newValue.asInt());
                  }
                  if (MIN_POOL_SIZE.equals(parameterName)) {
                    ds.getPoolConfiguration().setMinSize(newValue.asInt());
                  }
                  if (BLOCKING_TIMEOUT_WAIT_MILLIS.equals(parameterName)) {
                    ds.getPoolConfiguration().setBlockingTimeout(newValue.asLong());
                  }
                  if (POOL_USE_STRICT_MIN.equals(parameterName)) {
                    ds.getPoolConfiguration().setStrictMin(newValue.asBoolean());
                  }
                  if (USE_FAST_FAIL.equals(parameterName)) {
                    ds.getPoolConfiguration().setUseFastFail(newValue.asBoolean());
                  }
                }
              }
            }
            modelChanged(context,operation,resultHandler,parameterName,newValue,currentValue);
          }
 catch (          Exception e) {
            throw new OperationFailedException(new ModelNode().set("failed to set attribute" + e.getMessage()));
          }
        }
      }
    }
);
  }
 else {
    resultHandler.handleResultComplete();
  }
  return (IDLETIMEOUTMINUTES.equals(parameterName) || BACKGROUNDVALIDATION.equals(parameterName) || BACKGROUNDVALIDATIONMINUTES.equals(parameterName)|| POOL_PREFILL.equals(parameterName));
}

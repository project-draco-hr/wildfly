{
  Connector cmd=connectorXmlDescriptor != null ? connectorXmlDescriptor.getConnector() : null;
  final Activation activation=ironJacamarXmlDescriptor != null ? ironJacamarXmlDescriptor.getIronJacamar() : null;
  try {
    Annotations annotator=new Annotations();
    if (annotationIndexes != null && annotationIndexes.size() > 0) {
      DEPLOYMENT_CONNECTOR_LOGGER.debugf("ParsedRaDeploymentProcessor: Found %d annotationIndexes",annotationIndexes.size());
      for (      Index index : annotationIndexes.values()) {
        if (index.getKnownClasses() != null && index.getKnownClasses().size() > 0) {
          AnnotationRepository repository=new JandexAnnotationRepositoryImpl(index,classLoader);
          cmd=annotator.merge(cmd,repository,classLoader);
          DEPLOYMENT_CONNECTOR_LOGGER.debugf("ParsedRaDeploymentProcessor: CMD=%s",cmd);
        }
      }
    }
    if (annotationIndexes == null || annotationIndexes.size() == 0)     DEPLOYMENT_CONNECTOR_LOGGER.debugf("ParsedRaDeploymentProcessor: Found 0 annotationIndexes");
    if (cmd != null) {
      cmd.validate();
      cmd=(new Merger()).mergeConnectorWithCommonIronJacamar(activation,cmd);
    }
    TransactionSupportEnum transactionSupport=TransactionSupportEnum.NoTransaction;
    if (cmd != null && cmd.getResourceadapter() != null && cmd.getResourceadapter().getOutboundResourceadapter() != null) {
      transactionSupport=cmd.getResourceadapter().getOutboundResourceadapter().getTransactionSupport();
    }
    if (activation != null && activation.getTransactionSupport() != null) {
      transactionSupport=activation.getTransactionSupport();
    }
    final ServiceName deployerServiceName=ConnectorServices.RESOURCE_ADAPTER_DEPLOYER_SERVICE_PREFIX.append(connectorXmlDescriptor.getDeploymentName());
    final ResourceAdapterDeploymentService raDeploymentService=new ResourceAdapterDeploymentService(connectorXmlDescriptor,cmd,activation,classLoader,deployerServiceName,duServiceName,registration,deploymentResource);
    ServiceBuilder<ResourceAdapterDeployment> builder=Services.addServerExecutorDependency(serviceTarget.addService(deployerServiceName,raDeploymentService),raDeploymentService.getExecutorServiceInjector(),false).addDependency(ConnectorServices.IRONJACAMAR_MDR,AS7MetadataRepository.class,raDeploymentService.getMdrInjector()).addDependency(ConnectorServices.RA_REPOSITORY_SERVICE,ResourceAdapterRepository.class,raDeploymentService.getRaRepositoryInjector()).addDependency(ConnectorServices.MANAGEMENT_REPOSITORY_SERVICE,ManagementRepository.class,raDeploymentService.getManagementRepositoryInjector()).addDependency(ConnectorServices.RESOURCE_ADAPTER_REGISTRY_SERVICE,ResourceAdapterDeploymentRegistry.class,raDeploymentService.getRegistryInjector()).addDependency(ConnectorServices.TRANSACTION_INTEGRATION_SERVICE,TransactionIntegration.class,raDeploymentService.getTxIntegrationInjector()).addDependency(ConnectorServices.CONNECTOR_CONFIG_SERVICE,JcaSubsystemConfiguration.class,raDeploymentService.getConfigInjector()).addDependency(SubjectFactoryService.SERVICE_NAME,SubjectFactory.class,raDeploymentService.getSubjectFactoryInjector()).addDependency(SimpleSecurityManagerService.SERVICE_NAME,ServerSecurityManager.class,raDeploymentService.getServerSecurityManager()).addDependency(ConnectorServices.IDLE_REMOVER_SERVICE).addDependency(ConnectorServices.CONNECTION_VALIDATOR_SERVICE).addDependency(NamingService.SERVICE_NAME);
    if (transactionSupport == null || transactionSupport.equals(TransactionSupportEnum.NoTransaction)) {
      builder.addDependency(ConnectorServices.NON_TX_CCM_SERVICE,CachedConnectionManager.class,raDeploymentService.getCcmInjector());
    }
 else {
      builder.addDependency(ConnectorServices.CCM_SERVICE,CachedConnectionManager.class,raDeploymentService.getCcmInjector());
    }
    return builder;
  }
 catch (  Throwable t) {
    throw new DeploymentUnitProcessingException(t);
  }
}

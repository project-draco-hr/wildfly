{
  final int width=ctx.getTerminalWidth();
  String line=reader.readLine();
  while (line != null) {
    final String next=reader.readLine();
    if (line.length() < width) {
      ctx.printLine(line);
    }
 else {
      int offset=0;
      if (next != null && !next.isEmpty()) {
        int i=0;
        while (i < next.length()) {
          if (!Character.isWhitespace(next.charAt(i))) {
            offset=i;
            break;
          }
          ++i;
        }
      }
 else {
        int i=0;
        while (i < line.length()) {
          if (!Character.isWhitespace(line.charAt(i))) {
            offset=i;
            break;
          }
          ++i;
        }
      }
      final char[] offsetArr;
      if (offset == 0) {
        offsetArr=null;
      }
 else {
        offsetArr=new char[offset];
        Arrays.fill(offsetArr,' ');
      }
      int endLine=width;
      while (endLine >= 0) {
        if (Character.isWhitespace(line.charAt(endLine - 1))) {
          break;
        }
        --endLine;
      }
      if (endLine < 0) {
        endLine=width;
      }
      ctx.printLine(line.substring(0,endLine));
      int lineIndex=endLine;
      while (lineIndex < line.length()) {
        int startLine=lineIndex;
        endLine=Math.min(startLine + width - offset,line.length());
        while (startLine < endLine) {
          if (!Character.isWhitespace(line.charAt(startLine))) {
            break;
          }
          ++startLine;
        }
        if (startLine == endLine) {
          startLine=lineIndex;
        }
        endLine=startLine + width - offset;
        if (endLine > line.length()) {
          endLine=line.length();
        }
 else {
          while (endLine > startLine) {
            if (Character.isWhitespace(line.charAt(endLine - 1))) {
              --endLine;
              break;
            }
            --endLine;
          }
          if (endLine == startLine) {
            endLine=Math.min(startLine + width - offset,line.length());
          }
        }
        lineIndex=endLine;
        if (offsetArr != null) {
          final StringBuilder lineBuf=new StringBuilder();
          lineBuf.append(offsetArr);
          lineBuf.append(line.substring(startLine,endLine));
          ctx.printLine(lineBuf.toString());
        }
 else {
          ctx.printLine(line.substring(startLine,endLine));
        }
      }
    }
    line=next;
  }
}

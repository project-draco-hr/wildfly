{
  final ModelNode subModel=context.getSubModel();
  final ModelNode compensatingOperation=new ModelNode();
  compensatingOperation.get(OP_ADDR).set(operation.require(OP_ADDR));
  compensatingOperation.get(OP).set("set-root-logger");
  compensatingOperation.get(CommonAttributes.LEVEL).set(subModel.get(CommonAttributes.ROOT_LOGGER,CommonAttributes.LEVEL));
  compensatingOperation.get(CommonAttributes.HANDLERS).set(subModel.get(CommonAttributes.ROOT_LOGGER,CommonAttributes.HANDLERS));
  subModel.get(CommonAttributes.ROOT_LOGGER).clear();
  if (context instanceof RuntimeOperationContext) {
    RuntimeOperationContext.class.cast(context).executeRuntimeTask(new RuntimeTask(){
      public void execute(      RuntimeTaskContext context,      ResultHandler resultHandler) throws OperationFailedException {
        final ServiceRegistry registry=context.getServiceRegistry();
        final ServiceController<?> controller=context.getServiceRegistry().getService(LogServices.ROOT_LOGGER);
        if (controller != null) {
          controller.setMode(ServiceController.Mode.REMOVE);
        }
        if (subModel.get(CommonAttributes.ROOT_LOGGER).has(CommonAttributes.HANDLERS)) {
          LogServices.uninstallLoggerHandlers(registry,"",subModel.get(CommonAttributes.ROOT_LOGGER,CommonAttributes.HANDLERS));
        }
        resultHandler.handleResultComplete();
      }
    }
,resultHandler);
  }
 else {
    resultHandler.handleResultComplete();
  }
  return new BasicOperationResult(compensatingOperation);
}

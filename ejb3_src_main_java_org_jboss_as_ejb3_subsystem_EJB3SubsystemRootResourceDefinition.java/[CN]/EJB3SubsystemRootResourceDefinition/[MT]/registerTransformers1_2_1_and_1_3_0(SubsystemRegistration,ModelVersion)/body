{
  final ResourceTransformationDescriptionBuilder builder=TransformationDescriptionBuilder.Factory.createSubsystemInstance();
  builder.getAttributeBuilder().addRename(DEFAULT_SFSB_CACHE,EJB3SubsystemModel.DEFAULT_CLUSTERED_SFSB_CACHE);
  builder.getAttributeBuilder().addRename(DEFAULT_SFSB_PASSIVATION_DISABLED_CACHE,EJB3SubsystemModel.DEFAULT_SFSB_CACHE);
  builder.getAttributeBuilder().setDiscard(new DiscardAttributeChecker.DiscardAttributeValueChecker(new ModelNode(true)),EJB3SubsystemRootResourceDefinition.LOG_EJB_EXCEPTIONS);
  builder.getAttributeBuilder().addRejectCheck(RejectAttributeChecker.DEFINED,EJB3SubsystemRootResourceDefinition.LOG_EJB_EXCEPTIONS);
  builder.getAttributeBuilder().addRejectCheck(RejectAttributeChecker.DEFINED,EJB3SubsystemRootResourceDefinition.DISABLE_DEFAULT_EJB_PERMISSIONS);
  builder.getAttributeBuilder().setDiscard(new DiscardAttributeChecker.DiscardAttributeValueChecker(new ModelNode(false)),EJB3SubsystemRootResourceDefinition.DISABLE_DEFAULT_EJB_PERMISSIONS);
  builder.getAttributeBuilder().setDiscard(new DiscardAttributeChecker.DiscardAttributeValueChecker(new ModelNode(false)),EJB3SubsystemRootResourceDefinition.ALLOW_EJB_NAME_REGEX);
  builder.getAttributeBuilder().addRejectCheck(RejectAttributeChecker.DEFINED,EJB3SubsystemRootResourceDefinition.ALLOW_EJB_NAME_REGEX);
  PassivationStoreResourceDefinition.registerTransformers_1_2_1_and_1_3_0(builder);
  EJB3RemoteResourceDefinition.registerTransformers_1_2_0_and_1_3_0(builder);
  MdbDeliveryGroupResourceDefinition.registerTransformers_1_2_0_and_1_3_0(builder);
  StrictMaxPoolResourceDefinition.registerTransformers_1_2_0_and_1_3_0(builder);
  ApplicationSecurityDomainDefinition.registerTransformers_1_2_0_and_1_3_0(builder);
  IdentityResourceDefinition.registerTransformers_1_2_0_and_1_3_0(builder);
  builder.rejectChildResource(PathElement.pathElement(EJB3SubsystemModel.REMOTING_PROFILE));
  if (version.equals(VERSION_1_2_1)) {
    TimerServiceResourceDefinition.registerTransformers_1_2_0(builder);
  }
 else   if (version.equals(VERSION_1_3_0)) {
    TimerServiceResourceDefinition.registerTransformers_1_3_0(builder);
  }
  TransformationDescription.Tools.register(builder.build(),subsystemRegistration,version);
}

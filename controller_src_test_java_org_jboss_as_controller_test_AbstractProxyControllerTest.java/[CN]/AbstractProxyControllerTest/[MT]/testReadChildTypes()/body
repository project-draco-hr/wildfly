{
  Operation read=createOperation(READ_CHILDREN_TYPES_OPERATION);
  ModelNode result=mainControllerClient.execute(read).get(RESULT);
  assertNotNull(result);
  assertEquals(ModelType.LIST,result.getType());
  List<ModelNode> nodes=result.asList();
  assertEquals(2,nodes.size());
  List<String> typeNames=Arrays.asList(nodes.get(0).asString(),nodes.get(1).asString());
  assertTrue(Arrays.asList("host","profile").containsAll(typeNames));
  read=createOperation(READ_CHILDREN_TYPES_OPERATION,HOST,"hostA");
  assertNotNull(result);
  assertEquals(ModelType.LIST,result.getType());
  nodes=result.asList();
  assertEquals(2,nodes.size());
  typeNames=Arrays.asList(nodes.get(0).asString(),nodes.get(1).asString());
  assertTrue(Arrays.asList("host","profile").containsAll(typeNames));
  read=createOperation(READ_CHILDREN_TYPES_OPERATION,HOST,"hostA","hostchild","hcA");
  result=mainControllerClient.execute(read).get(RESULT);
  assertNotNull(result);
  assertEquals(ModelType.LIST,result.getType());
  nodes=result.asList();
  assertEquals(1,nodes.size());
  assertEquals("child",nodes.get(0).asString());
}

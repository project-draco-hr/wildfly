{
  executor=Executors.newCachedThreadPool();
  container=ServiceContainer.Factory.create("test");
  ServiceTarget target=container.subTarget();
  ControlledProcessState processState=new ControlledProcessState(true);
  ProxyModelControllerService proxyService=new ProxyModelControllerService(processState);
  ServiceBuilder<ModelController> proxyBuilder=target.addService(ServiceName.of("ProxyModelController"),proxyService);
  proxyBuilder.install();
  MainModelControllerService mainService=new MainModelControllerService(processState);
  ServiceBuilder<ModelController> mainBuilder=target.addService(ServiceName.of("MainModelController"),mainService);
  mainBuilder.addDependency(ServiceName.of("ProxyModelController"),ModelController.class,mainService.proxy);
  mainBuilder.install();
  proxyService.awaitStartup(30,TimeUnit.SECONDS);
  mainService.awaitStartup(30,TimeUnit.SECONDS);
  final ModelNode operation=new ModelNode();
  operation.get(OP).set("setup");
  operation.get(OP_ADDR).setEmptyList();
  mainControllerClient=mainService.getValue().createClient(executor);
  mainControllerClient.execute(operation);
  proxiedControllerClient=proxyService.getValue().createClient(executor);
  proxiedControllerClient.execute(operation);
}

{
  super(model,new NullConfigurationPersister(),new DescriptionProvider(){
    @Override public ModelNode getModelDescription(    Locale locale){
      ModelNode node=new ModelNode();
      node.get(DESCRIPTION).set("The root node of the test management API");
      node.get(CHILDREN,HOST,DESCRIPTION).set("A list of hosts");
      node.get(CHILDREN,HOST,MIN_OCCURS).set(1);
      node.get(CHILDREN,HOST,MODEL_DESCRIPTION);
      node.get(CHILDREN,PROFILE,DESCRIPTION).set("A list of profiles");
      node.get(CHILDREN,PROFILE,MODEL_DESCRIPTION);
      return node;
    }
  }
);
  NewStepHandler READ_RESOURCE=(NewStepHandler)GlobalOperationHandlers.READ_RESOURCE;
  NewStepHandler READ_ATTRIBUTE=(NewStepHandler)GlobalOperationHandlers.READ_ATTRIBUTE;
  NewStepHandler READ_RESOURCE_DESCRIPTION=(NewStepHandler)GlobalOperationHandlers.READ_RESOURCE_DESCRIPTION;
  NewStepHandler READ_CHILDREN_NAMES=(NewStepHandler)GlobalOperationHandlers.READ_CHILDREN_NAMES;
  NewStepHandler READ_CHILDREN_TYPES=(NewStepHandler)GlobalOperationHandlers.READ_CHILDREN_TYPES;
  NewStepHandler READ_OPERATION_NAMES=(NewStepHandler)GlobalOperationHandlers.READ_OPERATION_NAMES;
  NewStepHandler READ_OPERATION_DESCRIPTION=(NewStepHandler)GlobalOperationHandlers.READ_OPERATION_DESCRIPTION;
  NewStepHandler WRITE_ATTRIBUTE=(NewStepHandler)GlobalOperationHandlers.WRITE_ATTRIBUTE;
  getRegistry().registerOperationHandler(READ_RESOURCE_OPERATION,READ_RESOURCE,CommonProviders.READ_RESOURCE_PROVIDER,true);
  getRegistry().registerOperationHandler(READ_ATTRIBUTE_OPERATION,READ_ATTRIBUTE,CommonProviders.READ_ATTRIBUTE_PROVIDER,true);
  getRegistry().registerOperationHandler(READ_RESOURCE_DESCRIPTION_OPERATION,READ_RESOURCE_DESCRIPTION,CommonProviders.READ_RESOURCE_DESCRIPTION_PROVIDER,true);
  getRegistry().registerOperationHandler(READ_CHILDREN_NAMES_OPERATION,READ_CHILDREN_NAMES,CommonProviders.READ_CHILDREN_NAMES_PROVIDER,true);
  getRegistry().registerOperationHandler(READ_CHILDREN_TYPES_OPERATION,READ_CHILDREN_TYPES,CommonProviders.READ_CHILDREN_TYPES_PROVIDER,true);
  getRegistry().registerOperationHandler(READ_OPERATION_NAMES_OPERATION,READ_OPERATION_NAMES,CommonProviders.READ_OPERATION_NAMES_PROVIDER,true);
  getRegistry().registerOperationHandler(READ_OPERATION_DESCRIPTION_OPERATION,READ_OPERATION_DESCRIPTION,CommonProviders.READ_OPERATION_PROVIDER,true);
  getRegistry().registerOperationHandler(WRITE_ATTRIBUTE_OPERATION,WRITE_ATTRIBUTE,CommonProviders.WRITE_ATTRIBUTE_PROVIDER,true);
  getRegistry().registerSubModel(PathElement.pathElement("profile","*"),new DescriptionProvider(){
    @Override public ModelNode getModelDescription(    Locale locale){
      ModelNode node=new ModelNode();
      node.get(DESCRIPTION).set("A host child");
      node.get(ATTRIBUTES,NAME,TYPE).set(ModelType.STRING);
      node.get(ATTRIBUTES,NAME,DESCRIPTION).set("The name of the profile");
      node.get(ATTRIBUTES,NAME,REQUIRED).set(true);
      return node;
    }
  }
);
}

{
  ResourceTransformationDescriptionBuilder builder=TransformationDescriptionBuilder.Factory.createSubsystemInstance();
  rejectDefinedCoreMBeansSensitivity(builder);
  builder.setCustomResourceTransformer(new ResourceTransformer(){
    @Override public void transformResource(    ResourceTransformationContext context,    PathAddress address,    Resource resource) throws OperationFailedException {
      ModelNode model=resource.getModel();
      Resource exposeResolvedResource=resource.getChild(PathElement.pathElement(CommonAttributes.EXPOSE_MODEL,CommonAttributes.RESOLVED));
      boolean showModel=false;
      if (exposeResolvedResource != null) {
        showModel=model.isDefined();
      }
      model.get(CommonAttributes.SHOW_MODEL).set(showModel);
      ResourceTransformationContext childContext=context.addTransformedResource(PathAddress.EMPTY_ADDRESS,resource);
      for (      String type : resource.getChildTypes()) {
        if (!type.equals(CommonAttributes.EXPOSE_MODEL)) {
          for (          ResourceEntry child : resource.getChildren(type)) {
            childContext.processChild(child.getPathElement(),child);
          }
        }
      }
    }
  }
);
  builder.rejectChildResource(PathElement.pathElement(CommonAttributes.EXPOSE_MODEL,CommonAttributes.EXPRESSION));
  ResourceTransformationDescriptionBuilder resolvedBuilder=builder.addChildResource(PathElement.pathElement(CommonAttributes.EXPOSE_MODEL,CommonAttributes.RESOLVED));
  resolvedBuilder.getAttributeBuilder().addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,CommonAttributes.DOMAIN_NAME,CommonAttributes.PROPER_PROPERTY_FORMAT).addRejectCheck(new RejectAttributeChecker.DefaultRejectAttributeChecker(){
    @Override public String getRejectionLogMessage(    Map<String,ModelNode> attributes){
      return JmxMessages.MESSAGES.domainNameMustBeJBossAs();
    }
    @Override protected boolean rejectAttribute(    PathAddress address,    String attributeName,    ModelNode attributeValue,    TransformationContext context){
      return attributeValue.isDefined() && !attributeValue.asString().equals("jboss.as");
    }
  }
,CommonAttributes.DOMAIN_NAME).addRejectCheck(new RejectAttributeChecker.DefaultRejectAttributeChecker(){
    @Override public String getRejectionLogMessage(    Map<String,ModelNode> attributes){
      return JmxMessages.MESSAGES.properPropertyFormatMustBeFalse();
    }
    @Override public boolean rejectOperationParameter(    PathAddress address,    String attributeName,    ModelNode attributeValue,    ModelNode operation,    TransformationContext context){
      return super.rejectOperationParameter(address,attributeName,attributeValue,operation,context);
    }
    @Override protected boolean rejectAttribute(    PathAddress address,    String attributeName,    ModelNode attributeValue,    TransformationContext context){
      return !attributeValue.isDefined() || (attributeValue.getType() == ModelType.BOOLEAN && attributeValue.asBoolean());
    }
  }
,CommonAttributes.PROPER_PROPERTY_FORMAT);
  resolvedBuilder.setCustomResourceTransformer(ResourceTransformer.DISCARD);
  resolvedBuilder.addOperationTransformationOverride(ADD).inheritResourceAttributeDefinitions().setCustomOperationTransformer(new ResolvedOperationTransformer(true));
  resolvedBuilder.addOperationTransformationOverride(REMOVE).inheritResourceAttributeDefinitions().setCustomOperationTransformer(new ResolvedOperationTransformer(false));
  resolvedBuilder.addOperationTransformationOverride(UNDEFINE_ATTRIBUTE_OPERATION).inheritResourceAttributeDefinitions().setCustomOperationTransformer(OperationTransformer.DISCARD);
  resolvedBuilder.addOperationTransformationOverride(WRITE_ATTRIBUTE_OPERATION).inheritResourceAttributeDefinitions().setCustomOperationTransformer(OperationTransformer.DISCARD);
  resolvedBuilder.addOperationTransformationOverride(READ_ATTRIBUTE_OPERATION).setCustomOperationTransformer(new OperationTransformer(){
    @Override public TransformedOperation transformOperation(    final TransformationContext context,    final PathAddress address,    final ModelNode operation) throws OperationFailedException {
      return new TransformedOperation(null,new OperationResultTransformer(){
        @Override public ModelNode transformResult(        ModelNode result){
          if (operation.get(NAME).asString().equals(CommonAttributes.DOMAIN_NAME)) {
            result.get(RESULT).set(CommonAttributes.DEFAULT_RESOLVED_DOMAIN);
          }
          result.get(OUTCOME).set(SUCCESS);
          result.get(RESULT);
          return result;
        }
      }
);
    }
  }
);
  builder.addChildResource(RemotingConnectorResource.REMOTE_CONNECTOR_CONFIG_PATH).getAttributeBuilder().addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,RemotingConnectorResource.USE_MANAGEMENT_ENDPOINT);
  registerRejectAuditLogTransformers(builder);
  TransformationDescription.Tools.register(builder.build(),registration,ModelVersion.create(1,0,0));
}

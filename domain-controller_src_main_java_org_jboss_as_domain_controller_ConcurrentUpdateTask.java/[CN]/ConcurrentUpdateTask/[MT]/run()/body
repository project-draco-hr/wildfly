{
  List<Future<?>> futures=new ArrayList<Future<?>>();
  for (  Runnable r : concurrentTasks) {
    futures.add(executorService.submit(r));
  }
  for (int i=0; i < futures.size(); i++) {
    Future<?> future=futures.get(i);
    try {
      future.get();
    }
 catch (    InterruptedException e) {
      DomainDeploymentHandler.logger.errorf("ConcurrentUpdateTask caught InterruptedException waiting for task %s; returning",concurrentTasks.get(i).toString());
      Thread.currentThread().interrupt();
      return;
    }
catch (    ExecutionException e) {
      DomainDeploymentHandler.logger.errorf(e,"ConcurrentUpdateTask caught ExecutionException waiting for task %s",concurrentTasks.get(i).toString());
    }
  }
}

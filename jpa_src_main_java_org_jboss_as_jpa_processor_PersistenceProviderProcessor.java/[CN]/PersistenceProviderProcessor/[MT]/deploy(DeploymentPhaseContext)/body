{
  final DeploymentUnit deploymentUnit=phaseContext.getDeploymentUnit();
  final Module module=deploymentUnit.getAttachment(Attachments.MODULE);
  final ServicesAttachment servicesAttachment=deploymentUnit.getAttachment(Attachments.SERVICES);
  if (module != null && servicesAttachment != null) {
    final ModuleClassLoader classLoader=module.getClassLoader();
    final List<String> providerNames=servicesAttachment.getServiceImplementations(PersistenceProvider.class.getName());
    for (    String providerName : providerNames) {
      try {
        final Class<? extends PersistenceProvider> providerClass=classLoader.loadClass(providerName).asSubclass(PersistenceProvider.class);
        final Constructor<? extends PersistenceProvider> constructor=providerClass.getConstructor();
        final PersistenceProvider provider=constructor.newInstance();
        log.infof("Deploying Persistence Provider %s ",providerClass);
        phaseContext.getServiceTarget().addService(ServiceName.JBOSS.append("persistenceprovider",providerName),new ValueService<PersistenceProvider>(new ImmediateValue<PersistenceProvider>(provider))).setInitialMode(ServiceController.Mode.ACTIVE).install();
      }
 catch (      Exception e) {
        log.warnf("Unable to instantiate persistence provider class \"%s\": %s",providerName,e);
      }
    }
  }
}

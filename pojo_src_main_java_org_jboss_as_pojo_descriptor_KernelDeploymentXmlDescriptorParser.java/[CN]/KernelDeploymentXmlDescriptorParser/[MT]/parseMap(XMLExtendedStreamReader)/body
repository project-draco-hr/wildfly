{
  MapConfig mapConfig=new MapConfig();
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    final Attribute attribute=Attribute.of(reader.getAttributeLocalName(i));
    final String attributeValue=reader.getAttributeValue(i);
switch (attribute) {
case CLASS:
      mapConfig.setType(attributeValue);
    break;
case KEY_ELEMENT:
  mapConfig.setKeyType(attributeValue);
break;
case VALUE_ELEMENT:
mapConfig.setValueType(attributeValue);
break;
default :
throw unexpectedAttribute(reader,i);
}
}
while (reader.hasNext()) {
switch (reader.next()) {
case END_ELEMENT:
return mapConfig;
case START_ELEMENT:
switch (Element.of(reader.getLocalName())) {
case ENTRY:
ValueConfig[] entry=parseEntry(reader);
mapConfig.put(entry[0],entry[1]);
break;
default :
throw unexpectedElement(reader);
}
}
}
throw unexpectedElement(reader);
}

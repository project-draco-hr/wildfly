{
  context.addStep(new AbstractDeploymentChainStep(){
    @Override protected void execute(    final DeploymentProcessorTarget processorTarget){
      processorTarget.addDeploymentProcessor(LoggingExtension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_LOGGING_CONFIG,LoggingDeploymentUnitProcessor.INSTANCE);
    }
  }
,Stage.RUNTIME);
  final Resource resource=context.readResource(PathAddress.EMPTY_ADDRESS);
  final LogContextConfiguration logContextConfiguration=ConfigurationPersistence.getOrCreateConfigurationPersistence().getLogContextConfiguration();
  try {
    if (!resource.hasChild(RootLoggerResourceDefinition.ROOT_LOGGER_PATH)) {
      LoggingLogger.ROOT_LOGGER.tracef("Removing the root logger configuration.");
      logContextConfiguration.removeLoggerConfiguration(CommonAttributes.ROOT_LOGGER_NAME);
    }
    if (resource.hasChild(PathElement.pathElement(CommonAttributes.LOGGER))) {
      final Set<String> loggerNames=resource.getChildrenNames(CommonAttributes.LOGGER);
      final List<String> configuredLoggerNames=logContextConfiguration.getLoggerNames();
      configuredLoggerNames.remove(CommonAttributes.ROOT_LOGGER_NAME);
      configuredLoggerNames.removeAll(loggerNames);
      for (      String name : configuredLoggerNames) {
        LoggingLogger.ROOT_LOGGER.tracef("Removing logger configuration for '%s'",name);
        logContextConfiguration.removeLoggerConfiguration(name);
      }
    }
    final List<String> configuredHandlerNames=logContextConfiguration.getHandlerNames();
    configuredHandlerNames.removeAll(resource.getChildrenNames(CommonAttributes.ASYNC_HANDLER));
    configuredHandlerNames.removeAll(resource.getChildrenNames(CommonAttributes.CONSOLE_HANDLER));
    configuredHandlerNames.removeAll(resource.getChildrenNames(CommonAttributes.CUSTOM_HANDLER));
    configuredHandlerNames.removeAll(resource.getChildrenNames(CommonAttributes.FILE_HANDLER));
    configuredHandlerNames.removeAll(resource.getChildrenNames(CommonAttributes.PERIODIC_ROTATING_FILE_HANDLER));
    configuredHandlerNames.removeAll(resource.getChildrenNames(CommonAttributes.SIZE_ROTATING_FILE_HANDLER));
    for (    String name : configuredHandlerNames) {
      LoggingLogger.ROOT_LOGGER.tracef("Removing handler configuration for '%s'",name);
      logContextConfiguration.removeHandlerConfiguration(name);
    }
    logContextConfiguration.commit();
    LoggingLogger.ROOT_LOGGER.trace("Logging subsystem has been added.");
  }
  finally {
    logContextConfiguration.forget();
  }
}

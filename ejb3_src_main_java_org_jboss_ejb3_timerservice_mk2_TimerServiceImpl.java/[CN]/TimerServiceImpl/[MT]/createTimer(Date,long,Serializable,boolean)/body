{
  if (this.isLifecycleCallbackInvocation() && !this.isSingletonBeanInvocation()) {
    throw new IllegalStateException("Creation of timers is not allowed during lifecycle callback of non-singleton EJBs");
  }
  if (initialExpiration == null) {
    throw new IllegalArgumentException("initial expiration is null");
  }
  if (intervalDuration < 0) {
    throw new IllegalArgumentException("interval duration is negative");
  }
  UUID uuid=UUID.randomUUID();
  TimerImpl timer=new TimerImpl(uuid.toString(),this,initialExpiration,intervalDuration,info,persistent);
  if (persistent) {
    this.persistTimer(timer);
  }
  this.startTimer(timer);
  this.addTimer(timer);
  return timer;
}

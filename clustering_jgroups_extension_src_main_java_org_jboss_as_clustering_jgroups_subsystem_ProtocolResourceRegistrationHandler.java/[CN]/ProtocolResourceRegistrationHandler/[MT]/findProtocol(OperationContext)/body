{
  PathAddress address=context.getCurrentAddress();
  String channelName=address.getElement(address.size() - 2).getValue();
  String protocolName=address.getElement(address.size() - 1).getValue();
  ServiceRegistry registry=context.getServiceRegistry(false);
  ServiceController<?> controller=registry.getService(JGroupsRequirement.CHANNEL.getServiceName(context,channelName));
  if (controller != null) {
    Channel channel=(Channel)controller.getValue();
    if (channel != null) {
      controller=registry.getService(JGroupsRequirement.CHANNEL_SOURCE.getServiceName(context,channelName));
      ChannelFactory factory=(ChannelFactory)controller.getValue();
      if (factory != null) {
        ProtocolStackConfiguration configuration=factory.getProtocolStackConfiguration();
        if (configuration.getTransport().getName().equals(protocolName)) {
          Class<? extends Protocol> protocolClass=configuration.getModuleLoader().loadModule(configuration.getTransport().getModule()).getClassLoader().loadClass(configuration.getTransport().getProtocolClassName()).asSubclass(Protocol.class);
          return channel.getProtocolStack().findProtocol(protocolClass);
        }
        for (        ProtocolConfiguration protocol : configuration.getProtocols()) {
          if (protocol.getName().equals(protocolName)) {
            Class<? extends Protocol> protocolClass=configuration.getModuleLoader().loadModule(protocol.getModule()).getClassLoader().loadClass(protocol.getProtocolClassName()).asSubclass(Protocol.class);
            return channel.getProtocolStack().findProtocol(protocolClass);
          }
        }
      }
    }
  }
  return null;
}

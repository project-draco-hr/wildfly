{
  final int priority=ManagedThreadFactoryResourceDefinition.PRIORITY_AD.resolveModelAttribute(context,model).asInt();
  final ManagedThreadFactoryService service=new ManagedThreadFactoryService(ConcurrentServiceNames.DEFAULT_NAME,priority);
  final ServiceBuilder serviceBuilder=context.getServiceTarget().addService(ConcurrentServiceNames.DEFAULT_MANAGED_THREAD_FACTORY_SERVICE_NAME,service).addDependency(ConcurrentServiceNames.DEFAULT_CONTEXT_SERVICE_SERVICE_NAME,ContextServiceImpl.class,service.getContextServiceInjector()).addListener(verificationHandler);
  newControllers.add(serviceBuilder.install());
  context.addStep(new AbstractDeploymentChainStep(){
    protected void execute(    DeploymentProcessorTarget processorTarget){
      processorTarget.addDeploymentProcessor(EeExtension.SUBSYSTEM_NAME,Phase.PARSE,Phase.PARSE_EE_CONCURRENT_DEFAULT_MANAGED_THREAD_FACTORY,new EEConcurrentDefaultManagedThreadFactoryProcessor());
    }
  }
,OperationContext.Stage.RUNTIME);
}

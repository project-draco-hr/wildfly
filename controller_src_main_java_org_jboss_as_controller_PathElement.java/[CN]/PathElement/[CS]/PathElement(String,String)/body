{
  if (key == null || !VALID_KEY_PATTERN.matcher(key).matches()) {
    throw new IllegalArgumentException("Invalid key specification");
  }
  if (value == null || !VALID_VALUE_PATTERN.matcher(value).matches()) {
    throw new IllegalArgumentException("Invalid value specification");
  }
  this.key=key;
  if (value.equals(WILDCARD_VALUE)) {
    this.value=WILDCARD_VALUE;
    this.multiTarget=true;
  }
 else   if (value.charAt(0) == '[' && value.charAt(value.length() - 1) == ']') {
    this.value=value.substring(1,value.length() - 1);
    this.multiTarget=value.indexOf(',') != -1;
  }
 else {
    this.value=value;
    this.multiTarget=false;
  }
  hashCode=key.hashCode() * 19 + value.hashCode();
}

{
  log.info("Activating Infinispan subsystem.");
  populate(operation,context.getSubModel());
  RuntimeOperationContext runtime=context.getRuntimeContext();
  if (runtime != null) {
    RuntimeTask task=new RuntimeTask(){
      @Override public void execute(      RuntimeTaskContext context) throws OperationFailedException {
        String defaultContainer=operation.require(ModelKeys.DEFAULT_CACHE_CONTAINER).asString();
        InjectedValue<EmbeddedCacheManager> container=new InjectedValue<EmbeddedCacheManager>();
        ValueService<EmbeddedCacheManager> service=new ValueService<EmbeddedCacheManager>(container);
        context.getServiceTarget().addService(EmbeddedCacheManagerService.getServiceName(),service).addDependency(EmbeddedCacheManagerService.getServiceName(defaultContainer),EmbeddedCacheManager.class,container).install();
      }
    }
;
    runtime.setRuntimeTask(task);
  }
 else {
  }
  BasicOperationResult operationResult=new BasicOperationResult(Util.getResourceRemoveOperation(operation.require(ModelDescriptionConstants.OP_ADDR)));
  resultHandler.handleResultComplete();
  return operationResult;
}

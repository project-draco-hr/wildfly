{
  if (jmsAdminOperations != null) {
    jmsAdminOperations.removeJmsQueue("queue/testQueue");
    jmsAdminOperations.close();
  }
  final ModelNode removeResourceNameOp=new ModelNode();
  removeResourceNameOp.get(ClientConstants.OP).set("remove");
  removeResourceNameOp.get(ClientConstants.OP_ADDR).add("system-property","resource.name");
  final ModelNode removeResourceLookupOp=new ModelNode();
  removeResourceLookupOp.get(ClientConstants.OP).set("remove");
  removeResourceLookupOp.get(ClientConstants.OP_ADDR).add("system-property","resource.lookup");
  final ModelNode removeResourceMappedNameOp=new ModelNode();
  removeResourceMappedNameOp.get(ClientConstants.OP).set("remove");
  removeResourceMappedNameOp.get(ClientConstants.OP_ADDR).add("system-property","resource.mappedname");
  final ModelNode removeResourceMappedNameConnectionFactoryOp=new ModelNode();
  removeResourceMappedNameConnectionFactoryOp.get(ClientConstants.OP).set("remove");
  removeResourceMappedNameConnectionFactoryOp.get(ClientConstants.OP_ADDR).add("system-property","resource.mappedname.conncetionfactory");
  final ModelNode disableSubstitutionOp=new ModelNode();
  disableSubstitutionOp.get(OP_ADDR).set(SUBSYSTEM,"ee");
  disableSubstitutionOp.get(OP).set(WRITE_ATTRIBUTE_OPERATION);
  disableSubstitutionOp.get(NAME).set("annotation-property-replacement");
  disableSubstitutionOp.get(VALUE).set(false);
  try {
    applyUpdate(managementClient,removeResourceNameOp);
    applyUpdate(managementClient,removeResourceLookupOp);
    applyUpdate(managementClient,removeResourceMappedNameOp);
    applyUpdate(managementClient,removeResourceMappedNameConnectionFactoryOp);
    applyUpdate(managementClient,disableSubstitutionOp);
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
}

{
  final ModelNode address=new ModelNode();
  address.add(ModelDescriptionConstants.SUBSYSTEM,RESOURCEADAPTER);
  address.protect();
  final ModelNode subsystem=new ModelNode();
  subsystem.get(OP).set(ADD);
  subsystem.get(OP_ADDR).set(address);
  list.add(subsystem);
  ResourceAdapters ras=null;
  try {
    String localName=null;
switch (Namespace.forUri(reader.getNamespaceURI())) {
case RESOURCEADAPTERS_1_0:
{
        localName=reader.getLocalName();
        final Element element=Element.forName(reader.getLocalName());
        log.tracef("%s -> %s",localName,element);
switch (element) {
case SUBSYSTEM:
{
            ResourceAdapterParser parser=new ResourceAdapterParser();
            ras=parser.parse(reader);
            break;
          }
      }
    }
}
}
 catch (Exception e) {
throw new XMLStreamException(e);
}
if (ras != null) {
ModelNode rasNode=subsystem.get(RESOURCEADAPTERS);
for (ResourceAdapter ra : ras.getResourceAdapters()) {
  ModelNode raModel=new ModelNode();
  for (  Entry<String,String> entry : ra.getConfigProperties().entrySet()) {
    raModel.get(CONFIG_PROPERTIES,entry.getKey()).set(entry.getValue());
  }
  raModel.get(ARCHIVE).set(ra.getArchive());
  raModel.get(TRANSACTIONSUPPORT).set(ra.getTransactionSupport().name());
  raModel.get(BOOTSTRAPCONTEXT).set(ra.getBootstrapContext());
  for (  String beanValidationGroup : ra.getBeanValidationGroups()) {
    raModel.get(BEANVALIDATIONGROUPS).add(beanValidationGroup);
  }
  for (  CommonConnDef conDef : ra.getConnectionDefinitions()) {
    raModel.get(CONNECTIONDEFINITIONS).add(createConnectionDefinitionModel(conDef));
  }
  for (  CommonAdminObject adminObject : ra.getAdminObjects()) {
    raModel.get(ADMIN_OBJECTS).add(createAdminObjectModel(adminObject));
  }
  rasNode.add(raModel);
}
}
}

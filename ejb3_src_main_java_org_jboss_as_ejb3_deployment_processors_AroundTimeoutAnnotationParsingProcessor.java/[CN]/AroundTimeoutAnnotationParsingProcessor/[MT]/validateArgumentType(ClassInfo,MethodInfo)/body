{
  final Type[] args=methodInfo.args();
switch (args.length) {
case 0:
    throw MESSAGES.aroundTimeoutMethodExpectedWithInvocationContextParam(methodInfo.name(),classInfo.toString());
case 1:
  if (!InvocationContext.class.getName().equals(args[0].name().toString())) {
    throw MESSAGES.aroundTimeoutMethodExpectedWithInvocationContextParam(methodInfo.name(),classInfo.toString());
  }
break;
default :
throw MESSAGES.aroundTimeoutMethodExpectedWithInvocationContextParam(methodInfo.name(),classInfo.toString());
}
if (!methodInfo.returnType().name().toString().equals(Object.class.getName())) {
throw MESSAGES.aroundTimeoutMethodMustReturnObjectType(methodInfo.name(),classInfo.toString());
}
}

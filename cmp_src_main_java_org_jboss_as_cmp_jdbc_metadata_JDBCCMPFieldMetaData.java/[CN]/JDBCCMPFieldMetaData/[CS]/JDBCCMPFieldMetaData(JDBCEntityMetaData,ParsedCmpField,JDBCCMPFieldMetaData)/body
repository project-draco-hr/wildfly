{
  this.entity=entity;
  this.unknownPkField=defaultValues.isUnknownPkField();
  if (unknownPkField && parsedField.getFieldName() != null) {
    fieldName=parsedField.getFieldName();
  }
 else {
    fieldName=defaultValues.getFieldName();
  }
  if (parsedField.getUnknownPk() == null) {
    fieldType=defaultValues.getFieldType();
  }
 else {
    fieldType=parsedField.getUnknownPk();
  }
  if (parsedField.getColumnName() != null) {
    columnName=parsedField.getColumnName();
  }
 else {
    columnName=defaultValues.getColumnName();
  }
  if (parsedField.getJdbcType() != null) {
    jdbcType=parsedField.getJdbcType();
    sqlType=parsedField.getSqlType();
  }
 else {
    jdbcType=defaultValues.getJDBCType();
    sqlType=defaultValues.getSQLType();
  }
  if (entity.isReadOnly()) {
    readOnly=true;
  }
 else   if (parsedField.getReadOnly() != null) {
    readOnly=parsedField.getReadOnly();
  }
 else {
    readOnly=defaultValues.isReadOnly();
  }
  if (parsedField.getReadTimeOut() != null) {
    readTimeOut=parsedField.getReadTimeOut();
  }
 else {
    readTimeOut=defaultValues.getReadTimeOut();
  }
  this.primaryKeyMember=defaultValues.isPrimaryKeyMember();
  primaryKeyField=defaultValues.getPrimaryKeyField();
  notNull=fieldType.isPrimitive() || primaryKeyMember || (parsedField.getNotNull() != null && parsedField.getNotNull());
  for (  JDBCCMPFieldPropertyMetaData propertyMetaData : propertyOverrides) {
    addProperty(propertyMetaData);
  }
  autoIncrement=parsedField.getAutoIncrement() != null && parsedField.getAutoIncrement();
  if (parsedField.getGenIndex() != null && parsedField.getGenIndex())   genIndex=false;
 else   genIndex=true;
  relationTableField=defaultValues.isRelationTableField();
  checkDirtyAfterGet=readCheckDirtyAfterGet(parsedField,defaultValues.getCheckDirtyAfterGet());
  if (parsedField.getStateFactory() == null)   stateFactory=defaultValues.getStateFactory();
 else   stateFactory=parsedField.getStateFactory();
}

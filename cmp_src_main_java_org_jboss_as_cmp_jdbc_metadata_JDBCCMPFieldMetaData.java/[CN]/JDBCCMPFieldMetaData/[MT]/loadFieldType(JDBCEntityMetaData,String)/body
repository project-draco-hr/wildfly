{
  if (entity.isCMP1x()) {
    try {
      return entity.getEntityClass().getField(fieldName).getType();
    }
 catch (    NoSuchFieldException e) {
      throw new RuntimeException("No field named '" + fieldName + "' found in entity class."+ entity.getEntityClass().getName());
    }
  }
 else {
    String baseName=Character.toUpperCase(fieldName.charAt(0)) + fieldName.substring(1);
    String getName="get" + baseName;
    String setName="set" + baseName;
    Method[] methods=entity.getEntityClass().getMethods();
    for (int i=0; i < methods.length; i++) {
      if (Modifier.isPublic(methods[i].getModifiers()) && Modifier.isAbstract(methods[i].getModifiers())) {
        if (getName.equals(methods[i].getName()) && methods[i].getParameterTypes().length == 0 && !methods[i].getReturnType().equals(Void.TYPE)) {
          return methods[i].getReturnType();
        }
        if (setName.equals(methods[i].getName()) && methods[i].getParameterTypes().length == 1 && methods[i].getReturnType().equals(Void.TYPE)) {
          return methods[i].getParameterTypes()[0];
        }
      }
    }
    throw new RuntimeException("No abstract accessors for field " + "named '" + fieldName + "' found in entity class "+ entity.getEntityClass().getName());
  }
}

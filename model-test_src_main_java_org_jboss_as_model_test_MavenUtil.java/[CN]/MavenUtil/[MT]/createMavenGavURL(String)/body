{
  Artifact artifact=new DefaultArtifact(artifactGav);
  if (artifact.getVersion() == null) {
    throw new IllegalArgumentException("Null version");
  }
  VersionScheme versionScheme=new GenericVersionScheme();
  try {
    versionScheme.parseVersion(artifact.getVersion());
  }
 catch (  InvalidVersionSpecificationException e) {
    throw new IllegalArgumentException(e);
  }
  try {
    versionScheme.parseVersionRange(artifact.getVersion());
    throw new IllegalArgumentException(artifact.getVersion() + " is a version range. A specific version is needed");
  }
 catch (  InvalidVersionSpecificationException expected) {
  }
  RepositorySystemSession session=newRepositorySystemSession();
  ArtifactRequest artifactRequest=new ArtifactRequest();
  artifactRequest.setArtifact(artifact);
  for (  RemoteRepository remoteRepo : remoteRepositories) {
    artifactRequest.addRepository(remoteRepo);
  }
  ArtifactResult artifactResult;
  try {
    artifactResult=REPOSITORY_SYSTEM.resolveArtifact(session,artifactRequest);
  }
 catch (  ArtifactResolutionException e) {
    throw new RuntimeException(e);
  }
  File file=artifactResult.getArtifact().getFile().getAbsoluteFile();
  System.out.println(file);
  return file.toURI().toURL();
}

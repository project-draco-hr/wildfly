{
  final Unmarshaller unmarshaller=getUnmarshaller();
  unmarshaller.start(createByteInput(input));
  byte resultCode=unmarshaller.readByte();
  if (resultCode == (byte)DomainClientProtocol.PARAM_APPLY_UPDATE_RESULT_EXCEPTION) {
    final Throwable exception=unmarshal(unmarshaller,Throwable.class);
    if (resultHandler != null) {
      resultHandler.handleFailure(exception,param);
    }
  }
 else   if (resultCode == (byte)DomainClientProtocol.PARAM_APPLY_SERVER_MODEL_UPDATE_CANCELLED) {
    if (resultHandler != null) {
      resultHandler.handleCancellation(param);
    }
  }
 else   if (resultCode == (byte)DomainClientProtocol.PARAM_APPLY_SERVER_MODEL_UPDATE_TIMED_OUT) {
    if (resultHandler != null) {
      resultHandler.handleTimeout(param);
    }
  }
 else   if (resultCode == (byte)DomainClientProtocol.PARAM_APPLY_SERVER_MODEL_UPDATE_RESULT_RETURN) {
    @SuppressWarnings("unchecked") final R result=(R)unmarshal(unmarshaller,Object.class);
    if (resultHandler != null) {
      resultHandler.handleSuccess(result,param);
    }
  }
 else {
    throw new IOException("Invalid byte token.  Expecting '" + DomainClientProtocol.PARAM_APPLY_SERVER_MODEL_UPDATE_RESULT_RETURN + "' or '"+ DomainClientProtocol.PARAM_APPLY_UPDATE_RESULT_EXCEPTION+ "' received '"+ resultCode+ "'");
  }
  unmarshaller.finish();
  return null;
}

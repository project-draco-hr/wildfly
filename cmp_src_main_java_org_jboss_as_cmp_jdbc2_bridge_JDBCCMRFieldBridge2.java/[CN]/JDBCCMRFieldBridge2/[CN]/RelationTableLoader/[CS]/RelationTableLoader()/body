{
  StringBuffer sql=new StringBuffer();
  sql.append("select ");
  String relatedTable=relatedEntity.getQualifiedTableName();
  String relationTable=metadata.getRelationMetaData().getDefaultTableName();
  relatedEntity.getTable().appendColumnNames((JDBCCMPFieldBridge2[])relatedEntity.getTableFields(),relatedTable,sql);
  sql.append(" from ").append(relatedTable).append(" inner join ").append(relationTable).append(" on ");
  JDBCCMPFieldBridge2[] pkFields=(JDBCCMPFieldBridge2[])relatedEntity.getPrimaryKeyFields();
  for (int i=0; i < pkFields.length; ++i) {
    if (i > 0) {
      sql.append(" and ");
    }
    sql.append(relatedTable).append('.').append(pkFields[i].getColumnName()).append('=').append(relationTable).append('.').append(relatedCMRField.tableKeyFields[i].getColumnName());
  }
  sql.append(" where ");
  for (int i=0; i < tableKeyFields.length; ++i) {
    if (i > 0) {
      sql.append(" and ");
    }
    sql.append(relationTable).append('.').append(tableKeyFields[i].getColumnName()).append("=?");
  }
  loadSql=sql.toString();
  if (log.isTraceEnabled()) {
    log.trace("load sql: " + loadSql);
  }
}

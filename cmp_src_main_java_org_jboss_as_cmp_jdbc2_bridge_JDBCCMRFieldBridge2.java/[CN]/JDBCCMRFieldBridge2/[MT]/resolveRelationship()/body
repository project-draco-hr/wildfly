{
  String relatedEntityName=metadata.getRelatedRole().getEntity().getName();
  Catalog catalog=manager.getCatalog();
  relatedEntity=(JDBCEntityBridge2)catalog.getEntityByEJBName(relatedEntityName);
  if (relatedEntity == null) {
    throw CmpMessages.MESSAGES.relatedEntityNotFound(entity.getEntityName(),getFieldName(),relatedEntityName);
  }
  JDBCCMRFieldBridge2[] cmrFields=(JDBCCMRFieldBridge2[])relatedEntity.getCMRFields();
  for (int i=0; i < cmrFields.length; ++i) {
    JDBCCMRFieldBridge2 cmrField=cmrFields[i];
    if (metadata.getRelatedRole() == cmrField.getMetaData()) {
      relatedCMRField=cmrField;
      break;
    }
  }
  if (relatedCMRField == null) {
    throw CmpMessages.MESSAGES.relatedCmrFieldNotFound(relatedEntityName,entity.getEntityName(),getFieldName() != null ? getFieldName() : "<no-field>",relatedEntityName,metadata.getRelatedRole().getCMRFieldName() != null ? metadata.getRelatedRole().getCMRFieldName() : "<no-field>");
  }
  relatedComponent=relatedEntity.getComponent();
  if (metadata.getRelationMetaData().isTableMappingStyle()) {
    Collection tableKeys=metadata.getKeyFields();
    List keyFieldsList=new ArrayList(tableKeys.size());
    Map pkFieldsToFKFields=new HashMap(tableKeys.size());
    for (Iterator i=tableKeys.iterator(); i.hasNext(); ) {
      JDBCCMPFieldMetaData cmpFieldMetaData=(JDBCCMPFieldMetaData)i.next();
      FieldBridge pkField=entity.getFieldByName(cmpFieldMetaData.getFieldName());
      if (pkField == null) {
        throw CmpMessages.MESSAGES.pkNotFoundForKeyField(cmpFieldMetaData.getFieldName());
      }
      pkFieldsToFKFields.put(pkField,new JDBCCMPFieldBridge2(manager,entity,cmpFieldMetaData,-1));
    }
    JDBCFieldBridge[] pkFields=entity.getPrimaryKeyFields();
    for (int i=0; i < pkFields.length; ++i) {
      Object fkField=pkFieldsToFKFields.get(pkFields[i]);
      if (fkField == null) {
        throw CmpMessages.MESSAGES.primaryKeyNotMapped(pkFields[i].getFieldName());
      }
      keyFieldsList.add(fkField);
    }
    tableKeyFields=(JDBCCMPFieldBridge2[])keyFieldsList.toArray(new JDBCCMPFieldBridge2[keyFieldsList.size()]);
  }
 else {
    initializeForeignKeyFields();
  }
}

{
  final ServiceContainer serviceContainer=this.serviceContainer;
  final BatchBuilder batchBuilder=serviceContainer.batchBuilder();
  final String deploymentPath=deploymentRoot.getPathName();
  try {
    final ServiceName mountServiceName=MOUNT_SERVICE_NAME.append(deploymentPath);
    final VFSMountService vfsMountService=new VFSMountService(deploymentRoot.getPathName(),tempFileProvider,false);
    batchBuilder.addServiceValueIfNotExist(mountServiceName,Values.immediateValue(vfsMountService)).setInitialMode(ServiceController.Mode.ON_DEMAND);
    final ServiceName deploymentServiceName=DeploymentService.DEPLOYMENT_SERVICE_NAME.append(deploymentPath);
    final DeploymentService deploymentService=new DeploymentService();
    batchBuilder.addService(deploymentServiceName,deploymentService).addDependency(mountServiceName).toMethod(DeploymentService.DEPLOYMENT_ROOT_SETTER,Arrays.asList(vfsMountService));
    final ServiceName deploymentServiceProcessorName=DeploymentProcessorService.DEPLOYMENT_PROCESSOR_SERVICE_NAME.append(deploymentPath);
    final DeploymentProcessorService deploymentProcessorService=new DeploymentProcessorService();
    batchBuilder.addService(deploymentServiceProcessorName,deploymentProcessorService).addDependency(deploymentServiceName).toMethod(DeploymentProcessorService.DEPLOYMENT_SERVICE_SETTER,Arrays.asList(deploymentService));
    batchBuilder.install();
  }
 catch (  Throwable t) {
    throw new RuntimeException(t);
  }
}

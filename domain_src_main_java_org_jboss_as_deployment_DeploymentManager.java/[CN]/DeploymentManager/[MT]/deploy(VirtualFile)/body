{
  final ServiceContainer serviceContainer=this.serviceContainer;
  final BatchBuilder batchBuilder=serviceContainer.batchBuilder();
  final String deploymentPath=deploymentRoot.getPathName();
  try {
    final ServiceName mountServiceName=MOUNT_SERVICE_NAME.append(deploymentPath);
    final VFSMountService vfsMountService=new VFSMountService(deploymentRoot.getPathName(),tempFileProvider,false);
    batchBuilder.addService(mountServiceName,vfsMountService);
    final ServiceName deploymentChainServiceName=determineDeploymentChain();
    final ServiceName deploymentModuleLoaderServiceName=determineDeploymentModuleLoader();
    final ServiceName deploymentServiceName=DeploymentService.SERVICE_NAME.append(deploymentPath);
    final DeploymentService deploymentService=new DeploymentService(deploymentPath);
    final BatchServiceBuilder<?> deploymentServiceBuilder=batchBuilder.addService(deploymentServiceName,deploymentService);
    deploymentServiceBuilder.addDependency(mountServiceName).toMethod(DeploymentService.DEPLOYMENT_ROOT_SETTER,Collections.singletonList(Values.immediateValue(deploymentRoot)));
    deploymentServiceBuilder.addDependency(deploymentChainServiceName).toMethod(DeploymentService.DEPLOYMENT_CHAIN_SETTER,Collections.singletonList(Values.injectedValue()));
    deploymentServiceBuilder.addDependency(deploymentModuleLoaderServiceName).toMethod(DeploymentService.DEPLOYMENT_MODULE_LOADER_SETTER,Collections.singletonList(Values.injectedValue()));
    batchBuilder.install();
  }
 catch (  Throwable t) {
    throw new DeploymentException(t);
  }
}

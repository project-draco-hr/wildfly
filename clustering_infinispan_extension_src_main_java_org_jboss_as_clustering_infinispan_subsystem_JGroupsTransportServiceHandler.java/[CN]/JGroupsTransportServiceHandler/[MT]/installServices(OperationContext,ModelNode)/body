{
  String name=context.getCurrentAddress().getParent().getLastElement().getValue();
  ServiceTarget target=context.getServiceTarget();
  String channel=ModelNodes.asString(CHANNEL.getDefinition().resolveModelAttribute(context,model),ChannelServiceNameFactory.DEFAULT_CHANNEL);
  new JGroupsTransportBuilder(name).configure(context,model).build(target).install();
  new SiteBuilder(name).configure(context,model).build(target).install();
  new BinderServiceBuilder<>(JGroupsBindingFactory.createChannelBinding(name),ChannelServiceName.CHANNEL.getServiceName(name),Channel.class).build(target).install();
  new ChannelBuilder(name).build(target).install();
  new ChannelConnectorBuilder(name).build(target).install();
  new AliasServiceBuilder<>(ChannelServiceName.FACTORY.getServiceName(name),ProtocolStackServiceName.CHANNEL_FACTORY.getServiceName(channel),ChannelFactory.class).build(target).install();
  for (  GroupAliasBuilderProvider provider : ServiceLoader.load(GroupAliasBuilderProvider.class,GroupAliasBuilderProvider.class.getClassLoader())) {
    for (    Builder<?> builder : provider.getBuilders(name,channel)) {
      builder.build(target).install();
    }
  }
}

{
  KernelServices kernelServices=createKernelServices();
  ModelNode content=getByteContent(1,2,3,4,5);
  ModelNode op=createAddOperation(kernelServices,"Test1",content);
  ModelTestUtils.checkOutcome(kernelServices.executeOperation(op));
  ModelNode originalHash=checkSingleDeployment(kernelServices,"Test1",false);
  op=Util.createOperation(DeploymentFullReplaceHandler.OPERATION_NAME,PathAddress.EMPTY_ADDRESS);
  op.get(NAME).set("Test1");
  op.get(CONTENT).add(getByteContent(6,7,8,9,10));
  ModelTestUtils.checkOutcome(kernelServices.executeOperation(op));
  ModelNode newHash=checkSingleDeployment(kernelServices,"Test1",false);
  Assert.assertFalse(originalHash.equals(newHash));
  op=op.clone();
  op.get(CONTENT).clear();
  ModelNode hashContent=new ModelNode();
  hashContent.get(HASH).set(newHash);
  op.get(CONTENT).add(hashContent);
  ModelTestUtils.checkOutcome(kernelServices.executeOperation(op));
  Assert.assertEquals(newHash,checkSingleDeployment(kernelServices,"Test1",false));
  op=op.clone();
  op.get(CONTENT).clear();
  op.get(CONTENT).add(getFileUrl("Test1",1,2,3,4,5));
  ModelTestUtils.checkOutcome(kernelServices.executeOperation(op));
  Assert.assertEquals(originalHash,checkSingleDeployment(kernelServices,"Test1",false));
  ModelTestUtils.checkOutcome(kernelServices.executeOperation(Util.createOperation(DeploymentDeployHandler.OPERATION_NAME,getPathAddress("Test1"))));
  Assert.assertEquals(originalHash,checkSingleDeployment(kernelServices,"Test1",true));
  op=op.clone();
  op.get(CONTENT).clear();
  op.get(CONTENT).add(getInputStreamIndexContent());
  op.get(RUNTIME_NAME).set("number1");
  ModelTestUtils.checkOutcome(kernelServices.executeOperation(op,new ByteArrayInputStream(new byte[]{6,7,8,9,10})));
  ModelNode deployments=getDeploymentParentResource(kernelServices);
  Assert.assertEquals(1,deployments.keys().size());
  Assert.assertEquals(true,deployments.get("Test1",ENABLED).asBoolean());
  Assert.assertEquals("Test1",deployments.get("Test1",NAME).asString());
  Assert.assertEquals(true,deployments.get("Test1",PERSISTENT).asBoolean());
  Assert.assertEquals("number1",deployments.get("Test1",RUNTIME_NAME).asString());
  Assert.assertFalse(deployments.get("Test1",SUBDEPLOYMENT).isDefined());
  Assert.assertEquals(newHash,getContentHashOnly(deployments.get("Test1")));
}

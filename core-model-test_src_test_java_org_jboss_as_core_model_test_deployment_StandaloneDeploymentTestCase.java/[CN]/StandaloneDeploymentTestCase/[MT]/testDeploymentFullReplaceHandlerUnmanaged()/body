{
  KernelServices kernelServices=createKernelServices();
  File file1=writeToFile("Testfile1",1,2,3,4,5);
  File file2=writeToFile("Testfile2",6,7,8,9,10);
  ModelNode contentNode=new ModelNode();
  contentNode.get(PATH).set(file1.getAbsolutePath());
  ModelNode op=createAddOperation(kernelServices,"Test1",contentNode);
  kernelServices.executeForFailure(op);
  contentNode.get(ARCHIVE).set(true);
  op.get(CONTENT).clear();
  op.get(CONTENT).add(contentNode);
  ModelTestUtils.checkOutcome(kernelServices.executeOperation(op));
  ModelNode originalContent=checkSingleUnmanagedDeployment(kernelServices,"Test1",false);
  checkUnmanagedContents(file1,originalContent,true,true);
  op=Util.createOperation(DeploymentFullReplaceHandler.OPERATION_NAME,PathAddress.EMPTY_ADDRESS);
  op.get(NAME).set("Test1");
  contentNode=new ModelNode();
  contentNode.get(PATH).set(file2.getAbsolutePath());
  contentNode.get(ARCHIVE).set(false);
  kernelServices.executeForFailure(op);
  op.get(CONTENT).add(contentNode);
  kernelServices.validateOperation(op);
  ModelTestUtils.checkOutcome(kernelServices.executeOperation(op));
  ModelNode currentContent=checkSingleUnmanagedDeployment(kernelServices,"Test1",false);
  checkUnmanagedContents(file2,currentContent,false,true);
  op=op.clone();
  op.get(CONTENT).clear();
  contentNode=new ModelNode();
  contentNode.get(RELATIVE_TO).set(file1.getParentFile().getAbsolutePath());
  contentNode.get(ARCHIVE).set(true);
  op.get(CONTENT).add(contentNode);
  kernelServices.executeForFailure(op);
  contentNode.get(PATH).set(file1.getName());
  op.get(CONTENT).clear();
  op.get(CONTENT).add(contentNode);
  kernelServices.validateOperation(op);
  ModelTestUtils.checkOutcome(kernelServices.executeOperation(op));
  currentContent=checkSingleUnmanagedDeployment(kernelServices,"Test1",false);
  checkUnmanagedContents(file1,currentContent,true,false);
}

{
  ModelNode operation=createOperation(READ_RESOURCE_DESCRIPTION_OPERATION);
  operation.get(RECURSIVE).set(true);
  ModelNode result=CONTROLLER.execute(operation);
  checkRootNodeDescription(result,true,false);
  assertFalse(result.get(OPERATIONS).isDefined());
  operation=createOperation(READ_RESOURCE_DESCRIPTION_OPERATION,"profile","profileA");
  operation.get(RECURSIVE).set(true);
  result=CONTROLLER.execute(operation);
  checkProfileNodeDescription(result,true,false);
  operation=createOperation(READ_RESOURCE_DESCRIPTION_OPERATION,"profile","profileA","subsystem","subsystem1");
  operation.get(RECURSIVE).set(true);
  result=CONTROLLER.execute(operation);
  checkSubsystem1Description(result,true,false);
  assertFalse(result.get(OPERATIONS).isDefined());
  operation=createOperation(READ_RESOURCE_DESCRIPTION_OPERATION,"profile","profileA","subsystem","subsystem1","type1","thing1");
  operation.get(RECURSIVE).set(true);
  result=CONTROLLER.execute(operation);
  checkType1Description(result);
  assertFalse(result.get(OPERATIONS).isDefined());
  operation=createOperation(READ_RESOURCE_DESCRIPTION_OPERATION,"profile","profileA","subsystem","subsystem1","type1","thing2");
  operation.get(RECURSIVE).set(true);
  result=CONTROLLER.execute(operation);
  checkType1Description(result);
  assertFalse(result.get(OPERATIONS).isDefined());
  operation=createOperation(READ_RESOURCE_DESCRIPTION_OPERATION,"profile","profileA","subsystem","subsystem1","type2","other");
  operation.get(RECURSIVE).set(true);
  result=CONTROLLER.execute(operation);
  checkType2Description(result);
  assertFalse(result.get(OPERATIONS).isDefined());
}

{
  final HeaderMap requestHeaders=exchange.getRequestHeaders();
  final HeaderMap responseHeaders=exchange.getResponseHeaders();
  String referrer=responseHeaders.getFirst(REFERER);
  String protocol=exchange.getRequestScheme();
  String host=null;
  if (referrer != null) {
    try {
      URI uri=new URI(referrer);
      protocol=uri.getScheme();
      host=uri.getHost() + portPortion(protocol,uri.getPort());
    }
 catch (    URISyntaxException e) {
    }
  }
  if (host == null) {
    host=requestHeaders.getFirst(HOST);
    if (host == null) {
      exchange.setResponseCode(StatusCodes.INTERNAL_SERVER_ERROR);
      return;
    }
  }
  String userAgent=requestHeaders.getFirst(USER_AGENT);
  boolean opera=userAgent != null && userAgent.contains("Opera");
  boolean win=!opera && userAgent != null && userAgent.contains("MSIE");
  String rawQuery=exchange.getQueryString();
  boolean exit=rawQuery != null && rawQuery.contains(EXIT);
  if (win) {
    responseHeaders.add(LOCATION,protocol + "://" + host+ "/");
    exchange.setResponseCode(StatusCodes.TEMPORARY_REDIRECT);
  }
 else {
    String authorization=requestHeaders.getFirst(AUTHORIZATION);
    if (authorization == null || !authorization.contains("enter-login-here")) {
      if (!exit) {
        responseHeaders.add(LOCATION,protocol + "://enter-login-here:blah@" + host+ "/logout?"+ EXIT);
        exchange.setResponseCode(StatusCodes.TEMPORARY_REDIRECT);
        return;
      }
      DigestAuthenticationMechanism mech=opera ? fakeRealmdigestMechanism : digestMechanism;
      mech.sendChallenge(exchange,null);
      String reply="<html><script type='text/javascript'>window.location=\"" + protocol + "://"+ host+ "/\";</script></html>";
      exchange.setResponseCode(StatusCodes.UNAUTHORIZED);
      exchange.getResponseSender().send(reply,IoCallback.END_EXCHANGE);
      return;
    }
    responseHeaders.add(LOCATION,protocol + "://" + host+ "/");
    exchange.setResponseCode(StatusCodes.TEMPORARY_REDIRECT);
  }
}

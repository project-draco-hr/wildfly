{
  logger.infof("In the tearDown() call.");
  ModelNode removeSystemProperty=Util.createRemoveOperation(PathAddress.pathAddress(systemPropertyAddress()));
  ModelNode content=new ModelNode();
  content.get(0).get(ModelDescriptionConstants.ARCHIVE).set(false);
  content.get(0).get(ModelDescriptionConstants.PATH).set(warDeployment.getAbsolutePath());
  ModelNode undeployOperation=Util.getEmptyOperation(ModelDescriptionConstants.UNDEPLOY,new ModelNode().add(ModelDescriptionConstants.DEPLOYMENT,WAR_NAME));
  undeployOperation.get(ModelDescriptionConstants.CONTENT).set(ModelDescriptionConstants.CONTENT);
  undeployOperation.get(ModelDescriptionConstants.ENABLE).set(true);
  ModelNode removeOperation=Util.getEmptyOperation(ModelDescriptionConstants.REMOVE,new ModelNode().add(ModelDescriptionConstants.DEPLOYMENT,WAR_NAME));
  removeOperation.get(ModelDescriptionConstants.CONTENT).set(ModelDescriptionConstants.CONTENT);
  removeOperation.get(ModelDescriptionConstants.ENABLE).set(true);
  ModelNode compositeOperation=Util.getEmptyOperation(ModelDescriptionConstants.COMPOSITE,new ModelNode());
  ModelNode steps=compositeOperation.get(ModelDescriptionConstants.STEPS);
  steps.add(undeployOperation);
  steps.add(removeOperation);
  steps.add(removeSystemProperty);
  logger.infof("Composite operation: %s",compositeOperation.toString());
  ModelNode compositeResult=controllerClient.execute(compositeOperation);
  Assert.assertEquals(ModelDescriptionConstants.SUCCESS,compositeResult.get(ModelDescriptionConstants.OUTCOME).asString());
}

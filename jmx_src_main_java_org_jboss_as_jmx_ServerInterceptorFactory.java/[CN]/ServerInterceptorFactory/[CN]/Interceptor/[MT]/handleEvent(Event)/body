{
  UserInfo userInfo=channel.getConnection().getUserInfo();
  if (userInfo instanceof SubjectUserInfo) {
    final Subject subject=((SubjectUserInfo)userInfo).getSubject();
    Subject useSubject=subject;
    PrivilegedAction<Subject> copyAction=new PrivilegedAction<Subject>(){
      @Override public Subject run(){
        final Subject copySubject=new Subject();
        copySubject.getPrincipals().addAll(subject.getPrincipals());
        copySubject.getPrivateCredentials().addAll(subject.getPrivateCredentials());
        copySubject.getPublicCredentials().addAll(subject.getPublicCredentials());
        Collection<Principal> principals=channel.getConnection().getPrincipals();
        for (        Principal principal : principals) {
          if (principal instanceof InetAddressPrincipal) {
            copySubject.getPrincipals().add(new org.jboss.as.controller.security.InetAddressPrincipal((InetAddressPrincipal)principal));
            break;
          }
        }
        copySubject.getPrincipals().add(new AccessMechanismPrincipal(AccessMechanism.JMX));
        copySubject.setReadOnly();
        return copySubject;
      }
    }
;
    useSubject=WildFlySecurityManager.isChecking() ? AccessController.doPrivileged(copyAction) : copyAction.run();
    try {
      Subject.doAs(useSubject,new PrivilegedExceptionAction<Void>(){
        @Override public Void run() throws IOException {
          event.run();
          return null;
        }
      }
);
    }
 catch (    PrivilegedActionException e) {
      Exception cause=e.getException();
      if (cause instanceof IOException) {
        throw (IOException)cause;
      }
 else {
        throw new IOException(cause);
      }
    }
  }
 else {
    event.run();
  }
}

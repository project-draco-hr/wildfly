{
  ((OtherServicesSubsystemExtension)getMainExtension()).setAddHandler(SubsystemAddWithPathUserService.INSTANCE);
  String subsystemXml="<subsystem xmlns=\"" + SimpleSubsystemExtension.NAMESPACE + "\">"+ "</subsystem>";
  KernelServices services=createKernelServicesBuilder(new PathInit()).setSubsystemXml(subsystemXml).build();
  ModelNode model=services.readWholeModel();
  Assert.assertTrue(model.get(SUBSYSTEM).hasDefined(OtherServicesSubsystemExtension.SUBSYSTEM_NAME));
  ModelNode path=model.require(PATH);
  Assert.assertEquals(2,path.asList().size());
  Assert.assertEquals("p1",path.require("p1").require("name").asString());
  Assert.assertEquals(new File(".").getAbsolutePath(),path.require("p1").require("path").asString());
  Assert.assertFalse(path.get("p1","relative-to").isDefined());
  Assert.assertEquals("p2",path.require("p2").require("name").asString());
  Assert.assertEquals("target",path.require("p2").require("path").asString());
  Assert.assertEquals("p1",path.require("p2").require("relative-to").asString());
  ServiceController<?> controller=services.getContainer().getService(PathUserService.NAME);
  Assert.assertNotNull(controller);
  PathUserService service=(PathUserService)controller.getValue();
  Assert.assertEquals(new File(".","target").getAbsolutePath(),service.pathValue.getValue());
}

{
  if (earLibJars.contains(topLevelClassPathFile)) {
    log.debugf("Class-Path entry %s in %s ignored, as target is in or referenced by /lib",topLevelClassPathFile,resourceRoot.getRoot());
  }
 else   if (additionalModules.containsKey(topLevelClassPathFile)) {
    final AdditionalModuleSpecification moduleSpecification=additionalModules.get(topLevelClassPathFile);
    target.addToAttachmentList(Attachments.CLASS_PATH_ENTRIES,moduleSpecification.getModuleIdentifier());
    for (    final ResourceRoot root : moduleSpecification.getResourceRoots()) {
      resourceRoots.add(root);
      deploymentUnit.addToAttachmentList(Attachments.CLASS_PATH_RESOURCE_ROOTS,root);
    }
  }
 else   if (subDeployments.containsKey(topLevelClassPathFile)) {
    final ResourceRoot otherRoot=subDeployments.get(topLevelClassPathFile);
    target.addToAttachmentList(Attachments.CLASS_PATH_ENTRIES,ModuleIdentifierProcessor.createModuleIdentifier(otherRoot.getRootName(),otherRoot,topLevelDeployment,topLevelRoot,false));
  }
 else {
    createAdditionalModule(deploymentUnit,topLevelDeployment,topLevelRoot,additionalModules,resourceRoot,topLevelClassPathFile,resourceRoots);
  }
}

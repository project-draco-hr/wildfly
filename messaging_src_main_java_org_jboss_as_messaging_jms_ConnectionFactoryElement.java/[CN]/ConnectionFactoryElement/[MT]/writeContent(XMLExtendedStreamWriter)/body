{
  streamWriter.writeAttribute(Attribute.NAME.getLocalName(),name);
  if (discoveryGroupName != null) {
    streamWriter.writeEmptyElement(Element.DISCOVERY_GROUP_REF.getLocalName());
    streamWriter.writeAttribute(Attribute.DISCOVERY_GROUP_NAME.getLocalName(),discoveryGroupName);
  }
  if (initialWaitTimeout != null) {
    writeSimpleElement(Element.DISCOVERY_INITIAL_WAIT_TIMEOUT,initialWaitTimeout.toString(),streamWriter);
  }
  if (connectorRef != null && !connectorRef.isEmpty()) {
    streamWriter.writeStartElement(Element.CONNECTORS.getLocalName());
    for (    final ConnectionFactoryConnectorRef ref : connectorRef) {
      streamWriter.writeEmptyElement(Element.CONNECTOR_REF.getLocalName());
      streamWriter.writeAttribute(Attribute.CONNECTOR_NAME.getLocalName(),ref.getConnectorName());
      if (ref.getBackupName() != null) {
        streamWriter.writeAttribute(Attribute.CONNECTOR_BACKUP_NAME.getLocalName(),ref.getBackupName());
      }
    }
    streamWriter.writeEndElement();
  }
  if (bindings != null && bindings.size() > 0) {
    streamWriter.writeStartElement(Element.ENTRIES.getLocalName());
    for (    final String binding : bindings) {
      streamWriter.writeEmptyElement(Element.ENTRY.getLocalName());
      streamWriter.writeAttribute(Attribute.NAME.getLocalName(),binding);
    }
    streamWriter.writeEndElement();
  }
  if (clientFailureCheckPeriod != null) {
    writeSimpleElement(Element.CLIENT_FAILURE_CHECK_PERIOD,clientFailureCheckPeriod.toString(),streamWriter);
  }
  if (connectionTTL != null) {
    writeSimpleElement(Element.CONNECTION_TTL,connectionTTL.toString(),streamWriter);
  }
  if (callTimeout != null) {
    writeSimpleElement(Element.CALL_TIMEOUT,callTimeout.toString(),streamWriter);
  }
  if (consumerWindowSize != null) {
    writeSimpleElement(Element.CONSUMER_WINDOW_SIZE,consumerWindowSize.toString(),streamWriter);
  }
  if (consumerMaxRate != null) {
    writeSimpleElement(Element.CONSUMER_MAX_RATE,consumerMaxRate.toString(),streamWriter);
  }
  if (confirmationWindowSize != null) {
    writeSimpleElement(Element.CONFIRMATION_WINDOW_SIZE,confirmationWindowSize.toString(),streamWriter);
  }
  if (producerWindowSize != null) {
    writeSimpleElement(Element.PRODUCER_WINDOW_SIZE,producerWindowSize.toString(),streamWriter);
  }
  if (producerMaxRate != null) {
    writeSimpleElement(Element.PRODUCER_MAX_RATE,producerMaxRate.toString(),streamWriter);
  }
  if (cacheLargeMessagesClient != null) {
    writeSimpleElement(Element.CACHE_LARGE_MESSAGE_CLIENT,cacheLargeMessagesClient.toString(),streamWriter);
  }
  if (minLargeMessageSize != null) {
    writeSimpleElement(Element.MIN_LARGE_MESSAGE_SIZE,minLargeMessageSize.toString(),streamWriter);
  }
  if (clientID != null) {
    writeSimpleElement(Element.CLIENT_ID,clientID,streamWriter);
  }
  if (dupsOKBatchSize != null) {
    writeSimpleElement(Element.DUPS_OK_BATCH_SIZE,dupsOKBatchSize.toString(),streamWriter);
  }
  if (transactionBatchSize != null) {
    writeSimpleElement(Element.TRANSACTION_BATH_SIZE,transactionBatchSize.toString(),streamWriter);
  }
  if (blockOnAcknowledge != null) {
    writeSimpleElement(Element.BLOCK_ON_ACK,blockOnAcknowledge.toString(),streamWriter);
  }
  if (blockOnNonDurableSend != null) {
    writeSimpleElement(Element.BLOCK_ON_NON_DURABLE_SEND,blockOnNonDurableSend.toString(),streamWriter);
  }
  if (blockOnDurableSend != null) {
    writeSimpleElement(Element.BLOCK_ON_DURABLE_SEND,blockOnDurableSend.toString(),streamWriter);
  }
  if (autoGroup != null) {
    writeSimpleElement(Element.AUTO_GROUP,autoGroup.toString(),streamWriter);
  }
  if (preAcknowledge != null) {
    writeSimpleElement(Element.PRE_ACK,preAcknowledge.toString(),streamWriter);
  }
  if (retryInterval != null) {
    writeSimpleElement(Element.RETRY_INTERVAL,retryInterval.toString(),streamWriter);
  }
  if (retryIntervalMultiplier != null) {
    writeSimpleElement(Element.RETRY_INTERVAL_MULTIPLIER,retryIntervalMultiplier.toString(),streamWriter);
  }
  if (maxRetryInterval != null) {
    writeSimpleElement(Element.MAX_RETRY_INTERVAL,maxRetryInterval.toString(),streamWriter);
  }
  if (reconnectAttempts != null) {
    writeSimpleElement(Element.RECONNECT_ATTEMPTS,reconnectAttempts.toString(),streamWriter);
  }
  if (failoverOnInitialConnection != null) {
    writeSimpleElement(Element.FAILOVER_ON_INITIAL_CONNECTION,failoverOnInitialConnection.toString(),streamWriter);
  }
  if (failoverOnServerShutdown != null) {
    writeSimpleElement(Element.FAILOVER_ON_SERVER_SHUTDOWN,failoverOnServerShutdown.toString(),streamWriter);
  }
  if (loadBalancingPolicyClassName != null) {
    writeSimpleElement(Element.LOAD_BALANCING_CLASS_NAME,loadBalancingPolicyClassName,streamWriter);
  }
  if (useGlobalPools != null) {
    writeSimpleElement(Element.USE_GLOBAL_POOLS,useGlobalPools.toString(),streamWriter);
  }
  if (scheduledThreadPoolMaxSize != null) {
    writeSimpleElement(Element.SCHEDULED_THREAD_POOL_MAX_SIZE,scheduledThreadPoolMaxSize.toString(),streamWriter);
  }
  if (threadPoolMaxSize != null) {
    writeSimpleElement(Element.THREAD_POOL_MAX_SIZE,threadPoolMaxSize.toString(),streamWriter);
  }
  if (groupID != null) {
    writeSimpleElement(Element.GROUP_ID,groupID,streamWriter);
  }
  streamWriter.writeEndElement();
}

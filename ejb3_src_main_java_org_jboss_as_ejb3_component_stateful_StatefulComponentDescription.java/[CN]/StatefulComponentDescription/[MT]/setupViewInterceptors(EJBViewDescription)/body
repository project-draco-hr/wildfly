{
  super.setupViewInterceptors(view);
  this.addRemoveMethodInterceptor(view);
  this.addStatefulInstanceAssociatingInterceptor(view);
  this.addViewSerializationInterceptor(view);
  if (view.getMethodIntf() == MethodIntf.REMOTE) {
    view.getConfigurators().add(new ViewConfigurator(){
      @Override public void configure(      final DeploymentPhaseContext context,      final ComponentConfiguration componentConfiguration,      final ViewDescription description,      final ViewConfiguration configuration) throws DeploymentUnitProcessingException {
        final String earApplicationName=componentConfiguration.getComponentDescription().getModuleDescription().getEarApplicationName();
        configuration.setViewInstanceFactory(new StatefulRemoteViewInstanceFactory(earApplicationName,componentConfiguration.getModuleName(),componentConfiguration.getComponentDescription().getModuleDescription().getDistinctName(),componentConfiguration.getComponentName()));
      }
    }
);
  }
}

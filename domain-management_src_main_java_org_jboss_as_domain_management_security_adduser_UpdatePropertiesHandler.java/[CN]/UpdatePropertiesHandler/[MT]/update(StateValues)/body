{
  final String userName=stateValues.getUserName();
  final boolean enableDisableMode=stateValues.getOptions().isEnableDisableMode();
  final boolean disable=stateValues.getOptions().isDisable();
  final String groups=stateValues.getGroups();
  final String password;
  if (stateValues.getPassword() != null) {
    try {
      password=new UsernamePasswordHashUtil().generateHashedHexURP(stateValues.getUserName(),stateValues.getRealm(),stateValues.getPassword().toCharArray());
    }
 catch (    NoSuchAlgorithmException e) {
      return new ErrorState(theConsole,e.getMessage(),null,stateValues);
    }
  }
 else {
    password=null;
  }
  for (  File current : stateValues.getUserFiles()) {
    try {
      persist(userName,password,enableDisableMode,disable,current,stateValues.getRealm());
      if (stateValues.isSilent() == false) {
        theConsole.printf(consoleUserMessage(current.getCanonicalPath()));
        theConsole.printf(NEW_LINE);
      }
    }
 catch (    Exception e) {
      return new ErrorState(theConsole,errorMessage(current.getAbsolutePath(),e),null,stateValues);
    }
  }
  if (stateValues.groupPropertiesFound() && (groups != null || enableDisableMode)) {
    for (    final File current : stateValues.getGroupFiles()) {
      try {
        persist(userName,groups,enableDisableMode,disable,current);
        if (stateValues.isSilent() == false) {
          theConsole.printf(consoleGroupsMessage(current.getCanonicalPath()));
          theConsole.printf(NEW_LINE);
        }
      }
 catch (      Exception e) {
        return new ErrorState(theConsole,errorMessage(current.getAbsolutePath(),e),null,stateValues);
      }
    }
  }
  return null;
}

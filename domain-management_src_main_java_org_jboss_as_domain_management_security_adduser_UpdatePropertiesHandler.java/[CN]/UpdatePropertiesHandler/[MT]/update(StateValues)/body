{
  String[] entry=new String[2];
  try {
    String hash=new UsernamePasswordHashUtil().generateHashedHexURP(stateValues.getUserName(),stateValues.getRealm(),stateValues.getPassword());
    entry[0]=stateValues.getUserName();
    entry[1]=hash;
  }
 catch (  NoSuchAlgorithmException e) {
    return new ErrorState(theConsole,e.getMessage(),null,stateValues);
  }
  for (  File current : stateValues.getUserFiles()) {
    try {
      persist(entry,current,stateValues.getRealm());
      if (stateValues.isSilent() == false) {
        theConsole.printf(consoleUserMessage(current.getCanonicalPath()));
        theConsole.printf(NEW_LINE);
      }
    }
 catch (    Exception e) {
      return new ErrorState(theConsole,errorMessage(current.getAbsolutePath(),e),null,stateValues);
    }
  }
  if (stateValues.groupPropertiesFound() && stateValues.getGroups() != null) {
    for (    final File current : stateValues.getGroupFiles()) {
      String[] groups={stateValues.getUserName(),stateValues.getGroups()};
      try {
        persist(groups,current);
        if (stateValues.isSilent() == false) {
          theConsole.printf(consoleGroupsMessage(current.getCanonicalPath()));
          theConsole.printf(NEW_LINE);
        }
      }
 catch (      IOException e) {
        return new ErrorState(theConsole,errorMessage(current.getAbsolutePath(),e),null,stateValues);
      }
    }
  }
  return null;
}

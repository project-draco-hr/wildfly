{
  ServiceName templateCacheServiceName=getCacheServiceName(config.getCacheName());
  String templateCacheName=templateCacheServiceName.getSimpleName();
  ServiceName containerServiceName=templateCacheServiceName.getParent();
  String containerName=containerServiceName.getSimpleName();
  String cacheName=config.getDeploymentName();
  ServiceName cacheConfigurationServiceName=CacheConfigurationService.getServiceName(containerName,cacheName);
  ServiceName cacheServiceName=CacheService.getServiceName(containerName,cacheName);
  SessionCacheConfigurationService.build(target,containerName,cacheName,templateCacheName).setInitialMode(ServiceController.Mode.ON_DEMAND).install();
  final InjectedValue<EmbeddedCacheManager> cacheContainer=new InjectedValue<>();
  CacheService.Dependencies dependencies=new CacheService.Dependencies(){
    @Override public EmbeddedCacheManager getCacheContainer(){
      return cacheContainer.getValue();
    }
    @Override public XAResourceRecoveryRegistry getRecoveryRegistry(){
      return null;
    }
  }
;
  AsynchronousService.addService(target,cacheServiceName,new CacheService<>(cacheName,dependencies)).addAliases(RouteLocatorService.getCacheServiceAlias(cacheName)).addDependency(cacheConfigurationServiceName).addDependency(containerServiceName,EmbeddedCacheManager.class,cacheContainer).addDependency(GlobalComponentRegistryService.getServiceName(containerName)).setInitialMode(ServiceController.Mode.ON_DEMAND).install();
  return InfinispanSessionManagerFactory.build(target,name,containerName,cacheName,config);
}

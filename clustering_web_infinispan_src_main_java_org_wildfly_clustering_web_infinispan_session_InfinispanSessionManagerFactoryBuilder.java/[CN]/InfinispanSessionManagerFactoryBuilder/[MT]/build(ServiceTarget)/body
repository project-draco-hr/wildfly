{
  ServiceName templateCacheServiceName=getCacheServiceName(this.configuration.getCacheName());
  String templateCacheName=templateCacheServiceName.getSimpleName();
  String containerName=templateCacheServiceName.getParent().getSimpleName();
  String cacheName=this.configuration.getDeploymentName();
  new TemplateConfigurationBuilder(containerName,cacheName,templateCacheName).build(target).install();
  new CacheBuilder<>(containerName,cacheName).build(target).addAliases(InfinispanRouteLocatorBuilder.getCacheServiceAlias(cacheName)).install();
  new AliasServiceBuilder<>(InfinispanRouteLocatorBuilder.getNodeFactoryServiceAlias(cacheName),CacheGroupServiceName.NODE_FACTORY.getServiceName(containerName,RouteCacheGroupBuilderProvider.CACHE_NAME),NodeFactory.class).build(target).install();
  new AliasServiceBuilder<>(InfinispanRouteLocatorBuilder.getRegistryServiceAlias(cacheName),CacheGroupServiceName.REGISTRY.getServiceName(containerName,RouteCacheGroupBuilderProvider.CACHE_NAME),Registry.class).build(target).install();
  return target.addService(this.getServiceName(),new ValueService<>(this)).addDependency(CacheServiceName.CACHE.getServiceName(containerName,cacheName),Cache.class,this.cache).addDependency(CacheContainerServiceName.AFFINITY.getServiceName(containerName),KeyAffinityServiceFactory.class,this.affinityFactory).addDependency(GroupServiceName.COMMAND_DISPATCHER.getServiceName(containerName),CommandDispatcherFactory.class,this.dispatcherFactory).addDependency(InfinispanRouteLocatorBuilder.getNodeFactoryServiceAlias(cacheName),NodeFactory.class,this.nodeFactory).setInitialMode(ServiceController.Mode.ON_DEMAND);
}

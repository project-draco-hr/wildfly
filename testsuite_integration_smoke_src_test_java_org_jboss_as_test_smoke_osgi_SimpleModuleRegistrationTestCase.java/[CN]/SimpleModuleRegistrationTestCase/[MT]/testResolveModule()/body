{
  XResourceBuilder builder=XResourceBuilderFactory.create();
  builder.addIdentityCapability("somename",null,IdentityNamespace.TYPE_UNKNOWN,null,null);
  builder.addPackageRequirement(SimpleService.class.getPackage().getName(),null,null);
  final Resource resource=builder.getResource();
  ResolveContext context=new AbstractResolveContext(getEnvironment()){
    public Collection<Resource> getMandatoryResources(){
      return Collections.singleton(resource);
    }
  }
;
  Map<Resource,List<Wire>> wiremap=getResolver().resolve(context);
  assertEquals(2,wiremap.size());
  List<Wire> wires=wiremap.get(resource);
  assertEquals(1,wires.size());
  Wire wire=wires.get(0);
  assertEquals(resource,wire.getRequirer());
  XResource provider=(XResource)wire.getProvider();
  XIdentityCapability icap=provider.getIdentityCapability();
  assertEquals("deployment.example-module-reg",icap.getSymbolicName());
}

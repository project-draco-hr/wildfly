{
  final EntityBeanComponent component=(EntityBeanComponent)context.getContextData().get(Component.class);
  return new Interceptor(){
    @Override public Object processInvocation(    final InterceptorContext context) throws Exception {
      final EntityBeanComponentInstance instance=component.acquireUnAssociatedInstance();
      final Object result;
      final InvocationType invocationType=context.getPrivateData(InvocationType.class);
      try {
        context.putPrivateData(InvocationType.class,InvocationType.FINDER_METHOD);
        result=invokeFind(context,instance);
        return prepareResults(context,result,component);
      }
  finally {
        component.releaseEntityBeanInstance(instance);
        context.putPrivateData(InvocationType.class,invocationType);
      }
    }
  }
;
}

{
  propertyStack.pushPropertyMetaData(propertyMetaData);
  ArrayList properties=new ArrayList();
  Class javaType=propertyMetaData.getPropertyType();
  if (!valueClassesByType.containsKey(javaType)) {
    String propertyName=propertyStack.getPropertyName();
    String columnName=propertyStack.getColumnName();
    String sqlType=propertyMetaData.getSqlType();
    int jdbcType;
    if (sqlType != null) {
      jdbcType=propertyMetaData.getJDBCType();
    }
 else {
      JDBCMappingMetaData typeMappingMD=typeMapping.getTypeMappingMetaData(javaType);
      sqlType=typeMappingMD.getSqlType();
      jdbcType=typeMappingMD.getJdbcType();
    }
    boolean notNull=propertyStack.isNotNull();
    Method[] getters=propertyStack.getGetters();
    Method[] setters=propertyStack.getSetters();
    properties.add(new JDBCTypeComplexProperty(propertyName,columnName,javaType,jdbcType,sqlType,notNull,getters,setters));
  }
 else {
    JDBCValueClassMetaData valueClass=(JDBCValueClassMetaData)valueClassesByType.get(javaType);
    properties.addAll(createComplexProperties(valueClass,valueClassesByType,propertyStack));
  }
  propertyStack.popPropertyMetaData();
  return properties;
}

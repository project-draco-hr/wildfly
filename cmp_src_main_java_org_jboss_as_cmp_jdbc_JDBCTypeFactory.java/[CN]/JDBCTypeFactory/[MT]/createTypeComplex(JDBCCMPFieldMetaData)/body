{
  JDBCTypeComplex type=(JDBCTypeComplex)complexTypes.get(cmpField.getFieldType());
  JDBCTypeComplexProperty[] defaultProperties=type.getProperties();
  HashMap overrides=new HashMap();
  for (int i=0; i < cmpField.getPropertyOverrides().size(); ++i) {
    JDBCCMPFieldPropertyMetaData p=(JDBCCMPFieldPropertyMetaData)cmpField.getPropertyOverrides().get(i);
    overrides.put(p.getPropertyName(),p);
  }
  JDBCTypeComplexProperty[] finalProperties=new JDBCTypeComplexProperty[defaultProperties.length];
  for (int i=0; i < defaultProperties.length; i++) {
    JDBCCMPFieldPropertyMetaData override;
    override=(JDBCCMPFieldPropertyMetaData)overrides.remove(defaultProperties[i].getPropertyName());
    if (override == null) {
      finalProperties[i]=defaultProperties[i];
      finalProperties[i]=new JDBCTypeComplexProperty(defaultProperties[i],cmpField.getColumnName() + "_" + defaultProperties[i].getColumnName(),defaultProperties[i].getJDBCType(),defaultProperties[i].getSQLType(),cmpField.isNotNull() || defaultProperties[i].isNotNull());
    }
 else {
      String columnName=override.getColumnName();
      if (columnName == null) {
        columnName=cmpField.getColumnName() + "_" + defaultProperties[i].getColumnName();
      }
      String sqlType=override.getSQLType();
      int jdbcType;
      if (sqlType != null) {
        jdbcType=override.getJDBCType();
      }
 else {
        sqlType=defaultProperties[i].getSQLType();
        jdbcType=defaultProperties[i].getJDBCType();
      }
      boolean notNull=cmpField.isNotNull() || override.isNotNull() || defaultProperties[i].isNotNull();
      finalProperties[i]=new JDBCTypeComplexProperty(defaultProperties[i],columnName,jdbcType,sqlType,notNull);
    }
  }
  if (overrides.size() > 0) {
    String propertyName=(String)overrides.keySet().iterator().next();
    throw new EJBException("Property " + propertyName + " in field "+ cmpField.getFieldName()+ " is not a property of value object "+ cmpField.getFieldType().getName());
  }
  return new JDBCTypeComplex(finalProperties,cmpField.getFieldType());
}

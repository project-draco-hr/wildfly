{
  if (!attribute.isDefined()) {
    return false;
  }
  RejectExpressionsConfig complexChildConfig=complexAttributes.get(attrName);
switch (attribute.getType()) {
case EXPRESSION:
    return true;
case LIST:
  for (  ModelNode entry : attribute.asList()) {
    if (complexChildConfig == null) {
      if (hasExpressions(attrName,entry)) {
        return true;
      }
    }
 else {
      if (childHasExpressions(complexChildConfig,attribute.get(attrName))) {
        return true;
      }
    }
  }
break;
case OBJECT:
for (Property prop : attribute.asPropertyList()) {
if (complexChildConfig == null) {
  if (hasExpressions(attrName,prop.getValue())) {
    return true;
  }
}
 else {
  if (childHasExpressions(complexChildConfig,attribute)) {
    return true;
  }
}
}
break;
case PROPERTY:
if (complexChildConfig == null) {
if (hasExpressions(attrName,attribute.asProperty().getValue())) {
return true;
}
}
 else {
if (childHasExpressions(complexChildConfig,attribute.asProperty().getValue())) {
return true;
}
}
}
return false;
}

{
  try {
    final List<ModelNode> updates=new ArrayList<ModelNode>();
    ModelNode op=new ModelNode();
    op.get(OP).set(REMOVE);
    op.get(OP_ADDR).add(SUBSYSTEM,"security");
    op.get(OP_ADDR).add(Constants.SECURITY_DOMAIN,APP_SECURITY_DOMAIN);
    op.get(OPERATION_HEADERS,ModelDescriptionConstants.ROLLBACK_ON_RUNTIME_FAILURE).set(false);
    op.get(OPERATION_HEADERS,ALLOW_RESOURCE_SERVICE_RESTART).set(true);
    updates.add(op);
    op=new ModelNode();
    op.get(OP).set(REMOVE);
    op.get(OP_ADDR).add(SUBSYSTEM,"undertow");
    op.get(OP_ADDR).add("server","default-server");
    op.get(OP_ADDR).add("https-listener","testConnector");
    op.get(OPERATION_HEADERS,ALLOW_RESOURCE_SERVICE_RESTART).set(true);
    updates.add(op);
    op=new ModelNode();
    op.get(OP).set(REMOVE);
    op.get(OP_ADDR).add("socket-binding-group","standard-sockets");
    op.get(OP_ADDR).add("socket-binding","https-test");
    op.get(OPERATION_HEADERS,ALLOW_RESOURCE_SERVICE_RESTART).set(true);
    updates.add(op);
    applyUpdates(managementClient.getControllerClient(),updates);
    super.tearDown(managementClient,containerId);
  }
 catch (  Exception e) {
    log.error("Failed to clean domain setup.",e);
  }
}

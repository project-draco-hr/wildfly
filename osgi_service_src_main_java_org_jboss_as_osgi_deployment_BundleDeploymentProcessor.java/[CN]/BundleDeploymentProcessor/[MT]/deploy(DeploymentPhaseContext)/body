{
  final DeploymentUnit depUnit=phaseContext.getDeploymentUnit();
  final String runtimeName=depUnit.getName();
  Deployment deployment=BundleLifecycleIntegration.removeDeployment(runtimeName);
  if (deployment != null) {
    deployment.setAutoStart(false);
  }
  BundleInfo info=depUnit.getAttachment(OSGiConstants.BUNDLE_INFO_KEY);
  if (deployment == null && info != null) {
    deployment=DeploymentFactory.createDeployment(info);
    deployment.addAttachment(BundleInfo.class,info);
    OSGiMetaData metadata=info.getOSGiMetadata();
    deployment.setAutoStart(!metadata.isFragment());
    AnnotationInstance slAware=getAnnotation(depUnit,"org.jboss.arquillian.osgi.StartLevelAware");
    if (slAware != null) {
      MethodInfo slTarget=(MethodInfo)slAware.target();
      for (      AnnotationInstance anDeployment : getAnnotations(depUnit,"org.jboss.arquillian.container.test.api.Deployment")) {
        AnnotationValue namevalue=anDeployment.value("name");
        Object deploymentName=namevalue != null ? namevalue.value() : null;
        if (slTarget == anDeployment.target() && depUnit.getName().equals(deploymentName)) {
          int startLevel=slAware.value("startLevel").asInt();
          deployment.setStartLevel(startLevel);
          deployment.setAutoStart(false);
        }
      }
    }
    AnnotationInstance marker=getAnnotation(depUnit,"org.jboss.as.arquillian.api.DeploymentMarker");
    if (marker != null) {
      AnnotationValue value=marker.value("autoStart");
      if (value != null && deployment.isAutoStart()) {
        deployment.setAutoStart(value.asBoolean());
      }
      value=marker.value("startLevel");
      if (value != null && deployment.getStartLevel() == null) {
        deployment.setStartLevel(value.asInt());
      }
    }
  }
  if (deployment != null) {
    ModuleIdentifier identifier=depUnit.getAttachment(Attachments.MODULE_IDENTIFIER);
    deployment.addAttachment(ModuleIdentifier.class,identifier);
    if (allowAdditionalModuleDependencies(depUnit)) {
      ModuleSpecification moduleSpec=depUnit.getAttachment(Attachments.MODULE_SPECIFICATION);
      deployment.addAttachment(ModuleSpecification.class,moduleSpec);
    }
 else {
      ModuleSpecification moduleSpec=depUnit.getAttachment(Attachments.MODULE_SPECIFICATION);
      moduleSpec.setPrivateModule(true);
    }
    depUnit.putAttachment(OSGiConstants.DEPLOYMENT_KEY,deployment);
    deployment.addAttachment(DeploymentUnit.class,depUnit);
  }
}

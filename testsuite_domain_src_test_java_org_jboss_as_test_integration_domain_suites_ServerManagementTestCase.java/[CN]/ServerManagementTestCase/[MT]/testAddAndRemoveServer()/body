{
  final DomainClient client=domainSlaveLifecycleUtil.getDomainClient();
  final ModelNode addServer=new ModelNode();
  addServer.get(OP).set(ADD);
  addServer.get(OP_ADDR).set(newServerConfigAddress);
  addServer.get(GROUP).set("main-server-group");
  addServer.get(SOCKET_BINDING_GROUP).set("standard-sockets");
  addServer.get(SOCKET_BINDING_PORT_OFFSET).set(650);
  addServer.get(AUTO_START).set(false);
  Assert.assertFalse(exists(client,newServerConfigAddress));
  Assert.assertFalse(exists(client,newRunningServerAddress));
  ModelNode result=client.execute(addServer);
  validateResponse(result);
  Assert.assertTrue(exists(client,newServerConfigAddress));
  Assert.assertFalse(exists(client,newRunningServerAddress));
  final ModelNode startServer=new ModelNode();
  startServer.get(OP).set(START);
  startServer.get(OP_ADDR).set(newServerConfigAddress);
  result=client.execute(startServer);
  validateResponse(result);
  waitUntilState(client,newServerConfigAddress,"STARTED");
  Assert.assertTrue(exists(client,newServerConfigAddress));
  Assert.assertTrue(exists(client,newRunningServerAddress));
  final ModelNode stopServer=new ModelNode();
  stopServer.get(OP).set("stop");
  stopServer.get(OP_ADDR).set(newServerConfigAddress);
  result=client.execute(stopServer);
  validateResponse(result);
  waitUntilState(client,newServerConfigAddress,"STOPPED");
  Assert.assertTrue(exists(client,newServerConfigAddress));
  Assert.assertFalse(exists(client,newRunningServerAddress));
  final ModelNode removeServer=new ModelNode();
  removeServer.get(OP).set(REMOVE);
  removeServer.get(OP_ADDR).set(newServerConfigAddress);
  result=client.execute(removeServer);
  validateResponse(result);
  Assert.assertFalse(exists(client,newServerConfigAddress));
  Assert.assertFalse(exists(client,newRunningServerAddress));
}

{
  this.name=source.name;
synchronized (source.subsystems) {
    this.subsystems.putAll(source.subsystems);
  }
synchronized (source.includedProfiles) {
    this.includedProfiles.putAll(source.includedProfiles);
  }
  final NavigableMap<String,ProfileElement> resolvedProfiles=new TreeMap<String,ProfileElement>();
  for (  Map.Entry<String,ProfileIncludeElement> entry : this.includedProfiles.entrySet()) {
    ProfileElement prof=source.includedProfileResolver.resolveRef(entry.getKey());
    if (prof == null) {
      throw new IllegalStateException("Profile referenced by '" + Element.INCLUDE.getLocalName() + "' refers to non-existent profile '"+ entry.getValue().getProfile()+ "'");
    }
    resolvedProfiles.put(entry.getKey(),new ProfileElement(prof));
  }
  this.includedProfileResolver=new SimpleRefResolver<String,ProfileElement>(resolvedProfiles);
}

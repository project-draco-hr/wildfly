{
  streamWriter.writeAttribute(Attribute.NAME.getLocalName(),name);
synchronized (includedProfiles) {
    if (!includedProfiles.isEmpty()) {
      for (      String included : includedProfiles) {
        streamWriter.writeEmptyElement(Element.INCLUDE.getLocalName());
        streamWriter.writeAttribute(Attribute.PROFILE.getLocalName(),included);
      }
    }
  }
synchronized (subsystems) {
    if (!subsystems.isEmpty()) {
      String defaultNamespace=streamWriter.getNamespaceContext().getNamespaceURI(XMLConstants.DEFAULT_NS_PREFIX);
      for (      AbstractSubsystemElement<? extends AbstractSubsystemElement<?>> subsystem : subsystems.values()) {
        try {
          QName qname=subsystem.getElementName();
          if (streamWriter.getNamespaceContext().getPrefix(qname.getNamespaceURI()) == null) {
            streamWriter.setDefaultNamespace(qname.getNamespaceURI());
            streamWriter.writeStartElement(qname.getLocalPart());
            streamWriter.writeNamespace(null,qname.getNamespaceURI());
          }
 else {
            streamWriter.writeStartElement(qname.getNamespaceURI(),qname.getLocalPart());
          }
          subsystem.writeContent(streamWriter);
        }
  finally {
          streamWriter.setDefaultNamespace(defaultNamespace);
        }
      }
    }
  }
  streamWriter.writeEndElement();
}

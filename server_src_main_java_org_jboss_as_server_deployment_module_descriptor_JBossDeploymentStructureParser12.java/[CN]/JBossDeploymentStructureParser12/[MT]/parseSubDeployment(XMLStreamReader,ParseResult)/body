{
  final int count=reader.getAttributeCount();
  String name=null;
  final Set<Attribute> required=EnumSet.of(Attribute.NAME);
  for (int i=0; i < count; i++) {
    final Attribute attribute=Attribute.of(reader.getAttributeName(i));
    required.remove(attribute);
switch (attribute) {
case NAME:
      name=reader.getAttributeValue(i);
    break;
default :
  throw unexpectedContent(reader);
}
}
if (!required.isEmpty()) {
throw missingAttributes(reader.getLocation(),required);
}
if (result.getSubDeploymentSpecifications().containsKey(name)) {
throw ServerLogger.ROOT_LOGGER.duplicateSubdeploymentListing(name);
}
final ModuleStructureSpec moduleSpecification=new ModuleStructureSpec();
result.getSubDeploymentSpecifications().put(name,moduleSpecification);
parseModuleStructureSpec(result.getDeploymentUnit(),reader,moduleSpecification,result.getModuleLoader());
}

{
  PathAddress address=PathAddress.pathAddress(operation.get(ModelDescriptionConstants.ADDRESS));
  int current=address.size() - 1;
  String contextName=address.getElement(current--).getValue();
  String nodeName=address.getElement(current--).getValue();
  String balancerName=address.getElement(current--).getValue();
  String modClusterName=address.getElement(current--).getValue();
  ModClusterService service=ModClusterResource.service(modClusterName);
  if (service == null) {
    context.getResult().set(new ModelNode());
    context.completeStep(OperationContext.ResultHandler.NOOP_RESULT_HANDLER);
    return;
  }
  ModClusterStatus.LoadBalancer balancer=service.getModCluster().getController().getStatus().getLoadBalancer(balancerName);
  if (balancer == null) {
    context.getResult().set(new ModelNode());
    context.completeStep(OperationContext.ResultHandler.NOOP_RESULT_HANDLER);
    return;
  }
  ModClusterStatus.Node node=balancer.getNode(nodeName);
  if (node == null) {
    context.getResult().set(new ModelNode());
    context.completeStep(OperationContext.ResultHandler.NOOP_RESULT_HANDLER);
    return;
  }
  ModClusterStatus.Context ctx=node.getContext(contextName);
  if (ctx == null) {
    context.getResult().set(new ModelNode());
    context.completeStep(OperationContext.ResultHandler.NOOP_RESULT_HANDLER);
    return;
  }
  handleContext(context,ctx,operation);
}

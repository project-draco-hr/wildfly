{
  AtomicLong serialId=getSerialId(pid);
  String sourceid=source.get(TRANSIENT_PROPERTY_SERIAL_ID);
  if (sourceid == null) {
    sourceid=new Long(serialId.incrementAndGet()).toString();
    source.put(TRANSIENT_PROPERTY_SERIAL_ID,sourceid);
  }
  if (rollback) {
    LOGGER.debugf("Config rollback: %s => %s",pid,source);
    serialId.set(Long.parseLong(sourceid));
    configurations.put(pid,source);
    return true;
  }
  Dictionary<String,String> previous=configurations.get(pid);
  if (previous == null) {
    if (Long.parseLong(sourceid) == serialId.get()) {
      LOGGER.debugf("Config put: %s => %s",pid,source);
      configurations.put(pid,new UnmodifiableDictionary<String,String>(source));
      return true;
    }
 else {
      LOGGER.debugf("Config skip put: %s => %s",pid,source);
      return false;
    }
  }
  String previd=previous.get(TRANSIENT_PROPERTY_SERIAL_ID);
  if (Long.parseLong(previd) <= Long.parseLong(sourceid)) {
    LOGGER.debugf("Config put: %s => %s",pid,source);
    configurations.put(pid,new UnmodifiableDictionary<String,String>(source));
    return true;
  }
 else {
    LOGGER.debugf("Config skip put: %s => %s",pid,source);
    return false;
  }
}

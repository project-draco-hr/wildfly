{
  final PathAddress address=PathAddress.pathAddress(operation.require(OP_ADDR));
  final String cacheContainerName=address.getElement(address.size() - 3).getValue();
  final String cacheName=address.getElement(address.size() - 2).getValue();
  final String site=address.getLastElement().getValue();
  final ServiceName cacheServiceName=CacheService.getServiceName(cacheContainerName,cacheName);
  final ServiceController<?> controller=context.getServiceRegistry(true).getService(cacheServiceName);
  Cache<?,?> cache=(Cache<?,?>)controller.getValue();
  ModelNode result=null;
  try {
    XSiteAdminOperations xSiteAdminOperations=cache.getAdvancedCache().getComponentRegistry().getComponent(XSiteAdminOperations.class);
    String stringResult=xSiteAdminOperations.takeSiteOffline(site);
    result=new ModelNode().set(stringResult);
  }
 catch (  Exception e) {
    throw MESSAGES.failedToInvokeOperation(e.getCause(),"take-site-offline");
  }
  if (result != null) {
    context.getResult().set(result);
  }
  context.stepCompleted();
}

{
  final String name=PathAddress.pathAddress(operation.get(ModelDescriptionConstants.ADDRESS)).getLastElement().getValue();
  ModelNode passivationStoreModel=CacheFactoryResourceDefinition.PASSIVATION_STORE.resolveModelAttribute(context,model);
  String passivationStore=passivationStoreModel.isDefined() ? passivationStoreModel.asString() : null;
  final Collection<String> unwrappedAliasValues=CacheFactoryResourceDefinition.ALIASES.unwrap(context,model);
  final Set<String> aliases=unwrappedAliasValues != null ? new HashSet<>(unwrappedAliasValues) : Collections.<String>emptySet();
  ServiceTarget target=context.getServiceTarget();
  ServiceBuilder<?> builder=buildCacheFactoryBuilder(target,name,passivationStore);
  for (  String alias : aliases) {
    builder.addAliases(CacheFactoryBuilderService.getServiceName(alias));
  }
  if (verificationHandler != null) {
    builder.addListener(verificationHandler);
  }
  return Collections.<ServiceController<?>>singleton(builder.install());
}

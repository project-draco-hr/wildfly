{
  ServerDeploymentHelper server=new ServerDeploymentHelper(managementClient.getControllerClient());
  String jarName=server.deploy(V200_JAR,deployer.getDeployment(V200_JAR));
  String webappName=server.deploy(BUNDLE_V200_WAB,deployer.getDeployment(BUNDLE_V200_WAB));
  XEnvironment env=context.getBundle().adapt(XEnvironment.class);
  Bundle jar=FrameworkUtils.getBundles(context,V200_JAR,null)[0];
  XBundleRevision brev=(XBundleRevision)jar.adapt(BundleRevision.class);
  Long resid=brev.getAttachment(XResource.RESOURCE_IDENTIFIER_KEY);
  try {
    String result=performCall("bundle-v200","simple",null);
    Assert.assertEquals("Revision deployment.v200.jar:main",result);
    result=performCall("bundle-v200","message.txt",null);
    Assert.assertEquals("Resource V2.0.0",result);
    server.undeploy(jarName);
    Assert.assertEquals(Bundle.UNINSTALLED,jar.getState());
    Assert.assertNull("BundleRevision is null",jar.adapt(BundleRevision.class));
    Assert.assertTrue("BundleWiring in use",brev.getWiring().isInUse());
    Assert.assertFalse("BundleWiring not current",brev.getWiring().isCurrent());
    Assert.assertSame(brev,env.getResourceById(resid));
    result=performCall("bundle-v200","simple",null);
    Assert.assertEquals("Revision deployment.v200.jar:main",result);
    result=performCall("bundle-v200","message.txt",null);
    Assert.assertEquals("Resource V2.0.0",result);
  }
  finally {
    server.undeploy(webappName);
  }
  Assert.assertNull("BundleRevision removed",env.getResourceById(resid));
  Assert.assertNull("BundleWiring null",brev.getWiring());
}

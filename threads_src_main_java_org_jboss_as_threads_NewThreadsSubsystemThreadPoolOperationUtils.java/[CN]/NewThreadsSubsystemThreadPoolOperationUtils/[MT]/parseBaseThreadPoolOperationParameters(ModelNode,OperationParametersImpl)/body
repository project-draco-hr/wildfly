{
  params.name=operation.require(NAME).asString();
  params.threadFactory=has(operation,THREAD_FACTORY) ? operation.get(THREAD_FACTORY).asString() : null;
  params.properties=has(operation,PROPERTIES) ? operation.get(PROPERTIES) : null;
  if (params.properties != null) {
    if (params.properties.getType() != ModelType.LIST) {
      throw new IllegalArgumentException(PROPERTIES + " must be a list of properties");
    }
    for (    ModelNode property : params.properties.asList()) {
      if (property.getType() != ModelType.PROPERTY) {
        throw new IllegalArgumentException(PROPERTIES + " must be a list of properties");
      }
    }
  }
  params.maxThreads=getScaledCount(operation,MAX_THREADS);
  if (params.maxThreads == null) {
    throw new IllegalArgumentException(MAX_THREADS + " was not defined");
  }
  if (has(operation,KEEPALIVE_TIME)) {
    ModelNode keepaliveTime=operation.get(KEEPALIVE_TIME);
    if (!has(keepaliveTime,TIME)) {
      throw new IllegalArgumentException("Missing '" + TIME + "' for '"+ KEEPALIVE_TIME+ "'");
    }
    if (!has(keepaliveTime,UNIT)) {
      throw new IllegalArgumentException("Missing '" + UNIT + "' for '"+ KEEPALIVE_TIME+ "'");
    }
    params.keepAliveTime=new TimeSpec(Enum.valueOf(TimeUnit.class,keepaliveTime.get(UNIT).asString()),keepaliveTime.get(TIME).asLong());
  }
  return params;
}

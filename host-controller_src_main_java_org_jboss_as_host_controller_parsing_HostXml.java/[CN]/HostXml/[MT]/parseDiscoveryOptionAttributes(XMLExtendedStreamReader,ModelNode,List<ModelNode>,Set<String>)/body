{
  final ModelNode discoveryOptionAddress=address.clone();
  discoveryOptionAddress.add(CORE_SERVICE,DISCOVERY_OPTIONS);
  final ModelNode addOp=Util.getEmptyOperation(ADD,new ModelNode());
  list.add(addOp);
  final Set<Attribute> required=EnumSet.of(Attribute.NAME,Attribute.MODULE,Attribute.CODE);
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    requireNoNamespaceAttribute(reader,i);
    final String value=reader.getAttributeValue(i);
    final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
    required.remove(attribute);
switch (attribute) {
case NAME:
{
        if (!discoveryOptionNames.add(value)) {
          throw ParseUtils.duplicateNamedElement(reader,value);
        }
        addOp.get(OP_ADDR).set(discoveryOptionAddress).add(DISCOVERY_OPTION,value);
        break;
      }
case CODE:
{
      DiscoveryOptionResourceDefinition.CODE.parseAndSetParameter(value,addOp,reader);
      break;
    }
case MODULE:
{
    DiscoveryOptionResourceDefinition.MODULE.parseAndSetParameter(value,addOp,reader);
    break;
  }
default :
throw unexpectedAttribute(reader,i);
}
}
if (required.size() > 0) {
throw missingRequired(reader,required);
}
return addOp;
}

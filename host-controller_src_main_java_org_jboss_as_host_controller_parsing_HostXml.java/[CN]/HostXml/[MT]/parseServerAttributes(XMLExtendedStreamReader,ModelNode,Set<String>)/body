{
  final ModelNode addUpdate=new ModelNode();
  addUpdate.get(OP).set(ADD);
  final Set<Attribute> required=EnumSet.of(Attribute.NAME,Attribute.GROUP);
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    final String value=reader.getAttributeValue(i);
    if (!isNoNamespaceAttribute(reader,i)) {
      throw unexpectedAttribute(reader,i);
    }
 else {
      final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
      required.remove(attribute);
switch (attribute) {
case NAME:
{
          if (!serverNames.add(value)) {
            throw MESSAGES.duplicateDeclaration("server",value,reader.getLocation());
          }
          final ModelNode address=parentAddress.clone().add(SERVER_CONFIG,value);
          addUpdate.get(OP_ADDR).set(address);
          break;
        }
case GROUP:
{
        ServerConfigResourceDefinition.GROUP.parseAndSetParameter(value,addUpdate,reader);
        break;
      }
case AUTO_START:
{
      ServerConfigResourceDefinition.AUTO_START.parseAndSetParameter(value,addUpdate,reader);
      break;
    }
default :
  throw unexpectedAttribute(reader,i);
}
}
}
if (required.size() > 0) {
throw missingRequired(reader,required);
}
return addUpdate;
}

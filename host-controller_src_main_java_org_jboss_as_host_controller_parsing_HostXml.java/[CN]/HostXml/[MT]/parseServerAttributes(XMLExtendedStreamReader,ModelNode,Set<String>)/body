{
  String name=null;
  String group=null;
  Boolean start=null;
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    final String value=reader.getAttributeValue(i);
    if (!isNoNamespaceAttribute(reader,i)) {
      throw unexpectedAttribute(reader,i);
    }
 else {
      final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case NAME:
{
          if (!serverNames.add(value)) {
            throw MESSAGES.duplicateDeclaration("server",value,reader.getLocation());
          }
          name=value;
          break;
        }
case GROUP:
{
        group=value;
        break;
      }
case AUTO_START:
{
      start=Boolean.valueOf(value);
      break;
    }
default :
  throw unexpectedAttribute(reader,i);
}
}
}
if (name == null) {
throw missingRequired(reader,Collections.singleton(Attribute.NAME));
}
if (group == null) {
throw missingRequired(reader,Collections.singleton(Attribute.GROUP));
}
final ModelNode address=parentAddress.clone().add(SERVER_CONFIG,name);
final ModelNode addUpdate=Util.getEmptyOperation(ADD,address);
addUpdate.get(GROUP).set(group);
if (start != null) {
addUpdate.get(AUTO_START).set(start.booleanValue());
}
return addUpdate;
}

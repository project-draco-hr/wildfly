{
  final ModelNode operationAddress=address.clone();
  operationAddress.add(MANAGEMENT_INTERFACE,http ? HTTP_INTERFACE : NATIVE_INTERFACE);
  final ModelNode addOp=Util.getEmptyOperation(ADD,operationAddress);
  if (http) {
    parseHttpManagementInterfaceAttributes2_0(reader,addOp);
  }
 else {
    parseNativeManagementInterfaceAttributes2_0(reader,addOp);
  }
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
    requireNamespace(reader,expectedNs);
    final Element element=Element.forName(reader.getLocalName());
switch (element) {
case SOCKET:
      if (http) {
switch (expectedNs) {
case DOMAIN_1_0:
case DOMAIN_1_1:
case DOMAIN_1_2:
case DOMAIN_1_3:
case DOMAIN_1_4:
case DOMAIN_1_5:
case DOMAIN_2_0:
          parseHttpManagementSocket(reader,addOp);
        break;
default :
      parseHttpManagementSocket3_0(reader,addOp);
  }
}
 else {
  parseNativeManagementSocket(reader,addOp);
}
break;
default :
throw unexpectedElement(reader);
}
}
list.add(addOp);
}

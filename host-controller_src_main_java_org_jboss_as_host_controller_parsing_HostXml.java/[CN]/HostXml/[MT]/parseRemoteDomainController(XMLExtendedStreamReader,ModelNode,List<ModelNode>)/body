{
  String host=null;
  Integer port=null;
  String securityRealm=null;
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    final String value=reader.getAttributeValue(i);
    if (!isNoNamespaceAttribute(reader,i)) {
      throw unexpectedAttribute(reader,i);
    }
 else {
      final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case HOST:
{
          host=value;
          break;
        }
case PORT:
{
        port=Integer.valueOf(value);
        if (port.intValue() < 1) {
          throw MESSAGES.invalidValueGreaterThan(attribute.getLocalName(),port,0,reader.getLocation());
        }
        break;
      }
case SECURITY_REALM:
{
      securityRealm=value;
      break;
    }
default :
  throw unexpectedAttribute(reader,i);
}
}
}
if (host == null) {
throw ParseUtils.missingRequired(reader,Collections.singleton(Attribute.HOST.getLocalName()));
}
if (port == null) {
throw ParseUtils.missingRequired(reader,Collections.singleton(Attribute.PORT.getLocalName()));
}
final ModelNode update=new ModelNode();
update.get(OP_ADDR).set(address);
update.get(OP).set("write-remote-domain-controller");
update.get(HOST).set(parsePossibleExpression(host));
update.get(PORT).set(port);
if (securityRealm != null) {
update.get(SECURITY_REALM).set(securityRealm);
}
list.add(update);
reader.discardRemainder();
}

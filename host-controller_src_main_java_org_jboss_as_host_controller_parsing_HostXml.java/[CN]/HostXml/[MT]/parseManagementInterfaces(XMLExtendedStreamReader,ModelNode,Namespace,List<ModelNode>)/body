{
  requireNoAttributes(reader);
  Set<Element> required=EnumSet.of(Element.NATIVE_INTERFACE);
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
    requireNamespace(reader,expectedNs);
    final Element element=Element.forName(reader.getLocalName());
    required.remove(element);
switch (element) {
case NATIVE_INTERFACE:
{
switch (expectedNs) {
case DOMAIN_1_0:
          parseNativeManagementInterface1_0(reader,address,list);
        break;
default :
      parseManagementInterface1_1(reader,address,false,expectedNs,list);
  }
  break;
}
case HTTP_INTERFACE:
{
switch (expectedNs) {
case DOMAIN_1_0:
  parseHttpManagementInterface1_0(reader,address,list);
break;
default :
parseManagementInterface1_1(reader,address,true,expectedNs,list);
}
break;
}
default :
{
throw unexpectedElement(reader);
}
}
}
if (!required.isEmpty()) {
throw missingRequiredElement(reader,required);
}
}

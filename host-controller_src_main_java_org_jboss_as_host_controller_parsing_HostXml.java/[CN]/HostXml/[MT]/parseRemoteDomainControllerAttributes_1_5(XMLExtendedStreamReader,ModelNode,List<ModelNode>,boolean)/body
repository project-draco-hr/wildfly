{
  final ModelNode update=new ModelNode();
  update.get(OP_ADDR).set(address);
  update.get(OP).set("write-remote-domain-controller");
  boolean requireDiscoveryOptions=false;
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    final String value=reader.getAttributeValue(i);
    if (!isNoNamespaceAttribute(reader,i)) {
      throw unexpectedAttribute(reader,i);
    }
 else {
      final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case HOST:
{
          RemoteDomainControllerAddHandler.HOST.parseAndSetParameter(value,update,reader);
          break;
        }
case PORT:
{
        RemoteDomainControllerAddHandler.PORT.parseAndSetParameter(value,update,reader);
        break;
      }
case SECURITY_REALM:
{
      RemoteDomainControllerAddHandler.SECURITY_REALM.parseAndSetParameter(value,update,reader);
      break;
    }
case USERNAME:
{
    RemoteDomainControllerAddHandler.USERNAME.parseAndSetParameter(value,update,reader);
    break;
  }
case IGNORE_UNUSED_CONFIG:
{
  RemoteDomainControllerAddHandler.IGNORE_UNUSED_CONFIG.parseAndSetParameter(value,update,reader);
  break;
}
case ADMIN_ONLY_POLICY:
{
RemoteDomainControllerAddHandler.ADMIN_ONLY_POLICY.parseAndSetParameter(value,update,reader);
break;
}
default :
throw unexpectedAttribute(reader,i);
}
}
}
if (!update.hasDefined(RemoteDomainControllerAddHandler.HOST.getName())) {
if (allowDiscoveryOptions) {
requireDiscoveryOptions=true;
}
 else {
throw ParseUtils.missingRequired(reader,Collections.singleton(Attribute.HOST.getLocalName()));
}
}
if (!update.hasDefined(RemoteDomainControllerAddHandler.PORT.getName())) {
if (allowDiscoveryOptions) {
requireDiscoveryOptions=true;
}
 else {
throw ParseUtils.missingRequired(reader,Collections.singleton(Attribute.PORT.getLocalName()));
}
}
list.add(update);
return requireDiscoveryOptions;
}

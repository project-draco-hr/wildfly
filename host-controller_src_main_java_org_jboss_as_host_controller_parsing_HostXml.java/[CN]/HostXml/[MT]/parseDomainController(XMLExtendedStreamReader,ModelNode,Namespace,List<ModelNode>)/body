{
  requireNoAttributes(reader);
  boolean hasLocal=false;
  boolean hasRemote=false;
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
    requireNamespace(reader,expectedNs);
    final Element element=Element.forName(reader.getLocalName());
switch (element) {
case LOCAL:
{
        if (hasLocal) {
          throw MESSAGES.childAlreadyDeclared(element.getLocalName(),Element.DOMAIN_CONTROLLER.getLocalName(),reader.getLocation());
        }
 else         if (hasRemote) {
          throw MESSAGES.childAlreadyDeclared(Element.REMOTE.getLocalName(),Element.DOMAIN_CONTROLLER.getLocalName(),reader.getLocation());
        }
switch (expectedNs) {
case DOMAIN_1_0:
case DOMAIN_1_1:
case DOMAIN_1_2:
case DOMAIN_1_3:
case DOMAIN_1_4:
{
            requireNoAttributes(reader);
            requireNoContent(reader);
            break;
          }
default :
{
          parseLocalDomainController2_0(reader,address,expectedNs,list);
          break;
        }
    }
    hasLocal=true;
    break;
  }
case REMOTE:
{
  if (hasRemote) {
    throw MESSAGES.childAlreadyDeclared(element.getLocalName(),Element.DOMAIN_CONTROLLER.getLocalName(),reader.getLocation());
  }
 else   if (hasLocal) {
    throw MESSAGES.childAlreadyDeclared(Element.LOCAL.getLocalName(),Element.DOMAIN_CONTROLLER.getLocalName(),reader.getLocation());
  }
switch (expectedNs) {
case DOMAIN_1_0:
    parseRemoteDomainController1_0(reader,address,list);
  break;
case DOMAIN_1_1:
case DOMAIN_1_2:
case DOMAIN_1_3:
case DOMAIN_1_4:
{
  parseRemoteDomainController1_1(reader,address,expectedNs,list);
  break;
}
default :
{
parseRemoteDomainController2_0(reader,address,expectedNs,list);
break;
}
}
hasRemote=true;
break;
}
default :
throw unexpectedElement(reader);
}
}
if (!hasLocal && !hasRemote) {
throw MESSAGES.domainControllerMustBeDeclared(Element.REMOTE.getLocalName(),Element.LOCAL.getLocalName(),reader.getLocation());
}
if (hasLocal) {
final ModelNode update=new ModelNode();
update.get(OP_ADDR).set(address);
update.get(OP).set("write-local-domain-controller");
list.add(update);
}
}

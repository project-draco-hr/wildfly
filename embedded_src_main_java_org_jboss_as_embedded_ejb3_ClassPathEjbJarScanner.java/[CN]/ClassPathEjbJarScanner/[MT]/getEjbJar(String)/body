{
  if (candidate == null || candidate.isEmpty())   return null;
  final VirtualFile file=VFS.getChild(candidate);
  for (  final ExclusionFilter exclusionFilter : exclusionFilters) {
    if (exclusionFilter.exclude(file)) {
      if (ROOT_LOGGER.isTraceEnabled()) {
        ROOT_LOGGER.tracef("%s matched %s for exclusion; skipping",exclusionFilter,file);
      }
      return null;
    }
  }
  Closeable handle=null;
  TempFileProvider provider=null;
  try {
    if (file.exists()) {
      if (file.isDirectory()) {
        handle=VFS.mountReal(file.getPhysicalFile(),file);
      }
 else       if (file.getName().endsWith(EXTENSION_JAR)) {
        provider=TempFileProvider.create("jbossejbmodulescanner",ses);
        handle=VFS.mountZip(file.getPhysicalFile(),file,provider);
      }
 else {
        ROOT_LOGGER.skippingUnknownFileType(file);
        return null;
      }
    }
 else {
      ROOT_LOGGER.fileNotFound(file);
      return null;
    }
    final VirtualFile ejbJarXml=file.getChild(PATH_EJB_JAR_XML);
    if (ejbJarXml.exists()) {
      if (ROOT_LOGGER.isTraceEnabled()) {
        ROOT_LOGGER.tracef("Found descriptor %s in %s",ejbJarXml.getPathNameRelativeTo(file),file);
      }
      return getModuleNameFromEjbJar(file,ejbJarXml);
    }
    if (containsEjbComponentClass(file)) {
      return getModuleNameFromFileName(file);
    }
    return null;
  }
 catch (  final IOException e) {
    throw MESSAGES.cannotMountFile(e,candidate);
  }
 finally {
    VFSUtils.safeClose(handle,provider);
  }
}

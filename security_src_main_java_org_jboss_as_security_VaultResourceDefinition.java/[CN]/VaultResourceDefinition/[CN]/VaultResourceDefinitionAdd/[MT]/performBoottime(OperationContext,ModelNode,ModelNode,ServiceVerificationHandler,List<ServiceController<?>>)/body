{
  Map<String,Object> vaultOptions=new HashMap<String,Object>();
  ModelNode vaultNode=operation;
  ModelNode vaultClassNode=CODE.resolveModelAttribute(context,model);
  String vaultClass=vaultClassNode.getType() == ModelType.UNDEFINED ? null : vaultClassNode.asString();
  if (vaultNode.hasDefined(Constants.VAULT_OPTIONS)) {
    List<Property> vaultOptionList=vaultNode.get(Constants.VAULT_OPTIONS).asPropertyList();
    for (    Property vaultOption : vaultOptionList) {
      vaultOptions.put(vaultOption.getName(),vaultOption.getValue().asString());
    }
  }
  if (vaultClass != null || vaultOptions.isEmpty() == false) {
    final SecurityVaultService vaultService=new SecurityVaultService(vaultClass,vaultOptions);
    newControllers.add(context.getServiceTarget().addService(SecurityVaultService.SERVICE_NAME,vaultService).addListener(verificationHandler).setInitialMode(ServiceController.Mode.ACTIVE).install());
  }
}

{
  final Resource root=context.getRootResource();
  final ModelNode rootNode=Tools.readModel(root);
  final ModelNode subsystem=rootNode.get(SUBSYSTEM,LoggingExtension.SUBSYSTEM_NAME);
  final List<String> attached=new ArrayList<String>();
  final ModelNode rootLogger=subsystem.get(CommonAttributes.ROOT_LOGGER,CommonAttributes.ROOT_LOGGER_NAME);
  if (rootLogger.isDefined() && rootLogger.hasDefined(CommonAttributes.HANDLERS.getName())) {
    final ModelNode handlers=rootLogger.get(CommonAttributes.HANDLERS.getName());
    for (    ModelNode handler : handlers.asList()) {
      if (handlerName.equals(handler.asString())) {
        attached.add(CommonAttributes.ROOT_LOGGER_NAME);
      }
    }
  }
  final ModelNode loggers=subsystem.get(CommonAttributes.LOGGER);
  for (  Property logger : loggers.asPropertyList()) {
    if (logger.getValue().hasDefined(CommonAttributes.HANDLERS.getName())) {
      final ModelNode handlers=logger.getValue().get(CommonAttributes.HANDLERS.getName());
      for (      ModelNode handler : handlers.asList()) {
        if (handlerName.equals(handler.asString())) {
          attached.add(logger.getName());
        }
      }
    }
  }
  if (!attached.isEmpty()) {
    throw new OperationFailedException(LoggingMessages.MESSAGES.handlerAttachedToLoggers(handlerName,attached));
  }
  final ModelNode asyncHandlers=subsystem.get(CommonAttributes.ASYNC_HANDLER);
  for (  Property asyncHandler : asyncHandlers.asPropertyList()) {
    if (asyncHandler.getValue().hasDefined(CommonAttributes.SUBHANDLERS.getName())) {
      final ModelNode subhandlers=asyncHandler.getValue().get(CommonAttributes.SUBHANDLERS.getName());
      for (      ModelNode handler : subhandlers.asList()) {
        if (handlerName.equals(handler.asString())) {
          attached.add(asyncHandler.getName());
        }
      }
    }
  }
  if (!attached.isEmpty()) {
    throw new OperationFailedException(LoggingMessages.MESSAGES.handlerAttachedToHandlers(handlerName,attached));
  }
}

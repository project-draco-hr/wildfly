{
  ResourceBundle resources=getResources(locale);
  ModelNode description=createDistributedCacheOperationDescription(ModelDescriptionConstants.ADD,resources);
  String keyPrefix="infinispan.cache";
  addCommonCacheRequestProperties(keyPrefix,description,resources);
  keyPrefix="infinispan.clustered-cache";
  addCommonClusteredCacheRequestProperties(keyPrefix,description,resources);
  keyPrefix="infinispan.distributed-cache";
  ModelNode requestProperties=description.get(ModelDescriptionConstants.REQUEST_PROPERTIES);
  addNode(requestProperties,ModelKeys.OWNERS,resources.getString(keyPrefix + ".owners"),ModelType.INT,false);
  addNode(requestProperties,ModelKeys.VIRTUAL_NODES,resources.getString(keyPrefix + ".virtual-nodes"),ModelType.INT,false);
  addNode(requestProperties,ModelKeys.L1_LIFESPAN,resources.getString(keyPrefix + ".l1-lifespan"),ModelType.LONG,false);
  ModelNode rehashing=addNode(requestProperties,ModelKeys.REHASHING,resources.getString(keyPrefix),ModelType.OBJECT,false).get(ModelDescriptionConstants.VALUE_TYPE);
  addNode(rehashing,ModelKeys.ENABLED,resources.getString(keyPrefix + ".rehashing.enabled"),ModelType.BOOLEAN,false);
  addNode(rehashing,ModelKeys.TIMEOUT,resources.getString(keyPrefix + ".rehashing.timeout"),ModelType.LONG,false);
  return description;
}

{
  START.addOperationParameterDescription(resources,keyPrefix,operation);
  BATCHING.addOperationParameterDescription(resources,keyPrefix,operation);
  INDEXING.addOperationParameterDescription(resources,keyPrefix,operation);
  ModelNode requestProperties=operation.get(ModelDescriptionConstants.REQUEST_PROPERTIES);
  String lockingPrefix=keyPrefix + "." + "locking";
  ModelNode locking=addNode(requestProperties,ModelKeys.LOCKING,resources.getString(lockingPrefix),ModelType.OBJECT,false).get(ModelDescriptionConstants.VALUE_TYPE);
  for (  AttributeDefinition attr : CommonAttributes.LOCKING_ATTRIBUTES) {
    addAttributeDescription(attr,resources,lockingPrefix,locking);
  }
  String transactionPrefix=keyPrefix + "." + "transaction";
  ModelNode transaction=addNode(requestProperties,ModelKeys.TRANSACTION,resources.getString(transactionPrefix),ModelType.OBJECT,false).get(ModelDescriptionConstants.VALUE_TYPE);
  for (  AttributeDefinition attr : CommonAttributes.TRANSACTION_ATTRIBUTES) {
    addAttributeDescription(attr,resources,transactionPrefix,transaction);
  }
  String evictionPrefix=keyPrefix + "." + "eviction";
  ModelNode eviction=addNode(requestProperties,ModelKeys.EVICTION,resources.getString(evictionPrefix),ModelType.OBJECT,false).get(ModelDescriptionConstants.VALUE_TYPE);
  for (  AttributeDefinition attr : CommonAttributes.EVICTION_ATTRIBUTES) {
    addAttributeDescription(attr,resources,evictionPrefix,eviction);
  }
  String expirationPrefix=keyPrefix + ".expiration";
  ModelNode expiration=addNode(requestProperties,ModelKeys.EXPIRATION,resources.getString(expirationPrefix),ModelType.OBJECT,false).get(ModelDescriptionConstants.VALUE_TYPE);
  for (  AttributeDefinition attr : CommonAttributes.EXPIRATION_ATTRIBUTES) {
    addAttributeDescription(attr,resources,expirationPrefix,expiration);
  }
  String storePrefix=keyPrefix + "." + "store";
  ModelNode store=addNode(requestProperties,ModelKeys.STORE,resources.getString(storePrefix),ModelType.OBJECT,false).get(ModelDescriptionConstants.VALUE_TYPE);
  for (  AttributeDefinition attr : CommonAttributes.STORE_ATTRIBUTES) {
    addAttributeDescription(attr,resources,storePrefix,store);
  }
  addAttributeDescription(PROPERTY,resources,storePrefix,store).get(ModelDescriptionConstants.VALUE_TYPE).set(ModelType.PROPERTY);
  String fileStorePrefix=keyPrefix + "." + "file-store";
  ModelNode fileStore=addNode(requestProperties,ModelKeys.FILE_STORE,resources.getString(fileStorePrefix),ModelType.OBJECT,false).get(ModelDescriptionConstants.VALUE_TYPE);
  for (  AttributeDefinition attr : CommonAttributes.STORE_ATTRIBUTES) {
    addAttributeDescription(attr,resources,storePrefix,fileStore);
  }
  addAttributeDescription(PROPERTY,resources,storePrefix,fileStore).get(ModelDescriptionConstants.VALUE_TYPE).set(ModelType.PROPERTY);
  addAttributeDescription(RELATIVE_TO,resources,fileStorePrefix,fileStore);
  addAttributeDescription(PATH,resources,fileStorePrefix,fileStore);
  String jdbcStorePrefix=keyPrefix + ".jdbc-store";
  ModelNode jdbcStore=addNode(requestProperties,ModelKeys.JDBC_STORE,resources.getString(jdbcStorePrefix),ModelType.OBJECT,false).get(ModelDescriptionConstants.VALUE_TYPE);
  for (  AttributeDefinition attr : CommonAttributes.STORE_ATTRIBUTES) {
    addAttributeDescription(attr,resources,storePrefix,jdbcStore);
  }
  addAttributeDescription(PROPERTY,resources,storePrefix,jdbcStore).get(ModelDescriptionConstants.VALUE_TYPE).set(ModelType.PROPERTY);
  addAttributeDescription(DATA_SOURCE,resources,jdbcStorePrefix,jdbcStore);
  String remoteStorePrefix=keyPrefix + ".remote-store";
  ModelNode remoteStore=addNode(requestProperties,ModelKeys.REMOTE_STORE,resources.getString(remoteStorePrefix),ModelType.OBJECT,false).get(ModelDescriptionConstants.VALUE_TYPE);
  for (  AttributeDefinition attr : CommonAttributes.STORE_ATTRIBUTES) {
    addAttributeDescription(attr,resources,storePrefix,remoteStore);
  }
  addAttributeDescription(PROPERTY,resources,storePrefix,remoteStore).get(ModelDescriptionConstants.VALUE_TYPE).set(ModelType.PROPERTY);
  addAttributeDescription(REMOTE_SERVER,resources,remoteStorePrefix,remoteStore).get(ModelDescriptionConstants.VALUE_TYPE).set(ModelType.STRING);
}

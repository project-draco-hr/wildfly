{
  ResourceBundle resources=getResources(locale);
  ModelNode description=createTransportOperationDescription(ADD,resources);
  description.get(REQUEST_PROPERTIES,ModelKeys.STACK,TYPE).set(ModelType.STRING);
  description.get(REQUEST_PROPERTIES,ModelKeys.STACK,DESCRIPTION).set(resources.getString("infinispan.container.transport.stack"));
  description.get(REQUEST_PROPERTIES,ModelKeys.STACK,REQUIRED).set(true);
  description.get(REQUEST_PROPERTIES,ModelKeys.EXECUTOR,TYPE).set(ModelType.STRING);
  description.get(REQUEST_PROPERTIES,ModelKeys.EXECUTOR,DESCRIPTION).set(resources.getString("infinispan.container.transport.executor"));
  description.get(REQUEST_PROPERTIES,ModelKeys.EXECUTOR,REQUIRED).set(false);
  description.get(REQUEST_PROPERTIES,ModelKeys.LOCK_TIMEOUT,TYPE).set(ModelType.INT);
  description.get(REQUEST_PROPERTIES,ModelKeys.LOCK_TIMEOUT,DESCRIPTION).set(resources.getString("infinispan.container.transport.lock-timeout"));
  description.get(REQUEST_PROPERTIES,ModelKeys.LOCK_TIMEOUT,REQUIRED).set(false);
  description.get(REQUEST_PROPERTIES,ModelKeys.SITE,TYPE).set(ModelType.STRING);
  description.get(REQUEST_PROPERTIES,ModelKeys.SITE,DESCRIPTION).set(resources.getString("infinispan.container.transport.site"));
  description.get(REQUEST_PROPERTIES,ModelKeys.SITE,REQUIRED).set(false);
  description.get(REQUEST_PROPERTIES,ModelKeys.RACK,TYPE).set(ModelType.STRING);
  description.get(REQUEST_PROPERTIES,ModelKeys.RACK,DESCRIPTION).set(resources.getString("infinispan.container.transport.rack"));
  description.get(REQUEST_PROPERTIES,ModelKeys.RACK,REQUIRED).set(false);
  description.get(REQUEST_PROPERTIES,ModelKeys.MACHINE,TYPE).set(ModelType.STRING);
  description.get(REQUEST_PROPERTIES,ModelKeys.MACHINE,DESCRIPTION).set(resources.getString("infinispan.container.transport.machine"));
  description.get(REQUEST_PROPERTIES,ModelKeys.MACHINE,REQUIRED).set(false);
  return description;
}

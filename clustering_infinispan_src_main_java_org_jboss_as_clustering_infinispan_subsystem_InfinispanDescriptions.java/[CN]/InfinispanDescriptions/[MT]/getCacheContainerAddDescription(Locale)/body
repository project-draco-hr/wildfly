{
  ResourceBundle resources=getResources(locale);
  ModelNode description=createCacheContainerOperationDescription(ModelDescriptionConstants.ADD,resources);
  ModelNode requestProperties=description.get(ModelDescriptionConstants.REQUEST_PROPERTIES);
  addNode(requestProperties,ModelKeys.DEFAULT_CACHE,resources.getString("infinispan.container.default-cache"),ModelType.STRING,true);
  addNode(requestProperties,ModelKeys.LISTENER_EXECUTOR,resources.getString("infinispan.container.listener-executor"),ModelType.STRING,false);
  addNode(requestProperties,ModelKeys.EVICTION_EXECUTOR,resources.getString("infinispan.container.eviction-executor"),ModelType.STRING,false);
  addNode(requestProperties,ModelKeys.REPLICATION_QUEUE_EXECUTOR,resources.getString("infinispan.container.replication-queue-executor"),ModelType.STRING,false);
  addNode(requestProperties,ModelKeys.JNDI_NAME,resources.getString("infinispan.container.jndi-name"),ModelType.STRING,false);
  addNode(requestProperties,ModelKeys.ALIAS,resources.getString("infinispan.container.alias"),ModelType.LIST,false).get(ModelDescriptionConstants.VALUE_TYPE).set(ModelType.STRING);
  ModelNode transport=addNode(requestProperties,ModelKeys.TRANSPORT,resources.getString("infinispan.container.transport"),ModelType.OBJECT,false).get(ModelDescriptionConstants.VALUE_TYPE);
  addNode(transport,ModelKeys.SITE,resources.getString("infinispan.container.transport.site"),ModelType.STRING,false);
  addNode(transport,ModelKeys.RACK,resources.getString("infinispan.container.transport.rack"),ModelType.STRING,false);
  addNode(transport,ModelKeys.MACHINE,resources.getString("infinispan.container.transport.machine"),ModelType.STRING,false);
  addNode(transport,ModelKeys.SITE,resources.getString("infinispan.container.transport.site"),ModelType.STRING,false);
  addNode(transport,ModelKeys.EXECUTOR,resources.getString("infinispan.container.transport.executor"),ModelType.STRING,false);
  addNode(transport,ModelKeys.LOCK_TIMEOUT,resources.getString("infinispan.container.transport.lock-timeout"),ModelType.LONG,false);
  addNode(requestProperties,ModelKeys.CACHE,resources.getString("infinispan.container.cache"),ModelType.LIST,false).get(ModelDescriptionConstants.VALUE_TYPE).set(ModelType.OBJECT);
  return description;
}

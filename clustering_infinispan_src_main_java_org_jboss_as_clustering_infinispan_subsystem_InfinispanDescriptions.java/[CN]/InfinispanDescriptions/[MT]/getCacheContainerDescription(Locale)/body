{
  String keyPrefix="infinispan.container";
  ResourceBundle resources=getResources(locale);
  ModelNode description=createDescription(resources,keyPrefix);
  ModelNode attributes=description.get(ModelDescriptionConstants.ATTRIBUTES);
  addNode(attributes,ModelKeys.DEFAULT_CACHE,resources.getString(keyPrefix + ".default-cache"),ModelType.STRING,false);
  addNode(attributes,ModelKeys.JNDI_NAME,resources.getString(keyPrefix + ".jndi-name"),ModelType.STRING,false);
  addNode(attributes,ModelKeys.LISTENER_EXECUTOR,resources.getString(keyPrefix + ".listener-executor"),ModelType.STRING,false);
  addNode(attributes,ModelKeys.EVICTION_EXECUTOR,resources.getString(keyPrefix + ".eviction-executor"),ModelType.STRING,false);
  addNode(attributes,ModelKeys.REPLICATION_QUEUE_EXECUTOR,resources.getString(keyPrefix + ".replication-queue-executor"),ModelType.STRING,false);
  addNode(attributes,ModelKeys.ALIAS,resources.getString(keyPrefix + ".alias"),ModelType.LIST,false).get(ModelDescriptionConstants.VALUE_TYPE).set(ModelType.STRING);
  description.get(CHILDREN,ModelKeys.SINGLETON,DESCRIPTION).set(resources.getString(keyPrefix + ".transport"));
  description.get(CHILDREN,ModelKeys.SINGLETON,MIN_OCCURS).set(0);
  description.get(CHILDREN,ModelKeys.SINGLETON,MAX_OCCURS).set(1);
  description.get(CHILDREN,ModelKeys.SINGLETON,ALLOWED).setEmptyList().add("transport");
  description.get(CHILDREN,ModelKeys.SINGLETON,MODEL_DESCRIPTION);
  description.get(CHILDREN,ModelKeys.LOCAL_CACHE,DESCRIPTION).set(resources.getString(keyPrefix + ".local-cache"));
  description.get(CHILDREN,ModelKeys.LOCAL_CACHE,MIN_OCCURS).set(0);
  description.get(CHILDREN,ModelKeys.LOCAL_CACHE,MAX_OCCURS).set(Integer.MAX_VALUE);
  description.get(CHILDREN,ModelKeys.LOCAL_CACHE,MODEL_DESCRIPTION);
  description.get(CHILDREN,ModelKeys.INVALIDATION_CACHE,DESCRIPTION).set(resources.getString(keyPrefix + ".invalidation-cache"));
  description.get(CHILDREN,ModelKeys.INVALIDATION_CACHE,MIN_OCCURS).set(0);
  description.get(CHILDREN,ModelKeys.INVALIDATION_CACHE,MAX_OCCURS).set(Integer.MAX_VALUE);
  description.get(CHILDREN,ModelKeys.INVALIDATION_CACHE,MODEL_DESCRIPTION);
  description.get(CHILDREN,ModelKeys.REPLICATED_CACHE,DESCRIPTION).set(resources.getString(keyPrefix + ".replicated-cache"));
  description.get(CHILDREN,ModelKeys.REPLICATED_CACHE,MIN_OCCURS).set(0);
  description.get(CHILDREN,ModelKeys.REPLICATED_CACHE,MAX_OCCURS).set(Integer.MAX_VALUE);
  description.get(CHILDREN,ModelKeys.REPLICATED_CACHE,MODEL_DESCRIPTION);
  description.get(CHILDREN,ModelKeys.DISTRIBUTED_CACHE,DESCRIPTION).set(resources.getString(keyPrefix + ".distributed-cache"));
  description.get(CHILDREN,ModelKeys.DISTRIBUTED_CACHE,MIN_OCCURS).set(0);
  description.get(CHILDREN,ModelKeys.DISTRIBUTED_CACHE,MAX_OCCURS).set(Integer.MAX_VALUE);
  description.get(CHILDREN,ModelKeys.DISTRIBUTED_CACHE,MODEL_DESCRIPTION);
  return description;
}

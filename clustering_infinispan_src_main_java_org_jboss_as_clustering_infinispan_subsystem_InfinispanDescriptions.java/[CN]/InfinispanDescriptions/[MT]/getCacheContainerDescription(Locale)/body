{
  ResourceBundle resources=getResources(locale);
  ModelNode description=createDescription(resources,"infinispan.container");
  description.get(CHILDREN,ModelKeys.TRANSPORT,DESCRIPTION).set("The container transport configuration");
  description.get(CHILDREN,ModelKeys.TRANSPORT,MIN_OCCURS).set(0);
  description.get(CHILDREN,ModelKeys.TRANSPORT,MAX_OCCURS).set(1);
  description.get(CHILDREN,ModelKeys.TRANSPORT,MODEL_DESCRIPTION);
  description.get(CHILDREN,ModelKeys.LOCAL_CACHE,DESCRIPTION).set("A local cache resource");
  description.get(CHILDREN,ModelKeys.LOCAL_CACHE,MIN_OCCURS).set(0);
  description.get(CHILDREN,ModelKeys.LOCAL_CACHE,MAX_OCCURS).set(Integer.MAX_VALUE);
  description.get(CHILDREN,ModelKeys.LOCAL_CACHE,MODEL_DESCRIPTION);
  description.get(CHILDREN,ModelKeys.INVALIDATION_CACHE,DESCRIPTION).set("An invalidation cache resource");
  description.get(CHILDREN,ModelKeys.INVALIDATION_CACHE,MIN_OCCURS).set(0);
  description.get(CHILDREN,ModelKeys.INVALIDATION_CACHE,MAX_OCCURS).set(Integer.MAX_VALUE);
  description.get(CHILDREN,ModelKeys.INVALIDATION_CACHE,MODEL_DESCRIPTION);
  description.get(CHILDREN,ModelKeys.REPLICATED_CACHE,DESCRIPTION).set("A replicated cache resource");
  description.get(CHILDREN,ModelKeys.REPLICATED_CACHE,MIN_OCCURS).set(0);
  description.get(CHILDREN,ModelKeys.REPLICATED_CACHE,MAX_OCCURS).set(Integer.MAX_VALUE);
  description.get(CHILDREN,ModelKeys.REPLICATED_CACHE,MODEL_DESCRIPTION);
  description.get(CHILDREN,ModelKeys.DISTRIBUTED_CACHE,DESCRIPTION).set("A distributed cache resource");
  description.get(CHILDREN,ModelKeys.DISTRIBUTED_CACHE,MIN_OCCURS).set(0);
  description.get(CHILDREN,ModelKeys.DISTRIBUTED_CACHE,MAX_OCCURS).set(Integer.MAX_VALUE);
  description.get(CHILDREN,ModelKeys.DISTRIBUTED_CACHE,MODEL_DESCRIPTION);
  return description;
}

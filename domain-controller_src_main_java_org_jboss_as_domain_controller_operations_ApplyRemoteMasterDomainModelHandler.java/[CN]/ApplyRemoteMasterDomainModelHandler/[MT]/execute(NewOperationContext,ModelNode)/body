{
  final ModelNode domainModel=operation.get(DOMAIN_MODEL);
  final ModelNode rootModel=context.readModelForUpdate(PathAddress.EMPTY_ADDRESS);
  if (domainModel.hasDefined(NAMESPACES)) {
    rootModel.get(NAMESPACES).set(domainModel.get(NAMESPACES));
  }
  if (domainModel.hasDefined(SCHEMA_LOCATIONS)) {
    rootModel.get(SCHEMA_LOCATIONS).set(domainModel.get(SCHEMA_LOCATIONS));
  }
  if (domainModel.hasDefined(EXTENSION)) {
    rootModel.get(EXTENSION).set(domainModel.get(EXTENSION));
  }
  if (domainModel.hasDefined(PATH)) {
    rootModel.get(PATH).set(domainModel.get(PATH));
  }
  if (domainModel.hasDefined(SYSTEM_PROPERTY)) {
    rootModel.get(SYSTEM_PROPERTY).set(domainModel.get(SYSTEM_PROPERTY));
  }
  if (domainModel.hasDefined(PROFILE)) {
    rootModel.get(PROFILE).set(domainModel.get(PROFILE));
  }
  if (domainModel.hasDefined(INTERFACE)) {
    rootModel.get(INTERFACE).set(domainModel.get(INTERFACE));
  }
  if (domainModel.hasDefined(SOCKET_BINDING_GROUP)) {
    rootModel.get(SOCKET_BINDING_GROUP).set(domainModel.get(SOCKET_BINDING_GROUP));
  }
  if (domainModel.hasDefined(DEPLOYMENT)) {
    rootModel.get(DEPLOYMENT).set(domainModel.get(DEPLOYMENT));
  }
  if (domainModel.hasDefined(SERVER_GROUP)) {
    rootModel.get(SERVER_GROUP).set(domainModel.get(SERVER_GROUP));
  }
  final Set<String> modules=new HashSet<String>();
  if (rootModel != null && rootModel.hasDefined(EXTENSION)) {
    for (    Property prop : rootModel.get(EXTENSION).asPropertyList()) {
      try {
        final String module=prop.getValue().get(ExtensionDescription.MODULE).asString();
        if (modules.contains(module)) {
          continue;
        }
        for (        final Extension extension : Module.loadServiceFromCallerModuleLoader(ModuleIdentifier.fromString(module),Extension.class)) {
          modules.add(module);
          context.addStep(new NewStepHandler(){
            public void execute(            NewOperationContext context,            ModelNode operation) throws OperationFailedException {
              extension.initialize(extensionContext);
              context.completeStep();
            }
          }
,Stage.IMMEDIATE);
        }
      }
 catch (      ModuleLoadException e) {
        throw new RuntimeException(e);
      }
    }
  }
  context.completeStep();
}

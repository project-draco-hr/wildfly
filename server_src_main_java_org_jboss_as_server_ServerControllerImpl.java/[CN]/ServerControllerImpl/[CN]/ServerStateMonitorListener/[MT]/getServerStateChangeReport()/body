{
  final Map<ServiceController<?>,String> newFailedControllers=new IdentityHashMap<ServiceController<?>,String>(latestSettledFailedControllers);
  newFailedControllers.keySet().removeAll(lastReportFailedControllers.keySet());
  lastReportFailedControllers.clear();
  lastReportFailedControllers.putAll(latestSettledFailedControllers);
  final Map<ServiceName,Set<ServiceName>> newReportMissingDeps=new TreeMap<ServiceName,Set<ServiceName>>(previousMissingDeps);
  for (  ServiceName dep : lastReportMissingDepSet) {
    newReportMissingDeps.remove(dep);
  }
  lastReportMissingDepSet.clear();
  lastReportMissingDepSet.addAll(previousMissingDeps.keySet());
  ModelNode report=null;
  if (!newFailedControllers.isEmpty() || !newReportMissingDeps.isEmpty()) {
    report=new ModelNode();
    if (!newReportMissingDeps.isEmpty()) {
      ModelNode missing=report.get("New missing/unsatisfied dependencies");
      for (      Map.Entry<ServiceName,Set<ServiceName>> entry : newReportMissingDeps.entrySet()) {
        final ServiceName name=entry.getKey();
        ServiceController<?> controller=serviceRegistry.getService(name);
        StringBuilder missingText=new StringBuilder(name.toString());
        if (controller == null) {
          missingText.append(" (missing)");
        }
 else {
          missingText.append(" (unavailable)\n");
        }
        missingText.append(" required by [");
        Iterator<ServiceName> it=entry.getValue().iterator();
        while (it.hasNext()) {
          ServiceName requiring=it.next();
          missingText.append(requiring);
          if (it.hasNext()) {
            missingText.append(", ");
          }
        }
        missingText.append("]");
        missing.add(missingText.toString());
      }
    }
    if (!newFailedControllers.isEmpty()) {
      ModelNode failed=report.get("Services which failed to start:");
      for (      Map.Entry<ServiceController<?>,String> entry : newFailedControllers.entrySet()) {
        failed.add(entry.getKey().getName().toString());
      }
    }
  }
  firstReportDone=true;
  return report;
}

{
  if (!modelComplete.get()) {
    super.handleFailures();
  }
 else   if (rollbackOnRuntimeFailure) {
    final ModelNode compensatingOp=getOverallCompensatingOperation();
    if (compensatingOp.isDefined()) {
      final ResultHandler rollbackResultHandler=new RollbackResultHandler();
      Runnable r=new Runnable(){
        @Override public void run(){
          execute(OperationBuilder.Factory.create(compensatingOp).build(),rollbackResultHandler);
        }
      }
;
      executorService.execute(r);
    }
 else {
      super.handleFailures();
    }
  }
 else   if (resultHandler instanceof StepResultHandler) {
    resultHandler.handleResultFragment(ResultHandler.EMPTY_LOCATION,resultsNode);
    if (overallFailure != null) {
      resultHandler.handleFailed(overallFailure);
    }
 else {
      final ModelNode failureMsg=new ModelNode();
      final String baseMsg="Composite operation failed. Steps that failed:";
      for (      Property property : resultsNode.asPropertyList()) {
        final ModelNode stepResult=property.getValue();
        if (stepResult.hasDefined(FAILURE_DESCRIPTION)) {
          failureMsg.get(baseMsg,"Operation " + property.getName()).set(stepResult.get(FAILURE_DESCRIPTION));
        }
      }
      resultHandler.handleFailed(failureMsg);
    }
  }
 else {
    resultHandler.handleResultFragment(ResultHandler.EMPTY_LOCATION,resultsNode);
    resultHandler.handleResultComplete();
  }
}

{
  final ThreadFactoryService tf=(ThreadFactoryService)service.getService();
  if (CommonAttributes.GROUP_NAME.equals(attributeName)) {
    final ModelNode value=PoolAttributeDefinitions.GROUP_NAME.resolveModelAttribute(context,operation);
    tf.setThreadGroupName(value.isDefined() ? value.asString() : null);
  }
 else   if (CommonAttributes.PRIORITY.equals(attributeName)) {
    final ModelNode value=PoolAttributeDefinitions.PRIORITY.resolveModelAttribute(context,operation);
    tf.setPriority(value.isDefined() ? new Integer(value.asInt()) : null);
  }
 else   if (CommonAttributes.THREAD_NAME_PATTERN.equals(attributeName)) {
    final ModelNode value=PoolAttributeDefinitions.THREAD_NAME_PATTERN.resolveModelAttribute(context,operation);
    tf.setNamePattern(value.isDefined() ? value.asString() : null);
  }
 else   if (!forRollback) {
    throw ThreadsLogger.ROOT_LOGGER.unsupportedThreadFactoryAttribute(attributeName);
  }
}

{
  KernelServicesBuilder builder=createKernelServicesBuilder(this.createAdditionalInitialization().withCapabilities(buildDynamicCapabilityName("org.wildfly.security.security-domain","ApplicationDomain"),IDENTITY_CAPABILITY));
  builder.createLegacyKernelServicesBuilder(null,controller,model).addMavenResourceURL(mavenResourceURLs).dontPersistXml();
  KernelServices services=builder.build();
  Assert.assertTrue(services.isSuccessfulBoot());
  KernelServices legacyServices=services.getLegacyServices(model);
  Assert.assertNotNull(legacyServices);
  Assert.assertTrue(legacyServices.isSuccessfulBoot());
  List<ModelNode> operations=builder.parseXmlResource("subsystem-ejb3-transform-reject.xml");
  ModelTestUtils.checkFailedTransformedBootOperations(services,model,operations,createFailedOperationTransformationConfig(services,model));
}

{
  HashSet<InetAddress> addresses=new HashSet<InetAddress>();
  for (  InterfaceCriteria criteria : interfaceCriteria) {
    InetAddress bindAddress=criteria.isAcceptable(networkInterface,address);
    if (bindAddress == null) {
      log.debugf("Criteria(%s) failed to accept input\n",criteria);
      return null;
    }
    log.tracef("%s accepted input, provided bind address: %s",criteria,bindAddress);
    addresses.add(bindAddress);
  }
  log.debugf("Candidate accepted addresses are: %s\n",addresses);
  InetAddress bindAddress=null;
  if (addresses.size() > 0) {
    log.tracef("Determining unique address from among: %s\n",addresses.toString());
    if (addresses.size() == 1)     bindAddress=addresses.iterator().next();
 else {
      if (addresses.size() > 2)       ServerLogger.ROOT_LOGGER.moreThanTwoUniqueCriteria(addresses.toString());
 else {
        ServerLogger.ROOT_LOGGER.checkingTwoUniqueCriteria(addresses.toString());
        addresses.remove(address);
        if (addresses.size() == 1)         bindAddress=addresses.iterator().next();
 else         ServerLogger.ROOT_LOGGER.twoUniqueCriteriaAddresses(addresses.toString());
      }
    }
  }
  return bindAddress;
}

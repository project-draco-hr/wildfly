{
  this.standalone=standalone;
  if (props == null) {
    throw new IllegalArgumentException("props is null");
  }
  String hostName=props.getProperty("jboss.host.name");
  String qualifiedHostName=props.getProperty("jboss.qualified.host.name");
  if (qualifiedHostName == null) {
    qualifiedHostName=hostName;
    if (qualifiedHostName == null) {
      qualifiedHostName=env.get("HOSTNAME");
    }
    if (qualifiedHostName == null) {
      qualifiedHostName=env.get("COMPUTERNAME");
    }
    if (qualifiedHostName == null) {
      try {
        qualifiedHostName=InetAddress.getLocalHost().getHostName();
      }
 catch (      UnknownHostException e) {
        qualifiedHostName=null;
      }
    }
    if (qualifiedHostName != null && qualifiedHostName.matches("^\\d+\\.\\d+\\.\\d+\\.\\d+$|:")) {
      qualifiedHostName=null;
    }
    if (qualifiedHostName == null) {
      qualifiedHostName="unknown-host.unknown-domain";
    }
    qualifiedHostName=qualifiedHostName.trim().toLowerCase();
    SecurityActions.setSystemProperty("jboss.qualified.host.name",qualifiedHostName);
  }
  this.qualifiedHostName=qualifiedHostName;
  if (hostName == null) {
    final int idx=qualifiedHostName.indexOf('.');
    hostName=idx == -1 ? qualifiedHostName : qualifiedHostName.substring(0,idx);
    SecurityActions.setSystemProperty("jboss.host.name",hostName);
  }
  this.hostName=hostName;
  String serverName=props.getProperty("jboss.server.name");
  if (serverName == null) {
    serverName=hostName;
    SecurityActions.setSystemProperty("jboss.server.name",serverName);
  }
  this.serverName=serverName;
  String nodeName=props.getProperty("jboss.node.name");
  if (nodeName == null) {
    nodeName=serverName;
    SecurityActions.setSystemProperty("jboss.node.name",nodeName);
  }
  this.nodeName=nodeName;
  homeDir=getFileFromProperty(HOME_DIR,props);
  if (homeDir == null)   throw new IllegalStateException("Missing configuration value for: " + HOME_DIR);
  SecurityActions.setSystemProperty(HOME_DIR,homeDir.getAbsolutePath());
  File tmp=getFileFromProperty(MODULES_DIR,props);
  if (tmp == null) {
    tmp=new File(homeDir,"modules");
  }
  modulesDir=tmp;
  SecurityActions.setSystemProperty(MODULES_DIR,modulesDir.getAbsolutePath());
  tmp=getFileFromProperty(SERVER_BASE_DIR,props);
  if (tmp == null) {
    tmp=new File(homeDir,"standalone");
  }
  serverBaseDir=tmp;
  SecurityActions.setSystemProperty(SERVER_BASE_DIR,serverBaseDir.getAbsolutePath());
  tmp=getFileFromProperty(SERVER_CONFIG_DIR,props);
  if (tmp == null) {
    tmp=new File(serverBaseDir,"configuration");
  }
  serverConfigurationDir=tmp;
  SecurityActions.setSystemProperty(SERVER_CONFIG_DIR,serverConfigurationDir.getAbsolutePath());
  tmp=getFileFromProperty(SERVER_DATA_DIR,props);
  if (tmp == null) {
    tmp=new File(serverBaseDir,"data");
  }
  serverDataDir=tmp;
  SecurityActions.setSystemProperty(SERVER_DATA_DIR,serverDataDir.getAbsolutePath());
  tmp=getFileFromProperty(SERVER_DEPLOY_DIR,props);
  if (tmp == null) {
    tmp=new File(serverDataDir,"content");
  }
  serverDeployDir=tmp;
  SecurityActions.setSystemProperty(SERVER_DEPLOY_DIR,serverDeployDir.getAbsolutePath());
  tmp=getFileFromProperty(SERVER_SYSTEM_DEPLOY_DIR,props);
  if (tmp == null) {
    tmp=new File(serverDataDir,"system-content");
  }
  serverSystemDeployDir=tmp;
  SecurityActions.setSystemProperty(SERVER_SYSTEM_DEPLOY_DIR,serverSystemDeployDir.getAbsolutePath());
  tmp=getFileFromProperty(SERVER_LOG_DIR,props);
  if (tmp == null) {
    tmp=new File(serverBaseDir,"log");
  }
  serverLogDir=tmp;
  SecurityActions.setSystemProperty(SERVER_LOG_DIR,serverLogDir.getAbsolutePath());
  tmp=getFileFromProperty(SERVER_TEMP_DIR,props);
  if (tmp == null) {
    tmp=new File(serverBaseDir,"tmp");
  }
  serverTempDir=tmp;
  SecurityActions.setSystemProperty(SERVER_TEMP_DIR,serverTempDir.getAbsolutePath());
}

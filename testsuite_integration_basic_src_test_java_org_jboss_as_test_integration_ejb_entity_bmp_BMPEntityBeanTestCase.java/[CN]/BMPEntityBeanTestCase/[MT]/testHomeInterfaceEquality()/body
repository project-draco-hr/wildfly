{
  final BMPLocalHome home1=getHome();
  final BMPLocalHome home2=getHome();
  Assert.assertEquals(home1,home2);
  Assert.assertEquals(home1.hashCode(),home2.hashCode());
  Assert.assertNotSame(home1,new BMPLocalHome(){
    @Override public BMPLocalInterface createEmpty(){
      return null;
    }
    @Override public BMPLocalInterface createWithValue(    final String value){
      return null;
    }
    @Override public BMPLocalInterface createWithValueAndPk(    final Integer pk,    final String value){
      return null;
    }
    @Override public BMPLocalInterface findByPrimaryKey(    final Integer primaryKey){
      return null;
    }
    @Override public BMPLocalInterface findByValue(    final String value){
      return null;
    }
    @Override public Collection<BMPLocalInterface> findCollection(){
      return null;
    }
    @Override public Collection<BMPLocalInterface> findSortedCollection(){
      return null;
    }
    @Override public Enumeration<BMPLocalInterface> findSortedEnumeration(){
      return null;
    }
    @Override public int exampleHomeMethod(){
      return 0;
    }
    @Override public void remove(    final Object primaryKey) throws RemoveException, EJBException {
    }
  }
);
}

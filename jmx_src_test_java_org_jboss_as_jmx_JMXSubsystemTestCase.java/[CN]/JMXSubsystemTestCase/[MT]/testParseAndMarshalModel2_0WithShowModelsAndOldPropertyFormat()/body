{
  String subsystemXml="<subsystem xmlns=\"" + Namespace.JMX_2_0.getUriString() + "\">"+ "   <expose-resolved-model domain-name=\"jboss.RESOLVED\" proper-property-format=\"false\"/>"+ "   <expose-expression-model domain-name=\"jboss.EXPRESSION\"/>"+ "   <sensitivity core-mbeans=\"true\"/>"+ "</subsystem>";
  AdditionalInitialization additionalInit=new BaseAdditionalInitalization();
  KernelServices servicesA=createKernelServicesBuilder(additionalInit).setSubsystemXml(subsystemXml).build();
  Assert.assertTrue(servicesA.isSuccessfulBoot());
  ModelNode modelA=servicesA.readWholeModel();
  Assert.assertTrue(modelA.get(SUBSYSTEM,"jmx",CommonAttributes.EXPOSE_MODEL,CommonAttributes.RESOLVED).hasDefined(CommonAttributes.PROPER_PROPERTY_FORMAT));
  Assert.assertFalse(modelA.get(SUBSYSTEM,"jmx",CommonAttributes.EXPOSE_MODEL,CommonAttributes.RESOLVED,CommonAttributes.PROPER_PROPERTY_FORMAT).asBoolean());
  String marshalled=servicesA.getPersistedSubsystemXml();
  servicesA.shutdown();
  Assert.assertTrue(marshalled.contains(Namespace.CURRENT.getUriString()));
  compareXml(null,subsystemXml,marshalled,true);
  KernelServices servicesB=createKernelServicesBuilder(additionalInit).setSubsystemXml(marshalled).build();
  ModelNode modelB=servicesB.readWholeModel();
  super.compare(modelA,modelB);
}

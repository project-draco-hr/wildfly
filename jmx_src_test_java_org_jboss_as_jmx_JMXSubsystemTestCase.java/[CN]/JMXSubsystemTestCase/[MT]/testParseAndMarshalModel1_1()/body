{
  String subsystemXml="<subsystem xmlns=\"" + Namespace.JMX_1_1.getUriString() + "\">"+ "<show-model value=\"true\"/>"+ "<remoting-connector/>"+ "</subsystem>";
  String finishedXml="<subsystem xmlns=\"" + Namespace.CURRENT.getUriString() + "\">"+ "    <expose-resolved-model proper-property-format=\"false\"/>"+ "    <remoting-connector/>"+ "</subsystem>";
  AdditionalInitialization additionalInit=new BaseAdditionalInitalization();
  KernelServices servicesA=createKernelServicesBuilder(additionalInit).setSubsystemXml(subsystemXml).build();
  ModelNode modelA=servicesA.readWholeModel();
  String marshalled=servicesA.getPersistedSubsystemXml();
  servicesA.shutdown();
  Assert.assertTrue(marshalled.contains(Namespace.CURRENT.getUriString()));
  compareXml(null,finishedXml,marshalled,true);
  KernelServices servicesB=createKernelServicesBuilder(additionalInit).setSubsystemXml(marshalled).build();
  ModelNode modelB=servicesB.readWholeModel();
  super.compare(modelA,modelB);
}

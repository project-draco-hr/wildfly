{
  try {
    Class<?> clazz=legacyChildFirstClassLoader.loadClass(ChildFirstClassLoaderKernelServicesFactory.class.getName());
    Method m=clazz.getMethod("create",String.class,String.class,legacyChildFirstClassLoader.loadClass(AdditionalInitialization.class.getName()),legacyChildFirstClassLoader.loadClass(ModelTestOperationValidatorFilter.class.getName()),List.class,legacyChildFirstClassLoader.loadClass(ModelVersion.class.getName()),Boolean.TYPE);
    List<Object> convertedBootOps=new ArrayList<Object>();
    for (int i=0; i < bootOperations.size(); i++) {
      ModelNode node=bootOperations.get(i);
      if (node != null) {
        convertedBootOps.add(objectConverter.convertModelNodeToChildCl(node));
      }
    }
    Object convertedAdditionalInit=null;
    Object convertedModelVersion=objectConverter.convertModelVersionToChildCl(legacyModelVersion);
    Object convertedValidateOpsFilter=objectConverter.convertValidateOperationsFilterToChildCl(validateOpsFilter);
    return m.invoke(null,mainSubsystemName,extensionClassName,convertedAdditionalInit,convertedValidateOpsFilter,convertedBootOps,convertedModelVersion,persistXml);
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
}

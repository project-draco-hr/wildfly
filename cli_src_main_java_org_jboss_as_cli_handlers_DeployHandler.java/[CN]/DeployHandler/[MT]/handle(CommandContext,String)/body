{
  ModelControllerClient client=ctx.getModelControllerClient();
  if (client == null) {
    ctx.printLine("The controller client is not available. Make sure you are connected to the controller.");
    return;
  }
  if (args == null) {
    ctx.printLine("The argument is missing.");
    return;
  }
  File f=new File(args);
  if (!f.exists()) {
    ctx.printLine("The path doesn't exist: " + f.getAbsolutePath());
    return;
  }
  final String name=f.getName();
  if (name.isEmpty()) {
    ctx.printLine("The path is empty.");
  }
  final String runtimeName=name;
  final String url;
  try {
    url=f.toURI().toURL().toExternalForm();
  }
 catch (  Exception e) {
    ctx.printLine("Failed to create a URL from '" + args + "': "+ e.getLocalizedMessage());
    return;
  }
  DefaultOperationRequestBuilder builder=new DefaultOperationRequestBuilder();
  builder.setOperationName("upload-deployment-url");
  builder.addProperty("name",name);
  builder.addProperty("runtime-name",runtimeName);
  builder.addProperty("url",url);
  ModelNode result;
  try {
    ModelNode request=builder.buildRequest();
    result=client.execute(request);
  }
 catch (  Exception e) {
    ctx.printLine("Failed to upload content: " + e.getLocalizedMessage());
    return;
  }
  if (!Util.isSuccess(result)) {
    ctx.printLine(Util.getFailureDescription(result));
    return;
  }
  byte[] hash=Util.getHash(result);
  if (hash == null) {
    ctx.printLine("Failed to obtain the hash of the deployment.");
    return;
  }
  builder=new DefaultOperationRequestBuilder();
  builder.setOperationName("add");
  builder.addNode("deployment",name);
  builder.getModelNode().get("hash").set(hash);
  try {
    ModelNode request=builder.buildRequest();
    result=client.execute(request);
  }
 catch (  Exception e) {
    ctx.printLine("Failed to add the deployment content to the repository: " + e.getLocalizedMessage());
    return;
  }
  if (!Util.isSuccess(result)) {
    ctx.printLine(Util.getFailureDescription(result));
    return;
  }
  builder=new DefaultOperationRequestBuilder();
  builder.setOperationName("deploy");
  builder.addNode("deployment",name);
  try {
    ModelNode request=builder.buildRequest();
    result=client.execute(request);
  }
 catch (  Exception e) {
    ctx.printLine("Failed to deploy: " + e.getLocalizedMessage());
    return;
  }
  if (!Util.isSuccess(result)) {
    ctx.printLine(Util.getFailureDescription(result));
    return;
  }
  ctx.printLine("'" + name + "' deployed successfully.");
}

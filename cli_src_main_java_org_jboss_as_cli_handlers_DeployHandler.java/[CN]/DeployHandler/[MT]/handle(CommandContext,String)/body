{
  ModelControllerClient client=ctx.getModelControllerClient();
  if (client == null) {
    ctx.printLine("The controller client is not available. Make sure you are connected to the controller.");
    return;
  }
  if (args == null) {
    ctx.printLine("Required argument is missing.");
    return;
  }
  final String filePath;
  final String name;
  final String runtimeName;
  int spaceInd=args.indexOf(' ');
  if (spaceInd < 0) {
    filePath=args;
  }
 else {
    filePath=args.substring(0,spaceInd);
  }
  File f=new File(filePath);
  if (!f.exists()) {
    ctx.printLine("The path doesn't exist: " + f.getAbsolutePath());
    return;
  }
  if (spaceInd < 0) {
    name=f.getName();
    runtimeName=null;
  }
 else {
    char ch=args.charAt(spaceInd++);
    while (spaceInd < args.length() && Character.isWhitespace(ch)) {
      ch=args.charAt(spaceInd++);
    }
    if (spaceInd == args.length()) {
      name=f.getName();
      runtimeName=null;
    }
 else {
      int nextSpace=args.indexOf(' ',spaceInd + 1);
      if (nextSpace < 0) {
        name=args.substring(spaceInd - 1,args.length());
        runtimeName=null;
      }
 else {
        name=args.substring(spaceInd - 1,nextSpace);
        runtimeName=args.substring(nextSpace).trim();
      }
    }
  }
  DefaultOperationRequestBuilder builder=new DefaultOperationRequestBuilder();
  ModelNode result;
  builder=new DefaultOperationRequestBuilder();
  builder.setOperationName("add");
  builder.addNode("deployment",name);
  if (runtimeName != null) {
    builder.addProperty("runtime-name",runtimeName);
  }
  FileInputStream is=null;
  try {
    is=new FileInputStream(f);
    ModelNode request=builder.buildRequest();
    OperationBuilder op=OperationBuilder.Factory.create(request);
    op.addInputStream(is);
    request.get("input-stream-index").set(0);
    result=client.execute(op.build());
  }
 catch (  Exception e) {
    ctx.printLine("Failed to add the deployment content to the repository: " + e.getLocalizedMessage());
    return;
  }
 finally {
    StreamUtils.safeClose(is);
  }
  if (!Util.isSuccess(result)) {
    ctx.printLine(Util.getFailureDescription(result));
    return;
  }
  builder=new DefaultOperationRequestBuilder();
  builder.setOperationName("deploy");
  builder.addNode("deployment",name);
  try {
    ModelNode request=builder.buildRequest();
    result=client.execute(request);
  }
 catch (  Exception e) {
    ctx.printLine("Failed to deploy: " + e.getLocalizedMessage());
    return;
  }
  if (!Util.isSuccess(result)) {
    ctx.printLine(Util.getFailureDescription(result));
    return;
  }
  ctx.printLine("'" + name + "' deployed successfully.");
}

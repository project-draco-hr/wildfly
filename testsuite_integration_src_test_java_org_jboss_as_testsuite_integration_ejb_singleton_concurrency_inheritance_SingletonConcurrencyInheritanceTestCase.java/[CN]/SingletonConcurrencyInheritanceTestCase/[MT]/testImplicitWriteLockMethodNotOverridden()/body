{
  final SingletonBaseBean singleton=lookup(SingletonChildBean.class.getSimpleName(),SingletonChildBean.class);
  ExecutorService pool=Executors.newSingleThreadExecutor();
  final CountDownLatch latch=new CountDownLatch(2);
  final CountDownLatch entered=new CountDownLatch(1);
  Future<?> future=pool.submit(new Runnable(){
    @Override public void run(){
      try {
        singleton.impliedWriteLock(latch,entered);
      }
 catch (      InterruptedException e) {
        throw new RuntimeException(e);
      }
    }
  }
);
  entered.await();
  try {
    singleton.impliedWriteLock(latch,entered);
    throw new RuntimeException("Expecting a concurrency access exception");
  }
 catch (  ConcurrentAccessTimeoutException e) {
  }
  latch.countDown();
  future.get();
}

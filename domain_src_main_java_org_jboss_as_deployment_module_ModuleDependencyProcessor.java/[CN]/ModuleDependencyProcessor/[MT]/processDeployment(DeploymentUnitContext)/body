{
  final VirtualFile deploymentRoot=getVirtualFileAttachment(context);
  final Manifest manifest;
  try {
    manifest=VFSUtils.getManifest(deploymentRoot);
  }
 catch (  IOException e) {
    throw new DeploymentUnitProcessingException("Failed to get manifest for deployment " + deploymentRoot,e,new Location(e.getStackTrace()[0].getFileName(),e.getStackTrace()[0].getLineNumber(),-1,null));
  }
  if (manifest == null)   return;
  final String dependencyString=manifest.getMainAttributes().getValue("Dependencies");
  if (dependencyString == null)   return;
  final String[] dependencyDefs=dependencyString.split(",");
  for (  String dependencyDef : dependencyDefs) {
    final String[] dependencyParts=dependencyDef.split(" ");
    final int dependencyPartsLength=dependencyParts.length;
    if (dependencyPartsLength == 0)     throw new RuntimeException("Invalid dependency: " + dependencyString);
    final ModuleIdentifier dependencyId=ModuleIdentifier.fromString(dependencyParts[0]);
    boolean export=parseOptionalExportParams(dependencyParts,"export");
    boolean optional=parseOptionalExportParams(dependencyParts,"export");
    ModuleConfig.Dependency dependency=new ModuleConfig.Dependency(dependencyId,true,optional,export);
    Dependencies.addDependency(context,dependency);
  }
}

{
  final Manifest manifest=phaseContext.getAttachment(Attachments.MANIFEST);
  if (manifest == null)   return;
  final String dependencyString=manifest.getMainAttributes().getValue("Dependencies");
  if (dependencyString == null)   return;
  final String[] dependencyDefs=dependencyString.split(",");
  for (  String dependencyDef : dependencyDefs) {
    final String[] dependencyParts=dependencyDef.split(" ");
    final int dependencyPartsLength=dependencyParts.length;
    if (dependencyPartsLength == 0)     throw new RuntimeException("Invalid dependency: " + dependencyString);
    final ModuleIdentifier dependencyId=ModuleIdentifier.fromString(dependencyParts[0]);
    boolean export=parseOptionalExportParams(dependencyParts,"export");
    boolean optional=parseOptionalExportParams(dependencyParts,"optional");
    ModuleDependency dependency=new ModuleDependency(dependencyId,optional,export);
    phaseContext.addToAttachmentList(Attachments.MODULE_DEPENDENCIES,dependency);
  }
}

{
  ModelNode model=context.readResource(PathAddress.EMPTY_ADDRESS).getModel();
  final String roleName=RoleMappingResourceDefinition.getRoleName(operation);
  final AuthorizerConfiguration.PrincipalType principalType=PrincipalResourceDefinition.getPrincipalType(context,model);
  final String realm=PrincipalResourceDefinition.getRealm(context,model);
  final String name=PrincipalResourceDefinition.getName(context,model);
  context.removeResource(PathAddress.EMPTY_ADDRESS);
  if (matchType == WritableAuthorizerConfiguration.MatchType.INCLUDE) {
    RbacSanityCheckOperation.addOperation(context);
  }
  registerRuntimeRemove(context,roleName.toUpperCase(Locale.ENGLISH),principalType,name,realm);
  context.stepCompleted();
}

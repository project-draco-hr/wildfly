{
  SubsystemRegistration subsystem=context.registerSubsystem(SUBSYSTEM_NAME,MANAGEMENT_API_MAJOR_VERSION,MANAGEMENT_API_MINOR_VERSION,MANAGEMENT_API_MICRO_VERSION);
  final ResolvePathHandler resolvePathHandler;
  if (context.getProcessType().isServer()) {
    resolvePathHandler=ResolvePathHandler.Builder.of(context.getPathManager()).setPathAttribute(FileStoreResource.PATH).setRelativeToAttribute(FileStoreResource.RELATIVE_TO).build();
  }
 else {
    resolvePathHandler=null;
  }
  subsystem.registerSubsystemModel(new InfinispanSubsystemRootResource(resolvePathHandler));
  subsystem.registerXMLElementWriter(new InfinispanSubsystemXMLWriter());
  TransformersSubRegistration reg=subsystem.registerModelTransformers(ModelVersion.create(1,3),new InfinispanSubsystemTransformer_1_3());
  TransformersSubRegistration containerReg=reg.registerSubResource(CacheContainerResource.CONTAINER_PATH);
  InfinispanOperationTransformer_1_3 ot=new InfinispanOperationTransformer_1_3();
  containerReg.registerSubResource(LocalCacheResource.LOCAL_CACHE_PATH).registerOperationTransformer(ADD,ot);
  containerReg.registerSubResource(InvalidationCacheResource.INVALIDATION_CACHE_PATH).registerOperationTransformer(ADD,ot);
  containerReg.registerSubResource(ReplicatedCacheResource.REPLICATED_CACHE_PATH).registerOperationTransformer(ADD,ot);
  containerReg.registerSubResource(DistributedCacheResource.DISTRIBUTED_CACHE_PATH).registerOperationTransformer(ADD,ot);
}

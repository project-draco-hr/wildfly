{
  InfinispanResourceAndOperationTransformer_1_3 resourceAndOperationTransformer=new InfinispanResourceAndOperationTransformer_1_3();
  final RejectExpressionValuesTransformer totalReject=new RejectExpressionValuesTransformer(InfinispanRejectedExpressions_1_3.REJECT_TOTAL);
  final ChainedResourceTransformer chainedResourceAndOperationTransformer=new ChainedResourceTransformer(resourceAndOperationTransformer,totalReject.getChainedTransformer());
  TransformersSubRegistration registration=subsystem.registerModelTransformers(ModelVersion.create(1,3),chainedResourceAndOperationTransformer);
  final RejectExpressionValuesTransformer cacheContainerReject=new RejectExpressionValuesTransformer(InfinispanRejectedExpressions_1_3.REJECT_CONTAINER_ATTRIBUTES);
  TransformersSubRegistration containerRegistration=registerTransformer(registration,CacheContainerResource.CONTAINER_PATH,cacheContainerReject,cacheContainerReject,cacheContainerReject.getWriteAttributeTransformer(),null);
  final RejectExpressionValuesTransformer transportReject=new RejectExpressionValuesTransformer(InfinispanRejectedExpressions_1_3.REJECT_TRANSPORT_ATTRIBUTES);
  registerTransformer(containerRegistration,TransportResource.TRANSPORT_PATH,transportReject,transportReject,transportReject.getWriteAttributeTransformer(),null);
  final InfinispanDiscardAttributesTransformer removeSelectedCacheAttributes=new InfinispanDiscardAttributesTransformer(ModelKeys.INDEXING,ModelKeys.SEGMENTS,ModelKeys.VIRTUAL_NODES);
  final RejectExpressionValuesTransformer cacheReject=new RejectExpressionValuesTransformer(InfinispanRejectedExpressions_1_3.REJECT_CACHE_ATTRIBUTES);
  final ChainedResourceTransformer chainedResource=new ChainedResourceTransformer(resourceAndOperationTransformer,cacheReject.getChainedTransformer());
  final ChainedOperationTransformer chainedAdd=new ChainedOperationTransformer(resourceAndOperationTransformer,cacheReject);
  final ChainedOperationTransformer chainedWrite=new ChainedOperationTransformer(resourceAndOperationTransformer.getWriteAttributeTransformer(),cacheReject.getWriteAttributeTransformer());
  PathElement[] cachePaths={LocalCacheResource.LOCAL_CACHE_PATH,InvalidationCacheResource.INVALIDATION_CACHE_PATH,ReplicatedCacheResource.REPLICATED_CACHE_PATH,DistributedCacheResource.DISTRIBUTED_CACHE_PATH};
  for (int i=0; i < cachePaths.length; i++) {
    TransformersSubRegistration cacheRegistration=registerTransformer(containerRegistration,cachePaths[i],chainedResource,chainedAdd,chainedWrite,removeSelectedCacheAttributes.getUndefineAttributeTransformer());
    registerCacheChildrenTransformers(cacheRegistration);
  }
}

{
  ModelNode param=operation.get(INCLUDE);
  ModelNode includes=context.getSubModel().get(INCLUDE);
  ModelNode toRemove=null;
  typeValidator.validateParameter(INCLUDE,param);
  ModelNode newList=new ModelNode().setEmptyList();
  String group=param.asString();
  if (includes.isDefined()) {
    for (    ModelNode included : includes.asList()) {
      if (!group.equals(included.asString())) {
        toRemove=newList.add(included);
        break;
      }
    }
  }
  if (toRemove != null) {
    ModelNode compensating=SocketBindingGroupIncludeAddHandler.getOperation(operation.get(OP_ADDR),group);
    includes.set(newList);
    resultHandler.handleResultComplete();
    return new BasicOperationResult(compensating);
  }
 else {
    throw new OperationFailedException(new ModelNode().set("No included group with name " + group + "found"));
  }
}

{
  try {
    ModelNode param=operation.get(INCLUDE);
    ModelNode includes=context.getSubModel().get(INCLUDE);
    ModelNode toRemove=null;
    String failure=typeValidator.validateParameter(INCLUDE,param);
    if (failure == null) {
      ModelNode newList=new ModelNode().setEmptyList();
      String group=param.asString();
      if (includes.isDefined()) {
        for (        ModelNode included : includes.asList()) {
          if (!group.equals(included.asString())) {
            toRemove=newList.add(included);
            break;
          }
        }
      }
      if (toRemove != null) {
        includes.set(newList);
        ModelNode compensating=SocketBindingGroupIncludeAddHandler.getOperation(operation.get(OP_ADDR),group);
        resultHandler.handleResultComplete(compensating);
      }
 else {
        failure="No included group with name " + group + "found";
      }
    }
    if (failure != null) {
      resultHandler.handleFailed(new ModelNode().set(failure));
    }
  }
 catch (  Exception e) {
    resultHandler.handleFailed(new ModelNode().set(e.getLocalizedMessage()));
  }
  return Cancellable.NULL;
}

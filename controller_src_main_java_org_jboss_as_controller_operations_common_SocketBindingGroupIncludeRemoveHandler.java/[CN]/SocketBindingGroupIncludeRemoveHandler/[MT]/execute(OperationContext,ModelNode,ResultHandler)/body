{
  try {
    ModelNode param=operation.get(INCLUDE);
    ModelNode includes=context.getSubModel().get(INCLUDE);
    ModelNode toRemove=null;
    String failure=typeValidator.validateParameter(INCLUDE,param);
    if (failure != null) {
      throw new OperationFailedException(new ModelNode().set(failure));
    }
    ModelNode newList=new ModelNode().setEmptyList();
    String group=param.asString();
    if (includes.isDefined()) {
      for (      ModelNode included : includes.asList()) {
        if (!group.equals(included.asString())) {
          toRemove=newList.add(included);
          break;
        }
      }
    }
    if (toRemove != null) {
      includes.set(newList);
      resultHandler.handleResultComplete();
      ModelNode compensating=SocketBindingGroupIncludeAddHandler.getOperation(operation.get(OP_ADDR),group);
      return new BasicOperationResult(compensating);
    }
 else {
      throw new OperationFailedException(new ModelNode().set("No included group with name " + group + "found"));
    }
  }
 catch (  Exception e) {
    throw new OperationFailedException(new ModelNode().set(e.getLocalizedMessage()));
  }
}

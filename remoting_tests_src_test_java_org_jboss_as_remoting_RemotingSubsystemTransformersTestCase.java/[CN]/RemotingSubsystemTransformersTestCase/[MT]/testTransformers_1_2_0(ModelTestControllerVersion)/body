{
  KernelServicesBuilder builder=createKernelServicesBuilder(AdditionalInitialization.MANAGEMENT).setSubsystemXmlResource("remoting-with-expressions-and-good-legacy-protocol.xml");
  ModelVersion oldVersion=ModelVersion.create(1,2,0);
  builder.createLegacyKernelServicesBuilder(null,controllerVersion,oldVersion).addMavenResourceURL("org.jboss.as:jboss-as-remoting:" + controllerVersion.getMavenGavVersion()).skipReverseControllerCheck();
  KernelServices mainServices=builder.build();
  assertTrue(mainServices.isSuccessfulBoot());
  KernelServices legacyServices=mainServices.getLegacyServices(oldVersion);
  assertNotNull(legacyServices);
  assertTrue(legacyServices.isSuccessfulBoot());
  checkSubsystemModelTransformation(mainServices,oldVersion,null,false);
  checkRejectOutboundConnectionProtocolNotRemote(mainServices,oldVersion,CommonAttributes.REMOTE_OUTBOUND_CONNECTION,"remote-conn1");
  checkRejectHttpConnector(mainServices,oldVersion);
  checkRejectEndpointConfiguration(mainServices,oldVersion);
}

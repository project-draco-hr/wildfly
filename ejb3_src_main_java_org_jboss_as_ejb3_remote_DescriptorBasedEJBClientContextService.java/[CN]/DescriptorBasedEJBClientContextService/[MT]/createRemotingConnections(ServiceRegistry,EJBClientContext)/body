{
  final Collection<Connection> connections=new ArrayList<Connection>();
  for (  final Map.Entry<ServiceName,InjectedValue<AbstractOutboundConnectionService>> entry : this.remotingOutboundConnections.entrySet()) {
    final InjectedValue<AbstractOutboundConnectionService> injectedValue=entry.getValue();
    final AbstractOutboundConnectionService outboundConnectionService=injectedValue.getValue();
    final String connectionName=outboundConnectionService.getConnectionName();
    logger.debug("Creating remoting EJB receiver for connection " + connectionName);
    try {
      final IoFuture<Connection> futureConnection=outboundConnectionService.connect();
      final Connection connection=IoFutureHelper.get(futureConnection,DEFAULT_CONNECTION_TIMEOUT,TimeUnit.MILLISECONDS);
      connections.add(connection);
    }
 catch (    Exception e) {
      logger.debug("Failed to create a connection for " + connectionName + ". A reconnect handler will be added to the client context",e);
      final ReconnectHandler reconnectHandler=new OutboundConnectionReconnectHandler(serviceRegistry,entry.getKey(),context);
      context.registerReconnectHandler(reconnectHandler);
    }
  }
  return connections;
}

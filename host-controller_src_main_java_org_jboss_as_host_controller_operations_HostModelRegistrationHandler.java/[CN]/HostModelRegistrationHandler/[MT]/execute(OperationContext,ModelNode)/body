{
  if (!context.isBooting()) {
    throw MESSAGES.invocationNotAllowedAfterBoot(OPERATION_NAME);
  }
  final String hostName=operation.require(NAME).asString();
  ManagementResourceRegistration rootRegistration=context.getResourceRegistrationForUpdate();
  hostModelRegistrar.registerHostModel(hostName,rootRegistration);
  final PathAddress hostAddress=PathAddress.pathAddress(PathElement.pathElement(HOST,hostName));
  final Resource rootResource=context.createResource(hostAddress);
  final ModelNode model=rootResource.getModel();
  initCoreModel(model,hostControllerEnvironment);
  context.createResource(hostAddress.append(PathElement.pathElement(CORE_SERVICE,MANAGEMENT)));
  context.createResource(hostAddress.append(PathElement.pathElement(CORE_SERVICE,HOST_ENVIRONMENT)));
  context.addResource(PathAddress.pathAddress(hostAddress,AccessControlResourceDefinition.PATH_ELEMENT),AccessControlResourceDefinition.RESOURCE);
  rootResource.registerChild(PlatformMBeanConstants.ROOT_PATH,new RootPlatformMBeanResource());
  Resource.ResourceEntry ignoredRoot=ignoredDomainResourceRegistry.getRootResource();
  rootResource.registerChild(ignoredRoot.getPathElement(),ignoredRoot);
  context.createResource(hostAddress.append(PathElement.pathElement(CORE_SERVICE,DISCOVERY_OPTIONS)));
  context.stepCompleted();
}

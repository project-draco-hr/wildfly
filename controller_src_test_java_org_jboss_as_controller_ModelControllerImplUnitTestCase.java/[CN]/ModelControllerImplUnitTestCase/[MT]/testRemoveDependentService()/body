{
  ModelNode result=controller.execute(getOperation("dependent-service","attr1",5),null,null,null);
  System.out.println(result);
  assertEquals("success",result.get("outcome").asString());
  assertEquals(1,result.get("result").asInt());
  ServiceController<?> sc=container.getService(ServiceName.JBOSS.append("depended-service"));
  assertNotNull(sc);
  assertEquals(ServiceController.State.UP,sc.getState());
  sc=container.getService(ServiceName.JBOSS.append("dependent-service"));
  assertNotNull(sc);
  assertEquals(ServiceController.State.UP,sc.getState());
  result=controller.execute(getOperation("remove-dependent-service","attr1",6,"good"),null,null,null);
  sc=container.getService(ServiceName.JBOSS.append("depended-service"));
  boolean outcome=FAILED.equals(result.get(OUTCOME).asString());
  if (!outcome) {
    if (sc == null) {
      System.out.println("Null depended service!");
    }
 else {
      System.out.println(sc.getName());
      System.out.println("Mode = " + sc.getMode());
      System.out.println("Substate = " + sc.getSubstate());
    }
    sc=container.getService(ServiceName.JBOSS.append("dependent-service"));
    if (sc == null) {
      System.out.println("Null dependent service!");
    }
 else {
      System.out.println(sc.getName());
      System.out.println("Mode = " + sc.getMode());
      System.out.println("Substate = " + sc.getSubstate());
    }
  }
  System.out.println(result);
  assertTrue(outcome);
  assertTrue(result.hasDefined(FAILURE_DESCRIPTION));
  sc=container.getService(ServiceName.JBOSS.append("depended-service"));
  assertNotNull(sc);
  assertEquals(ServiceController.State.UP,sc.getState());
  sc=container.getService(ServiceName.JBOSS.append("dependent-service"));
  assertNotNull(sc);
  assertEquals(ServiceController.State.UP,sc.getState());
  result=controller.execute(getOperation("good","attr1",1),null,null,null);
  assertEquals("success",result.get("outcome").asString());
  assertEquals(5,result.get("result").asInt());
}

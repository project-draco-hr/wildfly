{
  ModelNode operation=new ModelNode();
  operation.get(OP).set(READ_RESOURCE_OPERATION);
  operation.get(OP_ADDR).setEmptyList();
  operation.get(RECURSIVE).set(false);
  ModelNode result=controller.execute(operation,null,null,null);
  assertTrue(result.get("result").hasDefined("child"));
  assertTrue(result.get("result","child").has("one"));
  assertFalse(result.get("result","child").hasDefined("one"));
  operation=new ModelNode();
  operation.get(OP).set(READ_RESOURCE_OPERATION);
  operation.get(OP_ADDR).setEmptyList();
  operation.get(RECURSIVE).set(true);
  result=controller.execute(operation,null,null,null);
  assertTrue(result.get("result","child","one").hasDefined("attribute1"));
  operation=new ModelNode();
  operation.get(OP).set(READ_CHILDREN_NAMES_OPERATION);
  operation.get(OP_ADDR).setEmptyList();
  operation.get(CHILD_TYPE).set("child");
  result=controller.execute(operation,null,null,null).get("result");
  assertEquals("one",result.get(0).asString());
  assertEquals("two",result.get(1).asString());
  operation=new ModelNode();
  operation.get(OP).set(READ_CHILDREN_TYPES_OPERATION);
  operation.get(OP_ADDR).setEmptyList();
  result=controller.execute(operation,null,null,null).get("result");
  assertEquals("child",result.get(0).asString());
  operation=new ModelNode();
  operation.get(OP).set(READ_CHILDREN_RESOURCES_OPERATION);
  operation.get(OP_ADDR).setEmptyList();
  operation.get(CHILD_TYPE).set("child");
}

{
  final SubsystemRegistration subsystem=context.registerSubsystem(SUBSYSTEM_NAME);
  final ModelNodeRegistration registration=subsystem.registerSubsystemModel(NewLoggingSubsystemProviders.SUBSYSTEM);
  registration.registerOperationHandler(ADD,ADD_INSTANCE,NewLoggingSubsystemProviders.SUBSYSTEM_ADD,false);
  registration.registerOperationHandler("set-root-logger",NewRootLoggerAdd.INSTANCE,NewLoggingSubsystemProviders.SET_ROOT_LOGGER,false);
  registration.registerOperationHandler("remove-root-logger",NewRootLoggerRemove.INSTANCE,NewLoggingSubsystemProviders.SET_ROOT_LOGGER,false);
  subsystem.registerXMLElementWriter(NewLoggingSubsystemParser.getInstance());
  final ModelNodeRegistration loggers=registration.registerSubModel(loggersPath,NewLoggingSubsystemProviders.LOGGER);
  loggers.registerOperationHandler(ADD,NewLoggerAdd.INSTANCE,NewLoggingSubsystemProviders.LOGGER_ADD,false);
  loggers.registerOperationHandler(REMOVE,NewLoggerRemove.INSTANCE,NewLoggingSubsystemProviders.LOGGER_REMOVE,false);
  final ModelNodeRegistration handlers=registration.registerSubModel(handlersPath,NewLoggingSubsystemProviders.HANDLERS);
  handlers.registerOperationHandler(ADD,NewLoggerHandlerAdd.INSTANCE,NewLoggingSubsystemProviders.HANDLER_ADD,false);
  handlers.registerOperationHandler(REMOVE,NewLoggerHandlerRemove.INSTANCE,NewLoggingSubsystemProviders.HANDLER_REMOVE,false);
  handlers.registerOperationHandler("add-async-handler",NewAsyncHandlerAdd.INSTANCE,NewAsyncHandlerAdd.INSTANCE,false);
  handlers.registerOperationHandler("add-console-handler",NewConsoleHandlerAdd.INSTANCE,NewLoggingSubsystemProviders.CONSOLE_HANDLER_ADD,false);
  handlers.registerOperationHandler("add-file-handler",NewFileHandlerAdd.INSTANCE,NewLoggingSubsystemProviders.FILE_HANDLER_ADD,false);
  handlers.registerOperationHandler("add-periodic-handler",NewPeriodicFileHandlerAdd.INSTANCE,NewLoggingSubsystemProviders.PERIODIC_HANDLER_ADD,false);
  handlers.registerOperationHandler("add-size-periodic-handler",NewSizePeriodicFileHandlerAdd.INSTANCE,NewLoggingSubsystemProviders.SIZE_PERIODIC_HANDLER_ADD,false);
}

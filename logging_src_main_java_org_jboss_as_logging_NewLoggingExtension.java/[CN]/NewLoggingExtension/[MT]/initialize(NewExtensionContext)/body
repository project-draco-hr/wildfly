{
  final SubsystemRegistration subsystem=context.registerSubsystem(SUBSYSTEM_NAME);
  final ModelNodeRegistration registration=subsystem.registerSubsystemModel(NewLoggingSubsystemProviders.SUBSYSTEM);
  registration.registerOperationHandler(ADD,NewLoggingSubsystemAdd.ADD_INSTANCE,NewLoggingSubsystemProviders.SUBSYSTEM_ADD,false);
  registration.registerOperationHandler(DESCRIBE,NewLoggingDescribeHandler.INSTANCE,NewLoggingDescribeHandler.INSTANCE,false);
  registration.registerOperationHandler(NewRootLoggerAdd.OPERATION_NAME,NewRootLoggerAdd.INSTANCE,NewLoggingSubsystemProviders.SET_ROOT_LOGGER,false);
  registration.registerOperationHandler(NewRootLoggerRemove.OPERATION_NAME,NewRootLoggerRemove.INSTANCE,NewLoggingSubsystemProviders.REMOVE_ROOT_LOGGER,false);
  subsystem.registerXMLElementWriter(NewLoggingSubsystemParser.getInstance());
  final ModelNodeRegistration loggers=registration.registerSubModel(loggersPath,NewLoggingSubsystemProviders.LOGGER);
  loggers.registerOperationHandler(ADD,NewLoggerAdd.INSTANCE,NewLoggingSubsystemProviders.LOGGER_ADD,false);
  loggers.registerOperationHandler(REMOVE,NewLoggerRemove.INSTANCE,NewLoggingSubsystemProviders.LOGGER_REMOVE,false);
  final ModelNodeRegistration handlers=registration.registerSubModel(handlersPath,NewLoggingSubsystemProviders.HANDLERS);
  handlers.registerOperationHandler(ADD,NewLoggerHandlerAdd.INSTANCE,NewLoggingSubsystemProviders.HANDLER_ADD,false);
  handlers.registerOperationHandler(REMOVE,NewLoggerHandlerRemove.INSTANCE,NewLoggingSubsystemProviders.HANDLER_REMOVE,false);
  handlers.registerOperationHandler(NewAsyncHandlerAdd.OPERATION_NAME,NewAsyncHandlerAdd.INSTANCE,NewAsyncHandlerAdd.INSTANCE,false);
  handlers.registerOperationHandler(NewConsoleHandlerAdd.OPERATION_NAME,NewConsoleHandlerAdd.INSTANCE,NewLoggingSubsystemProviders.CONSOLE_HANDLER_ADD,false);
  handlers.registerOperationHandler(NewFileHandlerAdd.OPERATION_NAME,NewFileHandlerAdd.INSTANCE,NewLoggingSubsystemProviders.FILE_HANDLER_ADD,false);
  handlers.registerOperationHandler(NewPeriodicFileHandlerAdd.OPERATION_NAME,NewPeriodicFileHandlerAdd.INSTANCE,NewLoggingSubsystemProviders.PERIODIC_HANDLER_ADD,false);
  handlers.registerOperationHandler(NewSizePeriodicFileHandlerAdd.OPERATION_NAME,NewSizePeriodicFileHandlerAdd.INSTANCE,NewLoggingSubsystemProviders.SIZE_PERIODIC_HANDLER_ADD,false);
}

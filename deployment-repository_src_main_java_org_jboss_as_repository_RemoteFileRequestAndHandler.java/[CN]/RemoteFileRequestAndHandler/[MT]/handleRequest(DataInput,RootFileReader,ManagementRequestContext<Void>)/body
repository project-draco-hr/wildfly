{
  expectHeader(input,protocol.paramRootId());
  final byte rootId=input.readByte();
  expectHeader(input,protocol.paramFilePath());
  final String filePath=input.readUTF();
  ManagementRequestContext.AsyncTask<Void> task=new ManagementRequestContext.AsyncTask<Void>(){
    @Override public void execute(    ManagementRequestContext<Void> context) throws Exception {
      final File localPath=reader.readRootFile(rootId,filePath);
      FlushableDataOutput output=context.writeMessage(ManagementResponseHeader.create(context.getRequestHeader()));
      try {
        writeResponse(localPath,output);
        output.close();
      }
  finally {
        StreamUtils.safeClose(output);
      }
    }
  }
;
  if (asyncExecutor == null) {
    context.executeAsync(task);
  }
 else {
    context.executeAsync(task,asyncExecutor);
  }
}

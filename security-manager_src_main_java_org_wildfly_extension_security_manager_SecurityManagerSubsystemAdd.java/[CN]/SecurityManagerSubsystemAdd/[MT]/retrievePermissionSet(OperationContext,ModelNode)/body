{
  final List<PermissionFactory> permissions=new ArrayList<PermissionFactory>();
  if (node != null && node.isDefined()) {
    for (    ModelNode permissionNode : node.asList()) {
      String permissionClass=DeploymentPermissionsResourceDefinition.CLASS.resolveModelAttribute(context,permissionNode).asString();
      String permissionName=null;
      if (permissionNode.hasDefined(PERMISSION_NAME))       permissionName=DeploymentPermissionsResourceDefinition.NAME.resolveModelAttribute(context,permissionNode).asString();
      String permissionActions=null;
      if (permissionNode.hasDefined(PERMISSION_ACTIONS))       permissionActions=DeploymentPermissionsResourceDefinition.ACTIONS.resolveModelAttribute(context,permissionNode).asString();
      String moduleName=null;
      if (permissionNode.hasDefined(PERMISSION_MODULE)) {
        moduleName=DeploymentPermissionsResourceDefinition.MODULE.resolveModelAttribute(context,permissionNode).asString();
      }
      ClassLoader cl=WildFlySecurityManager.getClassLoaderPrivileged(this.getClass());
      if (moduleName != null) {
        try {
          cl=Module.getBootModuleLoader().loadModule(ModuleIdentifier.create(moduleName)).getClassLoader();
        }
 catch (        ModuleLoadException e) {
          throw new OperationFailedException(e);
        }
      }
      permissions.add(new LoadedPermissionFactory(cl,permissionClass,permissionName,permissionActions));
    }
  }
  return permissions;
}

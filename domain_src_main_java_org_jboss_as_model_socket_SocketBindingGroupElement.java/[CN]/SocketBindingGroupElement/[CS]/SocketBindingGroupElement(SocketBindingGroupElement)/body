{
  super(source.getLocation());
  this.name=source.name;
  this.defaultInterface=source.defaultInterface;
  this.interfaceResolver=source.interfaceResolver;
synchronized (source.socketBindings) {
    this.socketBindings.putAll(source.socketBindings);
  }
synchronized (source.includedGroups) {
    this.includedGroups.putAll(source.includedGroups);
  }
  final NavigableMap<String,SocketBindingGroupElement> resolvedGroups=new TreeMap<String,SocketBindingGroupElement>();
  for (  Map.Entry<String,SocketBindingGroupIncludeElement> entry : this.includedGroups.entrySet()) {
    SocketBindingGroupElement group=source.includedGroupResolver.resolveRef(entry.getKey());
    if (group == null) {
      throw new IllegalStateException("Socket binding group referenced by '" + Element.INCLUDE.getLocalName() + "' at "+ entry.getValue().getLocation().toString()+ " refers to non-existent "+ Element.SOCKET_BINDING_GROUP+ " '"+ entry.getValue().getGroupName()+ "'");
    }
    resolvedGroups.put(entry.getKey(),new SocketBindingGroupElement(group));
  }
  this.includedGroupResolver=new SimpleRefResolver<String,SocketBindingGroupElement>(resolvedGroups);
}

{
  if (this.includedGroups.size() == 0)   return Collections.unmodifiableSet(new HashSet<SocketBindingElement>(socketBindings.values()));
 else {
    Map<String,SocketBindingElement> result=new HashMap<String,SocketBindingElement>();
    for (    Map.Entry<String,SocketBindingGroupIncludeElement> entry : includedGroups.entrySet()) {
      SocketBindingGroupElement group=includedGroupResolver.resolveRef(entry.getKey());
      if (group == null) {
        throw new IllegalStateException("Socket binding group referenced by '" + Element.INCLUDE.getLocalName() + "' at "+ entry.getValue().getLocation().toString()+ " refers to non-existent "+ Element.SOCKET_BINDING_GROUP+ " '"+ entry.getValue().getGroupName()+ "'");
      }
      Set<SocketBindingElement> included=group.getAllSocketBindings();
      for (      SocketBindingElement binding : included) {
        result.put(binding.getName(),binding);
      }
    }
    result.putAll(socketBindings);
    return Collections.unmodifiableSet(new HashSet<SocketBindingElement>(result.values()));
  }
}

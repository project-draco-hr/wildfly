{
  final JavaArchive archive=ShrinkWrapUtils.createJavaArchive("servermodule/test-deployment.sar",Simple.class.getPackage());
  final ServerDeploymentManager manager=ServerDeploymentManager.Factory.create(InetAddress.getByName("localhost"),9999);
  final File dir=new File("target/archives");
  dir.mkdirs();
  final File file=new File(dir,"test-deployment.sar");
  archive.as(ZipExporter.class).exportZip(file,true);
  final File deployDir=new File(System.getProperty(ServerEnvironment.HOME_DIR),"standalone/deployments");
  Assert.assertTrue(deployDir.exists());
  final File target=new File(deployDir,"test-deployment.sar");
  final File deployed=new File(deployDir,"test-deployment.sar.deployed");
  Assert.assertFalse(target.exists());
  testDeployments(new DeploymentExecutor(){
    @Override public void initialDeploy() throws IOException {
      final InputStream in=new BufferedInputStream(new FileInputStream(file));
      try {
        final OutputStream out=new BufferedOutputStream(new FileOutputStream(target));
        try {
          int i=in.read();
          while (i != -1) {
            out.write(i);
            i=in.read();
          }
        }
  finally {
          StreamUtils.safeClose(out);
        }
      }
  finally {
        StreamUtils.safeClose(in);
      }
    }
    @Override public void fullReplace() throws IOException {
      initialDeploy();
    }
    @Override public void undeploy(){
      deployed.delete();
    }
  }
);
}

{
  final SubsystemRegistration subsystem=context.registerSubsystem(SUBSYSTEM_NAME,MANAGEMENT_API_MAJOR_VERSION,MANAGEMENT_API_MINOR_VERSION,MANAGEMENT_API_MICRO_VERSION);
  final ManagementResourceRegistration registration=subsystem.registerSubsystemModel(NamingSubsystemRootResourceDefinition.INSTANCE);
  registration.registerOperationHandler(GenericSubsystemDescribeHandler.DEFINITION,GenericSubsystemDescribeHandler.INSTANCE);
  registration.registerSubModel(NamingBindingResourceDefinition.INSTANCE);
  registration.registerSubModel(RemoteNamingResourceDefinition.INSTANCE);
  if (context.isRuntimeOnlyRegistrationValid()) {
    registration.registerOperationHandler(NamingSubsystemRootResourceDefinition.JNDI_VIEW,JndiViewOperation.INSTANCE,false);
  }
  subsystem.registerXMLElementWriter(NamingSubsystem13Parser.INSTANCE);
  if (context.isRegisterTransformers()) {
    ResourceTransformationDescriptionBuilder builder=TransformationDescriptionBuilder.Factory.createSubsystemInstance();
    builder.addChildResource(NamingSubsystemModel.BINDING_PATH).getAttributeBuilder().addRejectCheck(RejectAttributeChecker.DEFINED,OBJECT_FACTORY_ENV).setDiscard(DiscardAttributeChecker.UNDEFINED,OBJECT_FACTORY_ENV).addRejectCheck(new BindingTypeRejectChecker(),BINDING_TYPE).end();
    TransformationDescription.Tools.register(builder.build(),subsystem,ModelVersion.create(1,1,0));
  }
}

{
  final SubsystemRegistration subsystem=context.registerSubsystem(SUBSYSTEM_NAME,CURRENT_MODEL_VERSION);
  final ManagementResourceRegistration registration=subsystem.registerSubsystemModel(NamingSubsystemRootResourceDefinition.INSTANCE);
  registration.registerOperationHandler(GenericSubsystemDescribeHandler.DEFINITION,GenericSubsystemDescribeHandler.INSTANCE);
  registration.registerSubModel(NamingBindingResourceDefinition.INSTANCE);
  registration.registerSubModel(RemoteNamingResourceDefinition.INSTANCE);
  if (context.isRuntimeOnlyRegistrationValid()) {
    registration.registerOperationHandler(NamingSubsystemRootResourceDefinition.JNDI_VIEW,JndiViewOperation.INSTANCE,false);
  }
  subsystem.registerXMLElementWriter(NamingSubsystemXMLPersister.INSTANCE);
  if (context.isRegisterTransformers()) {
    ResourceTransformationDescriptionBuilder builder=TransformationDescriptionBuilder.Factory.createSubsystemInstance();
    builder.addChildResource(NamingSubsystemModel.BINDING_PATH).getAttributeBuilder().addRejectCheck(RejectAttributeChecker.DEFINED,ENVIRONMENT).setDiscard(DiscardAttributeChecker.UNDEFINED,ENVIRONMENT,CACHE).addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,BINDING_TYPE).addRejectCheck(new BindingType11RejectChecker(),BINDING_TYPE).addRejectCheck(new BindingType12RejectChecker(),BINDING_TYPE).end();
    TransformationDescription.Tools.register(builder.build(),subsystem,VERSION_1_1_0);
    builder=TransformationDescriptionBuilder.Factory.createSubsystemInstance();
    builder.addChildResource(NamingSubsystemModel.BINDING_PATH).getAttributeBuilder().setDiscard(DiscardAttributeChecker.UNDEFINED,CACHE).addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,BINDING_TYPE).addRejectCheck(new BindingType12RejectChecker(),BINDING_TYPE).end();
    TransformationDescription.Tools.register(builder.build(),subsystem,VERSION_1_2_0);
    TransformationDescription.Tools.register(builder.build(),subsystem,VERSION_1_3_0);
  }
}

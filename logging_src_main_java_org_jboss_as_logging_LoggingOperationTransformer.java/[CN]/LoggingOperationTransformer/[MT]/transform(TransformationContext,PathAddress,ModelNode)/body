{
  final String key=address.getLastElement().getKey();
  final String name=address.getLastElement().getValue();
  final String operationName=operation.get(ModelDescriptionConstants.OP).asString();
  final ModelNode originalOperation=operation.clone();
  if (operationName.equals(CommonAttributes.ADD_HANDLER_OPERATION_NAME)) {
    if (key.equals(RootLoggerResourceDefinition.ROOT_LOGGER_PATH_NAME)) {
      operation.get(ModelDescriptionConstants.OP).set(RootLoggerResourceDefinition.ROOT_LOGGER_ADD_HANDLER_OPERATION_NAME);
    }
 else     if (key.equals(LoggerResourceDefinition.LOGGER)) {
      operation.get(ModelDescriptionConstants.OP).set(LoggerResourceDefinition.LEGACY_ADD_HANDLER_OPERATION_NAME);
    }
 else     if (key.equals(AsyncHandlerResourceDefinition.ASYNC_HANDLER)) {
      operation.get(ModelDescriptionConstants.OP).set(AsyncHandlerResourceDefinition.ADD_SUBHANDLER_OPERATION_NAME);
    }
  }
 else   if (operationName.equals(CommonAttributes.REMOVE_HANDLER_OPERATION_NAME)) {
    if (key.equals(RootLoggerResourceDefinition.ROOT_LOGGER_PATH_NAME)) {
      operation.get(ModelDescriptionConstants.OP).set(RootLoggerResourceDefinition.ROOT_LOGGER_REMOVE_HANDLER_OPERATION_NAME);
    }
 else     if (key.equals(LoggerResourceDefinition.LOGGER)) {
      operation.get(ModelDescriptionConstants.OP).set(LoggerResourceDefinition.LEGACY_REMOVE_HANDLER_OPERATION_NAME);
    }
 else     if (key.equals(AsyncHandlerResourceDefinition.ASYNC_HANDLER)) {
      operation.get(ModelDescriptionConstants.OP).set(AsyncHandlerResourceDefinition.REMOVE_SUBHANDLER_OPERATION_NAME);
    }
  }
 else   if (operationName.equals(ModelDescriptionConstants.ADD)) {
    if (LoggerResourceDefinition.LOGGER.equals(key)) {
      operation.get(LoggerResourceDefinition.CATEGORY.getName()).set(name);
    }
 else     if (!RootLoggerResourceDefinition.ROOT_LOGGER_PATH_NAME.equals(key)) {
      operation.get(CommonAttributes.NAME.getName()).set(name);
    }
  }
 else   if (operationName.equals(RootLoggerResourceDefinition.ROOT_LOGGER_ADD_OPERATION_NAME)) {
    operation.remove(CommonAttributes.NAME.getName());
  }
  LoggingLogger.ROOT_LOGGER.tracef("Changed operation from: %s%nto: %s",originalOperation,operation);
  return operation;
}

{
  final ManagementResourceRegistration profileReg=profileRegistration;
  if (profileReg == null) {
    return;
  }
  final ManagementResourceRegistration deploymentsReg=deploymentsRegistration;
  ExtensionInfo extension=extensions.remove(moduleName);
  if (extension != null) {
synchronized (extension) {
      Set<String> subsystemNames=extension.subsystems.keySet();
      for (      String subsystem : subsystemNames) {
        if (rootResource.getChild(PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,subsystem)) != null) {
          extensions.put(moduleName,extension);
          throw ControllerLogger.ROOT_LOGGER.removingExtensionWithRegisteredSubsystem(moduleName,subsystem);
        }
      }
      for (      Map.Entry<String,SubsystemInformation> entry : extension.subsystems.entrySet()) {
        String subsystem=entry.getKey();
        profileReg.unregisterSubModel(PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,subsystem));
        if (deploymentsReg != null) {
          deploymentsReg.unregisterSubModel(PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,subsystem));
        }
        if (extension.xmlMapper != null) {
          SubsystemInformationImpl subsystemInformation=SubsystemInformationImpl.class.cast(entry.getValue());
          for (          String namespace : subsystemInformation.getXMLNamespaces()) {
            extension.xmlMapper.unregisterRootElement(new QName(namespace,SUBSYSTEM));
          }
        }
      }
      if (extension.xmlMapper != null) {
        for (        String namespace : extension.unnamedParsers) {
          extension.xmlMapper.unregisterRootElement(new QName(namespace,SUBSYSTEM));
        }
      }
    }
  }
}

{
  Deployment deployment=bundle.adapt(Deployment.class);
  DeploymentUnit depUnit=deployment.getAttachment(DeploymentUnit.class);
  if (depUnit == null) {
    defaultService.start(bundle,options);
    return;
  }
  List<String> deferredModules=DeploymentUtils.getDeferredModules(depUnit);
  if (!deferredModules.contains(depUnit.getName())) {
    defaultService.start(bundle,options);
    return;
  }
  ServiceController<Phase> phaseService=getDeferredPhaseService(depUnit);
  if (phaseService.getMode() != Mode.NEVER) {
    defaultService.start(bundle,options);
    return;
  }
  final ServiceName deploymentServiceName;
  if (depUnit.getParent() == null) {
    deploymentServiceName=depUnit.getServiceName();
  }
 else {
    deploymentServiceName=depUnit.getParent().getServiceName();
  }
  ServiceController<DeploymentUnit> deploymentService=(ServiceController<DeploymentUnit>)injectedBundleManager.getValue().getServiceContainer().getRequiredService(deploymentServiceName);
  activateDeferredPhase(bundle,options,depUnit,phaseService,deploymentService);
}

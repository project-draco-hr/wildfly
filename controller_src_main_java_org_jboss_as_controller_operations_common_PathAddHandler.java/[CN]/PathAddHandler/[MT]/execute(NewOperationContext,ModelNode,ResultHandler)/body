{
  try {
    PathAddress address=PathAddress.pathAddress(operation.require(OP_ADDR));
    String name=address.getLastElement().getValue();
    ModelNode model=context.getSubModel();
    model.get(NAME).set(name);
    ModelNode pathNode=operation.get(PATH);
    String failure=pathValidator.validateParameter(PATH,pathNode);
    if (failure == null) {
      ModelNode relNode=operation.get(RELATIVE_TO);
      failure=relativeToValidator.validateParameter(RELATIVE_TO,relNode);
      if (failure == null) {
        model.get(PATH).set(pathNode);
        model.get(RELATIVE_TO).set(relNode);
        ModelNode compensating=PathRemoveHandler.getRemovePathOperation(operation.get(OP_ADDR));
        String path=pathNode.isDefined() ? pathNode.asString() : null;
        String relativeTo=relNode.isDefined() ? relNode.asString() : null;
        installPath(name,path,relativeTo,context,resultHandler,compensating);
      }
    }
    if (failure != null) {
      resultHandler.handleFailed(new ModelNode().set(failure));
    }
  }
 catch (  Exception e) {
    resultHandler.handleFailed(new ModelNode().set(e.getLocalizedMessage()));
  }
  return Cancellable.NULL;
}

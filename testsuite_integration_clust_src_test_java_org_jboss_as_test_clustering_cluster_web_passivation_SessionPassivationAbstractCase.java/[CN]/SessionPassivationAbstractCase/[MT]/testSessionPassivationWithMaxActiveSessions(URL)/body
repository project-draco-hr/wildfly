{
  HttpClient client=HttpClientUtils.relaxedCookieHttpClient();
  try {
    HttpResponse response=ClusterHttpClientUtil.tryGet(client,baseURL1 + SimpleServlet.URL);
    response.getEntity().getContent().close();
    response=ClusterHttpClientUtil.tryGet(client,baseURL1 + SimpleServlet.URL);
    Assert.assertFalse("Session should not be serialized",Boolean.valueOf(response.getFirstHeader(SimpleServlet.HEADER_SERIALIZED).getValue()));
    response.getEntity().getContent().close();
    Thread.sleep(PASSIVATION_MIN_IDLE_TIME + 1000);
    for (int i=0; i < MAX_ACTIVE_SESSIONS; i++) {
      HttpClient maxActiveClient=new DefaultHttpClient();
      try {
        response=ClusterHttpClientUtil.tryGet(maxActiveClient,baseURL1 + SimpleServlet.URL);
        Assert.assertFalse("Session should not be serialized",Boolean.valueOf(response.getFirstHeader(SimpleServlet.HEADER_SERIALIZED).getValue()));
        Assert.assertEquals("The session should be new",1,Integer.parseInt(response.getFirstHeader("value").getValue()));
        response.getEntity().getContent().close();
        response=ClusterHttpClientUtil.tryGet(maxActiveClient,baseURL1 + SimpleServlet.URL);
        response.getEntity().getContent().close();
      }
  finally {
        maxActiveClient.getConnectionManager().shutdown();
      }
    }
    response=ClusterHttpClientUtil.tryGet(client,baseURL1 + SimpleServlet.URL);
    Assert.assertTrue("Session should have activated and have been deserialized",Boolean.valueOf(response.getFirstHeader(SimpleServlet.HEADER_SERIALIZED).getValue()));
    Assert.assertEquals(3,Integer.parseInt(response.getFirstHeader("value").getValue()));
    response.getEntity().getContent().close();
  }
  finally {
    client.getConnectionManager().shutdown();
  }
}

{
  namedArgs=null;
  otherArgs=null;
  if (argsStr != null && !argsStr.isEmpty()) {
    String[] arr=argsStr.split("\\s+");
    if (arr.length > 0) {
      for (int i=0; i < arr.length; ++i) {
        String arg=arr[i];
        if (arg.charAt(0) == '-') {
          final String dashedArg=arg;
          if (dashedArg.length() > 0) {
            if (namedArgs == null) {
              namedArgs=new HashMap<String,String>();
            }
            int equalsIndex=dashedArg.indexOf('=');
            if (equalsIndex > 0 && equalsIndex < dashedArg.length() - 1 && dashedArg.indexOf(equalsIndex + 1,'=') < 0) {
              final String name=dashedArg.substring(0,equalsIndex).trim();
              final String value=dashedArg.substring(equalsIndex + 1).trim();
              if (namedArgs == null) {
                namedArgs=new HashMap<String,String>();
              }
              namedArgs.put(name,value);
            }
 else {
              namedArgs.put(dashedArg,null);
            }
          }
        }
 else {
          if (otherArgs == null) {
            otherArgs=new ArrayList<String>();
          }
          otherArgs.add(arg);
          int equalsIndex=arg.indexOf('=');
          if (equalsIndex > 0 && equalsIndex < arg.length() - 1 && arg.indexOf(equalsIndex + 1,'=') < 0) {
            final String name=arg.substring(0,equalsIndex).trim();
            final String value=arg.substring(equalsIndex + 1).trim();
            if (namedArgs == null) {
              namedArgs=new HashMap<String,String>();
            }
            namedArgs.put(name,value);
          }
        }
      }
      if (otherArgs != null) {
        otherArgs=Collections.unmodifiableList(otherArgs);
      }
    }
  }
  if (namedArgs == null) {
    namedArgs=Collections.emptyMap();
  }
  if (otherArgs == null) {
    otherArgs=Collections.emptyList();
  }
}

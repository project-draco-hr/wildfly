{
  values.setExistingUser(false);
  values.setRoles(ROLES);
  PreModificationState userCheckState=new PreModificationState(consoleMock,values);
  AssertConsoleBuilder consoleBuilder=new AssertConsoleBuilder().expectedDisplayText(MESSAGES.aboutToAddUser(values.getUserName(),values.getRealm())).expectedDisplayText(AddPropertiesUser.NEW_LINE).expectedDisplayText(MESSAGES.isCorrectPrompt() + " " + MESSAGES.yes()+ "/"+ MESSAGES.no()+ "?").expectedDisplayText(" ").expectedInput("yes").expectedDisplayText(MESSAGES.addedUser(values.getUserName(),values.getPropertiesFiles().get(0).getCanonicalPath())).expectedDisplayText(AddPropertiesUser.NEW_LINE).expectedDisplayText(MESSAGES.addedRoles(values.getUserName(),values.getRoles(),values.getRoleFiles().get(0).getCanonicalPath())).expectedDisplayText(AddPropertiesUser.NEW_LINE);
  consoleMock.setResponses(consoleBuilder);
  State nextState=userCheckState.execute();
  assertTrue(nextState instanceof ConfirmationChoice);
  nextState=nextState.execute();
  assertTrue(nextState instanceof AddUser);
  nextState.execute();
  consoleBuilder.validate();
}

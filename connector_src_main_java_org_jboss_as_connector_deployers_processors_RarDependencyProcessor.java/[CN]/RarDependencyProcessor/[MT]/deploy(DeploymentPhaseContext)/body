{
  if (phaseContext.getDeploymentUnit().getAttachment(ConnectorXmlDescriptor.ATTACHMENT_KEY) == null) {
    return;
  }
  final DeploymentUnit deploymentUnit=phaseContext.getDeploymentUnit();
  final ModuleLoader moduleLoader=Module.getBootModuleLoader();
  final ModuleSpecification moduleSpecification=deploymentUnit.getAttachment(Attachments.MODULE_SPECIFICATION);
  moduleSpecification.setRequiresTransitiveDependencies(true);
  moduleSpecification.addDependency(new ModuleDependency(moduleLoader,JAVAX_ID,false,false,false));
  moduleSpecification.addDependency(new ModuleDependency(moduleLoader,JMS_ID,false,false,false));
  moduleSpecification.addDependency(new ModuleDependency(moduleLoader,LOGGING_ID,false,false,false));
  moduleSpecification.addDependency(new ModuleDependency(moduleLoader,IRON_JACAMAR_ID,false,false,false));
  moduleSpecification.addDependency(new ModuleDependency(moduleLoader,IRON_JACAMAR_IMPL_ID,false,true,false));
  moduleSpecification.addDependency(new ModuleDependency(moduleLoader,SYSTEM_ID,false,false,false));
  moduleSpecification.addDependency(new ModuleDependency(moduleLoader,NAMING_ID,false,false,false));
  moduleSpecification.addDependency(new ModuleDependency(moduleLoader,VALIDATION_ID,false,false,false));
  moduleSpecification.addDependency(new ModuleDependency(moduleLoader,HIBERNATE_VALIDATOR_ID,false,false,false));
  moduleSpecification.addDependency(new ModuleDependency(moduleLoader,COMMON_CORE_ID,false,false,false));
  moduleSpecification.addDependency(new ModuleDependency(moduleLoader,RESOURCE_API_ID,false,false,false));
}

{
  Result response=null;
  if (httpExchange instanceof HttpsExchange) {
    HttpsExchange httpsExch=(HttpsExchange)httpExchange;
    SSLSession session=httpsExch.getSSLSession();
    if (session != null) {
      try {
        Principal p=session.getPeerPrincipal();
        response=new Success(new HttpPrincipal(p.getName(),realm));
      }
 catch (      SSLPeerUnverifiedException e) {
      }
    }
  }
  if (response == null) {
    response=super.authenticate(httpExchange);
  }
  if (response instanceof Success) {
    HttpPrincipal principal=((Success)response).getPrincipal();
    try {
      Collection<Principal> principalCol=new HashSet<Principal>();
      principalCol.add(principal);
      SubjectUserInfo userInfo=callbackHandler.get().createSubjectUserInfo(principalCol);
      httpExchange.setAttribute(Subject.class.getName(),userInfo.getSubject(),AttributeScope.CONNECTION);
    }
 catch (    IOException e) {
      ROOT_LOGGER.debug("Unable to create SubjectUserInfo",e);
      response=new Authenticator.Failure(INTERNAL_SERVER_ERROR);
    }
  }
  return response;
}

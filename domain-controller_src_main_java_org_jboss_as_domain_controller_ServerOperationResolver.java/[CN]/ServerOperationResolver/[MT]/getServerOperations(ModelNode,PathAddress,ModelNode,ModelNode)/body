{
  if (address.size() == 0) {
    return resolveDomainRootOperation(operation,domain,host);
  }
 else {
    DomainKey domainKey=DomainKey.forName(address.getElement(0).getKey());
switch (domainKey) {
case EXTENSION:
{
        Set<ServerIdentity> allServers=getAllRunningServers(host);
        return Collections.singletonMap(allServers,operation);
      }
case DEPLOYMENT:
{
      return Collections.emptyMap();
    }
case PATH:
{
    return getServerPathOperations(operation,address,host,true);
  }
case SYSTEM_PROPERTY:
{
  return getServerSystemPropertyOperations(operation,address,Level.DOMAIN,domain,null,host);
}
case PROFILE:
{
return getServerProfileOperations(operation,address,domain,host);
}
case INTERFACE:
{
return getServerInterfaceOperations(operation,address,host,true);
}
case SOCKET_BINDING_GROUP:
{
return getServerSocketBindingGroupOperations(operation,address,domain,host);
}
case SERVER_GROUP:
{
return getServerGroupOperations(operation,address,domain,host);
}
case HOST:
{
return getServerHostOperations(operation,address,domain,host);
}
default :
throw new IllegalStateException(String.format("Unexpected initial path key %s",address.getElement(0).getKey()));
}
}
}

{
  resourceRegistration.registerSubModel(SystemPropertyResourceDefinition.createForStandaloneServer(serverEnvironment));
  resourceRegistration.registerSubModel(new VaultResourceDefinition(vaultReader));
  ManagementResourceRegistration management=resourceRegistration.registerSubModel(CoreManagementDefinition.INSTANCE);
  management.registerSubModel(SecurityRealmResourceDefinition.INSTANCE);
  management.registerSubModel(LdapConnectionResourceDefinition.INSTANCE);
  management.registerSubModel(NativeManagementResourceDefinition.INSTANCE);
  management.registerSubModel(NativeRemotingManagementResourceDefinition.INSTANCE);
  management.registerSubModel(HttpManagementResourceDefinition.INSTANCE);
  resourceRegistration.registerSubModel(new ServiceContainerResourceDefinition());
  resourceRegistration.registerSubModel(new ModuleLoadingResourceDefinition());
  PlatformMBeanResourceRegistrar.registerPlatformMBeanResources(resourceRegistration);
  resourceRegistration.registerSubModel(new RootAccessConstraintResourceDefinition());
  resourceRegistration.registerSubModel(PathResourceDefinition.createSpecified(pathManager));
  ManagementResourceRegistration interfaces=resourceRegistration.registerSubModel(new InterfaceDefinition(SpecifiedInterfaceAddHandler.INSTANCE,SpecifiedInterfaceRemoveHandler.INSTANCE,true));
  interfaces.registerReadOnlyAttribute(NetworkInterfaceRuntimeHandler.RESOLVED_ADDRESS,NetworkInterfaceRuntimeHandler.INSTANCE);
  interfaces.registerOperationHandler(SpecifiedInterfaceResolveHandler.DEFINITION,SpecifiedInterfaceResolveHandler.INSTANCE);
  resourceRegistration.registerSubModel(new SocketBindingGroupResourceDefinition(BindingGroupAddHandler.INSTANCE,SocketBindingGroupRemoveHandler.INSTANCE,false,SocketBindingResourceDefinition.INSTANCE,RemoteDestinationOutboundSocketBindingResourceDefinition.INSTANCE,LocalDestinationOutboundSocketBindingResourceDefinition.INSTANCE));
  ManagementResourceRegistration deployments=resourceRegistration.registerSubModel(ServerDeploymentResourceDefinition.create(contentRepository,vaultReader));
  resourceRegistration.registerSubModel(new DeploymentOverlayDefinition(DeploymentOverlayPriority.SERVER,contentRepository,null));
  deployments.registerSubModel(new SimpleResourceDefinition(PathElement.pathElement(SUBDEPLOYMENT),DeploymentAttributes.DEPLOYMENT_RESOLVER));
  resourceRegistration.registerSubModel(new ExtensionResourceDefinition(extensionRegistry,parallelBoot,true,false));
  if (extensionRegistry != null) {
    extensionRegistry.setSubsystemParentResourceRegistrations(resourceRegistration,deployments);
    extensionRegistry.setPathManager(pathManager);
  }
  resourceRegistration.registerOperationHandler(DeployerChainAddHandler.DEFINITION,DeployerChainAddHandler.INSTANCE,false);
}

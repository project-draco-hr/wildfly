{
  SubsystemState stateService=new SubsystemState();
  List<OperationStepHandler> addedSteps=new ArrayList<OperationStepHandler>();
  OperationContext context=mockOperationContext(stateService,addedSteps,OperationContext.ResultAction.KEEP);
  ModelNode op=getAddOperation("org.acme.module1",4);
  Assert.assertEquals("Precondition",0,addedSteps.size());
  execute(OSGiCapabilityAdd.INSTANCE,context,op);
  Assert.assertEquals(1,addedSteps.size());
  Assert.assertEquals("Precondition",0,stateService.getCapabilities().size());
  execute(addedSteps.get(0),context,op);
  Assert.assertEquals(1,stateService.getCapabilities().size());
  OSGiCapability module=stateService.getCapabilities().get(0);
  Assert.assertEquals("org.acme.module1",module.getIdentifier());
  Assert.assertEquals(new Integer(4),module.getStartLevel());
  execute(OSGiCapabilityRemove.INSTANCE,context,op);
  Assert.assertEquals("Actual remove added as async step",2,addedSteps.size());
  configureForRollback(context,op);
  execute(addedSteps.get(1),context,op);
  Assert.assertEquals("Module should have been kept as the operation was rolled back",module,stateService.getCapabilities().get(0));
  configureForSuccess(context);
  execute(addedSteps.get(1),context,op);
  Assert.assertEquals("Module should have been removed",0,stateService.getCapabilities().size());
}

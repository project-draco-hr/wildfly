{
  Boolean localReceiverPassByValue=null;
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    final EJBClientDescriptorXMLAttribute attribute=EJBClientDescriptorXMLAttribute.forName(reader.getAttributeLocalName(i));
    final String value=readResolveValue(reader,i);
switch (attribute) {
case EXCLUDE_LOCAL_RECEIVER:
      final boolean excludeLocalReceiver=Boolean.parseBoolean(value);
    ejbClientDescriptorMetaData.setExcludeLocalReceiver(excludeLocalReceiver);
  break;
case LOCAL_RECEIVER_PASS_BY_VALUE:
localReceiverPassByValue=Boolean.parseBoolean(value);
break;
default :
unexpectedContent(reader);
}
}
ejbClientDescriptorMetaData.setLocalReceiverPassByValue(localReceiverPassByValue);
while (reader.hasNext()) {
switch (reader.nextTag()) {
case END_ELEMENT:
{
return;
}
case START_ELEMENT:
{
final EJBClientDescriptorXMLElement element=EJBClientDescriptorXMLElement.forName(reader.getLocalName());
switch (element) {
case REMOTING_EJB_RECEIVER:
this.parseRemotingReceiver(reader,ejbClientDescriptorMetaData);
break;
default :
unexpectedElement(reader);
}
break;
}
default :
{
unexpectedContent(reader);
}
}
}
unexpectedEndOfDocument(reader.getLocation());
}

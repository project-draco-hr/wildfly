{
  System.out.println("Initializing TestExtension");
  SubsystemRegistration registration=context.registerSubsystem(SUBSYSTEM_NAME);
  ManagementResourceRegistration root=registration.registerSubsystemModel(new DescriptionProvider(){
    @Override public ModelNode getModelDescription(    Locale locale){
      ModelNode node=new ModelNode();
      node.get(DESCRIPTION).set("A test subsystem");
      node.get(ATTRIBUTES,"attribute",DESCRIPTION).set("An attribute");
      node.get(ATTRIBUTES,"attribute",TYPE).set(ModelType.STRING);
      node.get(CHILDREN,"child").setEmptyObject();
      return node;
    }
  }
);
  root.registerOperationHandler(ADD,new AddSubsystemHandler(),new DescriptionProvider(){
    @Override public ModelNode getModelDescription(    Locale locale){
      return new ModelNode();
    }
  }
);
  root.registerReadWriteAttribute("attribute",null,new WriteAttributeHandlers.StringLengthValidatingHandler(1),Storage.CONFIGURATION);
  root.registerOperationHandler(REMOVE,new RemoveHandler(),new DescriptionProvider(){
    @Override public ModelNode getModelDescription(    Locale locale){
      return new ModelNode();
    }
  }
);
  ManagementResourceRegistration child=root.registerSubModel(PathElement.pathElement("child"),new DescriptionProvider(){
    @Override public ModelNode getModelDescription(    Locale locale){
      ModelNode node=new ModelNode();
      node.get(DESCRIPTION).set("A test child");
      node.get(ATTRIBUTES,"child-attr",DESCRIPTION).set("An attribute");
      node.get(ATTRIBUTES,"child-attr",TYPE).set(ModelType.STRING);
      return node;
    }
  }
);
  child.registerOperationHandler(ADD,new AddChildHandler(),new DescriptionProvider(){
    @Override public ModelNode getModelDescription(    Locale locale){
      return new ModelNode();
    }
  }
);
  child.registerOperationHandler(REMOVE,new RemoveHandler(),new DescriptionProvider(){
    @Override public ModelNode getModelDescription(    Locale locale){
      return new ModelNode();
    }
  }
);
}

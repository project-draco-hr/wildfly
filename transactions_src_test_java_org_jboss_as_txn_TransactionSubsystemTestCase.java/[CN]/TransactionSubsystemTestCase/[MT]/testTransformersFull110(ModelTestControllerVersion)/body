{
  String subsystemXml=readResource("full.xml");
  ModelVersion modelVersion=ModelVersion.create(1,1,0);
  KernelServicesBuilder builder=createKernelServicesBuilder(AdditionalInitialization.MANAGEMENT).setSubsystemXml(subsystemXml);
  builder.createLegacyKernelServicesBuilder(null,controllerVersion,modelVersion).addMavenResourceURL("org.jboss.as:jboss-as-transactions:" + controllerVersion.getMavenGavVersion()).configureReverseControllerCheck(AdditionalInitialization.MANAGEMENT,ADD_REMOVED_HORNETQ_STORE_ENABLE_ASYNC_IO).excludeFromParent(SingleClassFilter.createFilter(TransactionLogger.class));
  KernelServices mainServices=builder.build();
  KernelServices legacyServices=mainServices.getLegacyServices(modelVersion);
  Assert.assertNotNull(legacyServices);
  checkSubsystemModelTransformation(mainServices,modelVersion);
  final ModelNode writeAttribute=new ModelNode();
  writeAttribute.get(OP).set(WRITE_ATTRIBUTE_OPERATION);
  writeAttribute.get(OP_ADDR).add("subsystem","transactions");
  writeAttribute.get(NAME).set("use-jdbc-store");
  writeAttribute.get(VALUE).set(false);
  final OperationTransformer.TransformedOperation op=mainServices.transformOperation(modelVersion,writeAttribute);
  Assert.assertNotNull(op);
  Assert.assertNotNull(op.getTransformedOperation());
}

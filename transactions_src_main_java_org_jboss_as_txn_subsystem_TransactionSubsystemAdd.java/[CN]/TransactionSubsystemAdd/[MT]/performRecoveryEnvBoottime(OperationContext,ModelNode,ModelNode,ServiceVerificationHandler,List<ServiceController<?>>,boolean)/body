{
  final String recoveryBindingName=TransactionSubsystemRootResourceDefinition.BINDING.resolveModelAttribute(context,model).asString();
  final String recoveryStatusBindingName=TransactionSubsystemRootResourceDefinition.STATUS_BINDING.resolveModelAttribute(context,model).asString();
  final boolean recoveryListener=TransactionSubsystemRootResourceDefinition.RECOVERY_LISTENER.resolveModelAttribute(context,model).asBoolean();
  final XATerminatorService xaTerminatorService=new XATerminatorService(jts);
  controllers.add(context.getServiceTarget().addService(TxnServices.JBOSS_TXN_XA_TERMINATOR,xaTerminatorService).setInitialMode(Mode.ACTIVE).install());
  final ArjunaRecoveryManagerService recoveryManagerService=new ArjunaRecoveryManagerService(recoveryListener,jts);
  final ServiceBuilder<RecoveryManagerService> recoveryManagerServiceServiceBuilder=context.getServiceTarget().addService(TxnServices.JBOSS_TXN_ARJUNA_RECOVERY_MANAGER,recoveryManagerService);
  if (jts) {
    recoveryManagerServiceServiceBuilder.addDependency(ServiceName.JBOSS.append("jacorb","orb-service"),ORB.class,recoveryManagerService.getOrbInjector());
  }
  controllers.add(recoveryManagerServiceServiceBuilder.addDependency(SocketBinding.JBOSS_BINDING_NAME.append(recoveryBindingName),SocketBinding.class,recoveryManagerService.getRecoveryBindingInjector()).addDependency(SocketBinding.JBOSS_BINDING_NAME.append(recoveryStatusBindingName),SocketBinding.class,recoveryManagerService.getStatusBindingInjector()).addDependency(SocketBindingManager.SOCKET_BINDING_MANAGER,SocketBindingManager.class,recoveryManagerService.getBindingManager()).addDependency(TxnServices.JBOSS_TXN_CORE_ENVIRONMENT).addDependency(TxnServices.JBOSS_TXN_ARJUNA_OBJECTSTORE_ENVIRONMENT).addListener(verificationHandler).setInitialMode(ServiceController.Mode.ACTIVE).install());
}

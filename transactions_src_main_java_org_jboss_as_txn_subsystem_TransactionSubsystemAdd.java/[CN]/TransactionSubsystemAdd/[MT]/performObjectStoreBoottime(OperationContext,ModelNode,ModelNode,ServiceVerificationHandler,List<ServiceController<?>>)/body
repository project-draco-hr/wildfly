{
  final String objectStorePathRef=TransactionSubsystemRootResourceDefinition.OBJECT_STORE_RELATIVE_TO.validateResolvedOperation(recoveryEnvModel).asString();
  final String objectStorePath=TransactionSubsystemRootResourceDefinition.OBJECT_STORE_PATH.validateResolvedOperation(recoveryEnvModel).asString();
  if (ROOT_LOGGER.isDebugEnabled()) {
    ROOT_LOGGER.debugf("objectStorePathRef=%s, objectStorePath=%s\n",objectStorePathRef,objectStorePath);
  }
  ServiceTarget target=context.getServiceTarget();
  RelativePathService.addService(INTERNAL_OBJECTSTORE_PATH,objectStorePath,true,objectStorePathRef,target,controllers,verificationHandler);
  final boolean useHornetqJournalStore="true".equals(System.getProperty("usehornetqstore"));
  final ArjunaObjectStoreEnvironmentService objStoreEnvironmentService=new ArjunaObjectStoreEnvironmentService(useHornetqJournalStore);
  controllers.add(target.addService(TxnServices.JBOSS_TXN_ARJUNA_OBJECTSTORE_ENVIRONMENT,objStoreEnvironmentService).addDependency(INTERNAL_OBJECTSTORE_PATH,String.class,objStoreEnvironmentService.getPathInjector()).addDependency(TxnServices.JBOSS_TXN_CORE_ENVIRONMENT).addListener(verificationHandler).setInitialMode(ServiceController.Mode.ACTIVE).install());
  controllers.add(TransactionManagerService.addService(target,verificationHandler));
  controllers.add(UserTransactionService.addService(target,verificationHandler));
  controllers.add(target.addService(TxnServices.JBOSS_TXN_USER_TRANSACTION_REGISTRY,new UserTransactionRegistryService()).addListener(verificationHandler).setInitialMode(ServiceController.Mode.ACTIVE).install());
  controllers.add(TransactionSynchronizationRegistryService.addService(target,verificationHandler));
}

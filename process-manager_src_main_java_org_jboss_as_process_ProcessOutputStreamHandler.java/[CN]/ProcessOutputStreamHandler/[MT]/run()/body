{
  final StringBuilder b=new StringBuilder();
  final String processName=managed.getProcessName();
  try {
    for (; ; ) {
      Status status=StreamUtils.readWord(inputStream,b);
      if (status == Status.END_OF_STREAM) {
        log.info("Received end of stream, shutting down " + processName);
        managed.processInputClosed();
        return;
      }
      try {
        final IncomingPmCommand command=IncomingPmCommand.valueOf(b.toString());
        status=command.handleMessage(inputStream,status,master,processName,b);
      }
 catch (      IllegalArgumentException e) {
        log.error("Received unknown command: " + b.toString());
      }
      if (status == Status.MORE)       StreamUtils.readToEol(inputStream);
    }
  }
 catch (  SocketException e) {
    log.error("Socket closed for " + processName + ", shutting down");
    managed.processInputClosed();
  }
catch (  Exception e) {
    log.error("Output stream handler for process " + processName + " caught an exception; shutting down",e);
    managed.processInputClosed();
  }
 finally {
    ManagedProcess.safeClose(inputStream);
  }
}

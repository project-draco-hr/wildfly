{
  AHome aHome=getAHome();
  BHome bHome=getBHome();
  A a1=aHome.create(new Integer(1));
  A a2=aHome.create(new Integer(2));
  A a3=aHome.create(new Integer(3));
  A a4=aHome.create(new Integer(4));
  A a5=aHome.create(new Integer(5));
  B b1=bHome.create(new Integer(-1));
  B b2=bHome.create(new Integer(-2));
  B b3=bHome.create(new Integer(-3));
  B b4=bHome.create(new Integer(-4));
  B b5=bHome.create(new Integer(-5));
  a1.getB().add(b1);
  a1.getB().add(b2);
  a2.getB().add(b1);
  a2.getB().add(b2);
  a2.getB().add(b3);
  a3.getB().add(b2);
  a3.getB().add(b3);
  a3.getB().add(b4);
  a4.getB().add(b3);
  a4.getB().add(b4);
  a4.getB().add(b5);
  a5.getB().add(b4);
  a5.getB().add(b5);
  assertTrue(a1.getB().contains(b1));
  assertTrue(a1.getB().contains(b2));
  assertTrue(a2.getB().contains(b1));
  assertTrue(a2.getB().contains(b2));
  assertTrue(a2.getB().contains(b3));
  assertTrue(a3.getB().contains(b2));
  assertTrue(a3.getB().contains(b3));
  assertTrue(a3.getB().contains(b4));
  assertTrue(a4.getB().contains(b3));
  assertTrue(a4.getB().contains(b4));
  assertTrue(a4.getB().contains(b5));
  assertTrue(a5.getB().contains(b4));
  assertTrue(a5.getB().contains(b5));
  a1.setB(a3.getB());
  assertTrue(!a1.getB().contains(b1));
  assertTrue(a1.getB().contains(b2));
  assertTrue(a1.getB().contains(b3));
  assertTrue(a1.getB().contains(b4));
  assertTrue(a2.getB().contains(b1));
  assertTrue(a2.getB().contains(b2));
  assertTrue(a2.getB().contains(b3));
  assertTrue(a3.getB().contains(b2));
  assertTrue(a3.getB().contains(b3));
  assertTrue(a3.getB().contains(b4));
  assertTrue(a4.getB().contains(b3));
  assertTrue(a4.getB().contains(b4));
  assertTrue(a4.getB().contains(b5));
  assertTrue(a5.getB().contains(b4));
  assertTrue(a5.getB().contains(b5));
}

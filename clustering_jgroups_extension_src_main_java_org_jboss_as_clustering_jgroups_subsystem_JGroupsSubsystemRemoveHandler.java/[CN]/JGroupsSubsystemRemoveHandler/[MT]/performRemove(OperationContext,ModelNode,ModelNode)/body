{
  PathAddress address=context.getCurrentAddress();
  context.addStep(operation,new OperationStepHandler(){
    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {
      JGroupsSubsystemRemoveHandler.super.performRemove(context,operation,model);
    }
  }
,OperationContext.Stage.MODEL,true);
  if (model.hasDefined(StackResourceDefinition.WILDCARD_PATH.getKey())) {
    ModelNode stacks=model.get(StackResourceDefinition.WILDCARD_PATH.getKey());
    if (stacks.isDefined()) {
      for (      Property stack : stacks.asPropertyList()) {
        PathAddress stackAddress=address.append(StackResourceDefinition.pathElement(stack.getName()));
        context.addStep(Util.createRemoveOperation(stackAddress),new StackRemoveHandler(),OperationContext.Stage.MODEL,true);
      }
    }
  }
  if (model.hasDefined(ChannelResourceDefinition.WILDCARD_PATH.getKey())) {
    ModelNode channels=model.get(ChannelResourceDefinition.WILDCARD_PATH.getKey());
    if (channels.isDefined()) {
      for (      Property channel : channels.asPropertyList()) {
        PathAddress channelAddress=address.append(ChannelResourceDefinition.pathElement(channel.getName()));
        context.addStep(Util.createRemoveOperation(channelAddress),new ChannelRemoveHandler(this.allowRuntimeOnlyRegistration),OperationContext.Stage.MODEL,true);
      }
    }
  }
}

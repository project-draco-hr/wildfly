{
  final AdditionalInitialization additionalInit=createAdditionalInitialization();
  final String subsystemXml=configId == null ? getSubsystemXml() : getSubsystemXml(configId);
  final KernelServices servicesA=super.installInController(additionalInit,subsystemXml);
  final ModelNode modelA=servicesA.readWholeModel();
  final String marshalled=servicesA.getPersistedSubsystemXml();
  servicesA.shutdown();
  validateXml(normalizeXML(subsystemXml),normalizeXML(marshalled));
  final KernelServices servicesB=super.installInController(additionalInit,marshalled);
  final ModelNode modelB=servicesB.readWholeModel();
  super.compare(modelA,modelB);
  final ModelNode operation=createDescribeOperation();
  final ModelNode result=servicesB.executeOperation(operation);
  Assert.assertTrue("the subsystem describe operation has to generate a list of operations to recreate the subsystem",result.hasDefined(ModelDescriptionConstants.RESULT));
  final List<ModelNode> operations=result.get(ModelDescriptionConstants.RESULT).asList();
  servicesB.shutdown();
  final KernelServices servicesC=super.installInController(additionalInit,operations);
  final ModelNode modelC=servicesC.readWholeModel();
  super.compare(modelA,modelC);
}

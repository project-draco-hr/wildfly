{
  final EnumMap<Phase,List<RegisteredDeploymentUnitProcessor>> finalDeployers=new EnumMap<Phase,List<RegisteredDeploymentUnitProcessor>>(Phase.class);
  final List<RegisteredDeploymentUnitProcessor> processorList=new ArrayList<RegisteredDeploymentUnitProcessor>(256);
  for (  Phase phase : Phase.values()) {
    processorList.clear();
    final Set<RegisteredDeploymentUnitProcessor> processorSet=deployerMap.get(phase);
    for (    RegisteredDeploymentUnitProcessor processor : processorSet) {
      processorList.add(processor);
    }
    finalDeployers.put(phase,new ArrayList<RegisteredDeploymentUnitProcessor>(processorList));
  }
  final ServiceVerificationHandler verificationHandler=new ServiceVerificationHandler();
  DeployerChainsService.addService(context.getServiceTarget(),finalDeployers,verificationHandler);
  context.addStep(verificationHandler,OperationContext.Stage.VERIFY);
  context.completeStep(new OperationContext.RollbackHandler(){
    @Override public void handleRollback(    OperationContext context,    ModelNode operation){
      context.removeService(Services.JBOSS_DEPLOYMENT_CHAINS);
    }
  }
);
}

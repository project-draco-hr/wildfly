{
  final JBossServiceDependencyListConfig dependencyListConfig=new JBossServiceDependencyListConfig();
  final List<JBossServiceDependencyConfig> dependencyConfigs=new ArrayList<JBossServiceDependencyConfig>();
  String optionalAttributeName=null;
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    final Attribute attribute=Attribute.of(reader.getAttributeName(i));
    final String attributeValue=reader.getAttributeValue(i);
switch (attribute) {
case OPTIONAL_ATTRIBUTE_NAME:
      optionalAttributeName=attributeValue;
    break;
default :
  throw unexpectedContent(reader);
}
}
while (reader.hasNext()) {
switch (reader.next()) {
case END_ELEMENT:
dependencyListConfig.setOptionalAttributeName(optionalAttributeName);
dependencyListConfig.setDependencyConfigs(dependencyConfigs.toArray(new JBossServiceDependencyConfig[dependencyConfigs.size()]));
return dependencyListConfig;
case START_ELEMENT:
switch (Namespace.of(reader.getNamespaceURI())) {
case NONE:
case SERVICE_7_0:
{
break;
}
default :
throw unexpectedContent(reader);
}
switch (Element.of(reader.getLocalName())) {
case DEPENDS_LIST_ELEMENT:
final JBossServiceDependencyConfig dependencyConfig=new JBossServiceDependencyConfig();
parseDependency(reader,dependencyConfig);
dependencyConfigs.add(dependencyConfig);
break;
default :
throw unexpectedContent(reader);
}
break;
}
}
throw unexpectedContent(reader);
}

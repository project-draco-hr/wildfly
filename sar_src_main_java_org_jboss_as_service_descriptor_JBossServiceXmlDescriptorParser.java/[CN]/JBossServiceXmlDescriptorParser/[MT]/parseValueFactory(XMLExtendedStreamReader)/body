{
  final JBossServiceAttributeConfig.ValueFactory valueFactory=new JBossServiceAttributeConfig.ValueFactory();
  final int count=reader.getAttributeCount();
  final Set<Attribute> required=EnumSet.of(Attribute.BEAN,Attribute.METHOD);
  for (int i=0; i < count; i++) {
    final Attribute attribute=Attribute.of(reader.getAttributeName(i));
    required.remove(attribute);
    final String attributeValue=reader.getAttributeValue(i);
switch (attribute) {
case BEAN:
      valueFactory.setBeanName(attributeValue);
    break;
case METHOD:
  valueFactory.setMethodName(attributeValue);
break;
default :
throw unexpectedContent(reader);
}
}
if (!required.isEmpty()) {
throw missingAttributes(reader.getLocation(),required);
}
final List<JBossServiceAttributeConfig.ValueFactoryParameter> parameters=new ArrayList<JBossServiceAttributeConfig.ValueFactoryParameter>();
while (reader.hasNext()) {
switch (reader.next()) {
case END_ELEMENT:
valueFactory.setParameters(parameters.toArray(new JBossServiceAttributeConfig.ValueFactoryParameter[parameters.size()]));
return valueFactory;
case START_ELEMENT:
switch (Namespace.of(reader.getNamespaceURI())) {
case NONE:
case SERVICE_7_0:
{
break;
}
default :
throw unexpectedContent(reader);
}
switch (Element.of(reader.getLocalName())) {
case PARAMETER:
parameters.add(parseValueFactoryParameter(reader));
break;
default :
throw unexpectedContent(reader);
}
break;
}
}
throw unexpectedContent(reader);
}

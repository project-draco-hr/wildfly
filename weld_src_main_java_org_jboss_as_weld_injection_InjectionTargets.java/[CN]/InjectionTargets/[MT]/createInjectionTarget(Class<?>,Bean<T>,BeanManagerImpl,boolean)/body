{
  final ClassTransformer transformer=beanManager.getServices().get(ClassTransformer.class);
  @SuppressWarnings("unchecked") final Class<T> clazz=(Class<T>)componentClass;
  EnhancedAnnotatedType<T> type=transformer.getEnhancedAnnotatedType(clazz,beanManager.getId());
  if (!type.getJavaClass().equals(componentClass)) {
    final String bdaId=beanManager.getId() + componentClass.getClassLoader().hashCode();
    type=transformer.getEnhancedAnnotatedType(clazz,bdaId);
  }
  if (Beans.getBeanConstructor(type) == null) {
    return new NonProducibleInjectionTarget<>(type,bean,beanManager);
  }
  if (interceptionSupport) {
    return new InterceptedNonContextualComponentInjectionTarget<>(type,bean,beanManager);
  }
 else {
    return new NonContextualComponentInjectionTarget<>(type,bean,beanManager);
  }
}

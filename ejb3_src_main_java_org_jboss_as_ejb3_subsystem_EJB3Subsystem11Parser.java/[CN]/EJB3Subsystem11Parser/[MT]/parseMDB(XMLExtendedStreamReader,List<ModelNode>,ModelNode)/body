{
  ModelNode mdbModelNode=new ModelNode();
  requireNoAttributes(reader);
  while (reader.hasNext() && reader.nextTag() != XMLStreamConstants.END_ELEMENT) {
switch (EJB3SubsystemXMLElement.forName(reader.getLocalName())) {
case BEAN_INSTANCE_POOL_REF:
{
        final String poolName=readStringAttributeElement(reader,EJB3SubsystemXMLAttribute.POOL_NAME.getLocalName());
        EJB3SubsystemRootResourceDefinition.DEFAULT_MDB_INSTANCE_POOL.parseAndSetParameter(poolName,ejb3SubsystemAddOperation,reader);
        break;
      }
case RESOURCE_ADAPTER_REF:
{
      final String resourceAdapterName=readStringAttributeElement(reader,EJB3SubsystemXMLAttribute.RESOURCE_ADAPTER_NAME.getLocalName());
      EJB3SubsystemRootResourceDefinition.DEFAULT_RESOURCE_ADAPTER_NAME.parseAndSetParameter(resourceAdapterName,ejb3SubsystemAddOperation,reader);
      break;
    }
default :
{
    throw unexpectedElement(reader);
  }
}
}
if (!ejb3SubsystemAddOperation.hasDefined(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME)) {
final ModelNode defaultRAName=EJB3SubsystemRootResourceDefinition.DEFAULT_RESOURCE_ADAPTER_NAME.getDefaultValue();
if (defaultRAName != null) {
ejb3SubsystemAddOperation.get(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME).set(defaultRAName);
}
}
return mdbModelNode;
}

{
  ModelVersion version=model.getVersion();
  KernelServices services=this.buildKernelServices(controller,version,dependencies);
  checkSubsystemModelTransformation(services,version,createModelFixer(model),false);
  ModelNode transformed=services.readTransformedModel(version);
  if (InfinispanModel.VERSION_3_0_0.requiresTransformation(version)) {
    ModelNode cache=transformed.get(InfinispanSubsystemResourceDefinition.PATH.getKeyValuePair()).get(CacheContainerResourceDefinition.pathElement("maximal").getKeyValuePair()).get(LocalCacheResourceDefinition.pathElement("local").getKeyValuePair());
    Assert.assertTrue(cache.hasDefined(CacheResourceDefinition.Attribute.BATCHING.getDefinition().getName()));
    Assert.assertTrue(cache.get(CacheResourceDefinition.Attribute.BATCHING.getDefinition().getName()).asBoolean());
    ModelNode transaction=cache.get(TransactionResourceDefinition.PATH.getKeyValuePair());
    if (transaction.hasDefined(TransactionResourceDefinition.Attribute.MODE.getDefinition().getName())) {
      Assert.assertEquals(TransactionMode.NONE.name(),transaction.get(TransactionResourceDefinition.Attribute.MODE.getDefinition().getName()).asString());
    }
  }
}

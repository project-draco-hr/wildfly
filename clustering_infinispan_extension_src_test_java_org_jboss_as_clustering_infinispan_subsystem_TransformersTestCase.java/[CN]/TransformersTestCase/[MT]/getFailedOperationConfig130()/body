{
  FailedOperationTransformationConfig config=createFailedOperationConfig(InfinispanModel.VERSION_1_3_0.getVersion());
  PathAddress subsystemAddress=PathAddress.pathAddress(InfinispanSubsystemResourceDefinition.PATH);
  PathAddress containerAddress=subsystemAddress.append(CacheContainerResourceDefinition.WILDCARD_PATH);
  config.addFailedAttribute(containerAddress,new RejectExpressionsConfig(InfinispanRejectedExpressions_1_3.ACCEPT14_REJECT13_CONTAINER_ATTRIBUTES));
  PathAddress transportAddress=containerAddress.append(TransportResourceDefinition.PATH);
  config.addFailedAttribute(transportAddress,new RejectExpressionsConfig(InfinispanRejectedExpressions_1_3.ACCEPT14_REJECT13_TRANSPORT_ATTRIBUTES));
  PathElement[] childPaths={LockingResourceDefinition.PATH,TransactionResourceDefinition.PATH,ExpirationResourceDefinition.PATH,EvictionResourceDefinition.PATH,StateTransferResourceDefinition.PATH};
  PathElement[] storePaths={CustomStoreResourceDefinition.PATH,FileStoreResourceDefinition.PATH,StringKeyedJDBCStoreResourceDefinition.PATH,BinaryKeyedJDBCStoreResourceDefinition.PATH,MixedKeyedJDBCStoreResourceDefinition.PATH,RemoteStoreResourceDefinition.PATH};
  for (  CacheType type : CacheType.values()) {
    PathAddress cacheAddress=containerAddress.append(type.pathElement());
    FailedOperationTransformationConfig.ChainedConfig.Builder builder=ChainedConfig.createBuilder(InfinispanRejectedExpressions_1_3.ACCEPT14_REJECT13_CACHE_ATTRIBUTES);
    builder.addConfig(new RejectExpressionsConfig(InfinispanRejectedExpressions_1_3.ACCEPT14_REJECT13_CACHE_ATTRIBUTES));
    builder.addConfig(new RemoveResolvedIndexingPropertiesConfig(CacheResourceDefinition.INDEXING_PROPERTIES));
    config.addFailedAttribute(cacheAddress,builder.build());
    for (    PathElement childPath : childPaths) {
      config.addFailedAttribute(cacheAddress.append(childPath),new RejectExpressionsConfig(InfinispanRejectedExpressions_1_3.ACCEPT14_REJECT13_CHILD_ATTRIBUTES));
    }
    RejectExpressionsConfig keyedTableComplexChildConfig=new RejectExpressionsConfig(JDBCStoreResourceDefinition.TABLE_ATTRIBUTES);
    for (    PathElement storePath : storePaths) {
      PathAddress storeAddress=cacheAddress.append(storePath);
      config.addFailedAttribute(storeAddress,new RejectExpressionsConfig(InfinispanRejectedExpressions_1_3.ACCEPT14_REJECT13_STORE_ATTRIBUTES).configureComplexAttribute(ModelKeys.STRING_KEYED_TABLE,keyedTableComplexChildConfig).configureComplexAttribute(ModelKeys.BINARY_KEYED_TABLE,keyedTableComplexChildConfig));
      PathAddress writeBehindAddress=storeAddress.append(StoreWriteBehindResourceDefinition.PATH);
      config.addFailedAttribute(writeBehindAddress,new RejectExpressionsConfig(InfinispanRejectedExpressions_1_3.ACCEPT14_REJECT13_STORE_ATTRIBUTES));
      PathAddress storePropertyAddress=storeAddress.append(StorePropertyResourceDefinition.WILDCARD_PATH);
      config.addFailedAttribute(storePropertyAddress,new RejectExpressionsConfig(InfinispanRejectedExpressions_1_3.ACCEPT14_REJECT13_STORE_ATTRIBUTES));
    }
  }
  return config;
}

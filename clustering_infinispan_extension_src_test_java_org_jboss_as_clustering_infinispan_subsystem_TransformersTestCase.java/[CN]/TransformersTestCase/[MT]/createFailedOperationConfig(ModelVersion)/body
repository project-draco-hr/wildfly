{
  FailedOperationTransformationConfig config=new FailedOperationTransformationConfig();
  PathAddress subsystemAddress=PathAddress.pathAddress(InfinispanSubsystemResourceDefinition.PATH);
  PathAddress containerAddress=subsystemAddress.append(CacheContainerResourceDefinition.WILDCARD_PATH);
  if (InfinispanModel.VERSION_2_0_0.requiresTransformation(version)) {
    for (    PathElement path : Arrays.asList(DistributedCacheResourceDefinition.WILDCARD_PATH,ReplicatedCacheResourceDefinition.WILDCARD_PATH)) {
      PathAddress cacheAddress=containerAddress.append(path);
      config.addFailedAttribute(cacheAddress.append(BackupsResourceDefinition.PATH).append(BackupResourceDefinition.WILDCARD_PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE);
      config.addFailedAttribute(cacheAddress.append(BackupForResourceDefinition.PATH),FailedOperationTransformationConfig.REJECTED_RESOURCE);
    }
  }
  if (InfinispanModel.VERSION_1_5_0.requiresTransformation(version)) {
    config.addFailedAttribute(containerAddress,new ChangeToTrueConfig(CacheContainerResourceDefinition.Attribute.STATISTICS_ENABLED.getDefinition().getName()));
    config.addFailedAttribute(containerAddress.append(LocalCacheResourceDefinition.WILDCARD_PATH),new ChangeToTrueConfig(CacheResourceDefinition.Attribute.STATISTICS_ENABLED.getDefinition().getName()));
    config.addFailedAttribute(containerAddress.append(DistributedCacheResourceDefinition.WILDCARD_PATH),new ChangeToTrueConfig(CacheResourceDefinition.Attribute.STATISTICS_ENABLED.getDefinition().getName()));
    config.addFailedAttribute(containerAddress.append(ReplicatedCacheResourceDefinition.WILDCARD_PATH),new ChangeToTrueConfig(CacheResourceDefinition.Attribute.STATISTICS_ENABLED.getDefinition().getName()));
    config.addFailedAttribute(containerAddress.append(InvalidationCacheResourceDefinition.WILDCARD_PATH),new ChangeToTrueConfig(CacheResourceDefinition.Attribute.STATISTICS_ENABLED.getDefinition().getName()));
  }
  return config;
}

{
  final String deploymentName=PathAddress.pathAddress(operation.require(OP_ADDR)).getLastElement().getValue();
  final Resource root=context.getRootResource();
  if (root.hasChild(PathElement.pathElement(SERVER_GROUP))) {
    final List<String> badGroups=new ArrayList<String>();
    for (    final Resource.ResourceEntry entry : root.getChildren(SERVER_GROUP)) {
      if (entry.hasChild(PathElement.pathElement(DEPLOYMENT,deploymentName))) {
        badGroups.add(entry.getName());
      }
    }
    if (badGroups.size() > 0) {
      String msg=String.format("Cannot remove deployment %s from the domain as it is still used by server groups %s",deploymentName,badGroups);
      throw new OperationFailedException(new ModelNode().set(msg));
    }
  }
  List<byte[]> deploymentHashes=DeploymentUtils.getDeploymentHash(context.readResource(PathAddress.EMPTY_ADDRESS));
  operation.get(OPERATION_HEADERS,DEPLOYMENT_HASHES).setEmptyList();
  for (  byte[] hash : deploymentHashes) {
    operation.get(OPERATION_HEADERS,DEPLOYMENT_HASHES).add(hash);
  }
  super.performRemove(context,operation,model);
}

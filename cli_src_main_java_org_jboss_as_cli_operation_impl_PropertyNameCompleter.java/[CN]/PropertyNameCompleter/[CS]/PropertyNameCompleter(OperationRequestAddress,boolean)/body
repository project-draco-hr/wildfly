{
  super(new CandidatesProvider(){
    @Override public Collection<String> getAllCandidates(    CommandContext ctx){
      final ModelNode req=new ModelNode();
      final ModelNode addrNode=req.get(Util.ADDRESS);
      for (      OperationRequestAddress.Node node : address) {
        addrNode.add(node.getType(),node.getName());
      }
      req.get(Util.OPERATION).set(Util.READ_RESOURCE_DESCRIPTION);
      final ModelNode response;
      try {
        response=ctx.getModelControllerClient().execute(req);
      }
 catch (      Exception e) {
        return Collections.emptyList();
      }
      final ModelNode result=response.get(Util.RESULT);
      if (!result.isDefined()) {
        return Collections.emptyList();
      }
      final ModelNode attrs=result.get(Util.ATTRIBUTES);
      if (!attrs.isDefined()) {
        return Collections.emptyList();
      }
      final List<String> names=new ArrayList<String>();
      for (      Property attr : attrs.asPropertyList()) {
        if (onlyWritable) {
          final ModelNode descr=attr.getValue();
          if (!descr.has(Util.ACCESS_TYPE) || !Util.READ_ONLY.equals(descr.get(Util.ACCESS_TYPE).asString())) {
            names.add(attr.getName());
          }
        }
 else {
          names.add(attr.getName());
        }
      }
      return names;
    }
  }
);
}

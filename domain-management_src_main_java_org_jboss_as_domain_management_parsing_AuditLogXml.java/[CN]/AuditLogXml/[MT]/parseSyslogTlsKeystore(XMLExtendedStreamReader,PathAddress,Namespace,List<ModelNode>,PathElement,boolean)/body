{
  ModelNode add=Util.createAddOperation(address.append(storeAddress));
  list.add(add);
  final int tcpCount=reader.getAttributeCount();
  for (int i=0; i < tcpCount; i++) {
    final String value=reader.getAttributeValue(i);
    if (!isNoNamespaceAttribute(reader,i)) {
      throw unexpectedAttribute(reader,i);
    }
    final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case KEYSTORE_PASSWORD:
{
        SyslogAuditLogProtocolResourceDefinition.Tls.TlsKeyStore.KEYSTORE_PASSWORD.parseAndSetParameter(value,add,reader);
        break;
      }
case PATH:
{
      SyslogAuditLogProtocolResourceDefinition.Tls.TlsKeyStore.KEYSTORE_PATH.parseAndSetParameter(value,add,reader);
      break;
    }
case RELATIVE_TO:
{
    SyslogAuditLogProtocolResourceDefinition.Tls.TlsKeyStore.KEYSTORE_RELATIVE_TO.parseAndSetParameter(value,add,reader);
    break;
  }
case KEY_PASSWORD:
{
  if (hasKeyPassword) {
    SyslogAuditLogProtocolResourceDefinition.Tls.TlsKeyStore.KEY_PASSWORD.parseAndSetParameter(value,add,reader);
    break;
  }
}
default :
{
throw unexpectedAttribute(reader,i);
}
}
}
requireNoContent(reader);
}

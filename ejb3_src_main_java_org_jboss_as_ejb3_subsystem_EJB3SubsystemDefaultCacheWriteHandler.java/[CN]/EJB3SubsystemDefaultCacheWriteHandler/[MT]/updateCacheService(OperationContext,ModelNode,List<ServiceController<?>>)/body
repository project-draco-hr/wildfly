{
  ModelNode cacheName=attribute.resolveModelAttribute(context,model);
  ServiceRegistry registry=context.getServiceRegistry(true);
  ServiceController<?> existingService=registry.getService(serviceName);
  if (existingService != null) {
    context.removeService(existingService);
  }
  ServiceName dependency=cacheName.isDefined() ? CacheFactoryService.getServiceName(cacheName.asString()) : this.defaultServiceName;
  if (dependency != null) {
    @SuppressWarnings("rawtypes") InjectedValue<CacheFactory> factory=new InjectedValue<CacheFactory>();
    @SuppressWarnings("rawtypes") ValueService<CacheFactory> service=new ValueService<CacheFactory>(factory);
    ServiceController<?> newController=context.getServiceTarget().addService(serviceName,service).addDependency(dependency,CacheFactory.class,factory).setInitialMode(ServiceController.Mode.ON_DEMAND).install();
    if (newControllers != null) {
      newControllers.add(newController);
    }
  }
}

{
  if (firstOperand == null) {
    firstOperand=parseOperand();
    if (firstOperand == null) {
      return null;
    }
  }
  if (isEOL()) {
    return (Operation)firstOperand;
  }
  final BaseOperation op;
  if (lookedAheadOp != null) {
    op=lookedAheadOp;
    lookedAheadOp=null;
  }
 else {
    op=getOperationForPosition();
  }
  op.addOperand(firstOperand);
  while (input.startsWith(op.getName(),pos) && input.length() >= pos + op.getName().length()) {
    pos+=op.getName().length();
    Operand operand=parseOperand();
    if (operand == null) {
      return op;
    }
    if (!isEOL()) {
      lookedAheadOp=getOperationForPosition();
      if (lookedAheadOp.getPriority() > op.getPriority()) {
        operand=getNextOperationFor(operand);
      }
    }
    op.addOperand(operand);
  }
  return op;
}

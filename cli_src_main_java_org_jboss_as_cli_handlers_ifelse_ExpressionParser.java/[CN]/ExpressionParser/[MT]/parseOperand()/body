{
  skipWhitespaces();
  if (pos == input.length()) {
    return null;
  }
  if (input.charAt(pos) == '(') {
    int depthCount=0;
    int endIndex=pos;
    while (++endIndex < input.length()) {
      if (input.charAt(endIndex) == '(') {
        ++depthCount;
      }
 else       if (input.charAt(endIndex) == ')') {
        if (depthCount == 0) {
          final Operation expr=parseExpression(input.substring(pos + 1,endIndex));
          skipWhitespaces();
          return expr;
        }
 else {
          --depthCount;
        }
      }
    }
    throw new IllegalStateException("Failed to locate closing ')' for '(' at " + pos + " in '"+ input+ "'");
  }
  final int start=pos;
  int end=pos;
  ComparisonOperation comparison=null;
  while (true) {
    if (pos == input.length()) {
      break;
    }
    final char ch=input.charAt(pos);
    if (Character.isWhitespace(ch)) {
      skipWhitespaces();
      comparison=tryComparison();
      break;
    }
    if (ch == '&' || ch == '|') {
      break;
    }
    comparison=tryComparison();
    if (comparison != null) {
      break;
    }
    ++pos;
    ++end;
  }
  final String op=input.substring(start,end);
  Operand operand=new Operand(){
    public String toString(){
      return '\'' + op + '\'';
    }
  }
;
  if (comparison != null) {
    comparison.addOperand(operand);
    operand=comparison;
    comparison.addOperand(parseOperand());
  }
  return operand;
}

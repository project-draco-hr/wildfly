{
  EJB ejb=injectionPoint.getAnnotated().getAnnotation(EJB.class);
  if (ejb == null) {
    throw new RuntimeException("@Ejb annotation not found on " + injectionPoint.getMember());
  }
  if (injectionPoint.getMember() instanceof Method && ((Method)injectionPoint.getMember()).getParameterTypes().length != 1) {
    throw new IllegalArgumentException("Injection point represents a method which doesn't follow JavaBean conventions (must have exactly one parameter) " + injectionPoint);
  }
  if (!ejb.lookup().equals("")) {
    final ServiceName ejbServiceName=ContextNames.serviceNameOfContext(moduleDescription.getApplicationName(),moduleDescription.getModuleName(),moduleDescription.getModuleName(),ejb.lookup());
    ServiceController<?> controller=serviceRegistry.getRequiredService(ejbServiceName);
    ManagedReferenceFactory factory=(ManagedReferenceFactory)controller.getValue();
    return factory.getReference().getInstance();
  }
 else   if (ejbLookup != null) {
    final ServiceName viewService;
    if (ejb.beanName().isEmpty()) {
      if (ejb.beanInterface() != Object.class) {
        viewService=ejbLookup.getViewService(ejb.beanInterface());
      }
 else {
        viewService=ejbLookup.getViewService(getType(injectionPoint.getType()));
      }
    }
 else {
      if (ejb.beanInterface() != Object.class) {
        viewService=ejbLookup.getViewService(ejb.beanName(),ejb.beanInterface());
      }
 else {
        viewService=ejbLookup.getViewService(ejb.beanName(),getType(injectionPoint.getType()));
      }
    }
    final ServiceController<?> controller=serviceRegistry.getRequiredService(viewService);
    final ComponentView view=(ComponentView)controller.getValue();
    return view.createInstance().createProxy();
  }
 else {
    throw new RuntimeException("No EjbLookup registry has been provided CDI @EJB injection " + injectionPoint);
  }
}

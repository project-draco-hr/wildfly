{
  final Map<String,TimerEntity> timers=new HashMap<String,TimerEntity>();
  try {
    final File file=new File(getDirectory(timedObjectId));
    if (!file.exists()) {
      return timers;
    }
 else     if (!file.isDirectory()) {
      ROOT_LOGGER.failToRestoreTimers(file);
      return timers;
    }
    Unmarshaller unmarshaller=factory.createUnmarshaller(configuration);
    for (    File timerFile : file.listFiles()) {
      FileInputStream in=null;
      try {
        in=new FileInputStream(timerFile);
        unmarshaller.start(new InputStreamByteInput(in));
        final TimerEntity entity=unmarshaller.readObject(TimerEntity.class);
        timers.put(entity.getId(),entity);
        unmarshaller.finish();
      }
 catch (      Exception e) {
        ROOT_LOGGER.failToRestoreTimersFromFile(timerFile,e);
      }
 finally {
        if (in != null) {
          try {
            in.close();
          }
 catch (          IOException e) {
            ROOT_LOGGER.failToCloseFile(e);
          }
        }
      }
    }
  }
 catch (  Exception e) {
    ROOT_LOGGER.failToRestoreTimersForObjectId(timedObjectId,e);
  }
  return timers;
}

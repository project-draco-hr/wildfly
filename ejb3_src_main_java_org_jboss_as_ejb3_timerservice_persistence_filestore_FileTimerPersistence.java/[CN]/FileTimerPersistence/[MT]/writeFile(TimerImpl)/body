{
  final File file=fileName(timer.getTimedObjectId(),timer.getId());
  if (timer.getState() == TimerState.CANCELED || timer.getState() == TimerState.EXPIRED) {
    if (file.exists()) {
      file.delete();
    }
    return;
  }
  final TimerEntity entity;
  if (timer instanceof CalendarTimer) {
    entity=new CalendarTimerEntity((CalendarTimer)timer);
  }
 else {
    entity=new TimerEntity(timer);
  }
  FileOutputStream fileOutputStream=null;
  try {
    fileOutputStream=new FileOutputStream(file,false);
    final Marshaller marshaller=factory.createMarshaller(configuration);
    marshaller.start(new OutputStreamByteOutput(fileOutputStream));
    marshaller.writeObject(entity);
    marshaller.finish();
    fileOutputStream.flush();
    fileOutputStream.getFD().sync();
  }
 catch (  FileNotFoundException e) {
    throw new RuntimeException(e);
  }
catch (  IOException e) {
    throw new RuntimeException(e);
  }
 finally {
    if (fileOutputStream != null) {
      try {
        fileOutputStream.close();
      }
 catch (      IOException e) {
        ROOT_LOGGER.failToCloseFile(e);
      }
    }
  }
}

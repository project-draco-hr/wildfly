{
  if (operationName.equals("_get_handle") && this instanceof javax.ejb.EJBObject) {
    if (handle == null) {
      handle=new HandleImplIIOP(this);
    }
    return handle;
  }
 else   if (operationName.equals("_get_homeHandle") && this instanceof javax.ejb.EJBHome) {
    if (handle == null) {
      handle=new HomeHandleImplIIOP(this);
    }
    return handle;
  }
 else   if (!_is_local()) {
    InputStream in=null;
    try {
      try {
        OutputStream out=(OutputStream)_request(operationName,true);
        stubStrategy.writeParams(out,params);
        trace("sent request: " + operationName);
        in=(InputStream)_invoke(out);
        if (stubStrategy.isNonVoid()) {
          trace("received reply");
          return stubStrategy.readRetval(in);
        }
 else         return null;
      }
 catch (      ApplicationException ex) {
        trace("got application exception");
        in=(InputStream)ex.getInputStream();
        throw stubStrategy.readException(ex.getId(),in);
      }
catch (      RemarshalException ex) {
        trace("got remarshal exception");
        return invoke(operationName,stubStrategy,params);
      }
    }
 catch (    SystemException ex) {
      if (EjbLogger.EJB3_INVOCATION_LOGGER.isTraceEnabled()) {
        EjbLogger.EJB3_INVOCATION_LOGGER.trace("CORBA system exception in IIOP stub",ex);
      }
      throw Util.mapSystemException(ex);
    }
 finally {
      _releaseReply(in);
    }
  }
 else {
    org.omg.CORBA.portable.ServantObject so=_servant_preinvoke(operationName,Object.class);
    if (so == null)     return invoke(operationName,stubStrategy,params);
    try {
      Object retval=((LocalIIOPInvoker)so.servant).invoke(operationName,params,null,null,null);
      return stubStrategy.convertLocalRetval(retval);
    }
 catch (    Throwable e) {
      Throwable ex=e;
      if (stubStrategy.isDeclaredException(ex))       throw ex;
 else       throw Util.wrapException(ex);
    }
 finally {
      _servant_postinvoke(so);
    }
  }
}

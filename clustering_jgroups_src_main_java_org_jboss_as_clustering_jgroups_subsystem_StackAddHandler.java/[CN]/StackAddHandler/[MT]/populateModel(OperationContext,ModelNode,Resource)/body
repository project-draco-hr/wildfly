{
  populateModel(operation,resource);
  if (operation.hasDefined(ModelKeys.TRANSPORT)) {
    ModelNode addTransport=operation.get(ModelKeys.TRANSPORT).clone();
    addTransport.get(OPERATION_NAME).set(ModelDescriptionConstants.ADD);
    ModelNode transportAddress=operation.get(OP_ADDR).clone();
    transportAddress.add(ModelKeys.TRANSPORT,ModelKeys.TRANSPORT_NAME);
    transportAddress.protect();
    addTransport.get(OP_ADDR).set(transportAddress);
    context.addStep(addTransport,TransportResourceDefinition.ADD_HANDLER,OperationContext.Stage.MODEL,true);
  }
  if (operation.hasDefined(ModelKeys.PROTOCOLS)) {
    List<ModelNode> protocols=operation.get(ModelKeys.PROTOCOLS).asList();
    ListIterator<ModelNode> iterator=protocols.listIterator(protocols.size());
    while (iterator.hasPrevious()) {
      ModelNode protocol=iterator.previous();
      ModelNode addProtocol=protocol.clone();
      addProtocol.get(OPERATION_NAME).set(ModelKeys.ADD_PROTOCOL);
      ModelNode protocolAddress=operation.get(OP_ADDR).clone();
      protocolAddress.protect();
      addProtocol.get(OP_ADDR).set(protocolAddress);
      context.addStep(addProtocol,ProtocolResourceDefinition.ADD_HANDLER,OperationContext.Stage.MODEL,true);
    }
  }
}

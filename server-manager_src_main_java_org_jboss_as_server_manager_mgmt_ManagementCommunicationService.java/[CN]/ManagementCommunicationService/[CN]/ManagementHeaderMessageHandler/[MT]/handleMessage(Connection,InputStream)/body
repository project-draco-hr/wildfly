{
  final int workingVersion;
  final ManagementRequestHeader requestHeader;
  final ManagementOperationHandler handler;
  ByteDataInput input=null;
  try {
    input=new SimpleByteDataInput(dataStream);
    requestHeader=new ManagementRequestHeader(input);
    workingVersion=Math.min(ManagementProtocol.VERSION,requestHeader.getVersion());
    byte handlerId=requestHeader.getOperationHandlerId();
    if (handlerId == -1) {
      throw new IOException("Management request failed.  Invalid handler id");
    }
    handler=handlers.get(handlerId);
    if (handler == null) {
      String msg=null;
      if (handlerId == StandaloneClientProtocol.SERVER_CONTROLLER_REQUEST) {
        msg="Management request failed.  A request from a client " + "wishing to communicate with a standalone server " + "was received by this server manager. Server "+ "managers do not support the standalone client protocol";
      }
 else {
        msg="Management request failed.  No handler found for id " + handlerId;
      }
      throw new IOException(msg);
    }
    connection.setMessageHandler(handler);
  }
 catch (  IOException e) {
    throw e;
  }
catch (  Throwable t) {
    throw new IOException("Failed to read request header",t);
  }
 finally {
    safeClose(input);
    safeClose(dataStream);
  }
  OutputStream dataOutput=null;
  ByteDataOutput output=null;
  try {
    dataOutput=connection.writeMessage();
    output=new SimpleByteDataOutput(dataOutput);
    final ManagementResponseHeader responseHeader=new ManagementResponseHeader(workingVersion,requestHeader.getRequestId());
    responseHeader.write(output);
    output.close();
    dataOutput.close();
  }
 catch (  IOException e) {
    throw e;
  }
catch (  Throwable t) {
    throw new IOException("Failed to write management response headers",t);
  }
 finally {
    safeClose(output);
    safeClose(dataOutput);
  }
}

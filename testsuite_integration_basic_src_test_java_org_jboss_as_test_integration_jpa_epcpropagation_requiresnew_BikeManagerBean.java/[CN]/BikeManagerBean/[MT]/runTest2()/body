{
  Motorbike bike=bikeShop.downPaymentOnBikeNoTx(2,"Bike2");
  Assert.assertNotNull("newly created bike not be null",bike);
  bikeShop.purchaseNowAndFlushDbChanges();
  Assert.assertNotNull("should be able to find bike in database after purchaseNowAndFlushDbChanges.",bikeShop.find(2));
  try {
    bikeShop.forceRollback(2);
  }
 catch (  RuntimeException ignore) {
  }
  Assert.assertNotNull("extended persistence context must be associated with JTA tx during " + "call to purchaseNowAndFlushDbChanges() and db changes saved when that method ends its JTA tx.",bikeRace.find(2));
}

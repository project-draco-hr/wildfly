{
  DeploymentChain deploymentChain=(DeploymentChain)serviceContainer.getService(JarDeploymentActivator.JAR_DEPLOYMENT_CHAIN_SERVICE_NAME).getValue();
  DeploymentChainProvider.INSTANCE.addDeploymentChain(deploymentChain,new DeploymentChainProvider.Selector(){
    public boolean supports(    DeploymentUnitContext deploymentUnitContext){
      VirtualFile virtualFile=VirtualFileAttachment.getVirtualFileAttachment(deploymentUnitContext);
      return "mcXmlDeployment.jar".equals(virtualFile.getName());
    }
  }
);
  deploymentChain.addProcessor(new KernelDeploymentParsingProcessor(),KernelDeploymentParsingProcessor.PRIORITY);
  deploymentChain.addProcessor(new ParsedKernelDeploymentProcessor(),ParsedKernelDeploymentProcessor.PRIORITY);
  executeDeployment(initializeDeployment("/test/mcXmlDeployment.jar"));
  final ServiceController<?> testBeanController=serviceContainer.getService(TEST_SERVICE_NAME);
  assertNotNull(testBeanController);
  Object bean=testBeanController.getValue();
  assertNotNull(bean);
  LegacyBean lb=(LegacyBean)bean;
  assertEquals("somestring",lb.getString());
}

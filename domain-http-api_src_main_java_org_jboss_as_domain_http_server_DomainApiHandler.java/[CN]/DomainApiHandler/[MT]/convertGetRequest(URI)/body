{
  ArrayList<String> pathSegments=decodePath(request.getRawPath());
  Map<String,String> queryParameters=decodeQuery(request.getRawQuery());
  GetOperation operation=null;
  ModelNode dmr=new ModelNode();
  for (  Entry<String,String> entry : queryParameters.entrySet()) {
    String key=entry.getKey();
    String value=entry.getValue();
    if ("operation".equals(key)) {
      try {
        operation=GetOperation.valueOf(value.toUpperCase().replace('-','_'));
        value=operation.realOperation();
      }
 catch (      Exception e) {
        throw new IllegalArgumentException("Invalid operation '" + value + "'",e);
      }
    }
    dmr.get(entry.getKey()).set(value);
  }
  if (operation == null) {
    operation=GetOperation.RESOURCE;
    dmr.get("operation").set(operation.realOperation);
  }
  if (operation == GetOperation.RESOURCE && !dmr.has("recursive"))   dmr.get("recursive").set(false);
  ModelNode list=dmr.get("address").setEmptyList();
  for (int i=1; i < pathSegments.size() - 1; i+=2) {
    list.add(pathSegments.get(i),pathSegments.get(i + 1));
  }
  return dmr;
}

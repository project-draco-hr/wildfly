{
  final Class<?> targetClass=target.getClass();
  final Method method;
  try {
    final Class<?> argumentType=targetClass.getClassLoader().loadClass(injectedTypeName);
    method=targetClass.getMethod(methodName,argumentType);
  }
 catch (  NoSuchMethodException e) {
    throw new IllegalArgumentException("Target object not valid for this resource injections",e);
  }
catch (  ClassNotFoundException e) {
    throw new IllegalArgumentException("Target object not valid for this resource injections",e);
  }
  return new SetMethodInjector<T>(Values.immediateValue(target),Values.immediateValue(method));
}

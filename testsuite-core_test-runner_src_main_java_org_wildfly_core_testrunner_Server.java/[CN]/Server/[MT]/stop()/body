{
  if (shutdownThread != null) {
    Runtime.getRuntime().removeShutdownHook(shutdownThread);
    shutdownThread=null;
  }
  try {
    if (process != null) {
      Thread shutdown=new Thread(new Runnable(){
        @Override public void run(){
          long timeout=System.currentTimeMillis() + 10000;
          while (process != null && System.currentTimeMillis() < timeout) {
            try {
              process.exitValue();
              process=null;
            }
 catch (            IllegalThreadStateException e) {
            }
          }
          if (process != null) {
            process.destroy();
          }
        }
      }
);
      shutdown.start();
      ModelNode op=new ModelNode();
      op.get("operation").set("shutdown");
      client.getControllerClient().executeAsync(op,null);
      process.waitFor();
      process=null;
      shutdown.interrupt();
    }
  }
 catch (  Exception e) {
    try {
      if (process != null) {
        process.destroy();
        process.waitFor();
      }
    }
 catch (    Exception ignore) {
    }
    throw new RuntimeException("Could not stop container",e);
  }
}

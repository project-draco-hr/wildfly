{
  TransformersSubRegistration reg=parent.registerSubResource(SystemPropertyResourceDefinition.PATH,new ChainedResourceTransformer(new ChainedResourceTransformerEntry(){
    @Override public void transformResource(    ResourceTransformationContext context,    PathAddress address,    Resource resource) throws OperationFailedException {
      ModelNode model=resource.getModel();
      if (!model.hasDefined(BOOT_TIME)) {
        model.get(BOOT_TIME).set(true);
      }
    }
  }
,rejectExpressions));
  reg.registerOperationTransformer(ADD,new ChainedOperationTransformer(new OperationTransformer(){
    @Override public TransformedOperation transformOperation(    TransformationContext context,    PathAddress address,    ModelNode operation) throws OperationFailedException {
      ModelNode transformed=operation.clone();
      if (!transformed.hasDefined(BOOT_TIME)) {
        transformed.get(BOOT_TIME).set(true);
      }
      return new TransformedOperation(transformed,OperationResultTransformer.ORIGINAL_RESULT);
    }
  }
,rejectExpressions));
  OperationTransformer forceTrue=new OperationTransformer(){
    @Override public TransformedOperation transformOperation(    TransformationContext context,    PathAddress address,    ModelNode operation) throws OperationFailedException {
      ModelNode transformed=operation;
      if (transformed.get(NAME).asString().equals(BOOT_TIME)) {
        transformed=transformed.clone();
        if (!transformed.get(VALUE).isDefined()) {
          transformed.get(VALUE).set(true);
          if (UNDEFINE_ATTRIBUTE_OPERATION.equals(transformed.get(OP).asString())) {
            transformed.get(OP).set(WRITE_ATTRIBUTE_OPERATION);
          }
        }
      }
      return new TransformedOperation(transformed,OperationResultTransformer.ORIGINAL_RESULT);
    }
  }
;
  reg.registerOperationTransformer(WRITE_ATTRIBUTE_OPERATION,new ChainedOperationTransformer(forceTrue,rejectExpressions));
  reg.registerOperationTransformer(UNDEFINE_ATTRIBUTE_OPERATION,new ChainedOperationTransformer(forceTrue,rejectExpressions));
  return reg;
}

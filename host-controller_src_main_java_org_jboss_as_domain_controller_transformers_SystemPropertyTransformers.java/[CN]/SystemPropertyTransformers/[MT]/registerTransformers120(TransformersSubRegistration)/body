{
  ResourceTransformationDescriptionBuilder builder=TransformationDescriptionBuilder.Factory.createInstance(SystemPropertyResourceDefinition.PATH).getAttributeBuilder().addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,SystemPropertyResourceDefinition.VALUE,SystemPropertyResourceDefinition.BOOT_TIME).setValueConverter(new AttributeConverter.DefaultAttributeConverter(){
    @Override protected void convertAttribute(    PathAddress address,    String attributeName,    ModelNode attributeValue,    TransformationContext context){
      if (!attributeValue.isDefined()) {
        attributeValue.set(true);
      }
    }
  }
,BOOT_TIME).end().addRawOperationTransformationOverride(UNDEFINE_ATTRIBUTE_OPERATION,new OperationTransformer(){
    @Override public TransformedOperation transformOperation(    TransformationContext context,    PathAddress address,    ModelNode operation) throws OperationFailedException {
      if (operation.get(NAME).asString().equals(BOOT_TIME)) {
        ModelNode op=operation.clone();
        op.get(OP).set(WRITE_ATTRIBUTE_OPERATION);
        op.get(VALUE).set(true);
        return new TransformedOperation(op,OperationResultTransformer.ORIGINAL_RESULT);
      }
      return OperationTransformer.DEFAULT.transformOperation(context,address,operation);
    }
  }
);
  TransformationDescription.Tools.register(builder.build(),parent);
}

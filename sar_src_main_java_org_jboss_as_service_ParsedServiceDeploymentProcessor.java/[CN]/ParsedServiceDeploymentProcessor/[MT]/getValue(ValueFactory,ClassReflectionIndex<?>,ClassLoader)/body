{
  final String methodName=valueFactory.getMethodName();
  final ValueFactoryParameter[] parameters=valueFactory.getParameters();
  final List<Class<?>> paramTypes=new ArrayList<Class<?>>(parameters.length);
  final List<Value<?>> paramValues=new ArrayList<Value<?>>(parameters.length);
  for (  ValueFactoryParameter parameter : parameters) {
    final Class<?> attributeTypeValue=ReflectionUtils.getClass(parameter.getType(),classLoader);
    paramTypes.add(attributeTypeValue);
    paramValues.add(new ImmediateValue<Object>(newValue(attributeTypeValue,parameter.getValue())));
  }
  final Value<Method> methodValue=new ImmediateValue<Method>(ReflectionUtils.getMethod(mBeanClassIndex,methodName,paramTypes.toArray(new Class<?>[0]),true));
  return cached(new MethodValue<Object>(methodValue,Values.injectedValue(),paramValues));
}

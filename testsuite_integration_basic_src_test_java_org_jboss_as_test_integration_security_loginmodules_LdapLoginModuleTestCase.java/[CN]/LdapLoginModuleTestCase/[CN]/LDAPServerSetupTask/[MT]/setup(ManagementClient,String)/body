{
  directoryService=DSAnnotationProcessor.getDirectoryService();
  final SchemaManager schemaManager=directoryService.getSchemaManager();
  try {
    for (    LdifEntry ldifEntry : new LdifReader(LdapLoginModuleTestCase.class.getResourceAsStream(LdapLoginModuleTestCase.class.getSimpleName() + ".ldif"))) {
      directoryService.getAdminSession().add(new DefaultEntry(schemaManager,ldifEntry.getEntry()));
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
    throw e;
  }
  final ManagedCreateLdapServer createLdapServer=new ManagedCreateLdapServer((CreateLdapServer)AnnotationUtils.getInstance(CreateLdapServer.class));
  FileOutputStream fos=new FileOutputStream(KEYSTORE_FILE);
  IOUtils.copy(getClass().getResourceAsStream(KEYSTORE_FILENAME),fos);
  fos.close();
  createLdapServer.setKeyStore(KEYSTORE_FILE.getAbsolutePath());
  Utils.fixApacheDSTransportAddress(createLdapServer,Utils.getSecondaryTestAddress(managementClient,false));
  ldapServer=ServerAnnotationProcessor.instantiateLdapServer(createLdapServer,directoryService);
  ldapServer.start();
}

{
  String containerName=this.configuration.getContainerName();
  ServiceName deploymentUnitServiceName=this.context.getDeploymentUnitServiceName();
  return target.addService(this.getServiceName(),new ValueService<>(this)).addDependency(CacheServiceName.CACHE.getServiceName(containerName,InfinispanBeanManagerFactoryBuilderFactory.getCacheName(deploymentUnitServiceName)),Cache.class,this.cache).addDependency(CacheContainerServiceName.AFFINITY.getServiceName(containerName),KeyAffinityServiceFactory.class,this.affinityFactory).addDependency(deploymentUnitServiceName.append("marshalling"),MarshallingConfigurationRepository.class,this.repository).addDependency(deploymentUnitServiceName.append(this.name,"expiration"),ScheduledExecutorService.class,this.scheduler).addDependency(deploymentUnitServiceName.append(this.name,"eviction"),Executor.class,this.executor).addDependency(GroupServiceName.COMMAND_DISPATCHER.getServiceName(containerName),CommandDispatcherFactory.class,this.dispatcherFactory).addDependency(CacheGroupServiceName.REGISTRY.getServiceName(containerName,BeanManagerFactoryBuilderConfiguration.CLIENT_MAPPINGS_CACHE_NAME),Registry.class,this.registry).addDependency(CacheGroupServiceName.NODE_FACTORY.getServiceName(containerName,BeanManagerFactoryBuilderConfiguration.CLIENT_MAPPINGS_CACHE_NAME),NodeFactory.class,this.nodeFactory).setInitialMode(ServiceController.Mode.ON_DEMAND);
}

{
  @SuppressWarnings("rawtypes") InjectedValue<Cache> cache=new InjectedValue<>();
  InjectedValue<KeyAffinityServiceFactory> affinityFactory=new InjectedValue<>();
  InjectedValue<VersionedMarshallingConfiguration> config=new InjectedValue<>();
  InfinispanBeanManagerFactory<G,I,T> factory=new InfinispanBeanManagerFactory<>(context,config,cache,affinityFactory,this.config);
  return target.addService(name,factory).addDependency(CacheService.getServiceName(this.config.getContainerName(),getCacheName(context.getDeploymentUnitServiceName())),Cache.class,cache).addDependency(KeyAffinityServiceFactoryService.getServiceName(this.config.getContainerName()),KeyAffinityServiceFactory.class,affinityFactory).addDependency(marshallingConfigurationServiceName,VersionedMarshallingConfiguration.class,config).addDependency(ServiceBuilder.DependencyType.OPTIONAL,ServiceName.JBOSS.append("clustering","registry",this.config.getContainerName(),"default"),Registry.class,factory.getRegistryInjector()).addDependency(ServiceBuilder.DependencyType.OPTIONAL,ServiceName.JBOSS.append("clustering","nodes",this.config.getContainerName(),"default"),NodeFactory.class,factory.getNodeFactoryInjector());
}

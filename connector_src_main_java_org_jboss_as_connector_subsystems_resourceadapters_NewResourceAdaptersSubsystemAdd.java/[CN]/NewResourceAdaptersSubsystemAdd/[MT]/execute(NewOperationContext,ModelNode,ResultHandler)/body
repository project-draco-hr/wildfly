{
  final ModelNode compensatingOperation=new ModelNode();
  compensatingOperation.get(OP).set(REMOVE);
  compensatingOperation.get(OP_ADDR).set(operation.require(OP_ADDR));
  if (context instanceof NewBootOperationContext) {
    final NewBootOperationContext updateContext=(NewBootOperationContext)context;
    final ServiceTarget serviceTarget=updateContext.getServiceTarget();
    ResourceAdapters resourceAdapters=buildResourceAdaptersObject(operation);
    serviceTarget.addService(ConnectorServices.RESOURCEADAPTERS_SERVICE,new ResourceAdaptersService(resourceAdapters)).setInitialMode(Mode.ACTIVE).install();
    updateContext.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_RESOURCE_ADAPTERS,new ResourceAdaptersAttachingProcessor(resourceAdapters));
  }
  final ModelNode subModel=context.getSubModel();
  subModel.setEmptyObject();
  boolean workaround=true;
  if (workaround) {
    if (operation.has(RESOURCEADAPTERS)) {
      ModelNode datasources=operation.get(RESOURCEADAPTERS);
      subModel.get(RESOURCEADAPTERS).set(datasources);
    }
  }
 else {
    if (operation.hasDefined(RESOURCEADAPTERS)) {
      for (      ModelNode raNode : operation.get(RESOURCEADAPTERS).asList()) {
        for (        ModelNode property : raNode.get(CONFIG_PROPERTIES).asList()) {
          subModel.get(CONFIG_PROPERTIES,property.asProperty().getName()).set(property.asString());
        }
        for (        final String attribute : NewResourceAdaptersSubsystemProviders.RESOURCEADAPTER_ATTRIBUTE) {
          if (raNode.get(attribute).isDefined()) {
            subModel.get(attribute).set(raNode.get(attribute));
          }
        }
      }
    }
  }
  resultHandler.handleResultComplete(compensatingOperation);
  return Cancellable.NULL;
}

{
  try {
switch (validType) {
case BIG_DECIMAL:
{
        value.asBigDecimal();
        return true;
      }
case BIG_INTEGER:
{
      value.asBigInteger();
      return true;
    }
case DOUBLE:
{
    value.asDouble();
    return true;
  }
case INT:
{
  value.asInt();
  return true;
}
case LONG:
{
value.asLong();
return true;
}
case PROPERTY:
{
value.asProperty();
return true;
}
case BOOLEAN:
{
switch (value.getType()) {
case STRING:
{
String s=value.asString();
return "false".equalsIgnoreCase(s) || "true".equalsIgnoreCase(s);
}
case BOOLEAN:
return true;
}
return false;
}
case OBJECT:
{
switch (value.getType()) {
case PROPERTY:
case OBJECT:
return true;
case LIST:
{
for (ModelNode node : value.asList()) {
if (node.getType() != ModelType.PROPERTY) {
return false;
}
}
return true;
}
}
return false;
}
case STRING:
{
switch (value.getType()) {
case BIG_DECIMAL:
case BIG_INTEGER:
case BOOLEAN:
case DOUBLE:
case INT:
case LONG:
case STRING:
return true;
}
return false;
}
case BYTES:
case LIST:
case EXPRESSION:
case TYPE:
case UNDEFINED:
default :
return validType == value.getType();
}
}
 catch (RuntimeException e) {
return false;
}
}

{
  ModelControllerClient client2=createClient2();
  JMSOperations backupJMSOperations=JMSOperationsProvider.getInstance(client2);
  checkJMSQueue(backupJMSOperations,jmsQueueName,false);
  InitialContext context1=createJNDIContextFromServer1();
  String text="sent to server1, received from server2 (after failover)";
  sendMessage(context1,jmsQueueLookup,text);
  context1.close();
  System.err.println("############## 1 #############");
  listSharedStoreDir();
  System.err.println("===================");
  System.err.println("STOP SERVER1...");
  System.err.println("===================");
  container.stop(SERVER1);
  System.out.println("############## 2 #############");
  listSharedStoreDir();
  waitForHornetQServerActivation(backupJMSOperations,true);
  checkJMSQueue(backupJMSOperations,jmsQueueName,true);
  InitialContext context2=createJNDIContextFromServer2();
  receiveMessage(context2,jmsQueueLookup,text);
  String text2="sent to server2, received from server 1 (after failback)";
  sendMessage(context2,jmsQueueLookup,text2);
  context2.close();
  System.out.println("====================");
  System.out.println("START SERVER1...");
  System.out.println("====================");
  container.start(SERVER1);
  ModelControllerClient client1=createClient1();
  JMSOperations liveJMSOperations=JMSOperationsProvider.getInstance(client1);
  waitForHornetQServerActivation(liveJMSOperations,true);
  checkHornetQServerStartedAndActiveAttributes(liveJMSOperations,true,true);
  waitForHornetQServerActivation(backupJMSOperations,false);
  checkHornetQServerStartedAndActiveAttributes(backupJMSOperations,true,false);
  checkJMSQueue(backupJMSOperations,jmsQueueName,false);
  context1=createJNDIContextFromServer1();
  receiveMessage(context1,jmsQueueLookup,text2);
  String text3="sent to server1, received from server2 (after 2nd failover)";
  sendMessage(context1,jmsQueueLookup,text3);
  context1.close();
  System.out.println("==============================");
  System.out.println("STOP SERVER1 A 2ND TIME...");
  System.out.println("==============================");
  container.stop(SERVER1);
  waitForHornetQServerActivation(backupJMSOperations,true);
  checkHornetQServerStartedAndActiveAttributes(backupJMSOperations,true,true);
  checkJMSQueue(backupJMSOperations,jmsQueueName,true);
  context2=createJNDIContextFromServer2();
  receiveMessage(context2,jmsQueueLookup,text3);
  context2.close();
}

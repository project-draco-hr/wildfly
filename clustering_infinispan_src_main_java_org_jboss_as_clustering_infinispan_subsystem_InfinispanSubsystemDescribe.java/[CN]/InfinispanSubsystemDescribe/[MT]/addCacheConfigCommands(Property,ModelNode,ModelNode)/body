{
  if (cache.getValue().get(ModelKeys.LOCKING,ModelKeys.LOCKING_NAME).isDefined()) {
    ModelNode locking=cache.getValue().get(ModelKeys.LOCKING,ModelKeys.LOCKING_NAME);
    ModelNode lockingAddress=address.clone();
    lockingAddress.add(ModelKeys.LOCKING,ModelKeys.LOCKING_NAME);
    result.add(CacheConfigOperationHandlers.createOperation(CommonAttributes.LOCKING_ATTRIBUTES,lockingAddress,locking));
  }
  if (cache.getValue().get(ModelKeys.TRANSACTION,ModelKeys.TRANSACTION_NAME).isDefined()) {
    ModelNode transaction=cache.getValue().get(ModelKeys.TRANSACTION,ModelKeys.TRANSACTION_NAME);
    ModelNode transactionAddress=address.clone();
    transactionAddress.add(ModelKeys.TRANSACTION,ModelKeys.TRANSACTION_NAME);
    result.add(CacheConfigOperationHandlers.createOperation(CommonAttributes.TRANSACTION_ATTRIBUTES,transactionAddress,transaction));
  }
  if (cache.getValue().get(ModelKeys.EVICTION,ModelKeys.EVICTION_NAME).isDefined()) {
    ModelNode eviction=cache.getValue().get(ModelKeys.EVICTION,ModelKeys.EVICTION_NAME);
    ModelNode evictionAddress=address.clone();
    evictionAddress.add(ModelKeys.EVICTION,ModelKeys.EVICTION_NAME);
    result.add(CacheConfigOperationHandlers.createOperation(CommonAttributes.EVICTION_ATTRIBUTES,evictionAddress,eviction));
  }
  if (cache.getValue().get(ModelKeys.EXPIRATION,ModelKeys.EXPIRATION_NAME).isDefined()) {
    ModelNode expiration=cache.getValue().get(ModelKeys.EXPIRATION,ModelKeys.EXPIRATION_NAME);
    ModelNode expirationAddress=address.clone();
    expirationAddress.add(ModelKeys.EXPIRATION,ModelKeys.EXPIRATION_NAME);
    result.add(CacheConfigOperationHandlers.createOperation(CommonAttributes.EXPIRATION_ATTRIBUTES,expirationAddress,expiration));
  }
  if (cache.getValue().get(ModelKeys.STORE,ModelKeys.STORE_NAME).isDefined()) {
    ModelNode store=cache.getValue().get(ModelKeys.STORE,ModelKeys.STORE_NAME);
    ModelNode storeAddress=address.clone();
    storeAddress.add(ModelKeys.STORE,ModelKeys.STORE_NAME);
    result.add(CacheConfigOperationHandlers.createStoreOperation(CommonAttributes.COMMON_STORE_ATTRIBUTES,storeAddress,store,CommonAttributes.STORE_ATTRIBUTES));
    addCacheStorePropertyCommands(store,storeAddress,result);
  }
 else   if (cache.getValue().get(ModelKeys.FILE_STORE,ModelKeys.FILE_STORE_NAME).isDefined()) {
    ModelNode store=cache.getValue().get(ModelKeys.FILE_STORE,ModelKeys.FILE_STORE_NAME);
    ModelNode storeAddress=address.clone();
    storeAddress.add(ModelKeys.FILE_STORE,ModelKeys.FILE_STORE_NAME);
    result.add(CacheConfigOperationHandlers.createStoreOperation(CommonAttributes.COMMON_STORE_ATTRIBUTES,storeAddress,store,CommonAttributes.FILE_STORE_ATTRIBUTES));
    addCacheStorePropertyCommands(store,storeAddress,result);
  }
 else   if (cache.getValue().get(ModelKeys.JDBC_STORE,ModelKeys.JDBC_STORE_NAME).isDefined()) {
    ModelNode store=cache.getValue().get(ModelKeys.JDBC_STORE,ModelKeys.JDBC_STORE_NAME);
    ModelNode storeAddress=address.clone();
    storeAddress.add(ModelKeys.JDBC_STORE,ModelKeys.JDBC_STORE_NAME);
    result.add(CacheConfigOperationHandlers.createStoreOperation(CommonAttributes.COMMON_STORE_ATTRIBUTES,storeAddress,store,CommonAttributes.JDBC_STORE_ATTRIBUTES));
    addCacheStorePropertyCommands(store,storeAddress,result);
  }
 else   if (cache.getValue().get(ModelKeys.REMOTE_STORE,ModelKeys.REMOTE_STORE_NAME).isDefined()) {
    ModelNode store=cache.getValue().get(ModelKeys.REMOTE_STORE,ModelKeys.REMOTE_STORE_NAME);
    ModelNode storeAddress=address.clone();
    storeAddress.add(ModelKeys.REMOTE_STORE,ModelKeys.REMOTE_STORE_NAME);
    result.add(CacheConfigOperationHandlers.createStoreOperation(CommonAttributes.COMMON_STORE_ATTRIBUTES,storeAddress,store,CommonAttributes.REMOTE_STORE_ATTRIBUTES));
    addCacheStorePropertyCommands(store,storeAddress,result);
  }
}

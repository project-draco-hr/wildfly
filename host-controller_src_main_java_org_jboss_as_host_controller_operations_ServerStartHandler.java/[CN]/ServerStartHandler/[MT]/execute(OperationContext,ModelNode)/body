{
  if (context.getRunningMode() == RunningMode.ADMIN_ONLY) {
    throw new OperationFailedException(new ModelNode(HostControllerLogger.ROOT_LOGGER.cannotStartServersInvalidMode(context.getRunningMode())));
  }
  final PathAddress address=PathAddress.pathAddress(operation.require(OP_ADDR));
  final PathElement element=address.getLastElement();
  final String serverName=element.getValue();
  final boolean blocking=operation.get("blocking").asBoolean(false);
  final ModelNode model=Resource.Tools.readModel(context.readResourceFromRoot(PathAddress.EMPTY_ADDRESS,true));
  context.addStep(new OperationStepHandler(){
    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {
      context.getServiceRegistry(true);
      final ServerStatus origStatus=serverInventory.determineServerStatus(serverName);
      if (origStatus != ServerStatus.STARTED && origStatus != ServerStatus.STARTING) {
        final ServerStatus status=serverInventory.startServer(serverName,model,blocking);
        context.getResult().set(status.toString());
      }
 else {
        context.getResult().set(origStatus.toString());
      }
      context.completeStep(new OperationContext.RollbackHandler(){
        @Override public void handleRollback(        OperationContext context,        ModelNode operation){
          if (origStatus != ServerStatus.STARTED && origStatus != ServerStatus.STARTING) {
            serverInventory.stopServer(serverName,-1);
          }
        }
      }
);
    }
  }
,OperationContext.Stage.RUNTIME);
  context.stepCompleted();
}

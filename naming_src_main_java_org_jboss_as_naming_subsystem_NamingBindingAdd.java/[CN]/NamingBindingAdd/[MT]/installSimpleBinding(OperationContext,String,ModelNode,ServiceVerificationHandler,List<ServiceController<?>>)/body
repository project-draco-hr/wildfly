{
  final String value=NamingBindingResourceDefinition.VALUE.validateResolvedOperation(model).asString();
  final String type;
  if (model.hasDefined(TYPE)) {
    type=NamingBindingResourceDefinition.TYPE.validateResolvedOperation(model).asString();
  }
 else {
    type=null;
  }
  Object bindValue=coerceToType(value,type);
  final ServiceTarget serviceTarget=context.getServiceTarget();
  final ContextNames.BindInfo bindInfo=ContextNames.bindInfoFor(name);
  final BinderService binderService=new BinderService(name,bindValue);
  binderService.getManagedObjectInjector().inject(new ValueManagedReferenceFactory(new ImmediateValue<Object>(bindValue)));
  ServiceBuilder<ManagedReferenceFactory> builder=serviceTarget.addService(bindInfo.getBinderServiceName(),binderService).addDependency(bindInfo.getParentContextServiceName(),ServiceBasedNamingStore.class,binderService.getNamingStoreInjector());
  if (verificationHandler != null) {
    builder.addListener(verificationHandler);
  }
  if (newControllers != null) {
    newControllers.add(builder.install());
  }
 else {
    builder.install();
  }
}

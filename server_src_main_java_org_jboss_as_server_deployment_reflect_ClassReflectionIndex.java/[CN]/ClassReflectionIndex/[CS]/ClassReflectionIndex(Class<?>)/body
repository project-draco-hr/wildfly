{
  this.indexedClass=indexedClass;
  final Field[] declaredFields=indexedClass.getDeclaredFields();
  final Map<String,Field> fields=new HashMap<String,Field>();
  for (  Field field : declaredFields) {
    field.setAccessible(true);
    fields.put(field.getName(),field);
  }
  this.fields=fields;
  final Method[] declaredMethods=indexedClass.getDeclaredMethods();
  final Map<String,Map<ParamList,Map<Class<?>,Method>>> methods=new HashMap<String,Map<ParamList,Map<Class<?>,Method>>>();
  for (  Method method : declaredMethods) {
    method.setAccessible(true);
    final String name=method.getName();
    Map<ParamList,Map<Class<?>,Method>> nameMap=methods.get(name);
    if (nameMap == null) {
      methods.put(name,nameMap=new HashMap<ParamList,Map<Class<?>,Method>>());
    }
    final Class<?>[] types=method.getParameterTypes();
    final ParamList list=types.length == 0 ? EMPTY : new ParamList(types);
    Map<Class<?>,Method> paramsMap=nameMap.get(list);
    if (paramsMap == null) {
      nameMap.put(list,paramsMap=new HashMap<Class<?>,Method>());
    }
    paramsMap.put(method.getReturnType(),method);
  }
  this.methods=methods;
}

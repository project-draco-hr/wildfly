{
  this.indexedClass=indexedClass;
  final Field[] declaredFields=indexedClass.getDeclaredFields();
  final Map<String,Field> fields=new HashMap<String,Field>();
  for (  Field field : declaredFields) {
    field.setAccessible(true);
    fields.put(field.getName(),field);
  }
  this.fields=fields;
  final Method[] declaredMethods=indexedClass.getDeclaredMethods();
  final Map<String,Map<ParamList,Map<Class<?>,Method>>> methods=new HashMap<String,Map<ParamList,Map<Class<?>,Method>>>();
  for (  Method method : declaredMethods) {
    method.setAccessible(true);
    addMethod(methods,method);
  }
  for (  Method method : indexedClass.getMethods()) {
    addMethod(methods,method);
  }
  this.methods=methods;
  final Constructor<T>[] declaredConstructors=(Constructor<T>[])indexedClass.getDeclaredConstructors();
  final Map<ParamList,Constructor<T>> constructors=new HashMap<ParamList,Constructor<T>>();
  for (  Constructor<T> constructor : declaredConstructors) {
    constructor.setAccessible(true);
    constructors.put(createParamList(constructor.getParameterTypes()),constructor);
  }
  this.constructors=constructors;
}

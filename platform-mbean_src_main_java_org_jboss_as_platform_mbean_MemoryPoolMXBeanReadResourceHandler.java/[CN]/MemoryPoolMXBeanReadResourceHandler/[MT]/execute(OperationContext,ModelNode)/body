{
  final String memPoolName=PathAddress.pathAddress(operation.require(ModelDescriptionConstants.OP_ADDR)).getLastElement().getValue();
  MemoryPoolMXBean memoryPoolMXBean=MemoryPoolMXBeanAttributeHandler.getMemoryPoolMXBean(memPoolName);
  final ModelNode result=context.getResult();
  for (  String attribute : MemoryPoolResourceDefinition.MEMORY_POOL_READ_ATTRIBUTES) {
    final ModelNode store=result.get(attribute);
    try {
      MemoryPoolMXBeanAttributeHandler.storeResult(attribute,store,memoryPoolMXBean,memPoolName);
    }
 catch (    UnsupportedOperationException ignored) {
    }
  }
  for (  String attribute : MemoryPoolResourceDefinition.MEMORY_POOL_READ_WRITE_ATTRIBUTES) {
    final ModelNode store=result.get(attribute);
    try {
      MemoryPoolMXBeanAttributeHandler.storeResult(attribute,store,memoryPoolMXBean,memPoolName);
    }
 catch (    UnsupportedOperationException ignored) {
    }
  }
  for (  String attribute : MemoryPoolResourceDefinition.MEMORY_POOL_METRICS) {
    final ModelNode store=result.get(attribute);
    try {
      MemoryPoolMXBeanAttributeHandler.storeResult(attribute,store,memoryPoolMXBean,memPoolName);
    }
 catch (    UnsupportedOperationException ignored) {
    }
  }
  if (PlatformMBeanUtil.JVM_MAJOR_VERSION > 6) {
    final ModelNode store=result.get(PlatformMBeanConstants.OBJECT_NAME.getName());
    MemoryPoolMXBeanAttributeHandler.storeResult(PlatformMBeanConstants.OBJECT_NAME.getName(),store,memoryPoolMXBean,memPoolName);
  }
  context.stepCompleted();
}

{
  final PathAddress address=PathAddress.pathAddress(operation.require(ModelDescriptionConstants.OP_ADDR));
  final String parent;
  final String module;
  int i=2;
  if (address.getElement(1).getKey().equals(ModelDescriptionConstants.SUBDEPLOYMENT)) {
    parent=resolveRuntimeName(context,address.getElement(0));
    module=address.getElement(1).getValue();
    i++;
  }
 else {
    parent=null;
    module=resolveRuntimeName(context,address.getElement(0));
  }
  final String component=address.getElement(i).getValue();
  final ServiceName deploymentUnitServiceName;
  if (parent == null) {
    deploymentUnitServiceName=Services.deploymentUnitName(module);
  }
 else {
    deploymentUnitServiceName=Services.deploymentUnitName(parent,module);
  }
  return BasicComponent.serviceNameOf(deploymentUnitServiceName,component).append("START");
}

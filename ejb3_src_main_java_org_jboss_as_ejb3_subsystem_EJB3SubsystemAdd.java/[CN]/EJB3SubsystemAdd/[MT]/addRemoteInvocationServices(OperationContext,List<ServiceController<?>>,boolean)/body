{
  final TCCLBasedEJBClientContextSelector tcclBasedClientContextSelector=new TCCLBasedEJBClientContextSelector();
  context.getServiceTarget().addService(tcclBasedClientContextSelector.TCCL_BASED_EJB_CLIENT_CONTEXT_SELECTOR_SERVICE_NAME,tcclBasedClientContextSelector).install();
  final EjbClientContextService clientContextService=new EjbClientContextService();
  final ServiceBuilder<EJBClientContext> clientContextServiceBuilder=context.getServiceTarget().addService(EjbClientContextService.DEFAULT_SERVICE_NAME,clientContextService).addDependency(TCCLBasedEJBClientContextSelector.TCCL_BASED_EJB_CLIENT_CONTEXT_SELECTOR_SERVICE_NAME,TCCLBasedEJBClientContextSelector.class,clientContextService.getTCCLBasedEJBClientContextSelectorInjector());
  if (!appclient) {
    final String nodeName=SecurityActions.getSystemProperty(ServerEnvironment.NODE_NAME);
    final LocalEjbReceiver byValueLocalEjbReceiver=new LocalEjbReceiver(nodeName,false);
    newControllers.add(context.getServiceTarget().addService(LocalEjbReceiver.BY_VALUE_SERVICE_NAME,byValueLocalEjbReceiver).addDependency(DeploymentRepository.SERVICE_NAME,DeploymentRepository.class,byValueLocalEjbReceiver.getDeploymentRepository()).install());
    final LocalEjbReceiver byReferenceLocalEjbReceiver=new LocalEjbReceiver(nodeName,true);
    newControllers.add(context.getServiceTarget().addService(LocalEjbReceiver.BY_REFERENCE_SERVICE_NAME,byReferenceLocalEjbReceiver).addDependency(DeploymentRepository.SERVICE_NAME,DeploymentRepository.class,byReferenceLocalEjbReceiver.getDeploymentRepository()).install());
    clientContextService.addReceiver(clientContextServiceBuilder,LocalEjbReceiver.BY_VALUE_SERVICE_NAME);
  }
  newControllers.add(clientContextServiceBuilder.install());
}

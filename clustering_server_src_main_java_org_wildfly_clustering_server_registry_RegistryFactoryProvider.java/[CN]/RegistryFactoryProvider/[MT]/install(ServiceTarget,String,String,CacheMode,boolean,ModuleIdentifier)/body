{
  ServiceName name=getFactoryServiceName(containerName,cacheName);
  ContextNames.BindInfo bindInfo=createBinding(containerName,cacheName);
  logger.debugf("Installing %s service, bound to ",name.getCanonicalName(),bindInfo.getAbsoluteJndiName());
  ServiceBuilder<RegistryFactory<Object,Object>> factoryBuilder=mode.isClustered() ? CacheRegistryFactoryService.build(target,name,containerName,cacheName) : LocalRegistryFactoryService.build(target,name,containerName,cacheName);
  ServiceBuilder<?> builder=RegistryService.build(target,containerName,cacheName);
  BinderService binder=new BinderService(bindInfo.getBindName());
  @SuppressWarnings("rawtypes") ServiceBuilder<?> binderBuilder=target.addService(bindInfo.getBinderServiceName(),binder).addAliases(ContextNames.JAVA_CONTEXT_SERVICE_NAME.append(bindInfo.getBindName())).addDependency(name,RegistryFactory.class,new ManagedReferenceInjector<RegistryFactory>(binder.getManagedObjectInjector())).addDependency(bindInfo.getParentContextServiceName(),ServiceBasedNamingStore.class,binder.getNamingStoreInjector()).setInitialMode(ServiceController.Mode.PASSIVE);
  boolean addDefaultCacheAlias=defaultCache && !cacheName.equals(CacheContainer.DEFAULT_CACHE_ALIAS);
  if (addDefaultCacheAlias) {
    ContextNames.BindInfo info=createBinding(containerName,CacheContainer.DEFAULT_CACHE_ALIAS);
    binderBuilder.addAliases(info.getBinderServiceName(),ContextNames.JAVA_CONTEXT_SERVICE_NAME.append(info.getBindName()));
    factoryBuilder.addAliases(getFactoryServiceName(containerName,CacheContainer.DEFAULT_CACHE_ALIAS));
  }
  List<ServiceController<?>> result=new ArrayList<>(4);
  result.add(builder.setInitialMode(ServiceController.Mode.ON_DEMAND).install());
  result.add(factoryBuilder.setInitialMode(ServiceController.Mode.ON_DEMAND).install());
  result.add(binderBuilder.install());
  if (addDefaultCacheAlias) {
    ServiceBuilder<?> defaultBuilder=RegistryService.build(target,containerName,CacheContainer.DEFAULT_CACHE_ALIAS);
    result.add(defaultBuilder.setInitialMode(ServiceController.Mode.ON_DEMAND).install());
  }
  return result;
}

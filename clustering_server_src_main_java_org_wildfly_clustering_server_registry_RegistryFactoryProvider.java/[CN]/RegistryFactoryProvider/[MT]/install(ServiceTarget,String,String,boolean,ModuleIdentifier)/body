{
  ServiceName name=getFactoryServiceName(containerName,cacheName);
  ContextNames.BindInfo bindInfo=createBinding(containerName,cacheName);
  logger.debugf("Installing %s service, bound to ",name.getCanonicalName(),bindInfo.getAbsoluteJndiName());
  RegistryFactoryConfig<Object,Object> registryConfig=new RegistryFactoryConfig<>();
  RegistryFactoryService<Object,Object> registryService=new RegistryFactoryService<>(registryConfig);
  ServiceBuilder<?> factoryBuilder=AsynchronousService.addService(target,name,registryService).addDependency(CacheNodeFactoryProvider.getServiceName(containerName,cacheName),CacheNodeFactory.class,registryConfig.getNodeFactoryInjector()).addDependency(CacheGroupProvider.getServiceName(containerName,cacheName),Group.class,registryConfig.getGroupInjector()).addDependency(CacheService.getServiceName(containerName,cacheName),Cache.class,registryConfig.getCacheInjector()).setInitialMode(ServiceController.Mode.ON_DEMAND);
  InjectedValue<RegistryFactory> factory=new InjectedValue<>();
  InjectedValue<RegistryEntryProvider> provider=new InjectedValue<>();
  ServiceBuilder<?> builder=AsynchronousService.addService(target,getServiceName(containerName,cacheName),new RegistryService<>(factory,provider)).addDependency(name,RegistryFactory.class,factory).addDependency(getEntryProviderServiceName(containerName,cacheName),RegistryEntryProvider.class,provider).setInitialMode(ServiceController.Mode.ON_DEMAND);
  BinderService binder=new BinderService(bindInfo.getBindName());
  ServiceBuilder<?> binderBuilder=target.addService(bindInfo.getBinderServiceName(),binder).addAliases(ContextNames.JAVA_CONTEXT_SERVICE_NAME.append(bindInfo.getBindName())).addDependency(name,RegistryFactory.class,new ManagedReferenceInjector<RegistryFactory>(binder.getManagedObjectInjector())).addDependency(bindInfo.getParentContextServiceName(),ServiceBasedNamingStore.class,binder.getNamingStoreInjector()).setInitialMode(ServiceController.Mode.PASSIVE);
  boolean addDefaultCacheAlias=defaultCache && !cacheName.equals(CacheContainer.DEFAULT_CACHE_ALIAS);
  if (addDefaultCacheAlias) {
    ContextNames.BindInfo info=createBinding(containerName,CacheContainer.DEFAULT_CACHE_ALIAS);
    binderBuilder.addAliases(info.getBinderServiceName(),ContextNames.JAVA_CONTEXT_SERVICE_NAME.append(info.getBindName()));
    factoryBuilder.addAliases(getFactoryServiceName(containerName,CacheContainer.DEFAULT_CACHE_ALIAS));
  }
  List<ServiceController<?>> result=new ArrayList<>(4);
  result.add(builder.install());
  result.add(factoryBuilder.install());
  result.add(binderBuilder.install());
  if (addDefaultCacheAlias) {
    InjectedValue<RegistryFactory> defaultFactory=new InjectedValue<>();
    InjectedValue<RegistryEntryProvider> defaultProvider=new InjectedValue<>();
    ServiceBuilder<?> defaultBuilder=AsynchronousService.addService(target,getServiceName(containerName,CacheContainer.DEFAULT_CACHE_ALIAS),new RegistryService<>(defaultFactory,defaultProvider)).addDependency(getFactoryServiceName(containerName,CacheContainer.DEFAULT_CACHE_ALIAS),RegistryFactory.class,defaultFactory).addDependency(getEntryProviderServiceName(containerName,CacheContainer.DEFAULT_CACHE_ALIAS),RegistryEntryProvider.class,defaultProvider).setInitialMode(ServiceController.Mode.ON_DEMAND);
    result.add(defaultBuilder.install());
  }
  return result;
}

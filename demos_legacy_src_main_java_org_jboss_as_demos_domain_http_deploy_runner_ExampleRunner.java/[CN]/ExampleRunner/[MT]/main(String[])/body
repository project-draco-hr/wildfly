{
  Authenticator.setDefault(DemoAuthentication.getAuthenticator());
  BufferedOutputStream os=null;
  BufferedInputStream is=null;
  try {
    WebArchive archive=ShrinkWrap.create(WebArchive.class,"war-example.war");
    archive.addPackage(SimpleServlet.class.getPackage());
    addAsResources("archives/war-example.war",archive);
    is=new BufferedInputStream(archive.as(ZipExporter.class).exportAsInputStream());
    URL uploadContent=new URL("http://localhost:9990/management/add-content");
    HttpURLConnection connection=(HttpURLConnection)uploadContent.openConnection();
    connection.setDoInput(true);
    connection.setDoOutput(true);
    connection.setRequestMethod("POST");
    connection.setRequestProperty("Content-Type","multipart/form-data;boundary=---------------------------261773107125236");
    os=new BufferedOutputStream(connection.getOutputStream());
    StringBuilder builder=new StringBuilder();
    builder.append("-----------------------------261773107125236");
    builder.append("\r\n");
    builder.append("Content-Disposition: form-data; name=\"file\"; filename=\"war-example.war\"");
    builder.append("\r\n");
    builder.append("Content-Type: application/octet-stream");
    builder.append("\r\n");
    builder.append("\r\n");
    os.write(builder.toString().getBytes());
    final byte[] buffer=new byte[1024];
    int numRead=0;
    while (numRead > -1) {
      numRead=is.read(buffer);
      if (numRead > 0) {
        os.write(buffer,0,numRead);
      }
    }
    is.close();
    builder=new StringBuilder();
    builder.append("\r\n");
    builder.append("-----------------------------261773107125236");
    builder.append("--");
    builder.append("\r\n");
    os.write(builder.toString().getBytes());
    os.flush();
    ModelNode node=ModelNode.fromJSONStream(connection.getInputStream());
    System.out.println("Response to content upload request:");
    System.out.println(node);
    if (!"success".equals(node.require("outcome").asString())) {
      throw new IllegalStateException("Deployment request did not succeed");
    }
    byte[] hash=node.require("result").asBytes();
    connection=(HttpURLConnection)new URL("http://localhost:9990/management/").openConnection();
    connection.setDoInput(true);
    connection.setDoOutput(true);
    connection.setRequestMethod("POST");
    os=new BufferedOutputStream(connection.getOutputStream());
    ModelNode op=new ModelNode();
    op.get("operation").set("add");
    op.get("address").add("deployment","war-example.war");
    ModelNode hashNode=new ModelNode();
    hashNode.get("hash").set(hash);
    op.get("content").set(Collections.singletonList(hashNode));
    String json=op.toJSONString(true);
    System.out.println(json);
    os.write(json.getBytes());
    os.flush();
    node=ModelNode.fromJSONStream(connection.getInputStream());
    System.out.println("Response to deployment add request:");
    System.out.println(node);
    if (!"success".equals(node.require("outcome").asString())) {
      throw new IllegalStateException("Deployment request did not succeed");
    }
    connection=(HttpURLConnection)new URL("http://localhost:9990/management/").openConnection();
    connection.setDoInput(true);
    connection.setDoOutput(true);
    connection.setRequestMethod("POST");
    os=new BufferedOutputStream(connection.getOutputStream());
    op=new ModelNode();
    op.get("operation").set("add");
    ModelNode address=op.get("address");
    address.add("server-group","main-server-group");
    address.add("deployment","war-example.war");
    op.get("hash").set(hash);
    op.get("enabled").set(true);
    json=op.toJSONString(true);
    System.out.println(json);
    os.write(json.getBytes());
    os.flush();
    node=ModelNode.fromJSONStream(connection.getInputStream());
    System.out.println("Response to deployment add request:");
    System.out.println(node);
    if (!"success".equals(node.require("outcome").asString())) {
      throw new IllegalStateException("Deployment request did not succeed");
    }
    URL url=new URL("http://localhost:8080/war-example/simple?input=Hello");
    System.out.println("Reading response from " + url + ":");
    connection=(HttpURLConnection)url.openConnection();
    connection.setDoInput(true);
    is=new BufferedInputStream(connection.getInputStream());
    int i=is.read();
    while (i != -1) {
      System.out.print((char)i);
      i=is.read();
    }
    System.out.println("");
    is.close();
    connection=(HttpURLConnection)new URL("http://localhost:9990/management/").openConnection();
    connection.setDoInput(true);
    connection.setDoOutput(true);
    connection.setRequestMethod("POST");
    os=new BufferedOutputStream(connection.getOutputStream());
    op=new ModelNode();
    op.get("operation").set("redeploy");
    address=op.get("address");
    address.add("server-group","main-server-group");
    address.add("deployment","war-example.war");
    json=op.toJSONString(true);
    System.out.println(json);
    os.write(json.getBytes());
    os.flush();
    node=ModelNode.fromJSONStream(connection.getInputStream());
    System.out.println("Response to deployment redeploy request:");
    System.out.println(node);
    if (!"success".equals(node.require("outcome").asString())) {
      throw new IllegalStateException("Deployment request did not succeed");
    }
    connection=(HttpURLConnection)new URL("http://localhost:9990/management/").openConnection();
    connection.setDoInput(true);
    connection.setDoOutput(true);
    connection.setRequestMethod("POST");
    os=new BufferedOutputStream(connection.getOutputStream());
    op=new ModelNode();
    op.get("operation").set("remove");
    address=op.get("address");
    address.add("server-group","main-server-group");
    address.add("deployment","war-example.war");
    json=op.toJSONString(true);
    System.out.println(json);
    os.write(json.getBytes());
    os.flush();
    node=ModelNode.fromJSONStream(connection.getInputStream());
    System.out.println("Response to deployment remove request:");
    System.out.println(node);
    if (!"success".equals(node.require("outcome").asString())) {
      throw new IllegalStateException("Deployment request did not succeed");
    }
    connection=(HttpURLConnection)new URL("http://localhost:9990/management/").openConnection();
    connection.setDoInput(true);
    connection.setDoOutput(true);
    connection.setRequestMethod("POST");
    os=new BufferedOutputStream(connection.getOutputStream());
    op=new ModelNode();
    op.get("operation").set("remove");
    op.get("address").add("deployment","war-example.war");
    json=op.toJSONString(true);
    System.out.println(json);
    os.write(json.getBytes());
    os.flush();
    node=ModelNode.fromJSONStream(connection.getInputStream());
    System.out.println("Response to deployment remove request:");
    System.out.println(node);
    if (!"success".equals(node.require("outcome").asString())) {
      throw new IllegalStateException("Deployment request did not succeed");
    }
  }
 catch (  final Exception e) {
    e.printStackTrace(System.out);
  }
 finally {
    closeQuietly(is);
    closeQuietly(os);
  }
}

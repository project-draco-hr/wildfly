{
  PassivatingBackingCache<UUID,Cacheable<UUID>,SerializationGroup<K,V,UUID>> groupCache=this.groupCacheRef.get();
  if (groupCache == null) {
    groupCache=this.createGroupCache(passivationManager,timeout);
    if (!groupCacheRef.compareAndSet(null,groupCache)) {
      groupCache=this.groupCacheRef.get();
    }
  }
  SerializationGroupMemberContainer<K,V,UUID> container=new SerializationGroupMemberContainer<K,V,UUID>(passivationManager,groupCache,this.storeSource);
  BackingCacheEntryStore<K,V,SerializationGroupMember<K,V,UUID>> store=storeSource.createIntegratedObjectStore(beanName,container,timeout);
  container.setBackingCacheEntryStore(store);
  GroupAwareBackingCache<K,V,UUID,SerializationGroupMember<K,V,UUID>> backingCache=new GroupAwareBackingCacheImpl<K,V,UUID>(factory,container,groupCache,Executors.newScheduledThreadPool(1,Executors.defaultThreadFactory()));
  backingCache.addLifecycleListener(this);
  return new GroupAwareCache<K,V,UUID,SerializationGroupMember<K,V,UUID>>(backingCache,true);
}

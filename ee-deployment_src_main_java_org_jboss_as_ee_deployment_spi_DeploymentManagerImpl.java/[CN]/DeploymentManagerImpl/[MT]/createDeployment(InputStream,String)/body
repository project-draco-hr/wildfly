{
  File tmpFile=File.createTempFile("jboss_deployment_",".zip");
  ROOT_LOGGER.debugf("temporary deployment file: %s",tmpFile);
  JarInputStream jis=new JarInputStream(moduleArchive);
  JarOutputStream jos;
  FileOutputStream fos=new FileOutputStream(tmpFile);
  Manifest manifest=jis.getManifest();
  if (manifest != null)   jos=new JarOutputStream(fos,manifest);
 else   jos=new JarOutputStream(fos);
  TargetModuleInfo moduleInfo=new TargetModuleInfo();
  ModuleType moduleType=null;
  JarEntry entry=jis.getNextJarEntry();
  while (entry != null) {
    String entryName=entry.getName();
    if (entryName.endsWith("/") == false) {
      moduleType=ifNotNull(determineModuleType(entryName),moduleType);
      if (entryName.endsWith(".jar") || entryName.endsWith(".war")) {
        File tmpSubModule=processSubModule(entryName,jis);
        FileInputStream fis=new FileInputStream(tmpSubModule);
        JarUtils.addJarEntry(jos,entryName,fis);
        fis.close();
      }
 else {
        if (mapDeploymentPlan.get("!/" + entryName) == null)         JarUtils.addJarEntry(jos,entryName,jis);
 else         ROOT_LOGGER.debugf("Skip entry found in deployment plan: %s",entryName);
      }
    }
    entry=jis.getNextJarEntry();
  }
  if (moduleType == null) {
    if (moduleName.endsWith(ModuleType.EAR.getModuleExtension()))     moduleType=ModuleType.EAR;
 else     if (moduleName.endsWith(ModuleType.WAR.getModuleExtension()))     moduleType=ModuleType.WAR;
 else     if (moduleName.endsWith(ModuleType.RAR.getModuleExtension()))     moduleType=ModuleType.RAR;
 else     throw new RuntimeException(MESSAGES.cannotObtainModuleType(moduleName));
  }
  moduleInfo.setModuleType(moduleType);
  addDeploymentPlanEntry(jos,null);
  jos.close();
  int retry=0;
  String deploymentName=tmpFile.getParent() + File.separator + metaData.getDeploymentName();
  File deployment=new File(deploymentName);
  while (deployment.exists() && deployment.delete() == false) {
    String prefix=(++retry < 10 ? "retry0" + retry : "retry" + retry);
    deploymentName=tmpFile.getParent() + File.separator + prefix+ "_"+ metaData.getDeploymentName();
    deployment=new File(deploymentName);
  }
  tmpFile.renameTo(deployment);
  moduleInfo.setModuleID(deployment.toURI().toURL());
  return moduleInfo;
}

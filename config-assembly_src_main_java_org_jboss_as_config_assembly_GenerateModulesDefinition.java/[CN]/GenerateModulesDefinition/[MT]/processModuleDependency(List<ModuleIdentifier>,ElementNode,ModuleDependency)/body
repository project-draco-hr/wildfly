{
  ModuleIdentifier moduleId=dep.getModuleId();
  if (dependencies.contains(moduleId)) {
    log.debugf("Already defined: %s",moduleId);
    return;
  }
  ElementNode moduleNode=new ElementNode(parentNode,"module");
  moduleNode.addAttribute("name",new AttributeValue(moduleId.toString()));
  parentNode.addChild(moduleNode);
  if (!dep.isOptional()) {
    dependencies.add(moduleId);
    String path=moduleId.getName().replace('.','/') + '/' + moduleId.getSlot();
    String modulespath="modules" + File.separator + "system"+ File.separator+ "layers"+ File.separator+ "base";
    File moduleFile=new File(resourcesDir + File.separator + modulespath+ File.separator+ path+ File.separator+ "module.xml");
    ModuleParser moduleParser=new ModuleParser(moduleFile);
    moduleParser.parse();
    List<ModuleDependency> moduledeps=moduleParser.getDependencies();
    for (    ModuleDependency aux : moduledeps) {
      processModuleDependency(dependencies,moduleNode,aux);
    }
  }
 else {
    moduleNode.addAttribute("optional",new AttributeValue("true"));
  }
}

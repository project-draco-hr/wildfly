{
  ModuleIdentifier moduleId=dep.getModuleId();
  ElementNode moduleNode=new ElementNode(parentNode,"module");
  moduleNode.addAttribute("name",new AttributeValue(moduleId.toString()));
  if (dep.isOptional()) {
    moduleNode.addAttribute("optional",new AttributeValue("true"));
  }
  if (dependencies.contains(moduleId)) {
    moduleNode.addAttribute("defined",new AttributeValue("true"));
    parentNode.addChild(moduleNode);
  }
 else {
    parentNode.addChild(moduleNode);
    String path=moduleId.getName().replace('.','/') + '/' + moduleId.getSlot();
    File moduleFile=new File(resourcesDir + File.separator + "modules"+ File.separator+ path+ File.separator+ "module.xml");
    if (moduleFile.exists() || !dep.isOptional()) {
      dependencies.add(moduleId);
      ModuleParser moduleParser=new ModuleParser(moduleFile);
      moduleParser.parse();
      List<ModuleDependency> moduledeps=moduleParser.getDependencies();
      for (      ModuleDependency aux : moduledeps) {
        processModuleDependency(dependencies,moduleNode,aux);
      }
    }
  }
}

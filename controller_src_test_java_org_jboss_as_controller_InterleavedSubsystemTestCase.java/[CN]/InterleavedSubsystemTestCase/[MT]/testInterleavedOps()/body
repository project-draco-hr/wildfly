{
  container=ServiceContainer.Factory.create("test");
  ServiceTarget target=container.subTarget();
  ControlledProcessState processState=new ControlledProcessState(true);
  ModelControllerImplUnitTestCase.ModelControllerService svc=new InterleavedSubsystemModelControllerService(processState);
  ServiceBuilder<ModelController> builder=target.addService(ServiceName.of("ModelController"),svc);
  builder.install();
  svc.latch.await();
  controller=svc.getValue();
  processState.setRunning();
  final ModelNode op=Util.getEmptyOperation(READ_RESOURCE_OPERATION,new ModelNode());
  op.get(RECURSIVE).set(true);
  ModelNode result=controller.execute(op,null,null,null);
  assertTrue(result.hasDefined(OUTCOME));
  assertEquals(SUCCESS,result.get(OUTCOME).asString());
  assertTrue(result.hasDefined(RESULT));
  assertTrue(result.get(RESULT).hasDefined(EXTENSION));
  assertTrue(result.get(RESULT,EXTENSION).hasDefined("a"));
  assertTrue(result.get(RESULT,EXTENSION,"a").hasDefined(ExtensionDescription.MODULE));
  assertEquals("a",result.get(RESULT,EXTENSION,"a",ExtensionDescription.MODULE).asString());
  assertTrue(result.get(RESULT,EXTENSION).hasDefined("b"));
  assertTrue(result.get(RESULT,EXTENSION,"b").hasDefined(ExtensionDescription.MODULE));
  assertEquals("b",result.get(RESULT,EXTENSION,"b",ExtensionDescription.MODULE).asString());
  assertTrue(result.get(RESULT,EXTENSION).hasDefined("c"));
  assertTrue(result.get(RESULT,EXTENSION,"c").hasDefined(ExtensionDescription.MODULE));
  assertEquals("c",result.get(RESULT,EXTENSION,"c",ExtensionDescription.MODULE).asString());
  assertTrue(result.get(RESULT).hasDefined(SUBSYSTEM));
  assertTrue(result.get(RESULT,SUBSYSTEM).hasDefined("a"));
  assertTrue(result.get(RESULT,SUBSYSTEM,"a").hasDefined("attribute"));
  assertTrue(result.get(RESULT,SUBSYSTEM,"a","attribute").asBoolean());
  assertTrue(result.get(RESULT,SUBSYSTEM).hasDefined("b"));
  assertTrue(result.get(RESULT,SUBSYSTEM,"b").hasDefined("attribute"));
  assertTrue(result.get(RESULT,SUBSYSTEM,"b","attribute").asBoolean());
  assertTrue(result.get(RESULT,SUBSYSTEM).hasDefined("c"));
  assertTrue(result.get(RESULT,SUBSYSTEM,"c").hasDefined("attribute"));
  assertTrue(result.get(RESULT,SUBSYSTEM,"c","attribute").asBoolean());
}

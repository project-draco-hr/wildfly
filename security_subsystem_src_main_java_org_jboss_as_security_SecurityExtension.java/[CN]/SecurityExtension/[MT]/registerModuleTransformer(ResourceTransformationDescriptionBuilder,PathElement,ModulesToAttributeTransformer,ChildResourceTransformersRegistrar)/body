{
  final OperationTransformer addOrWriteTransformer=new OperationTransformer(){
    public TransformedOperation transformOperation(    TransformationContext context,    PathAddress address,    ModelNode operation) throws OperationFailedException {
      return transformer.transformParentOperation(context,address,operation);
    }
  }
;
  ResourceTransformationDescriptionBuilder child=parent.addChildResource(childPath).setCustomResourceTransformer(transformer).addOperationTransformationOverride(ADD).setCustomOperationTransformer(addOrWriteTransformer).inheritResourceAttributeDefinitions().end().addOperationTransformationOverride(WRITE_ATTRIBUTE_OPERATION).setCustomOperationTransformer(addOrWriteTransformer).inheritResourceAttributeDefinitions().end().addOperationTransformationOverride(UNDEFINE_ATTRIBUTE_OPERATION).setCustomOperationTransformer(addOrWriteTransformer).inheritResourceAttributeDefinitions().end().addOperationTransformationOverride(REMOVE).setCustomOperationTransformer(new OperationTransformer(){
    public TransformedOperation transformOperation(    TransformationContext context,    PathAddress address,    ModelNode operation) throws OperationFailedException {
      return new TransformedOperation(operation,TransformedOperation.ORIGINAL_RESULT);
    }
  }
).end();
  ResourceTransformationDescriptionBuilder childRedirectionBuilder=child.addChildRedirection(PathElement.pathElement(transformer.getResourceName()),CURRENT_PATH_TRANSFORMER).setCustomResourceTransformer(ResourceTransformer.DISCARD).addOperationTransformationOverride(ADD).setCustomOperationTransformer(transformer).inheritResourceAttributeDefinitions().end().addOperationTransformationOverride(WRITE_ATTRIBUTE_OPERATION).setCustomOperationTransformer(transformer).inheritResourceAttributeDefinitions().end().addOperationTransformationOverride(REMOVE).setCustomOperationTransformer(transformer).inheritResourceAttributeDefinitions().end();
  if (childRegistrar != null) {
    childRegistrar.registerTransformers(childRedirectionBuilder);
  }
  return child;
}

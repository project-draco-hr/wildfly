{
  final boolean registerRuntimeOnly=context.isRuntimeOnlyRegistrationValid();
  final SubsystemRegistration subsystem=context.registerSubsystem(SUBSYSTEM_NAME,CURRENT_MODEL_VERSION);
  final ManagementResourceRegistration registration=subsystem.registerSubsystemModel(SecuritySubsystemRootResourceDefinition.INSTANCE);
  registration.registerOperationHandler(GenericSubsystemDescribeHandler.DEFINITION,GenericSubsystemDescribeHandler.INSTANCE);
  final ManagementResourceRegistration securityDomain=registration.registerSubModel(new SecurityDomainResourceDefinition(registerRuntimeOnly));
  securityDomain.registerSubModel(JASPIAuthenticationResourceDefinition.INSTANCE);
  securityDomain.registerSubModel(ClassicAuthenticationResourceDefinition.INSTANCE);
  securityDomain.registerSubModel(AuthorizationResourceDefinition.INSTANCE);
  securityDomain.registerSubModel(MappingResourceDefinition.INSTANCE);
  securityDomain.registerSubModel(ACLResourceDefinition.INSTANCE);
  securityDomain.registerSubModel(AuditResourceDefinition.INSTANCE);
  securityDomain.registerSubModel(IdentityTrustResourceDefinition.INSTANCE);
  securityDomain.registerSubModel(JSSEResourceDefinition.INSTANCE);
  registration.registerSubModel(VaultResourceDefinition.INSTANCE);
  subsystem.registerXMLElementWriter(PARSER);
  if (context.isRegisterTransformers()) {
    registerTransformers(subsystem);
  }
}

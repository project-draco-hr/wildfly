{
  log.info("Starting Domain Controller");
  final LocalDomainControllerElement localDomainControllerElement=domainControllerConfig.getDomainControllerElement();
  final Host hostConfig=domainControllerConfig.getHost();
  final BatchBuilder batchBuilder=serviceContainer.batchBuilder();
  final ServiceActivatorContext serviceActivatorContext=new ServiceActivatorContextImpl(batchBuilder);
  final Map<String,ServerInterfaceElement> interfaces=new HashMap<String,ServerInterfaceElement>();
  final Set<ServerInterfaceElement> hostInterfaces=hostConfig.getInterfaces();
  if (hostInterfaces != null) {
    for (    ServerInterfaceElement interfaceElement : hostInterfaces) {
      interfaces.put(interfaceElement.getName(),interfaceElement);
    }
  }
  final Map<String,ServerInterfaceElement> dcInterfaces=localDomainControllerElement.getInterfaces();
  if (dcInterfaces != null)   for (  Map.Entry<String,ServerInterfaceElement> interfaceElement : dcInterfaces.entrySet()) {
    interfaces.put(interfaceElement.getKey(),interfaceElement.getValue());
  }
  for (  ServerInterfaceElement interfaceElement : interfaces.values()) {
    interfaceElement.activate(serviceActivatorContext);
  }
  final ServerManagerCommunicationService serverManagerCommunicationService=new ServerManagerCommunicationService(this,localDomainControllerElement);
  batchBuilder.addService(ServerManagerCommunicationService.SERVICE_NAME,serverManagerCommunicationService).addListener(new DomainControllerStartupListener()).addDependency(NetworkInterfaceService.JBOSS_NETWORK_INTERFACE.append(localDomainControllerElement.getAdminInterface()),NetworkInterfaceBinding.class,serverManagerCommunicationService.getInterfaceInjector()).setInitialMode(ServiceController.Mode.IMMEDIATE);
  try {
    batchBuilder.install();
  }
 catch (  ServiceRegistryException e) {
    throw new RuntimeException(e);
  }
}

{
  try {
    domainModel.update(update);
  }
 catch (  UpdateFailedException e) {
    return new DomainUpdateApplierResponse(e);
  }
  Map<String,UpdateFailedException> hostFailures=null;
  List<ServerIdentity> servers=new ArrayList<ServerIdentity>();
  List<AbstractDomainModelUpdate<?>> updateList=Collections.<AbstractDomainModelUpdate<?>>singletonList(update);
  for (  Map.Entry<String,DomainControllerClient> entry : clients.entrySet()) {
    DomainControllerClient client=entry.getValue();
    List<ModelUpdateResponse<List<ServerIdentity>>> hostResponseList=client.updateDomainModel(updateList);
    ModelUpdateResponse<List<ServerIdentity>> hostResponse=hostResponseList.get(0);
    if (hostResponse.isSuccess()) {
      servers.addAll(hostResponse.getResult());
    }
 else {
      if (hostFailures == null) {
        hostFailures=new HashMap<String,UpdateFailedException>();
      }
      hostFailures.put(entry.getKey(),hostResponse.getUpdateException());
    }
  }
  return new DomainUpdateApplierResponse(hostFailures,servers);
}

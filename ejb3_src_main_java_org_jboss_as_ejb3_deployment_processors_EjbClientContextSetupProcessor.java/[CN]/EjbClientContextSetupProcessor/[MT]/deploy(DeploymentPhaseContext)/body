{
  final DeploymentUnit deploymentUnit=phaseContext.getDeploymentUnit();
  final EJBClientContext context=deploymentUnit.getAttachment(EjbDeploymentAttachmentKeys.EJB_CLIENT_CONTEXT);
  final EjbClientContextSetupAction setupAction=new EjbClientContextSetupAction(context);
  deploymentUnit.addToAttachmentList(Attachments.SETUP_ACTIONS,setupAction);
  deploymentUnit.addToAttachmentList(org.jboss.as.ee.component.Attachments.EE_SETUP_ACTIONS,setupAction);
  final EEModuleDescription moduleDescription=deploymentUnit.getAttachment(org.jboss.as.ee.component.Attachments.EE_MODULE_DESCRIPTION);
  if (moduleDescription != null) {
    final EjbClientContextInterceptorFactory factory=new EjbClientContextInterceptorFactory(context);
    for (    ComponentDescription component : moduleDescription.getComponentDescriptions()) {
      if (component instanceof EJBComponentDescription) {
        for (        ViewDescription view : component.getViews()) {
          view.getConfigurators().add(new ViewConfigurator(){
            @Override public void configure(            final DeploymentPhaseContext context,            final ComponentConfiguration componentConfiguration,            final ViewDescription description,            final ViewConfiguration configuration) throws DeploymentUnitProcessingException {
              configuration.addViewInterceptor(factory,InterceptorOrder.View.EJB_CLIENT_CONTEXT);
            }
          }
);
        }
        if (component instanceof StatefulComponentDescription) {
          component.getConfigurators().add(new ComponentConfigurator(){
            @Override public void configure(            final DeploymentPhaseContext context,            final ComponentDescription description,            final ComponentConfiguration configuration) throws DeploymentUnitProcessingException {
              configuration.addPostConstructInterceptor(factory,InterceptorOrder.ComponentPostConstruct.EJB_CLIENT_CONTEXT_INTERCEPTOR);
              configuration.addPreDestroyInterceptor(factory,InterceptorOrder.ComponentPreDestroy.EJB_CLIENT_CONTEXT_INTERCEPTOR);
            }
          }
);
        }
      }
    }
  }
}

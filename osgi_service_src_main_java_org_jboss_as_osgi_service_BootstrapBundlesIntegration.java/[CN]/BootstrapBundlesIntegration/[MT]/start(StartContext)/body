{
  List<Deployment> deployments=new ArrayList<Deployment>();
  ServerEnvironment serverEnvironment=injectedServerEnvironment.getValue();
  bundlesPath=LayeredBundlePathFactory.resolveLayeredBundlePath(serverEnvironment);
  modulecaps=new ArrayList<OSGiCapability>();
  List<OSGiCapability> configcaps=new ArrayList<OSGiCapability>();
  for (  String capspec : SystemPackagesIntegration.DEFAULT_CAPABILITIES) {
    configcaps.add(new OSGiCapability(capspec,null));
  }
  configcaps.addAll(injectedSubsystemState.getValue().getCapabilities());
  Iterator<OSGiCapability> iterator=configcaps.iterator();
  while (iterator.hasNext()) {
    OSGiCapability configcap=iterator.next();
    String identifier=configcap.getIdentifier();
    if (isValidModuleIdentifier(identifier)) {
      try {
        Module module=installInitialModuleCapability(configcap);
        if (module != null) {
          modulecaps.add(configcap);
          iterator.remove();
        }
      }
 catch (      Exception ex) {
        throw MESSAGES.startFailedToProcessInitialCapability(ex,identifier);
      }
    }
  }
  for (  OSGiCapability configcap : configcaps) {
    String identifier=configcap.getIdentifier();
    try {
      Deployment dep=getInitialBundleDeployment(configcap);
      deployments.add(dep);
    }
 catch (    Exception ex) {
      throw MESSAGES.startFailedToProcessInitialCapability(ex,identifier);
    }
  }
  installBootstrapBundles(context.getChildTarget(),deployments);
}

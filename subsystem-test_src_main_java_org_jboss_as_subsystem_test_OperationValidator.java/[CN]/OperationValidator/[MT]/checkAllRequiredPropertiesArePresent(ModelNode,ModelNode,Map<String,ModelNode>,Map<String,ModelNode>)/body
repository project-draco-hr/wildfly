{
  for (  String paramName : describedProperties.keySet()) {
    final ModelNode described=describedProperties.get(paramName);
    final boolean required;
    if (described.hasDefined(REQUIRED)) {
      Assert.assertEquals("'" + REQUIRED + "' for '"+ paramName+ "' must be a boolean in "+ description,ModelType.BOOLEAN,described.get(REQUIRED).getType());
      required=described.get(REQUIRED).asBoolean();
    }
 else {
      required=true;
    }
    Collection<ModelNode> alternatives=null;
    if (described.hasDefined(ALTERNATIVES)) {
      alternatives=described.get(ALTERNATIVES).asList();
    }
    final boolean exist=actualParams.containsKey(paramName);
    if (required) {
      if (!exist && !hasAlternative(actualParams.keySet(),alternatives)) {
        Assert.fail("Required parameter '" + paramName + "' is not present in "+ operation);
      }
    }
    if (exist && hasAlternative(actualParams.keySet(),alternatives)) {
      Assert.fail("Alternative parameter for '" + paramName + "' is present in "+ operation);
    }
  }
}

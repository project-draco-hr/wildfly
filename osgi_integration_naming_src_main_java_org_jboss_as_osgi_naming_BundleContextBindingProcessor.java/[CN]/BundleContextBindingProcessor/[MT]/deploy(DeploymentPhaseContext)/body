{
  DeploymentUnit depUnit=phaseContext.getDeploymentUnit();
  CompositeIndex compositeIndex=depUnit.getAttachment(COMPOSITE_ANNOTATION_INDEX);
  if (compositeIndex == null) {
    LOGGER.warnCannotFindAnnotationIndex(depUnit);
    return;
  }
  boolean hasBundleContextResource=false;
  DotName resourceDotName=DotName.createSimple(Resource.class.getName());
  DotName targetDotName=DotName.createSimple(BundleContext.class.getName());
  List<AnnotationInstance> anList=compositeIndex.getAnnotations(resourceDotName);
  for (  AnnotationInstance an : anList) {
    AnnotationTarget anTarget=an.target();
    if (anTarget instanceof FieldInfo) {
      FieldInfo fieldInfo=(FieldInfo)anTarget;
      Type targetType=fieldInfo.type();
      if (targetType.name().equals(targetDotName)) {
        hasBundleContextResource=true;
        break;
      }
    }
  }
  if (hasBundleContextResource) {
    ModuleLoader moduleLoader=Module.getBootModuleLoader();
    ModuleSpecification moduleSpecification=depUnit.getAttachment(Attachments.MODULE_SPECIFICATION);
    ModuleDependency coreDep=new ModuleDependency(moduleLoader,ORG_OSGI_CORE,false,false,false,false);
    ModuleDependency resolverDep=new ModuleDependency(moduleLoader,ORG_JBOSS_OSGI_RESOLVER,false,false,false,false);
    moduleSpecification.addSystemDependencies(Arrays.asList(coreDep,resolverDep));
    ServiceName binderServiceName=BundleContextBindingService.getBinderServiceName();
    phaseContext.addDependency(binderServiceName,AttachmentKey.create(ManagedReferenceFactory.class));
  }
}

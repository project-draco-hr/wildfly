{
  ModelNode param=operation.get(NAMESPACE);
  typeValidator.validateParameter(NAMESPACE,param);
  ModelNode namespaces=context.getSubModel().get(NAMESPACES);
  Property toRemove=null;
  ModelNode newList=new ModelNode().setEmptyList();
  String prefix=param.asString();
  if (namespaces.isDefined()) {
    for (    Property namespace : namespaces.asPropertyList()) {
      if (prefix.equals(namespace.getName())) {
        toRemove=namespace;
      }
 else {
        newList.add(namespace.getName(),namespace.getValue());
      }
    }
  }
  if (toRemove != null) {
    ModelNode compensating=NamespaceAddHandler.getAddNamespaceOperation(operation.get(OP_ADDR),toRemove);
    namespaces.set(newList);
    resultHandler.handleResultComplete();
    return new BasicOperationResult(compensating);
  }
 else {
    throw new OperationFailedException(new ModelNode().set("No namespace with URI " + prefix + " found"));
  }
}

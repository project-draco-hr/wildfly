{
  checkNullRegistration(operation,registry);
  OperationRouting routing=null;
  String targetHost=null;
  final PathAddress address=PathAddress.pathAddress(operation.get(OP_ADDR));
  final String operationName=operation.get(OP).asString();
  boolean compositeOp=false;
  if (address.size() > 0) {
    PathElement first=address.getElement(0);
    if (HOST.equals(first.getKey())) {
      targetHost=first.getValue();
    }
  }
 else {
    compositeOp=COMPOSITE.equals(operationName);
  }
  if (targetHost != null) {
    Set<OperationEntry.Flag> flags=registry.getOperationFlags(PathAddress.EMPTY_ADDRESS,operationName);
    checkNullFlags(operation,flags);
    if (flags.contains(OperationEntry.Flag.READ_ONLY) && !flags.contains(OperationEntry.Flag.DOMAIN_PUSH_TO_SERVERS)) {
      routing=new OperationRouting(targetHost,false);
    }
 else     if (address.size() > 1) {
      PathElement first=address.getElement(1);
      if (SERVER.equals(first.getKey())) {
        routing=new OperationRouting(targetHost,false);
      }
    }
    if (routing == null) {
      if (flags.contains(OperationEntry.Flag.HOST_CONTROLLER_ONLY)) {
        routing=new OperationRouting(targetHost,false);
      }
 else {
        routing=new OperationRouting(targetHost,true);
      }
    }
  }
 else   if (compositeOp) {
    if (operation.hasDefined(STEPS)) {
      Set<String> allHosts=new HashSet<String>();
      boolean twoStep=false;
      for (      ModelNode step : operation.get(STEPS).asList()) {
        ImmutableManagementResourceRegistration stepRegistry=registry.getSubModel(PathAddress.pathAddress(step.get(OP_ADDR)));
        OperationRouting stepRouting=determineRouting(step,localHostControllerInfo,stepRegistry);
        if (stepRouting.isTwoStep()) {
          twoStep=true;
        }
        allHosts.addAll(stepRouting.getHosts());
      }
      routing=new OperationRouting(allHosts);
    }
 else {
      routing=new OperationRouting(localHostControllerInfo.getLocalHostName(),false);
    }
  }
 else {
    Set<OperationEntry.Flag> flags=registry.getOperationFlags(PathAddress.EMPTY_ADDRESS,operationName);
    checkNullFlags(operation,flags);
    if (flags.contains(OperationEntry.Flag.READ_ONLY) && !flags.contains(OperationEntry.Flag.DOMAIN_PUSH_TO_SERVERS)) {
      routing=new OperationRouting(localHostControllerInfo.getLocalHostName(),false);
    }
 else     if (!localHostControllerInfo.isMasterDomainController()) {
      routing=new OperationRouting();
    }
 else     if (flags.contains(OperationEntry.Flag.MASTER_HOST_CONTROLLER_ONLY)) {
      routing=new OperationRouting(localHostControllerInfo.getLocalHostName(),false);
    }
  }
  if (routing == null) {
    routing=new OperationRouting(true);
  }
  return routing;
}

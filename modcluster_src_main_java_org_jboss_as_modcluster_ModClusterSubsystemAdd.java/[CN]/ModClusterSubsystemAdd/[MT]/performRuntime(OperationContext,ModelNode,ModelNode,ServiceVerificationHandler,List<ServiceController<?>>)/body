{
  String bindingRef=null;
  ModelNode node=operation.get(CommonAttributes.MOD_CLUSTER_CONFIG);
  if (operation.hasDefined(CommonAttributes.MOD_CLUSTER_CONFIG)) {
    if (operation.get(CommonAttributes.MOD_CLUSTER_CONFIG).hasDefined(CommonAttributes.CONFIGURATION))     node=operation.get(CommonAttributes.MOD_CLUSTER_CONFIG).get(CommonAttributes.CONFIGURATION);
    if (node.hasDefined(CommonAttributes.ADVERTISE_SOCKET)) {
      bindingRef=node.get(CommonAttributes.ADVERTISE_SOCKET).asString();
    }
  }
  try {
    final ModelNode resolved=context.resolveExpressions(node.clone());
    final ModClusterService service=new ModClusterService(unmaskPassword(context,model),resolved);
    final ServiceBuilder<ModCluster> serviceBuilder=context.getServiceTarget().addService(ModClusterService.NAME,service).addDependency(WebSubsystemServices.JBOSS_WEB,WebServer.class,service.getWebServer()).addDependency(SocketBindingManager.SOCKET_BINDING_MANAGER,SocketBindingManager.class,service.getBindingManager()).addListener(verificationHandler).setInitialMode(Mode.ACTIVE);
    if (bindingRef != null)     serviceBuilder.addDependency(SocketBinding.JBOSS_BINDING_NAME.append(bindingRef),SocketBinding.class,service.getBinding());
    newControllers.add(serviceBuilder.install());
  }
 catch (  Throwable t) {
    ROOT_LOGGER.debugf("Error: %s",t);
    throw new OperationFailedException(new ModelNode().set(t.getLocalizedMessage()));
  }
}

{
  if (operation.hasDefined(CommonAttributes.MOD_CLUSTER_CONFIG)) {
    ModelNode configuration;
    if (operation.get(CommonAttributes.MOD_CLUSTER_CONFIG).hasDefined(CommonAttributes.CONFIGURATION)) {
      configuration=operation.get(CommonAttributes.MOD_CLUSTER_CONFIG).get(CommonAttributes.CONFIGURATION);
    }
 else {
      configuration=operation.get(CommonAttributes.MOD_CLUSTER_CONFIG);
    }
    resource.registerChild(ModClusterExtension.configurationPath,Resource.Factory.create());
    final Resource conf=resource.getChild(ModClusterExtension.configurationPath);
    final ModelNode confModel=conf.getModel();
    for (    final String attribute : configuration.keys()) {
      if (attribute.equals(CommonAttributes.SSL)) {
        conf.registerChild(ModClusterExtension.sslConfigurationPath,Resource.Factory.create());
        final Resource ssl=conf.getChild(ModClusterExtension.sslConfigurationPath);
        ModelNode sslnode;
        if (configuration.get(attribute).hasDefined(CommonAttributes.CONFIGURATION)) {
          sslnode=configuration.get(attribute).get(CommonAttributes.CONFIGURATION);
        }
 else {
          sslnode=configuration.get(attribute);
        }
        final ModelNode sslModel=ssl.getModel();
        for (        AttributeDefinition sslAttr : ModClusterSSLResourceDefinition.ATTRIBUTES) {
          sslAttr.validateAndSet(sslnode,sslModel);
        }
      }
 else       if (attribute.equals(CommonAttributes.DYNAMIC_LOAD_PROVIDER) || attribute.equals(CommonAttributes.SIMPLE_LOAD_PROVIDER)) {
        confModel.get(attribute).set(configuration.get(attribute));
      }
 else {
        AttributeDefinition ad=ModClusterConfigResourceDefinition.ATTRIBUTES_BY_NAME.get(attribute);
        if (ad != null) {
          ad.validateAndSet(configuration,confModel);
        }
      }
    }
  }
}

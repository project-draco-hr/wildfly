{
  ModelNode resolved=new ModelNode();
  Set<String> attributeNames=registration.getAttributeNames(PathAddress.EMPTY_ADDRESS);
  for (  String name : attributeNames) {
    AttributeDefinition def=registration.getAttributeAccess(PathAddress.EMPTY_ADDRESS,name).getAttributeDefinition();
    resolved.get(name).set(def.resolveModelAttribute(context,model));
  }
  for (  PathElement element : registration.getChildAddresses(PathAddress.EMPTY_ADDRESS)) {
    if (element.isMultiTarget()) {
      final String childType=element.getKey();
      for (      final Resource.ResourceEntry entry : resource.getChildren(childType)) {
        final ImmutableManagementResourceRegistration childRegistration=registration.getSubModel(PathAddress.pathAddress(PathElement.pathElement(childType,entry.getName())));
        ModelNode unResolvedSubModel=model.get(entry.getPathElement().getKeyValuePair());
        resolved.get(entry.getPathElement().getKeyValuePair()).set(resolveRecursive(context,entry,childRegistration,unResolvedSubModel));
      }
    }
 else {
      final Resource child=resource.getChild(element);
      final ImmutableManagementResourceRegistration childRegistration=registration.getSubModel(PathAddress.pathAddress(element));
      ModelNode unResolvedSubModel=model.get(element.getKeyValuePair());
      resolved.get(element.getKeyValuePair()).set(resolveRecursive(context,child,childRegistration,unResolvedSubModel));
    }
  }
  return resolved;
}

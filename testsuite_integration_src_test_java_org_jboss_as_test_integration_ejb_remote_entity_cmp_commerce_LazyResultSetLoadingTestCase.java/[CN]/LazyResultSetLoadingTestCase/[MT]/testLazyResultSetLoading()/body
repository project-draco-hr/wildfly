{
  OrderHome oh=getOrderHome();
  Order o=oh.create(new Long(1));
  LineItemHome lih=getLineItemHome();
  LineItem li=lih.create(new Long(11));
  o.addLineItemId(li.getId());
  li=lih.create(new Long(22));
  o.addLineItemId(li.getId());
  li=lih.create(new Long(33));
  o.addLineItemId(li.getId());
  Collection col=oh.selectLazy("select object(o) from Address o where o.state='CA'",null);
  assertTrue("Expected empty collection but got " + col.size(),col.isEmpty());
  col=oh.selectLazy("select object(o) from LineItem o",null);
  assertTrue("Expected 3 line items but got " + col.size(),3 == col.size());
  Iterator i=col.iterator();
  LineItem removed=(LineItem)i.next();
  i.remove();
  assertTrue("Expected 2 line items but got " + col.size(),2 == col.size());
  Collection firstPassCol=new ArrayList(2);
  while (i.hasNext()) {
    firstPassCol.add(i.next());
  }
  Collection secondPassCol=new ArrayList(3);
  i=col.iterator();
  while (i.hasNext()) {
    li=(LineItem)i.next();
    assertTrue(firstPassCol.contains(li));
    secondPassCol.add(li);
  }
  assertTrue("Expected 2 line items but got " + secondPassCol.size(),secondPassCol.size() == 2);
  secondPassCol.add(removed);
  assertTrue("Expected 3 line items but got " + secondPassCol.size(),secondPassCol.size() == 3);
  col=oh.selectLazy("select object(o) from LineItem o offset 1 limit 2",null);
  assertTrue("Expected 2 line items but got " + col.size(),col.size() == 2);
  int count=0;
  for (i=col.iterator(); i.hasNext(); ) {
    i.next();
    ++count;
  }
  assertTrue("Expected 2 but got " + count,count == 2);
  oh.remove(new Long(1));
}

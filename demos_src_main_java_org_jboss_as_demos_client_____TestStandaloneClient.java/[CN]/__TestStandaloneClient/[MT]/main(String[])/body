{
  System.out.println("Creating client");
  ModelControllerClient client=null;
  try {
    client=ModelControllerClient.Factory.create(InetAddress.getByName("localhost"),9999);
    System.out.println("Created client, getting model...");
    ModelNode op=new ModelNode();
    op.get("operation").set("read-resource");
    op.get("address").setEmptyList();
    op.get("recursive").set(true);
    ModelNode response=client.execute(op);
    if ("success".equals(op.get("outcome").asString())) {
      System.out.println("Got model " + response.get("result"));
    }
 else {
      System.out.println("Failed to get model -- " + response.get("failure-description"));
    }
    op=new ModelNode();
    op.get("operation").set("add");
    op.get("address").add("path","org.jboss.test");
    op.get("path").set("/home/emuckenh/Downloads");
    response=client.execute(op);
    if ("success".equals(op.get("outcome").asString())) {
      System.out.println("Added path");
    }
 else {
      System.out.println("Failed to add path -- " + response.get("failure-description"));
    }
    System.out.println("Created client, getting dm...");
    ServerDeploymentManager manager=ServerDeploymentManager.Factory.create(client);
    System.out.println("Got manager " + manager);
    File file=new File("sar-example.sar");
    if (!file.exists()) {
      throw new IllegalStateException("No file sar-example.sar");
    }
    String deployment=manager.addDeploymentContent(file.toURL());
    System.out.println("Added deployment " + deployment);
    Future<ServerDeploymentPlanResult> deploymentResult=manager.execute(manager.newDeploymentPlan().add(deployment,file).deploy(deployment).build());
    System.out.println("Deployment result:" + deploymentResult);
    System.out.println("Contained deployment result:" + deploymentResult.get());
    Thread.sleep(3000);
    manager.execute(manager.newDeploymentPlan().undeploy(deployment).remove(deployment).build());
  }
  finally {
    safeClose(client);
  }
}

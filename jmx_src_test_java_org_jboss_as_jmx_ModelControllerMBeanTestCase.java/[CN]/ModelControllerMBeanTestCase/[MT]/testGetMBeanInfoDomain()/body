{
  MBeanServerConnection connection=setupAndGetConnection(new MBeanInfoAdditionalInitialization(ProcessType.DOMAIN_SERVER,new TestExtension()));
  MBeanInfo info=connection.getMBeanInfo(LEGACY_ROOT_NAME);
  Assert.assertNotNull(info);
  for (  MBeanAttributeInfo attr : info.getAttributes()) {
    Assert.assertFalse(attr.getName().contains("-"));
  }
  for (  MBeanOperationInfo op : info.getOperations()) {
    Assert.assertFalse(op.getName().contains("-"));
    for (    MBeanParameterInfo param : op.getSignature()) {
      Assert.assertFalse(param.getName().contains("-"));
    }
  }
  info=connection.getMBeanInfo(createObjectName(LEGACY_DOMAIN + ":subsystem=jmx"));
  Assert.assertNotNull(info);
  Assert.assertEquals(JMXExtension.getResourceDescriptionResolver("").getResourceBundle(Locale.getDefault()).getString(CommonAttributes.JMX),info.getDescription());
  info=connection.getMBeanInfo(createObjectName(LEGACY_DOMAIN + ":subsystem=test"));
  Assert.assertNotNull(info);
  Assert.assertEquals("A test subsystem",info.getDescription());
  checkMBeanInfoAttributes(info,false,false);
  MBeanOperationInfo[] operations=info.getOperations();
  Assert.assertEquals(1,operations.length);
  OpenMBeanOperationInfo op=findOperation(operations,VoidOperationNoParams.OPERATION_JMX_NAME);
  Assert.assertEquals(VoidOperationNoParams.OPERATION_JMX_NAME,op.getName());
  Assert.assertEquals("Test1",op.getDescription());
  Assert.assertEquals(0,op.getSignature().length);
  Assert.assertEquals(Void.class.getName(),op.getReturnType());
}

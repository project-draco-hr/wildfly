{
  MBeanServerConnection connection=setupAndGetConnection(new MBeanInfoAdditionalInitialization(new TestExtension()));
  ObjectName name=createObjectName(Constants.DOMAIN + ":subsystem=test");
  String[] attrNames=new String[]{"roInt","int","bigint","bigdec","boolean","bytes","double","string","list","long","type"};
  AttributeList list=connection.getAttributes(name,attrNames);
  Assert.assertEquals(list.size(),attrNames.length);
  Assert.assertEquals(1,assertGetFromList(Integer.class,list,"roInt").intValue());
  Assert.assertEquals(2,assertGetFromList(Integer.class,list,"int").intValue());
  Assert.assertEquals(BigDecimal.valueOf(4),assertGetFromList(BigDecimal.class,list,"bigdec"));
  Assert.assertFalse(assertGetFromList(Boolean.class,list,"boolean"));
  assertEqualByteArray(assertGetFromList(byte[].class,list,"bytes"),5,6);
  Assert.assertEquals(7.0,assertGetFromList(Double.class,list,"double"));
  Assert.assertEquals("8",assertGetFromList(String.class,list,"string"));
  Integer[] intList=assertCast(Integer[].class,connection.getAttribute(name,"list"));
  Assert.assertEquals(1,intList.length);
  Assert.assertEquals(Integer.valueOf(9),intList[0]);
  Assert.assertEquals(10,assertGetFromList(Long.class,list,"long").longValue());
  Assert.assertEquals(ModelType.INT,ModelType.valueOf(assertCast(String.class,connection.getAttribute(name,"type"))));
  list=new AttributeList();
  list.add(new Attribute("int",102));
  list.add(new Attribute("bigdec",BigDecimal.valueOf(104)));
  list.add(new Attribute("boolean",true));
  list.add(new Attribute("bytes",new byte[]{105,106}));
  list.add(new Attribute("double",107.0));
  list.add(new Attribute("string","108"));
  list.add(new Attribute("list",new Integer[]{109}));
  list.add(new Attribute("long",110L));
  list.add(new Attribute("type",ModelType.STRING.toString()));
  connection.setAttributes(name,list);
  list=connection.getAttributes(name,attrNames);
  Assert.assertEquals(list.size(),attrNames.length);
  Assert.assertEquals(102,assertGetFromList(Integer.class,list,"int").intValue());
  Assert.assertEquals(BigDecimal.valueOf(104),assertGetFromList(BigDecimal.class,list,"bigdec"));
  Assert.assertTrue(assertGetFromList(Boolean.class,list,"boolean"));
  assertEqualByteArray(assertGetFromList(byte[].class,list,"bytes"),105,106);
  Assert.assertEquals(107.0,assertGetFromList(Double.class,list,"double"));
  Assert.assertEquals("108",assertGetFromList(String.class,list,"string"));
  intList=assertCast(Integer[].class,connection.getAttribute(name,"list"));
  Assert.assertEquals(1,intList.length);
  Assert.assertEquals(Integer.valueOf(109),intList[0]);
  Assert.assertEquals(110,assertGetFromList(Long.class,list,"long").longValue());
  Assert.assertEquals(ModelType.STRING,ModelType.valueOf(assertCast(String.class,connection.getAttribute(name,"type"))));
}

{
  MBeanServerConnection connection=setupAndGetConnection(new MBeanInfoAdditionalInitialization(TYPE_STANDALONE,new TestExtension(true)));
  ObjectName name=createObjectName(EXPR_DOMAIN + ":subsystem=test");
  VoidOperationNoParams.INSTANCE.invoked=false;
  Assert.assertNull(connection.invoke(name,VoidOperationNoParams.OPERATION_JMX_NAME,null,null));
  Assert.assertTrue(VoidOperationNoParams.INSTANCE.invoked);
  String result=assertCast(String.class,connection.invoke(name,IntOperationWithParams.OPERATION_JMX_NAME,new Object[]{"${should.not.exist!!!!!:100}",new String[]{"${should.not.exist!!!!!:A}"},Collections.singletonMap("test","${should.not.exist!!!!!:3}")},new String[]{Long.class.getName(),String[].class.getName(),Map.class.getName()}));
  Assert.assertEquals("A105",result);
  Assert.assertTrue(IntOperationWithParams.INSTANCE_EXPRESSIONS.invoked);
  MBeanInfo info=connection.getMBeanInfo(name);
  CompositeType complexType=assertCast(CompositeType.class,findAttribute(info.getAttributes(),"complex").getOpenType());
  CompositeData complexData=createComplexData(connection,complexType,"${should.not.exist!!!!!:5}","${should.not.exist!!!!!:10}");
  Assert.assertEquals(complexData,assertCast(CompositeData.class,connection.invoke(name,ComplexOperation.OPERATION_NAME,new Object[]{complexData},new String[]{CompositeData.class.getName()})));
}

{
  final SubsystemRegistration subsystem=context.registerSubsystem("test",1,0,0);
  final ManagementResourceRegistration registration=subsystem.registerSubsystemModel(new DescriptionProvider(){
    @Override public ModelNode getModelDescription(    Locale locale){
      ModelNode node=new ModelNode();
      node.get(DESCRIPTION).set("A test subsystem");
      node.get(CHILDREN,"single",DESCRIPTION).set("An only child");
      node.get(CHILDREN,"siblings",DESCRIPTION).set("One of many");
      return node;
    }
  }
);
  registration.registerOperationHandler(ADD,TestSubystemAdd.INSTANCE,TestSubystemAdd.INSTANCE,false);
  final ManagementResourceRegistration singleRegistration=registration.registerSubModel(getChildElement(),new DescriptionProvider(){
    @Override public ModelNode getModelDescription(    Locale locale){
      ModelNode node=new ModelNode();
      node.get(DESCRIPTION).set("An only child");
      node.get(ATTRIBUTES,"attr",TYPE).set(ModelType.INT);
      node.get(ATTRIBUTES,"attr",DESCRIPTION).set("Only child int");
      return node;
    }
  }
);
  singleRegistration.registerOperationHandler(ADD,TestChildAdd.INSTANCE,TestChildAdd.INSTANCE);
  singleRegistration.registerOperationHandler(REMOVE,TestChildRemove.INSTANCE,TestChildRemove.INSTANCE);
  singleRegistration.registerReadOnlyAttribute("attr",null,Storage.CONFIGURATION);
}

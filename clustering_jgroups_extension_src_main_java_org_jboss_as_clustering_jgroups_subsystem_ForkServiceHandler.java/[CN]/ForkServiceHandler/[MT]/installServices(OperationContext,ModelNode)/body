{
  super.installServices(context,model);
  PathAddress address=context.getCurrentAddress();
  String name=address.getLastElement().getValue();
  String channel=address.getParent().getLastElement().getValue();
  ServiceTarget target=context.getServiceTarget();
  new AliasServiceBuilder<>(ChannelServiceName.FACTORY.getServiceName(name),ProtocolStackServiceName.CHANNEL_FACTORY.getServiceName(channel),ChannelFactory.class).build(target).install();
  new ChannelBuilder(name).build(target).install();
  new ChannelConnectorBuilder(name).build(target).install();
  new BinderServiceBuilder<>(JGroupsBindingFactory.createChannelBinding(name),ChannelServiceName.CHANNEL.getServiceName(name),Channel.class).build(target).install();
  for (  GroupBuilderProvider provider : ServiceLoader.load(ClusteredGroupBuilderProvider.class,ClusteredGroupBuilderProvider.class.getClassLoader())) {
    Iterator<Builder<?>> groupBuilders=provider.getBuilders(channel,null).iterator();
    for (    Builder<?> groupBuilder : provider.getBuilders(name,null)) {
      new AliasServiceBuilder<>(groupBuilder.getServiceName(),groupBuilders.next().getServiceName(),Object.class).build(target).install();
    }
  }
}

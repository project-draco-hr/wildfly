{
  super.installServices(context,model);
  PathAddress address=context.getCurrentAddress();
  String name=address.getLastElement().getValue();
  String channel=address.getParent().getLastElement().getValue();
  ServiceTarget target=context.getServiceTarget();
  new AliasServiceBuilder<>(FORK_CHANNEL_SOURCE.getServiceName(address),JGroupsRequirement.CHANNEL_FACTORY.getServiceName(context,channel),JGroupsRequirement.CHANNEL_FACTORY.getType()).build(target).install();
  new AliasServiceBuilder<>(FORK_CHANNEL_MODULE.getServiceName(address),JGroupsRequirement.CHANNEL_MODULE.getServiceName(context,channel),JGroupsRequirement.CHANNEL_MODULE.getType()).build(target).install();
  new AliasServiceBuilder<>(FORK_CHANNEL_CLUSTER.getServiceName(address),JGroupsRequirement.CHANNEL_CLUSTER.getServiceName(context,channel),JGroupsRequirement.CHANNEL_CLUSTER.getType()).build(target).install();
  new ChannelBuilder(FORK_CHANNEL.getServiceName(address),name).configure(context,model).build(target).install();
  new BinderServiceBuilder<>(JGroupsBindingFactory.createChannelBinding(name),JGroupsRequirement.CHANNEL.getServiceName(context,name),JGroupsRequirement.CHANNEL.getType()).build(target).install();
  new BinderServiceBuilder<>(JGroupsBindingFactory.createChannelFactoryBinding(name),JGroupsRequirement.CHANNEL_FACTORY.getServiceName(context,name),JGroupsRequirement.CHANNEL_FACTORY.getType()).build(target).install();
  for (  GroupAliasBuilderProvider provider : ServiceLoader.load(GroupAliasBuilderProvider.class,GroupAliasBuilderProvider.class.getClassLoader())) {
    for (    Builder<?> builder : provider.getBuilders(context.getCapabilityServiceSupport(),name,channel)) {
      builder.build(target).install();
    }
  }
}

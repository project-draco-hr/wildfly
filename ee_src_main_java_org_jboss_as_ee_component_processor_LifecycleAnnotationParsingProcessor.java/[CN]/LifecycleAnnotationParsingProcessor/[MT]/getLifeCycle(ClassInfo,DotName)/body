{
  if (classInfo == null) {
    return null;
  }
  final Map<DotName,List<AnnotationInstance>> classAnnotations=classInfo.annotations();
  final List<AnnotationInstance> instances=classAnnotations.get(annotationType);
  if (instances == null || instances.isEmpty()) {
    return null;
  }
  if (instances.size() > 1) {
    throw new IllegalArgumentException("Only one method may be annotated with " + annotationType + " per bean.");
  }
  final AnnotationTarget target=instances.get(0).target();
  if (!(target instanceof MethodInfo)) {
    throw new IllegalArgumentException(annotationType + " is only valid on method targets.");
  }
  final MethodInfo methodInfo=MethodInfo.class.cast(target);
  final Type[] args=methodInfo.args();
  if (args.length == 0) {
    return new ComponentLifecycleConfiguration(methodInfo.name());
  }
 else {
    throw new IllegalArgumentException("Invalid number of arguments for method " + methodInfo.name() + " annotated with "+ annotationType+ " on class "+ classInfo.name());
  }
}

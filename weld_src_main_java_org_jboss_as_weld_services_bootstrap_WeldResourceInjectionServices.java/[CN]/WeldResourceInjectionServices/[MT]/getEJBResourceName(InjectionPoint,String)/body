{
  if (injectionPoint.getType() instanceof Class<?>) {
    Class<?> type=(Class<?>)injectionPoint.getType();
    if (USER_TRANSACTION_CLASS_NAME.equals(type.getName())) {
      return USER_TRANSACTION_LOCATION;
    }
 else     if (HANDLE_DELEGATE_CLASS_NAME.equals(type.getName())) {
      WeldLogger.ROOT_LOGGER.injectionTypeNotValue(HandleDelegate.class,injectionPoint.getMember());
      return proposedName;
    }
 else     if (ORB_CLASS_NAME.equals(type.getName())) {
      WeldLogger.ROOT_LOGGER.injectionTypeNotValue(org.omg.CORBA.ORB.class,injectionPoint.getMember());
      return proposedName;
    }
 else     if (TIMER_SERVICE_CLASS_NAME.equals(type.getName())) {
      WeldLogger.ROOT_LOGGER.injectionTypeNotValue(TimerService.class,injectionPoint.getMember());
      return proposedName;
    }
 else     if (ContextService.class.getName().equals(type.getName())) {
      return ConcurrentServiceNames.DEFAULT_CONTEXT_SERVICE_JNDI_NAME;
    }
 else     if (ManagedExecutorService.class.getName().equals(type.getName())) {
      return ConcurrentServiceNames.DEFAULT_MANAGED_EXECUTOR_SERVICE_JNDI_NAME;
    }
 else     if (ManagedScheduledExecutorService.class.getName().equals(type.getName())) {
      return ConcurrentServiceNames.DEFAULT_MANAGED_SCHEDULED_EXECUTOR_SERVICE_JNDI_NAME;
    }
 else     if (ManagedThreadFactory.class.getName().equals(type.getName())) {
      return ConcurrentServiceNames.DEFAULT_MANAGED_THREAD_FACTORY_JNDI_NAME;
    }
  }
  return proposedName;
}

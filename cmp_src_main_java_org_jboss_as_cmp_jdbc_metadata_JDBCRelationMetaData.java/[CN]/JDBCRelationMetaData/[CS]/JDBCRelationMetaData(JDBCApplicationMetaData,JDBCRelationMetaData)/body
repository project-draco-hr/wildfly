{
  final JDBCEntityMetaData defaultEntity=jdbcApplication.getDefaultEntity();
  mappingStyle=defaultValues.mappingStyle;
  readOnly=defaultValues.readOnly != null ? defaultValues.readOnly : defaultEntity.isReadOnly();
  readTimeOut=defaultValues.readTimeOut != null ? defaultValues.readTimeOut : defaultEntity.getReadTimeOut();
  dataSourceName=defaultValues.dataSourceName != null ? defaultValues.dataSourceName : defaultEntity.getDataSourceName();
  datasourceMapping=defaultValues.datasourceMapping != null ? defaultValues.datasourceMapping : defaultEntity.getTypeMapping();
  String tableNameString=defaultValues.getDefaultTableName();
  if (tableNameString == null) {
    tableNameString=defaultValues.createDefaultTableName();
  }
  tableName=tableNameString;
  createTable=defaultValues.createTable != null ? defaultValues.createTable : defaultEntity.getCreateTable();
  removeTable=defaultValues.removeTable != null ? defaultValues.removeTable : defaultEntity.getRemoveTable();
  if (defaultValues.tablePostCreateCmd != null && !defaultValues.tablePostCreateCmd.isEmpty()) {
    tablePostCreateCmd.addAll(defaultValues.tablePostCreateCmd);
  }
 else   if (defaultEntity.getDefaultTablePostCreateCmd() != null) {
    tablePostCreateCmd.addAll(defaultEntity.getDefaultTablePostCreateCmd());
  }
  alterTable=defaultValues.alterTable != null ? defaultValues.alterTable : defaultEntity.getAlterTable();
  rowLocking=defaultValues.rowLocking != null ? defaultValues.rowLocking : defaultEntity.hasRowLocking();
  primaryKeyConstraint=defaultValues.primaryKeyConstraint != null ? defaultValues.primaryKeyConstraint : defaultEntity.hasPrimaryKeyConstraint();
  JDBCRelationshipRoleMetaData defaultLeft=defaultValues.getLeftRelationshipRole();
  JDBCRelationshipRoleMetaData defaultRight=defaultValues.getRightRelationshipRole();
  left=new JDBCRelationshipRoleMetaData(this,jdbcApplication,defaultLeft);
  right=new JDBCRelationshipRoleMetaData(this,jdbcApplication,defaultRight);
  left.init(right);
  right.init(left);
  this.relationName=getNonNullRelationName(left,right,defaultValues.getRelationName());
  if (isForeignKeyMappingStyle() && left.getKeyFields().isEmpty() && right.getKeyFields().isEmpty()) {
    throw new RuntimeException("Atleast one role of a foreign-key " + "mapped relationship must have key fields " + "(or <primkey-field> is missing from ejb-jar.xml): "+ "ejb-relation-name="+ relationName);
  }
  if (isTableMappingStyle() && (left.getKeyFields().isEmpty() || right.getKeyFields().isEmpty())) {
    throw new RuntimeException("Both roles of a relation-table " + "mapped relationship must have key fields: " + "ejb-relation-name="+ relationName);
  }
}

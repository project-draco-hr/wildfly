{
  final RelationRoleMetaData leftRole=relationMetaData.getLeftRole();
  final RelationRoleMetaData rightRole=relationMetaData.getRightRole();
  if (leftRole.isMultiplicityMany() && rightRole.isMultiplicityMany()) {
    mappingStyle=MappingStyle.TABLE;
  }
 else {
    mappingStyle=MappingStyle.FOREIGN_KEY;
  }
  left=new JDBCRelationshipRoleMetaData(this,jdbcApplication,leftRole);
  right=new JDBCRelationshipRoleMetaData(this,jdbcApplication,rightRole);
  left.init(right);
  right.init(left);
  relationName=getNonNullRelationName(left,right,relationMetaData.getEjbRelationName());
  if (mappingStyle == MappingStyle.TABLE) {
    tableName=createDefaultTableName();
  }
 else {
    tableName=null;
  }
}

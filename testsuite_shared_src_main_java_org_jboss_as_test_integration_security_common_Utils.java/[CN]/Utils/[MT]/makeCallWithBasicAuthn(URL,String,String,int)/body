{
  LOGGER.info("Requesting URL " + url);
  final DefaultHttpClient httpClient=new DefaultHttpClient();
  try {
    final HttpGet httpGet=new HttpGet(url.toURI());
    HttpResponse response=httpClient.execute(httpGet);
    int statusCode=response.getStatusLine().getStatusCode();
    if (HttpServletResponse.SC_UNAUTHORIZED != statusCode || StringUtils.isEmpty(user)) {
      assertEquals("Unexpected HTTP response status code.",expectedStatusCode,statusCode);
      return EntityUtils.toString(response.getEntity());
    }
    if (LOGGER.isDebugEnabled()) {
      LOGGER.debug("HTTP response was SC_UNAUTHORIZED, let's authenticate the user " + user);
    }
    HttpEntity entity=response.getEntity();
    if (entity != null)     EntityUtils.consume(entity);
    final UsernamePasswordCredentials credentials=new UsernamePasswordCredentials(user,pass);
    httpClient.getCredentialsProvider().setCredentials(new AuthScope(url.getHost(),url.getPort()),credentials);
    response=httpClient.execute(httpGet);
    statusCode=response.getStatusLine().getStatusCode();
    assertEquals("Unexpected status code returned after the authentication.",expectedStatusCode,statusCode);
    return EntityUtils.toString(response.getEntity());
  }
  finally {
    httpClient.getConnectionManager().shutdown();
  }
}

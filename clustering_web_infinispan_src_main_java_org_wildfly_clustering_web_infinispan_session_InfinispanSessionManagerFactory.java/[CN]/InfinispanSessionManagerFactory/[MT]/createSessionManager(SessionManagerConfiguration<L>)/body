{
  final Batcher<TransactionBatch> batcher=new InfinispanBatcher(this.config.getCache());
  final Cache<Key<String>,?> cache=this.config.getCache();
  final IdentifierFactory<String> factory=new AffinityIdentifierFactory<>(configuration.getIdentifierFactory(),cache,this.config.getKeyAffinityServiceFactory());
  final CommandDispatcherFactory dispatcherFactory=this.config.getCommandDispatcherFactory();
  final NodeFactory<Address> nodeFactory=this.config.getNodeFactory();
  final int maxActiveSessions=this.config.getSessionManagerFactoryConfiguration().getMaxActiveSessions();
  InfinispanSessionManagerConfiguration config=new InfinispanSessionManagerConfiguration(){
    @Override public SessionExpirationListener getExpirationListener(){
      return configuration.getExpirationListener();
    }
    @Override public ServletContext getServletContext(){
      return configuration.getServletContext();
    }
    @Override public Cache<Key<String>,?> getCache(){
      return cache;
    }
    @Override public IdentifierFactory<String> getIdentifierFactory(){
      return factory;
    }
    @Override public Batcher<TransactionBatch> getBatcher(){
      return batcher;
    }
    @Override public CommandDispatcherFactory getCommandDispatcherFactory(){
      return dispatcherFactory;
    }
    @Override public NodeFactory<Address> getNodeFactory(){
      return nodeFactory;
    }
    @Override public int getMaxActiveSessions(){
      return maxActiveSessions;
    }
    @Override public Recordable<ImmutableSession> getInactiveSessionRecorder(){
      return configuration.getInactiveSessionRecorder();
    }
  }
;
  return new InfinispanSessionManager<>(this.createSessionFactory(configuration.getLocalContextFactory()),config);
}

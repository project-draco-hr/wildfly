{
  ModelNode success=new ModelNode();
  success.get("outcome").set("success");
  success.get("server-groups","groupA","serverA-1","host").set("host1");
  success.get("server-groups","groupA","serverA-1","response","outcome").set("success");
  success.get("server-groups","groupA","serverA-1","response","result").set(new ModelNode());
  success.get("server-groups","groupA","serverA-2","host").set("host2");
  success.get("server-groups","groupA","serverA-2","response","outcome").set("success");
  success.get("server-groups","groupA","serverA-2","response","result").set(new ModelNode());
  success.get("server-groups","groupB","serverB-1","host").set("host1");
  success.get("server-groups","groupB","serverB-1","response","outcome").set("success");
  success.get("server-groups","groupB","serverB-1","response","result").set(new ModelNode());
  success.get("server-groups","groupB","serverB-2","host").set("host2");
  success.get("server-groups","groupB","serverB-2","response","outcome").set("success");
  success.get("server-groups","groupB","serverB-2","response","result").set(new ModelNode());
  ModelNode op=new ModelNode();
  op.get("op").set("write-core-threads");
  op.get("op-addr").add("profile","production");
  op.get("op-addr").add("subsystem","threads");
  op.get("op-addr").add("bounded-queue-thread-pool","pool1");
  op.get("count").set(5);
  op.get("per-cpu").set(5);
  success.get("compensating-op").set(op);
  ModelNode partial=new ModelNode();
  partial.get("outcome").set("success");
  partial.get("server-groups","groupA","serverA-1","host").set("host1");
  partial.get("server-groups","groupA","serverA-1","response","outcome").set("success");
  partial.get("server-groups","groupA","serverA-1","response","result").set(new ModelNode());
  partial.get("server-groups","groupA","serverA-2","host").set("host2");
  partial.get("server-groups","groupA","serverA-2","response","outcome").set("success");
  partial.get("server-groups","groupA","serverA-2","response","result").set(new ModelNode());
  partial.get("server-groups","groupB","serverB-1","host").set("host1");
  partial.get("server-groups","groupB","serverB-1","response","outcome").set("failed");
  partial.get("server-groups","groupB","serverB-1","response","result").set(new ModelNode());
  partial.get("server-groups","groupB","serverB-1","response","rolled-back").set(true);
  partial.get("server-groups","groupB","serverB-2","host").set("host2");
  partial.get("server-groups","groupB","serverB-2","response","outcome").set("failed");
  partial.get("server-groups","groupB","serverB-2","response","result").set(new ModelNode());
  partial.get("server-groups","groupB","serverB-2","response","rolled-back").set(true);
  partial.get("server-groups","groupB","serverB-3","host").set("host3");
  partial.get("server-groups","groupB","serverB-3","response","outcome").set("failed");
  partial.get("server-groups","groupB","serverB-3","response","failure-description").set("[DOM-4556] Something didn't work right");
  partial.get("server-groups","groupB","serverB-3","response","rolled-back").set(true);
  partial.get("compensating-op").set(op);
  ModelNode failed=new ModelNode();
  failed.get("outcome").set("failed");
  failed.get("server-groups","groupA","serverA-1","host").set("host1");
  failed.get("server-groups","groupA","serverA-1","response","outcome").set("success");
  failed.get("server-groups","groupA","serverA-1","response","result").set(new ModelNode());
  failed.get("server-groups","groupA","serverA-2","host").set("host2");
  failed.get("server-groups","groupA","serverA-2","response","outcome").set("success");
  failed.get("server-groups","groupA","serverA-2","response","result").set(new ModelNode());
  failed.get("server-groups","groupB","serverB-1","host").set("host1");
  failed.get("server-groups","groupB","serverB-1","response","outcome").set("failed");
  failed.get("server-groups","groupB","serverB-1","response","result").set(new ModelNode());
  failed.get("server-groups","groupB","serverB-1","response","rolled-back").set(true);
  failed.get("server-groups","groupB","serverB-2","host").set("host2");
  failed.get("server-groups","groupB","serverB-2","response","outcome").set("failed");
  failed.get("server-groups","groupB","serverB-2","response","result").set(new ModelNode());
  failed.get("server-groups","groupB","serverB-2","response","rolled-back").set(true);
  failed.get("server-groups","groupB","serverB-3","host").set("host3");
  failed.get("server-groups","groupB","serverB-3","response","outcome").set("failed");
  failed.get("server-groups","groupB","serverB-3","response","failure-description").set("[DOM-4556] Something didn't work right");
  failed.get("server-groups","groupB","serverB-3","response","rolled-back").set(true);
  failed.get("compensating-op").set(op);
  ModelNode domainFail=new ModelNode();
  domainFail.get("outcome").set("failed");
  domainFail.get("domain-failure-description").set("[DOM-3333] Failed to apply to the domain model");
  ModelNode hostFail=new ModelNode();
  hostFail.get("outcome").set("failed");
  hostFail.get("host-failure-descriptions","hostA").set("[DOM-3333] Failed to apply to the domain model");
  hostFail.get("host-failure-descriptions","hostB").set("[DOM-3333] Failed to apply to the domain model");
  return Arrays.asList(success,partial,failed,domainFail,hostFail);
}

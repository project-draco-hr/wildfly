{
  final KernelServices kernelServices=boot();
  final ModelNode validSubsystemModel=getSubsystemModel(kernelServices);
  final PathAddress consoleHandler=createConsoleHandlerAddress(profileName,"CONSOLE");
  ModelNode op=SubsystemOperations.createOperation(AbstractHandlerDefinition.CHANGE_LEVEL_OPERATION_NAME,consoleHandler.toModelNode());
  op.get(CommonAttributes.LEVEL.getName()).set("DEBUG");
  ModelNode result=kernelServices.executeOperation(op);
  Assert.assertFalse("The update operation should have failed, but was successful: " + result,SubsystemOperations.isSuccessfulOutcome(result));
  ModelNode currentModel=getSubsystemModel(kernelServices);
  compare(profileName,validSubsystemModel,currentModel);
  final LogContext logContext=(profileName == null ? LogContext.getLogContext() : LoggingProfileContextSelector.getInstance().get(profileName));
  ConfigurationPersistence config=ConfigurationPersistence.getConfigurationPersistence(logContext);
  compare(profileName,currentModel,config);
  final PathAddress rootLoggerAddress=createRootLoggerAddress(profileName);
  op=SubsystemOperations.createOperation(RootLoggerResourceDefinition.ROOT_LOGGER_CHANGE_LEVEL_OPERATION_NAME,rootLoggerAddress.toModelNode());
  op.get(CommonAttributes.LEVEL.getName()).set("TRACE");
  result=kernelServices.executeOperation(op);
  Assert.assertFalse("The update operation should have failed, but was successful: " + result,SubsystemOperations.isSuccessfulOutcome(result));
  currentModel=getSubsystemModel(kernelServices);
  compare(profileName,validSubsystemModel,currentModel);
  config=ConfigurationPersistence.getConfigurationPersistence(logContext);
  compare(profileName,currentModel,config);
}

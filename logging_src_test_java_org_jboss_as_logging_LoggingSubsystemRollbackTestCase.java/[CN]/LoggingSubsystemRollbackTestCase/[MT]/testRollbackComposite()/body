{
  final KernelServices kernelServices=boot();
  final PathAddress console2Handler=createConsoleHandlerAddress("CONSOLE2");
  ModelNode op=Operations.createAddOperation(console2Handler.toModelNode());
  op.get(CommonAttributes.LEVEL.getName()).set("INFO");
  op.get(CommonAttributes.FORMATTER.getName()).set("%d{HH:mm:ss,SSS} %-5p [%c] (%t) CONSOLE2: %s%E%n");
  op=Operations.createAddOperation(console2Handler.toModelNode());
  ModelNode result=kernelServices.executeOperation(op);
  Assert.assertTrue(Operations.getFailureDescription(result),Operations.successful(result));
  final PathAddress loggerAddress=createLoggerAddress("org.jboss.as.logging");
  op=Operations.createOperation(LoggerResourceDefinition.ADD_HANDLER_OPERATION_NAME,loggerAddress.toModelNode());
  op.get(CommonAttributes.HANDLER_NAME.getName()).set(console2Handler.getLastElement().getValue());
  result=kernelServices.executeOperation(op);
  Assert.assertTrue(Operations.getFailureDescription(result),Operations.successful(result));
  final ModelNode validSubsystemModel=getSubsystemModel(kernelServices);
  final CompositeOperationBuilder operationBuilder=CompositeOperationBuilder.create();
  final PathAddress fileHandlerAddress=createFileHandlerAddress("fail-fh");
  final ModelNode fileHandlerOp=Operations.createAddOperation(fileHandlerAddress.toModelNode());
  fileHandlerOp.get(CommonAttributes.FILE.getName(),CommonAttributes.RELATIVE_TO.getName()).set("jboss.server.log.dir");
  fileHandlerOp.get(CommonAttributes.FILE.getName(),CommonAttributes.PATH.getName()).set("fail-fh.log");
  fileHandlerOp.get(CommonAttributes.AUTOFLUSH.getName()).set(true);
  operationBuilder.addStep(fileHandlerOp);
  final PathAddress testLoggerAddress=createLoggerAddress("test");
  final ModelNode testLoggerOp=Operations.createAddOperation(testLoggerAddress.toModelNode());
  operationBuilder.addStep(testLoggerOp);
  operationBuilder.addStep(Operations.createWriteAttributeOperation(testLoggerAddress.toModelNode(),CommonAttributes.HANDLERS,new ModelNode().setEmptyList().add("fail-fh")));
  operationBuilder.addStep(Operations.createRemoveOperation(console2Handler.toModelNode(),false));
  operationBuilder.addStep(Operations.createWriteAttributeOperation(loggerAddress.toModelNode(),CommonAttributes.HANDLERS,new ModelNode().setEmptyList().add("fail-fh")));
  result=kernelServices.executeOperation(operationBuilder.build().getOperation());
  Assert.assertFalse("The add operation should have failed, but was successful: " + result,Operations.successful(result));
  final ModelNode currentModel=getSubsystemModel(kernelServices);
  compare(validSubsystemModel,currentModel);
  final ConfigurationPersistence config=ConfigurationPersistence.getConfigurationPersistence(LogContext.getLogContext());
  compare(currentModel,config);
}

{
  final KernelServices kernelServices=boot();
  final ModelNode validSubsystemModel=getSubsystemModel(kernelServices);
  final PathAddress consoleHandler=createConsoleHandlerAddress(profileName,"CONSOLE2");
  ModelNode op=SubsystemOperations.createAddOperation(consoleHandler.toModelNode());
  op.get(CommonAttributes.LEVEL.getName()).set("INFO");
  op.get(CommonAttributes.FORMATTER.getName()).set("%d{HH:mm:ss,SSS} %-5p [%c] (%t) CONSOLE2: %s%E%n");
  ModelNode result=kernelServices.executeOperation(op);
  Assert.assertFalse("The add operation should have failed, but was successful: " + result,SubsystemOperations.isSuccessfulOutcome(result));
  ModelNode currentModel=getSubsystemModel(kernelServices);
  compare(profileName,validSubsystemModel,currentModel);
  final LogContext logContext=(profileName == null ? LogContext.getLogContext() : LoggingProfileContextSelector.getInstance().get(profileName));
  ConfigurationPersistence config=ConfigurationPersistence.getConfigurationPersistence(logContext);
  compare(profileName,currentModel,config);
  final PathAddress loggerAddress=createLoggerAddress(profileName,"org.jboss.as.logging.test");
  op=SubsystemOperations.createAddOperation(loggerAddress.toModelNode());
  result=kernelServices.executeOperation(op);
  Assert.assertFalse("The add operation should have failed, but was successful: " + result,SubsystemOperations.isSuccessfulOutcome(result));
  currentModel=getSubsystemModel(kernelServices);
  compare(profileName,validSubsystemModel,currentModel);
  config=ConfigurationPersistence.getConfigurationPersistence(logContext);
  compare(profileName,currentModel,config);
}

{
  try {
    new OperationStatusRequest(executeRequestContext.getBatchId(),result){
      @Override protected byte getRequestCode(){
        return NewModelControllerProtocol.OPERATION_PREPARED_REQUEST;
      }
      @Override protected void writeRequest(      final int protocolVersion,      final FlushableDataOutput output) throws IOException {
        super.writeRequest(protocolVersion,output);
      }
      @Override protected Void readResponse(      DataInput input) throws IOException {
        ProtocolUtils.expectHeader(input,NewModelControllerProtocol.PARAM_PREPARED);
        executeRequestContext.setPreparedOrFailed();
        byte status=input.readByte();
        if (status == NewModelControllerProtocol.PARAM_COMMIT) {
          transaction.commit();
          executeRequestContext.setTxCompleted();
        }
 else         if (status == NewModelControllerProtocol.PARAM_ROLLBACK) {
          transaction.rollback();
          executeRequestContext.setTxCompleted();
        }
 else {
          throw new IllegalArgumentException("Invalid status code " + status);
        }
        return null;
      }
    }
.executeForResult(executorService,getChannelStrategy(executeRequestContext.getChannel()));
  }
 catch (  Exception e) {
    executeRequestContext.setError(e.getMessage());
    throw new RuntimeException(e);
  }
}

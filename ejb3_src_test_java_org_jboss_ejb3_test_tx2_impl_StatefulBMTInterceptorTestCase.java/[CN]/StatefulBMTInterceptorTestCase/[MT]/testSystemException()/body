{
  StatefulBMTInterceptor statefulBMTInterceptor=new StatefulBMTInterceptor(){
    @Override protected String getComponentName(){
      return "appexception-test";
    }
    @Override protected TransactionManager getTransactionManager(){
      return transactionManager;
    }
  }
;
  TransactionalInvocationContext invocation=mock(TransactionalInvocationContext.class);
  when(invocation.proceed()).thenAnswer(new Answer<Object>(){
    @Override public Object answer(    InvocationOnMock invocation) throws Throwable {
      throw new SimpleSystemException();
    }
  }
);
  try {
    statefulBMTInterceptor.invoke(invocation);
  }
 catch (  EJBException ejbe) {
    logger.debug("Got the expected " + EJBException.class.getName() + " exception: ",ejbe);
    Assert.assertNotNull("No cause found in EJBException",ejbe.getCause());
    Assert.assertEquals("Unexpected cause in EJBException",SimpleSystemException.class,ejbe.getCause().getClass());
  }
}

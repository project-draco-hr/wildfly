{
  final DeploymentUnit deploymentUnit=phaseContext.getDeploymentUnit();
  if (WeldDeploymentMarker.isWeldDeployment(deploymentUnit)) {
    return;
  }
  final Module module=deploymentUnit.getAttachment(org.jboss.as.server.deployment.Attachments.MODULE);
  if (module == null) {
    return;
  }
  final ResteasyDeploymentData resteasy=deploymentUnit.getAttachment(JaxrsAttachments.RESTEASY_DEPLOYMENT_DATA);
  if (resteasy == null) {
    return;
  }
  if (!resteasy.isScanResources())   return;
  final EEModuleDescription moduleDescription=deploymentUnit.getAttachment(Attachments.EE_MODULE_DESCRIPTION);
  if (moduleDescription == null) {
    return;
  }
  final ClassLoader loader=module.getClassLoader();
  for (  final ComponentDescription component : moduleDescription.getComponentDescriptions()) {
    Class<?> componentClass=null;
    try {
      componentClass=loader.loadClass(component.getComponentClassName());
    }
 catch (    ClassNotFoundException e) {
      throw new DeploymentUnitProcessingException(e);
    }
    if (!GetRestful.isRootResource(componentClass))     continue;
    if (component instanceof WebComponentDescription) {
      continue;
    }
    if (component instanceof SessionBeanComponentDescription) {
      Class jaxrsType=GetRestful.getSubResourceClass(componentClass);
      final String jndiName;
      if (component.getViews().size() == 1) {
        jndiName="java:app/" + moduleDescription.getModuleName() + "/"+ componentClass.getSimpleName();
      }
 else {
        final String jaxRsTypeName=jaxrsType.getName();
        boolean found=false;
        for (        final ViewDescription view : component.getViews()) {
          if (view.getViewClassName().equals(jaxRsTypeName)) {
            found=true;
            break;
          }
        }
        if (!found) {
          throw JaxrsMessages.MESSAGES.typeNameNotAnEjbView(jaxRsTypeName,component.getComponentName());
        }
        jndiName="java:app/" + moduleDescription.getModuleName() + "/"+ componentClass.getSimpleName()+ "!"+ jaxRsTypeName;
      }
      JAXRS_LOGGER.debugf("Found JAX-RS Managed Bean: %s local jndi jaxRsTypeName: %s",component.getComponentClassName(),jndiName);
      StringBuilder buf=new StringBuilder();
      buf.append(jndiName).append(";").append(component.getComponentClassName()).append(";").append("true");
      resteasy.getScannedJndiComponentResources().add(buf.toString());
      resteasy.getScannedResourceClasses().remove(component.getComponentClassName());
    }
 else {
      String jndiName="java:app/" + moduleDescription.getModuleName() + "/"+ component.getComponentName();
      JAXRS_LOGGER.debugf("Found JAX-RS Managed Bean: %s local jndi name: %s",component.getComponentClassName(),jndiName);
      StringBuilder buf=new StringBuilder();
      buf.append(jndiName).append(";").append(component.getComponentClassName()).append(";").append("true");
      resteasy.getScannedJndiComponentResources().add(buf.toString());
      resteasy.getScannedResourceClasses().remove(component.getComponentClassName());
    }
  }
}

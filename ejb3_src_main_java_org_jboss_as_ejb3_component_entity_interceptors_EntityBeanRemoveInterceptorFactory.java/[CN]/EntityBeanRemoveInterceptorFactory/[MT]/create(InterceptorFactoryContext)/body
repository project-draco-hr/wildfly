{
  return new AbstractEJBInterceptor(){
    @Override public Object processInvocation(    final InterceptorContext context) throws Exception {
      final EntityBeanComponent component=getComponent(context,EntityBeanComponent.class);
      final Object primaryKey=context.getPrivateData(EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY);
      if (primaryKey == null) {
        throw MESSAGES.invocationNotAssociated();
      }
      final EntityBeanComponentInstance instance=component.getCache().get(primaryKey);
      Method oldMethod=context.getMethod();
      try {
        context.putPrivateData(ComponentInstance.class,instance);
        context.setMethod(ejbRemove);
        context.setTarget(instance.getInstance());
        instance.getInterceptor(ejbRemove).processInvocation(context);
      }
  finally {
        context.setMethod(oldMethod);
        context.setTarget(null);
        context.putPrivateData(ComponentInstance.class,null);
      }
      instance.setRemoved(true);
      return null;
    }
  }
;
}

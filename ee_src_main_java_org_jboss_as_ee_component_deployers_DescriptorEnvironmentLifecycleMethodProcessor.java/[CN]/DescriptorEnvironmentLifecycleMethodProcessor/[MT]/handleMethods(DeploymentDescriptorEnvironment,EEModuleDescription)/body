{
  final RemoteEnvironment environment=env.getEnvironment();
  LifecycleCallbacksMetaData postConstructs=environment.getPostConstructs();
  if (postConstructs != null) {
    for (    LifecycleCallbackMetaData postConstruct : postConstructs) {
      final InterceptorClassDescription.Builder builder=InterceptorClassDescription.builder();
      String methodName=postConstruct.getMethodName();
      MethodIdentifier methodIdentifier=MethodIdentifier.getIdentifier(void.class,methodName);
      builder.setPostConstruct(methodIdentifier);
      eeModuleDescription.addInterceptorMethodOverride(postConstruct.getClassName(),builder.build());
    }
  }
  LifecycleCallbacksMetaData preDestroys=environment.getPreDestroys();
  if (preDestroys != null) {
    for (    LifecycleCallbackMetaData preDestroy : preDestroys) {
      final InterceptorClassDescription.Builder builder=InterceptorClassDescription.builder();
      String methodName=preDestroy.getMethodName();
      MethodIdentifier methodIdentifier=MethodIdentifier.getIdentifier(void.class,methodName);
      builder.setPreDestroy(methodIdentifier);
      eeModuleDescription.addInterceptorMethodOverride(preDestroy.getClassName(),builder.build());
    }
  }
}

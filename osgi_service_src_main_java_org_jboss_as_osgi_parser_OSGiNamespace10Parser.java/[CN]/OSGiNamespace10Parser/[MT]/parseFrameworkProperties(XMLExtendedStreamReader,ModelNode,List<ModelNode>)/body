{
  requireNoAttributes(reader);
  List<ModelNode> result=new ArrayList<ModelNode>();
  while (reader.hasNext() && reader.nextTag() != XMLStreamConstants.END_ELEMENT) {
switch (Namespace.forUri(reader.getNamespaceURI())) {
case OSGI_1_0:
{
        final Element element=Element.forName(reader.getLocalName());
        if (element == Element.PROPERTY) {
          String name=null;
          String value=null;
          int count=reader.getAttributeCount();
          for (int i=0; i < count; i++) {
            requireNoNamespaceAttribute(reader,i);
            final String attrValue=reader.getAttributeValue(i);
            final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case NAME:
{
                name=attrValue;
                break;
              }
default :
            throw unexpectedAttribute(reader,i);
        }
      }
      if (name == null) {
        throw missingRequired(reader,Collections.singleton(Attribute.NAME));
      }
      value=reader.getElementText().trim();
      ModelNode propNode=new ModelNode();
      propNode.get(OP).set(ADD);
      propNode.get(OP_ADDR).set(address).add(ModelConstants.PROPERTY,name);
      propNode.get(ModelConstants.VALUE).set(value);
      result.add(propNode);
      break;
    }
 else {
      throw unexpectedElement(reader);
    }
  }
default :
throw unexpectedElement(reader);
}
}
return result;
}

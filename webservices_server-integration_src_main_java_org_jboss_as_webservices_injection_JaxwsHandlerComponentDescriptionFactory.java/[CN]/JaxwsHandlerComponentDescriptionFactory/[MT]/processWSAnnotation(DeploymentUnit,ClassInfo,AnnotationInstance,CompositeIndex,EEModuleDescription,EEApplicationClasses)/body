{
  final ServiceName unitServiceName=unit.getServiceName();
  final WSEndpointHandlersMapping mapping=getRequiredAttachment(unit,WS_ENDPOINT_HANDLERS_MAPPING_KEY);
  final String endpointClassName=classInfo.name().toString();
  if (isJaxwsEjb(classInfo)) {
    for (    final WebServiceDeclaration container : ASHelper.getJaxwsEjbs(unit)) {
      if (endpointClassName.equals(container.getComponentClassName())) {
        for (        final String handlerClassName : mapping.getHandlers(endpointClassName)) {
          final String ejbName=container.getComponentName();
          final String handlerID=ejbName + "-" + handlerClassName;
          final ServiceName ejbContextServiceName=container.getContextServiceName();
          final DeploymentDescriptorEnvironment ejbEnv=container.getDeploymentDescriptorEnvironment();
          if (moduleDescription.getComponentByName(handlerID) == null) {
            final ComponentDescription jaxwsHandlerDescription=new WSComponentDescription(handlerID,handlerClassName,moduleDescription,unitServiceName,applicationClasses);
            moduleDescription.addComponent(jaxwsHandlerDescription);
            final ServiceName serviceName=EndpointService.getServiceName(unit,ejbName);
            jaxwsHandlerDescription.addDependency(serviceName,ServiceBuilder.DependencyType.REQUIRED);
            jaxwsHandlerDescription.setContextServiceName(ejbContextServiceName);
            jaxwsHandlerDescription.setDeploymentDescriptorEnvironment(ejbEnv);
            jaxwsHandlerDescription.addDependency(ejbContextServiceName,ServiceBuilder.DependencyType.REQUIRED);
          }
        }
      }
    }
  }
 else {
    List<ServletMetaData> ddServlets=ASHelper.getJaxwsServlets(unit);
    boolean found=false;
    for (    final ServletMetaData servletMD : ddServlets) {
      if (endpointClassName.equals(ASHelper.getEndpointClassName(servletMD))) {
        found=true;
        final String pojoName=ASHelper.getEndpointName(servletMD);
        for (        final String handlerClassName : mapping.getHandlers(endpointClassName)) {
          final String handlerID=pojoName + "-" + handlerClassName;
          if (moduleDescription.getComponentByName(handlerID) == null) {
            final ComponentDescription jaxwsHandlerDescription=new WSComponentDescription(handlerID,handlerClassName,moduleDescription,unitServiceName,applicationClasses);
            moduleDescription.addComponent(jaxwsHandlerDescription);
            final ServiceName serviceName=EndpointService.getServiceName(unit,pojoName);
            jaxwsHandlerDescription.addDependency(serviceName,ServiceBuilder.DependencyType.REQUIRED);
          }
        }
      }
    }
    if (!found) {
    }
  }
}

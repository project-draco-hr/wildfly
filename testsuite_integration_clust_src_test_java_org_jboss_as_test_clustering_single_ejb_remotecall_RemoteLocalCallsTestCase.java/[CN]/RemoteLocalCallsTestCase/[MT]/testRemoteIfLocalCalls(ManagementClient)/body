{
  InitialContext ctx=getInitialContext(mngmtClient.getRemoteEjbURL().toString());
  String lookupStr=ARCHIVE_NAME + "/" + StatefulBean.class.getSimpleName()+ "!"+ RemoteInterface.class.getName();
  RemoteInterface stateful1=(RemoteInterface)ctx.lookup(lookupStr);
  RemoteInterface stateful2=(RemoteInterface)ctx.lookup(lookupStr);
  lookupStr=ARCHIVE_NAME + "/" + StatefulClusteredBean.class.getSimpleName()+ "!"+ RemoteInterface.class.getName();
  RemoteInterface statefulClustered1=(RemoteInterface)ctx.lookup(lookupStr);
  RemoteInterface statefulClustered2=(RemoteInterface)ctx.lookup(lookupStr);
  lookupStr=ARCHIVE_NAME + "/" + StatelessBean.class.getSimpleName()+ "!"+ RemoteInterface.class.getName();
  RemoteInterface stateless1=(RemoteInterface)ctx.lookup(lookupStr);
  RemoteInterface stateless2=(RemoteInterface)ctx.lookup(lookupStr);
  lookupStr=ARCHIVE_NAME + "/" + StatelessClusteredBean.class.getSimpleName()+ "!"+ RemoteInterface.class.getName();
  RemoteInterface statelessClustered1=(RemoteInterface)ctx.lookup(lookupStr);
  RemoteInterface statelessClustered2=(RemoteInterface)ctx.lookup(lookupStr);
  lookupStr=ARCHIVE_NAME + "/" + ServiceBean.class.getSimpleName()+ "!"+ ServiceRemoteInterface.class.getName();
  ServiceRemoteInterface service1=(ServiceRemoteInterface)ctx.lookup(lookupStr);
  ServiceRemoteInterface service2=(ServiceRemoteInterface)ctx.lookup(lookupStr);
  stateful1.test();
  stateful2.test();
  statefulClustered1.test();
  statefulClustered2.test();
  stateless1.test();
  stateless2.test();
  statelessClustered1.test();
  statelessClustered2.test();
  service1.test();
  service2.test();
  Assert.assertFalse(stateful1.hashCode() == stateful2.hashCode());
  Assert.assertFalse(statefulClustered1.hashCode() == statefulClustered2.hashCode());
  Assert.assertTrue(stateless1.hashCode() == stateless2.hashCode());
  Assert.assertTrue(statelessClustered1.hashCode() == statelessClustered2.hashCode());
  Assert.assertTrue(service1.hashCode() == service2.hashCode());
  Assert.assertFalse(stateful1.equals(stateful2));
  Assert.assertFalse(statefulClustered1.equals(statefulClustered2));
  Assert.assertTrue(stateless1.equals(stateless2));
  Assert.assertTrue(statelessClustered1.equals(statelessClustered2));
  Assert.assertTrue(service1.equals(service2));
}

{
  final VirtualFile deploymentRoot=getVirtualFileAttachment(context);
  if (deploymentRoot == null || !deploymentRoot.exists())   return;
  final String deploymentRootName=deploymentRoot.getName();
  VirtualFile serviceXmlFile=null;
  if (deploymentRootName.endsWith(".jar") || deploymentRootName.endsWith(".sar")) {
    serviceXmlFile=deploymentRoot.getChild("META-INF/jboss-service.xml");
  }
 else   if (deploymentRootName.endsWith("-service.xml")) {
    serviceXmlFile=deploymentRoot;
  }
  if (serviceXmlFile == null || !serviceXmlFile.exists())   return;
  InputStream xmlStream=null;
  try {
    xmlStream=serviceXmlFile.openStream();
    final XMLStreamReader reader=inputFactory.createXMLStreamReader(xmlStream);
    final ParseResult<JBossServiceXmlDescriptor> result=new ParseResult<JBossServiceXmlDescriptor>();
    xmlMapper.parseDocument(result,reader);
    final JBossServiceXmlDescriptor xmlDescriptor=result.getResult();
    if (xmlDescriptor != null)     context.putAttachment(JBossServiceXmlDescriptor.ATTACHMENT_KEY,xmlDescriptor);
 else     throw new DeploymentUnitProcessingException("Failed to parse service xml [" + serviceXmlFile + "]");
  }
 catch (  Exception e) {
    throw new DeploymentUnitProcessingException("Failed to parse service xml [" + serviceXmlFile + "]",e);
  }
 finally {
    VFSUtils.safeClose(xmlStream);
  }
}

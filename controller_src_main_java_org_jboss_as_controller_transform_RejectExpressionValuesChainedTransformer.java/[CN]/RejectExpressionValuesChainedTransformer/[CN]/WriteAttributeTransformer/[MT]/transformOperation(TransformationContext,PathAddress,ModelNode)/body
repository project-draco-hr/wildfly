{
  final String attribute=operation.require(ModelDescriptionConstants.NAME).asString();
  boolean containsExpression=false;
  if (attributeNames.contains(attribute)) {
    if (operation.hasDefined(ModelDescriptionConstants.VALUE)) {
      containsExpression=checkForExpression(operation.get(ModelDescriptionConstants.VALUE));
    }
  }
  final boolean rejectResult=containsExpression;
  if (rejectResult) {
    final OperationRejectionPolicy rejectPolicy=new OperationRejectionPolicy(){
      @Override public boolean rejectOperation(      ModelNode preparedResult){
        return true;
      }
      @Override public String getFailureDescription(){
        try {
          return logError(context,address,Collections.singleton(attribute),operation);
        }
 catch (        OperationFailedException e) {
          return null;
        }
      }
    }
;
    return new TransformedOperation(operation,rejectPolicy,OperationResultTransformer.ORIGINAL_RESULT);
  }
  return new TransformedOperation(operation,OperationResultTransformer.ORIGINAL_RESULT);
}

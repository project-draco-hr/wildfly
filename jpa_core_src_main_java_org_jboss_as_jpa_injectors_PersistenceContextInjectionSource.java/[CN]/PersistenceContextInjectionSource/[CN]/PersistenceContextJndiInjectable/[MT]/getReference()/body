{
  PersistenceUnitService service=(PersistenceUnitService)deploymentUnit.getServiceRegistry().getRequiredService(puServiceName).getValue();
  EntityManagerFactory emf=service.getEntityManagerFactory();
  EntityManager entityManager;
  boolean isExtended;
  if (type.equals(PersistenceContextType.TRANSACTION)) {
    isExtended=false;
    entityManager=new TransactionScopedEntityManager(unitName,properties,emf);
    if (JPA_LOGGER.isDebugEnabled())     JPA_LOGGER.debugf("created new TransactionScopedEntityManager for unit name=%s",unitName);
  }
 else {
    isExtended=true;
    EntityManager entityManager1=SFSBCallStack.findPersistenceContext(unitName,sfsbxpcMap);
    if (entityManager1 == null) {
      entityManager1=emf.createEntityManager(properties);
      entityManager=new ExtendedEntityManager(unitName,entityManager1);
      if (JPA_LOGGER.isDebugEnabled())       JPA_LOGGER.debugf("created new ExtendedEntityManager for unit name=%s",unitName);
    }
 else {
      entityManager=entityManager1;
      if (JPA_LOGGER.isDebugEnabled())       JPA_LOGGER.debugf("inherited existing ExtendedEntityManager from SFSB invocation stack, unit name=%s",unitName);
    }
    SFSBXPCMap.registerPersistenceContext(entityManager);
    SFSBCallStack.extendedPersistenceContextCreated(unitName,entityManager);
  }
  if (!ENTITY_MANAGER_CLASS.equals(injectionTypeName)) {
    Class extensionClass;
    try {
      extensionClass=pu.getClassLoader().loadClass(injectionTypeName);
    }
 catch (    ClassNotFoundException e) {
      throw MESSAGES.cannotLoadFromJpa(e,injectionTypeName);
    }
    boolean skipAutoCloseAfterUnwrap=skipEntityManagerCloseFor.contains(injectionTypeName);
    if (!skipAutoCloseAfterUnwrap && !isExtended) {
      NonTxEmCloser.pushCall();
    }
    Object targetValueToInject=entityManager.unwrap(extensionClass);
    if (!skipAutoCloseAfterUnwrap && !isExtended) {
      NonTxEmCloser.popCall();
    }
    return new ValueManagedReference(new ImmediateValue<Object>(targetValueToInject));
  }
  return new ValueManagedReference(new ImmediateValue<Object>(entityManager));
}

{
  if (mc == null) {
    mc=managementClient;
    ModelNode op=new ModelNode();
    ModelNode addr=new ModelNode();
    addr.add(ModelDescriptionConstants.SUBSYSTEM,"undertow");
    addr.add("configuration","handler");
    addr.add("reverse-proxy","myproxy");
    op.get(ModelDescriptionConstants.OP_ADDR).set(addr);
    op.get(ModelDescriptionConstants.OP).set(ModelDescriptionConstants.ADD);
    ManagementOperations.executeOperation(managementClient.getControllerClient(),op);
    ModelNode addSocketBindingOp=getOutboundSocketBinding(managementClient.getWebUri().getHost(),managementClient.getWebUri().getPort());
    ManagementOperations.executeOperation(managementClient.getControllerClient(),addSocketBindingOp);
    op=new ModelNode();
    addr=new ModelNode();
    addr.add(ModelDescriptionConstants.SUBSYSTEM,"undertow");
    addr.add("configuration","handler");
    addr.add("reverse-proxy","myproxy");
    addr.add("host","server1");
    op.get(ModelDescriptionConstants.OP_ADDR).set(addr);
    op.get(ModelDescriptionConstants.OP).set(ModelDescriptionConstants.ADD);
    op.get("outbound-socket-binding").set("proxy-host");
    op.get("path").set("/server1");
    ManagementOperations.executeOperation(managementClient.getControllerClient(),op);
    op=new ModelNode();
    addr=new ModelNode();
    addr.add(ModelDescriptionConstants.SUBSYSTEM,"undertow");
    addr.add("configuration","handler");
    addr.add("reverse-proxy","myproxy");
    addr.add("host","server2");
    op.get(ModelDescriptionConstants.OP_ADDR).set(addr);
    op.get(ModelDescriptionConstants.OP).set(ModelDescriptionConstants.ADD);
    op.get("outbound-socket-binding").set("proxy-host");
    op.get("path").set("/server2");
    ManagementOperations.executeOperation(managementClient.getControllerClient(),op);
    op=new ModelNode();
    addr=new ModelNode();
    addr.add(ModelDescriptionConstants.SUBSYSTEM,"undertow");
    addr.add("server","default-server");
    addr.add("host","default-host");
    addr.add("location","/proxy");
    op.get(ModelDescriptionConstants.OP_ADDR).set(addr);
    op.get("handler").set("myproxy");
    op.get(ModelDescriptionConstants.OP).set(ModelDescriptionConstants.ADD);
    ManagementOperations.executeOperation(managementClient.getControllerClient(),op);
  }
}

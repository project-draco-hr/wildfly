{
  ModelNode op=new ModelNode();
  ModelNode addr=new ModelNode();
  addr.add(ModelDescriptionConstants.SUBSYSTEM,"undertow");
  addr.add("configuration","handler");
  addr.add("reverse-proxy","myproxy");
  addr.add("host","server2");
  op.get(ModelDescriptionConstants.OP_ADDR).set(addr);
  op.get(ModelDescriptionConstants.OP).set(ModelDescriptionConstants.REMOVE);
  op.get(OPERATION_HEADERS,ALLOW_RESOURCE_SERVICE_RESTART).set(true);
  ManagementOperations.executeOperation(mc.getControllerClient(),op);
  op=new ModelNode();
  addr=new ModelNode();
  addr.add(ModelDescriptionConstants.SUBSYSTEM,"undertow");
  addr.add("configuration","handler");
  addr.add("reverse-proxy","myproxy");
  addr.add("host","server1");
  op.get(ModelDescriptionConstants.OP_ADDR).set(addr);
  op.get(ModelDescriptionConstants.OP).set(ModelDescriptionConstants.REMOVE);
  op.get(OPERATION_HEADERS,ALLOW_RESOURCE_SERVICE_RESTART).set(true);
  ManagementOperations.executeOperation(mc.getControllerClient(),op);
  op=new ModelNode();
  addr=new ModelNode();
  addr.add(ModelDescriptionConstants.SUBSYSTEM,"undertow");
  addr.add("server","default-server");
  addr.add("host","default-host");
  addr.add("location","/proxy");
  op.get(ModelDescriptionConstants.OP_ADDR).set(addr);
  op.get(ModelDescriptionConstants.OP).set(ModelDescriptionConstants.REMOVE);
  op.get(OPERATION_HEADERS,ALLOW_RESOURCE_SERVICE_RESTART).set(true);
  ManagementOperations.executeOperation(mc.getControllerClient(),op);
  op=new ModelNode();
  addr=new ModelNode();
  addr.add(ModelDescriptionConstants.SUBSYSTEM,"undertow");
  addr.add("configuration","handler");
  addr.add("reverse-proxy","myproxy");
  op.get(ModelDescriptionConstants.OP_ADDR).set(addr);
  op.get(ModelDescriptionConstants.OP).set(ModelDescriptionConstants.REMOVE);
  op.get(OPERATION_HEADERS,ALLOW_RESOURCE_SERVICE_RESTART).set(true);
  ManagementOperations.executeOperation(mc.getControllerClient(),op);
  op=createOpNode("socket-binding-group=standard-sockets/remote-destination-outbound-socket-binding=proxy-host","remove");
  ManagementOperations.executeOperation(mc.getControllerClient(),op);
}

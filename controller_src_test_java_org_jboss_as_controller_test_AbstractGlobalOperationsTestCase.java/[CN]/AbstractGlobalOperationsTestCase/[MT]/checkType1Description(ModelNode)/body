{
  assertNotNull(result);
  assertEquals("A type 1",result.require(DESCRIPTION).asString());
  assertEquals(ModelType.STRING,result.require(ATTRIBUTES).require("name").require(TYPE).asType());
  assertEquals("The name of the thing",result.require(ATTRIBUTES).require("name").require(DESCRIPTION).asString());
  assertTrue(result.require(ATTRIBUTES).require("name").require(REQUIRED).asBoolean());
  assertEquals(ModelType.INT,result.require(ATTRIBUTES).require("value").require(TYPE).asType());
  assertEquals("The value of the thing",result.require(ATTRIBUTES).require("value").require(DESCRIPTION).asString());
  assertTrue(result.require(ATTRIBUTES).require("value").require(REQUIRED).asBoolean());
  if (result.has(OPERATIONS)) {
    assertTrue(result.require(OPERATIONS).isDefined());
    Set<String> ops=result.require(OPERATIONS).keys();
    assertEquals(processType == ProcessType.DOMAIN_SERVER ? 8 : 10,ops.size());
    assertTrue(ops.contains(READ_RESOURCE_OPERATION));
    assertTrue(ops.contains(READ_ATTRIBUTE_OPERATION));
    assertTrue(ops.contains(READ_RESOURCE_DESCRIPTION_OPERATION));
    assertTrue(ops.contains(READ_CHILDREN_NAMES_OPERATION));
    assertTrue(ops.contains(READ_CHILDREN_TYPES_OPERATION));
    assertTrue(ops.contains(READ_CHILDREN_RESOURCES_OPERATION));
    assertTrue(ops.contains(READ_OPERATION_NAMES_OPERATION));
    assertTrue(ops.contains(READ_OPERATION_DESCRIPTION_OPERATION));
    assertEquals(processType != ProcessType.DOMAIN_SERVER,ops.contains(WRITE_ATTRIBUTE_OPERATION));
  }
}

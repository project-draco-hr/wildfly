{
  assertEquals(ModelType.STRING,result.require(ATTRIBUTES).require(NAME).require(TYPE).asType());
  assertEquals(false,result.require(ATTRIBUTES).require(NAME).require(NILLABLE).asBoolean());
  assertEquals(1,result.require(ATTRIBUTES).require(NAME).require(MIN_LENGTH).asInt());
  assertEquals("subsystem",result.require(CHILDREN).require(SUBSYSTEM).require(DESCRIPTION).asString());
  if (!recursive) {
    assertFalse(result.require(CHILDREN).require(SUBSYSTEM).require(MODEL_DESCRIPTION).isDefined());
    return;
  }
  assertTrue(result.require(CHILDREN).require(SUBSYSTEM).require(MODEL_DESCRIPTION).isDefined());
  assertEquals(5,result.require(CHILDREN).require(SUBSYSTEM).require(MODEL_DESCRIPTION).keys().size());
  checkSubsystem1Description(result.require(CHILDREN).require(SUBSYSTEM).require(MODEL_DESCRIPTION).require("subsystem1"),recursive,operations);
}

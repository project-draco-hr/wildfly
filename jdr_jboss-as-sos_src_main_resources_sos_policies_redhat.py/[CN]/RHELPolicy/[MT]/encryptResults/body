def encryptResults(self):
    if (not self.report_file):
        return False
    self._print(_('Encrypting archive...'))
    gpgname = (self.report_file + '.gpg')
    try:
        keyring = self.cInfo['config'].get('general', 'gpg_keyring')
    except:
        keyring = '/usr/share/sos/rhsupport.pub'
    try:
        recipient = self.cInfo['config'].get('general', 'gpg_recipient')
    except:
        recipient = 'support@redhat.com'
    p = Popen(('/usr/bin/gpg --trust-model always --batch --keyring "%s" --no-default-keyring --compress-level 0 --encrypt --recipient "%s" --output "%s" "%s" ' % (keyring, recipient, gpgname, self.report_file)), shell=True, stdout=PIPE, stderr=PIPE, bufsize=(-1))
    (stdout, stderr) = p.communicate()
    if (p.returncode == 0):
        os.unlink(self.report_file)
        self.report_file = gpgname
    else:
        self._print(_('There was a problem encrypting your report.'))
        sys.exit(1)

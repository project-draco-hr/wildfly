{
  final ModelNode address=operation.require(OP_ADDR);
  PathAddress path=PathAddress.pathAddress(address);
  final String archiveName=path.getElement(path.size() - 2).getValue();
  final String poolName=PathAddress.pathAddress(address).getLastElement().getValue();
  try {
    ServiceName serviceName=ServiceName.of(ConnectorServices.RA_SERVICE,archiveName,poolName);
    ServiceName raServiceName=ServiceName.of(ConnectorServices.RA_SERVICE,archiveName);
    final ModifiableResourceAdapter ravalue=((ModifiableResourceAdapter)context.getServiceRegistry(false).getService(raServiceName).getValue());
    boolean isXa=ravalue.getTransactionSupport() == TransactionSupportEnum.XATransaction;
    final ModifiableConnDef connectionDefinitionValue=RaOperationUtil.buildConnectionDefinitionObject(context,operation,poolName,isXa);
    final ServiceTarget serviceTarget=context.getServiceTarget();
    final ConnectionDefinitionService service=new ConnectionDefinitionService(connectionDefinitionValue);
    ServiceController<?> controller=serviceTarget.addService(serviceName,service).setInitialMode(ServiceController.Mode.ACTIVE).addDependency(raServiceName,ModifiableResourceAdapter.class,service.getRaInjector()).addListener(verificationHandler).install();
    serviceControllers.add(controller);
  }
 catch (  ValidateException e) {
    throw new OperationFailedException(e,operation);
  }
}

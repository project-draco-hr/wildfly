{
  if (value == null)   return;
  if (value instanceof String && "".equals(value))   return;
  if (value instanceof Integer && ((Integer)value).intValue() == -1)   return;
  StringBuilder builder=new StringBuilder("set").append(name);
  builder.setCharAt(3,Character.toUpperCase(name.charAt(0)));
  final String methodName=builder.toString();
  final Class<?> paramType=value.getClass();
  MethodIdentifier methodIdentifier=MethodIdentifier.getIdentifier(void.class,methodName,paramType);
  Method setterMethod=ClassReflectionIndexUtil.findMethod(deploymentReflectionIndex,dataSourceClass,methodIdentifier);
  if (setterMethod != null) {
    properties.put(name,value.toString());
  }
 else   if (paramType == Integer.class) {
    methodIdentifier=MethodIdentifier.getIdentifier(void.class,methodName,int.class);
    setterMethod=ClassReflectionIndexUtil.findMethod(deploymentReflectionIndex,dataSourceClass,methodIdentifier);
    if (setterMethod != null) {
      properties.put(name,value.toString());
    }
  }
 else   if (paramType == Boolean.class) {
    methodIdentifier=MethodIdentifier.getIdentifier(void.class,methodName,boolean.class);
    setterMethod=ClassReflectionIndexUtil.findMethod(deploymentReflectionIndex,dataSourceClass,methodIdentifier);
    if (setterMethod != null) {
      properties.put(name,value.toString());
    }
  }
}

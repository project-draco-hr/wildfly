{
  return new org.wildfly.clustering.infinispan.spi.service.ConfigurationBuilder(this.containerName,this.cacheName,this).build(target).addDependency(CacheComponent.EVICTION.getServiceName(this.containerName,this.cacheName),EvictionConfiguration.class,this.eviction).addDependency(CacheComponent.EXPIRATION.getServiceName(this.containerName,this.cacheName),ExpirationConfiguration.class,this.expiration).addDependency(CacheComponent.INDEXING.getServiceName(this.containerName,this.cacheName),IndexingConfiguration.class,this.indexing).addDependency(CacheComponent.LOCKING.getServiceName(this.containerName,this.cacheName),LockingConfiguration.class,this.locking).addDependency(CacheComponent.PERSISTENCE.getServiceName(this.containerName,this.cacheName),PersistenceConfiguration.class,this.persistence).addDependency(CacheComponent.TRANSACTION.getServiceName(this.containerName,this.cacheName),TransactionConfiguration.class,this.transaction).addDependency(CacheContainerServiceName.CONFIGURATION.getServiceName(this.containerName),GlobalConfiguration.class,this.global).addDependency(Services.JBOSS_SERVICE_MODULE_LOADER,ModuleLoader.class,this.loader);
}

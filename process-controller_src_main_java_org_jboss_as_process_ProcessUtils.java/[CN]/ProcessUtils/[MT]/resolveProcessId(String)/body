{
  final String jpsCommand=getJpsCommand();
  if (jpsCommand == null) {
    ProcessLogger.ROOT_LOGGER.debugf("jps command not found'");
    return -1;
  }
  final Process p=Runtime.getRuntime().exec(jpsCommand);
  final List<String> processes=new ArrayList<>();
  final BufferedReader input=new BufferedReader(new InputStreamReader(p.getInputStream()));
  try {
    String line;
    final String process="-D[" + processName + "]";
    while ((line=input.readLine()) != null) {
      if (line.contains(modulesJar) && line.contains(process)) {
        processes.add(line);
      }
    }
  }
  finally {
    StreamUtils.safeClose(input);
  }
  if (processes.size() == 1) {
    final String proc=processes.get(0);
    final int i=proc.indexOf(' ');
    return Integer.parseInt(proc.substring(0,i));
  }
  if (processes.isEmpty()) {
    ProcessLogger.ROOT_LOGGER.debugf("process not found '%s'",processName);
  }
 else {
    ProcessLogger.ROOT_LOGGER.debugf("ambiguous result. multiple processes found for '%s'",processName);
  }
  return -1;
}

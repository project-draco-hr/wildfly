{
  ROOT_LOGGER.debug("Initializing Deployment Scanner Extension");
  final SubsystemRegistration subsystem=context.registerSubsystem(CommonAttributes.DEPLOYMENT_SCANNER);
  subsystem.registerXMLElementWriter(parser);
  final ManagementResourceRegistration registration=subsystem.registerSubsystemModel(SUBSYSTEM);
  registration.registerOperationHandler(DeploymentScannerSubsystemAdd.OPERATION_NAME,DeploymentScannerSubsystemAdd.INSTANCE,DeploymentScannerSubsystemAdd.INSTANCE,false);
  registration.registerOperationHandler(DeploymentScannerSubsystemRemove.OPERATION_NAME,DeploymentScannerSubsystemRemove.INSTANCE,DeploymentScannerSubsystemRemove.INSTANCE,false);
  final ManagementResourceRegistration scanners=registration.registerSubModel(scannersPath,SCANNER);
  scanners.registerOperationHandler(DeploymentScannerAdd.OPERATION_NAME,DeploymentScannerAdd.INSTANCE,DeploymentScannerAdd.INSTANCE,false);
  scanners.registerOperationHandler(DeploymentScannerRemove.OPERATION_NAME,DeploymentScannerRemove.INSTANCE,DeploymentScannerRemove.INSTANCE,false);
  scanners.registerReadWriteAttribute(Attribute.PATH.getLocalName(),null,WritePathAttributeHandler.INSTANCE,Storage.CONFIGURATION);
  scanners.registerReadWriteAttribute(Attribute.RELATIVE_TO.getLocalName(),null,WriteRelativeToAttributeHandler.INSTANCE,Storage.CONFIGURATION);
  scanners.registerReadWriteAttribute(Attribute.SCAN_ENABLED.getLocalName(),null,WriteEnabledAttributeHandler.INSTANCE,Storage.CONFIGURATION);
  scanners.registerReadWriteAttribute(Attribute.SCAN_INTERVAL.getLocalName(),null,WriteScanIntervalAttributeHandler.INSTANCE,Storage.CONFIGURATION);
  scanners.registerReadWriteAttribute(Attribute.AUTO_DEPLOY_ZIPPED.getLocalName(),null,WriteAutoDeployZipAttributeHandler.INSTANCE,Storage.CONFIGURATION);
  scanners.registerReadWriteAttribute(Attribute.AUTO_DEPLOY_EXPLODED.getLocalName(),null,WriteAutoDeployExplodedAttributeHandler.INSTANCE,Storage.CONFIGURATION);
  scanners.registerReadWriteAttribute(Attribute.DEPLOYMENT_TIMEOUT.getLocalName(),null,WriteDeploymentTimeoutAttributeHandler.INSTANCE,Storage.CONFIGURATION);
}

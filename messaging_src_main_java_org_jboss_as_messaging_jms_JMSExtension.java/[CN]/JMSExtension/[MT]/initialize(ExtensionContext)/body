{
  final SubsystemRegistration subsystem=context.registerSubsystem(SUBSYSTEM_NAME);
  final ModelNodeRegistration registration=subsystem.registerSubsystemModel(JMSSubsystemProviders.SUBSYSTEM);
  registration.registerOperationHandler(ADD,JMSSubsystemAdd.INSTANCE,JMSSubsystemProviders.SUBSYSTEM_ADD,false);
  registration.registerOperationHandler(DESCRIBE,JMSSubsystemDescribeHandler.INSTANCE,JMSSubsystemProviders.SUBSYSTEM_DESCRIBE,false,OperationEntry.EntryType.PRIVATE);
  subsystem.registerXMLElementWriter(parsers);
  final ModelNodeRegistration cfs=registration.registerSubModel(CFS_PATH,JMSSubsystemProviders.CF);
  cfs.registerOperationHandler(ADD,ConnectionFactoryAdd.INSTANCE,JMSSubsystemProviders.CF_ADD,false);
  cfs.registerOperationHandler(REMOVE,ConnectionFactoryRemove.INSTANCE,JMSSubsystemProviders.CF_REMOVE,false);
  final ModelNodeRegistration queues=registration.registerSubModel(QUEUE_PATH,JMSSubsystemProviders.JMS_QUEUE);
  queues.registerOperationHandler(ADD,JMSQueueAdd.INSTANCE,JMSSubsystemProviders.JMS_QUEUE_ADD,false);
  queues.registerOperationHandler(REMOVE,JMSQueueRemove.INSTANCE,JMSSubsystemProviders.JMS_QUEUE_REMOVE,false);
  final ModelNodeRegistration topics=registration.registerSubModel(TOPIC_PATH,JMSSubsystemProviders.JMS_TOPIC);
  topics.registerOperationHandler(ADD,JMSTopicAdd.INSTANCE,JMSSubsystemProviders.JMS_TOPIC_ADD,false);
  topics.registerOperationHandler(REMOVE,JMSTopicRemove.INSTANCE,JMSSubsystemProviders.JMS_TOPIC_REMOVE,false);
  final ModelNodeRegistration resourceAdapters=registration.registerSubModel(RA_PATH,JMSSubsystemProviders.RA);
  resourceAdapters.registerOperationHandler(ADD,PooledConnectionFactoryAdd.INSTANCE,JMSSubsystemProviders.RA_ADD,false);
  resourceAdapters.registerOperationHandler(REMOVE,PooledConnectionFactoryRemove.INSTANCE,JMSSubsystemProviders.RA_REMOVE);
}

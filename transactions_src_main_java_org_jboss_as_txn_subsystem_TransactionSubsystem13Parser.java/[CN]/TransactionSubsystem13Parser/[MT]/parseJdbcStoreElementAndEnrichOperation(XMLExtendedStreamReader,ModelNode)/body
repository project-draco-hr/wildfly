{
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
    final Element element=Element.forName(reader.getLocalName());
switch (element) {
case JDBC_ACTION_STORE:
{
        parseJdbcStoreConfigElementAndEnrichOperation(reader,operation,TransactionSubsystemRootResourceDefinition.JDBC_ACTION_STORE_TABLE_PREFIX,TransactionSubsystemRootResourceDefinition.JDBC_ACTION_STORE_DROP_TABLE);
        break;
      }
case JDBC_STATE_STORE:
{
      parseJdbcStoreConfigElementAndEnrichOperation(reader,operation,TransactionSubsystemRootResourceDefinition.JDBC_STATE_STORE_TABLE_PREFIX,TransactionSubsystemRootResourceDefinition.JDBC_STATE_STORE_DROP_TABLE);
      break;
    }
case JDBC_COMMUNICATION_STORE:
{
    parseJdbcStoreConfigElementAndEnrichOperation(reader,operation,TransactionSubsystemRootResourceDefinition.JDBC_COMMUNICATION_STORE_TABLE_PREFIX,TransactionSubsystemRootResourceDefinition.JDBC_COMMUNICATION_STORE_DROP_TABLE);
    break;
  }
}
}
final int count=reader.getAttributeCount();
for (int i=0; i < count; i++) {
requireNoNamespaceAttribute(reader,i);
final String value=reader.getAttributeValue(i);
final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case DATASOURCE_JNDI_NAME:
TransactionSubsystemRootResourceDefinition.JDBC_STORE_DATASOURCE.parseAndSetParameter(value,operation,reader);
break;
default :
throw unexpectedAttribute(reader,i);
}
}
}

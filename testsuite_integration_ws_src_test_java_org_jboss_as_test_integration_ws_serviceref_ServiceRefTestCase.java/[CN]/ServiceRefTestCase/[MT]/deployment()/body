{
  String wsdl=FileUtils.readFile(ServiceRefTestCase.class,"TestService.wsdl");
  final Properties properties=new Properties();
  properties.putAll(System.getProperties());
  final String node0=NetworkUtils.formatPossibleIpv6Address((String)properties.get("node0"));
  if (properties.containsKey("node0")) {
    properties.put("node0",node0);
  }
  return ShrinkWrap.create(JavaArchive.class,"ws-serviceref-example.jar").addClasses(EJB3Bean.class,EndpointInterface.class,EndpointService.class,StatelessBean.class,StatelessRemote.class,CdiBean.class).addAsManifestResource(ServiceRefTestCase.class.getPackage(),"ejb-jar.xml","ejb-jar.xml").addAsManifestResource(ServiceRefTestCase.class.getPackage(),"jboss-ejb3.xml","jboss-ejb3.xml").addAsManifestResource(new StringAsset(PropertiesValueResolver.replaceProperties(wsdl,properties)),"wsdl/TestService.wsdl").addAsManifestResource(EmptyAsset.INSTANCE,"beans.xml").addAsManifestResource(createPermissionsXmlAsset(new FilePermission(System.getProperty("java.home") + File.separator + "lib"+ File.separator+ "wsdl.properties","read"),new PropertyPermission("user.dir","read"),new RuntimePermission("getClassLoader"),new RuntimePermission("org.apache.cxf.permission","resolveUri"),new RuntimePermission("createClassLoader"),new RuntimePermission("accessDeclaredMembers"),new SocketPermission(node0 + ":8080","connect,resolve")),"jboss-permissions.xml");
}

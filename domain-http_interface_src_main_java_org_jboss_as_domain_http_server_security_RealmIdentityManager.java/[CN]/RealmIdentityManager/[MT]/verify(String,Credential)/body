{
  assertMechanism(AuthMechanism.PLAIN);
  if (credential instanceof PasswordCredential == false) {
    return null;
  }
  AuthorizingCallbackHandler ach=securityRealm.getAuthorizingCallbackHandler(AuthMechanism.PLAIN);
  Callback[] callbacks=new Callback[3];
  callbacks[0]=new RealmCallback("Realm",securityRealm.getName());
  callbacks[1]=new NameCallback("Username",id);
  callbacks[2]=new VerifyPasswordCallback(new String(((PasswordCredential)credential).getPassword()));
  try {
    ach.handle(callbacks);
  }
 catch (  Exception e) {
    return null;
  }
  if (((VerifyPasswordCallback)callbacks[2]).isVerified() == false) {
    return null;
  }
  Principal user=new SimplePrincipal(id);
  Collection<Principal> userCol=Collections.singleton(user);
  SubjectUserInfo supplemental;
  try {
    supplemental=ach.createSubjectUserInfo(userCol);
  }
 catch (  IOException e) {
    return null;
  }
  return new RealmIdentityAccount(supplemental.getSubject(),user);
}

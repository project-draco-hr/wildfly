{
  final ModelNode address=new ModelNode();
  address.add(SUBSYSTEM,EJB3Extension.SUBSYSTEM_NAME);
  address.add(SERVICE,TIMER_SERVICE);
  final ModelNode timerServiceAdd=new ModelNode();
  timerServiceAdd.get(OP).set(ADD);
  timerServiceAdd.get(OP_ADDR).set(address);
  String dataStorePath=null;
  String dataStorePathRelativeTo=null;
  final int attCount=reader.getAttributeCount();
  String threadPoolName=null;
  final EnumSet<EJB3SubsystemXMLAttribute> required=EnumSet.of(EJB3SubsystemXMLAttribute.THREAD_POOL_NAME);
  for (int i=0; i < attCount; i++) {
    requireNoNamespaceAttribute(reader,i);
    final String value=reader.getAttributeValue(i);
    final EJB3SubsystemXMLAttribute attribute=EJB3SubsystemXMLAttribute.forName(reader.getAttributeLocalName(i));
    required.remove(attribute);
switch (attribute) {
case THREAD_POOL_NAME:
      threadPoolName=value;
    break;
default :
  throw unexpectedAttribute(reader,i);
}
}
if (!required.isEmpty()) {
throw missingRequired(reader,required);
}
timerServiceAdd.get(THREAD_POOL_NAME).set(threadPoolName);
while (reader.hasNext() && reader.nextTag() != XMLStreamConstants.END_ELEMENT) {
switch (EJB3SubsystemXMLElement.forName(reader.getLocalName())) {
case DATA_STORE:
{
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    requireNoNamespaceAttribute(reader,i);
    final String value=reader.getAttributeValue(i);
    final EJB3SubsystemXMLAttribute attribute=EJB3SubsystemXMLAttribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case PATH:
      if (dataStorePath != null) {
        throw unexpectedAttribute(reader,i);
      }
    dataStorePath=TimerServiceResourceDefinition.PATH.parse(value,reader).asString();
  break;
case RELATIVE_TO:
if (dataStorePathRelativeTo != null) {
  throw unexpectedAttribute(reader,i);
}
dataStorePathRelativeTo=TimerServiceResourceDefinition.RELATIVE_TO.parse(value,reader).asString();
break;
default :
throw unexpectedAttribute(reader,i);
}
}
if (dataStorePath == null) {
throw missingRequired(reader,Collections.singleton(EJB3SubsystemXMLAttribute.PATH));
}
timerServiceAdd.get(PATH).set(dataStorePath);
if (dataStorePathRelativeTo != null) {
timerServiceAdd.get(RELATIVE_TO).set(dataStorePathRelativeTo);
}
requireNoContent(reader);
break;
}
default :
{
throw unexpectedElement(reader);
}
}
}
operations.add(timerServiceAdd);
}

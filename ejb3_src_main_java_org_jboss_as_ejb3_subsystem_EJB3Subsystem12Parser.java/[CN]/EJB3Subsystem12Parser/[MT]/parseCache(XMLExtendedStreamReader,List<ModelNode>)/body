{
  String name=null;
  String passivationStore=null;
  Set<String> aliases=new LinkedHashSet<String>();
  for (int i=0; i < reader.getAttributeCount(); i++) {
    requireNoNamespaceAttribute(reader,i);
    final String value=reader.getAttributeValue(i);
switch (EJB3SubsystemXMLAttribute.forName(reader.getAttributeLocalName(i))) {
case NAME:
{
        name=value;
        break;
      }
case PASSIVATION_STORE_REF:
{
      passivationStore=CacheFactoryResourceDefinition.PASSIVATION_STORE.parse(value,reader.getLocation()).asString();
      break;
    }
case ALIASES:
{
    for (    String alias : reader.getListAttributeValue(i)) {
      aliases.add(CacheFactoryResourceDefinition.ALIASES.parse(alias,reader.getLocation()).asString());
    }
    break;
  }
default :
{
  throw unexpectedAttribute(reader,i);
}
}
}
requireNoContent(reader);
if (name == null) {
throw missingRequired(reader,Collections.singleton(EJB3SubsystemXMLAttribute.NAME.getLocalName()));
}
operations.add(this.createAddStatefulCacheOperation(name,aliases,passivationStore));
}

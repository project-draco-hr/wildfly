{
  ModelNode operation=Util.createAddOperation(SUBSYSTEM_PATH.append(SERVICE,IIOP));
  final int count=reader.getAttributeCount();
  final EnumSet<EJB3SubsystemXMLAttribute> required=EnumSet.of(EJB3SubsystemXMLAttribute.ENABLE_BY_DEFAULT,EJB3SubsystemXMLAttribute.USE_QUALIFIED_NAME);
  for (int i=0; i < count; i++) {
    requireNoNamespaceAttribute(reader,i);
    final String value=reader.getAttributeValue(i);
    final EJB3SubsystemXMLAttribute attribute=EJB3SubsystemXMLAttribute.forName(reader.getAttributeLocalName(i));
    required.remove(attribute);
switch (attribute) {
case ENABLE_BY_DEFAULT:
      EJB3IIOPResourceDefinition.ENABLE_BY_DEFAULT.parseAndSetParameter(value,operation,reader);
    break;
case USE_QUALIFIED_NAME:
  EJB3IIOPResourceDefinition.USE_QUALIFIED_NAME.parseAndSetParameter(value,operation,reader);
break;
default :
throw unexpectedAttribute(reader,i);
}
}
if (!required.isEmpty()) {
throw missingRequired(reader,required);
}
requireNoContent(reader);
operations.add(operation);
}

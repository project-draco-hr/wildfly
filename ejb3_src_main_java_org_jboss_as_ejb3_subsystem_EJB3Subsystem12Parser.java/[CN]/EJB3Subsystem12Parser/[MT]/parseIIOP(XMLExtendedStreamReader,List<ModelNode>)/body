{
  final int count=reader.getAttributeCount();
  boolean enableByDefault=true;
  boolean useQualifiedName=true;
  final EnumSet<EJB3SubsystemXMLAttribute> required=EnumSet.of(EJB3SubsystemXMLAttribute.ENABLE_BY_DEFAULT,EJB3SubsystemXMLAttribute.USE_QUALIFIED_NAME);
  for (int i=0; i < count; i++) {
    requireNoNamespaceAttribute(reader,i);
    final String value=reader.getAttributeValue(i);
    final EJB3SubsystemXMLAttribute attribute=EJB3SubsystemXMLAttribute.forName(reader.getAttributeLocalName(i));
    required.remove(attribute);
switch (attribute) {
case ENABLE_BY_DEFAULT:
      enableByDefault=Boolean.parseBoolean(reader.getAttributeValue(i));
    break;
case USE_QUALIFIED_NAME:
  useQualifiedName=Boolean.parseBoolean(reader.getAttributeValue(i));
break;
default :
throw unexpectedAttribute(reader,i);
}
}
if (!required.isEmpty()) {
throw missingRequired(reader,required);
}
requireNoContent(reader);
operations.add(EJB3IIOPAdd.create(enableByDefault,useQualifiedName));
}

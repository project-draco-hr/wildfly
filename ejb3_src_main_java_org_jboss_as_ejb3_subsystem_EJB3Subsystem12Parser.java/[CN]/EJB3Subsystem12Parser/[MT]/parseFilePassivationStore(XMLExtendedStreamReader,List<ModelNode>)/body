{
  String name=null;
  ModelNode operation=Util.createAddOperation();
  for (int i=0; i < reader.getAttributeCount(); i++) {
    requireNoNamespaceAttribute(reader,i);
    final String value=reader.getAttributeValue(i);
switch (EJB3SubsystemXMLAttribute.forName(reader.getAttributeLocalName(i))) {
case NAME:
{
        name=value;
        break;
      }
case MAX_SIZE:
{
      FilePassivationStoreResourceDefinition.MAX_SIZE.parseAndSetParameter(value,operation,reader);
      break;
    }
case IDLE_TIMEOUT:
{
    LegacyPassivationStoreResourceDefinition.IDLE_TIMEOUT.parseAndSetParameter(value,operation,reader);
    break;
  }
case IDLE_TIMEOUT_UNIT:
{
  LegacyPassivationStoreResourceDefinition.IDLE_TIMEOUT_UNIT.parseAndSetParameter(value,operation,reader);
  break;
}
case RELATIVE_TO:
{
FilePassivationStoreResourceDefinition.RELATIVE_TO.parseAndSetParameter(value,operation,reader);
break;
}
case GROUPS_PATH:
{
FilePassivationStoreResourceDefinition.GROUPS_PATH.parseAndSetParameter(value,operation,reader);
break;
}
case SESSIONS_PATH:
{
FilePassivationStoreResourceDefinition.SESSIONS_PATH.parseAndSetParameter(value,operation,reader);
break;
}
case SUBDIRECTORY_COUNT:
{
FilePassivationStoreResourceDefinition.SUBDIRECTORY_COUNT.parseAndSetParameter(value,operation,reader);
break;
}
default :
{
throw unexpectedAttribute(reader,i);
}
}
}
requireNoContent(reader);
if (name == null) {
throw missingRequired(reader,Collections.singleton(EJB3SubsystemXMLAttribute.NAME.getLocalName()));
}
operation.get(OP_ADDR).set(SUBSYSTEM_PATH.append(FILE_PASSIVATION_STORE,name).toModelNode());
operations.add(operation);
}

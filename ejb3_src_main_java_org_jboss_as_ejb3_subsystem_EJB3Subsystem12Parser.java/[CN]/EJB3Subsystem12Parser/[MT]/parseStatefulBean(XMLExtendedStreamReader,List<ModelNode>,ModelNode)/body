{
  final int count=reader.getAttributeCount();
  final EnumSet<EJB3SubsystemXMLAttribute> missingRequiredAttributes=EnumSet.of(EJB3SubsystemXMLAttribute.DEFAULT_ACCESS_TIMEOUT,EJB3SubsystemXMLAttribute.CACHE_REF);
  String defaultAccessTimeout=null;
  String cache=null;
  String clusteredCache=null;
  for (int i=0; i < count; i++) {
    requireNoNamespaceAttribute(reader,i);
    final String value=reader.getAttributeValue(i);
    final EJB3SubsystemXMLAttribute attribute=EJB3SubsystemXMLAttribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case DEFAULT_ACCESS_TIMEOUT:
{
        defaultAccessTimeout=EJB3SubsystemRootResourceDefinition.DEFAULT_STATEFUL_BEAN_ACCESS_TIMEOUT.parse(value,reader).asString();
        break;
      }
case CACHE_REF:
{
      cache=EJB3SubsystemRootResourceDefinition.DEFAULT_SFSB_CACHE.parse(value,reader).asString();
      break;
    }
case CLUSTERED_CACHE_REF:
{
    clusteredCache=EJB3SubsystemRootResourceDefinition.DEFAULT_CLUSTERED_SFSB_CACHE.parse(value,reader).asString();
    break;
  }
default :
{
  throw unexpectedAttribute(reader,i);
}
}
missingRequiredAttributes.remove(attribute);
}
requireNoContent(reader);
if (!missingRequiredAttributes.isEmpty()) {
throw missingRequired(reader,missingRequiredAttributes);
}
EJB3SubsystemRootResourceDefinition.DEFAULT_STATEFUL_BEAN_ACCESS_TIMEOUT.parseAndSetParameter(defaultAccessTimeout,ejb3SubsystemAddOperation,reader);
EJB3SubsystemRootResourceDefinition.DEFAULT_SFSB_CACHE.parseAndSetParameter(cache,ejb3SubsystemAddOperation,reader);
EJB3SubsystemRootResourceDefinition.DEFAULT_CLUSTERED_SFSB_CACHE.parseAndSetParameter(clusteredCache,ejb3SubsystemAddOperation,reader);
}

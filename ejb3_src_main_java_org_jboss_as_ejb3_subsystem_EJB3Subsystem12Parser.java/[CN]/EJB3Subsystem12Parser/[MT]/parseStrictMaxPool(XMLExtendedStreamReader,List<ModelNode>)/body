{
  final int count=reader.getAttributeCount();
  String poolName=null;
  final ModelNode operation=Util.createAddOperation();
  for (int i=0; i < count; i++) {
    requireNoNamespaceAttribute(reader,i);
    final String value=reader.getAttributeValue(i);
    final EJB3SubsystemXMLAttribute attribute=EJB3SubsystemXMLAttribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case NAME:
      poolName=value;
    break;
case MAX_POOL_SIZE:
  StrictMaxPoolResourceDefinition.MAX_POOL_SIZE.parseAndSetParameter(value,operation,reader);
break;
case INSTANCE_ACQUISITION_TIMEOUT:
StrictMaxPoolResourceDefinition.INSTANCE_ACQUISITION_TIMEOUT.parseAndSetParameter(value,operation,reader);
break;
case INSTANCE_ACQUISITION_TIMEOUT_UNIT:
StrictMaxPoolResourceDefinition.INSTANCE_ACQUISITION_TIMEOUT_UNIT.parseAndSetParameter(value,operation,reader);
break;
default :
throw unexpectedAttribute(reader,i);
}
}
requireNoContent(reader);
if (poolName == null) {
throw missingRequired(reader,Collections.singleton(EJB3SubsystemXMLAttribute.NAME.getLocalName()));
}
final PathAddress address=this.getEJB3SubsystemAddress().append(STRICT_MAX_BEAN_INSTANCE_POOL,poolName);
operation.get(OP_ADDR).set(address.toModelNode());
operations.add(operation);
}

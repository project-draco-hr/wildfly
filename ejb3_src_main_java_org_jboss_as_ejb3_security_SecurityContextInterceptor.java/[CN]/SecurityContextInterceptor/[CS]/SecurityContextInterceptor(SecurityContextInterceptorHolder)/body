{
  this.pushAction=new PrivilegedAction<Void>(){
    @Override public Void run(){
      try {
        holder.securityManager.push(holder.securityDomain);
        if (holder.skipAuthentication == false) {
          holder.securityManager.authenticate(holder.runAs,holder.runAsPrincipal,holder.extraRoles);
        }
        if (holder.principalVsRolesMap != null) {
          SecurityRolesAssociation.setSecurityRoles(holder.principalVsRolesMap);
        }
      }
 catch (      SecurityException e) {
        throw new EJBAccessException(e.getMessage());
      }
      return null;
    }
  }
;
  this.popAction=new PrivilegedAction<Void>(){
    @Override public Void run(){
      holder.securityManager.pop();
      if (holder.principalVsRolesMap != null) {
        SecurityRolesAssociation.setSecurityRoles(null);
      }
      return null;
    }
  }
;
}

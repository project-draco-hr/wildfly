{
  final String name=PathAddress.pathAddress(operation.get(ModelDescriptionConstants.ADDRESS)).getLastElement().getValue();
  final String jndiName=ManagedExecutorServiceResourceDefinition.JNDI_NAME_AD.resolveModelAttribute(context,model).asString();
  final int priority=ManagedThreadFactoryResourceDefinition.PRIORITY_AD.resolveModelAttribute(context,model).asInt();
  final ManagedThreadFactoryService service=new ManagedThreadFactoryService(name,jndiName,priority);
  final ServiceBuilder serviceBuilder=context.getServiceTarget().addService(ConcurrentServiceNames.getManagedThreadFactoryServiceName(name),service);
  String contextService=null;
  if (model.hasDefined(ManagedThreadFactoryResourceDefinition.CONTEXT_SERVICE)) {
    contextService=ManagedThreadFactoryResourceDefinition.CONTEXT_SERVICE_AD.resolveModelAttribute(context,model).asString();
  }
  if (contextService != null) {
    serviceBuilder.addDependency(ConcurrentServiceNames.getContextServiceServiceName(contextService),ContextServiceImpl.class,service.getContextServiceInjector());
  }
  serviceBuilder.install();
}

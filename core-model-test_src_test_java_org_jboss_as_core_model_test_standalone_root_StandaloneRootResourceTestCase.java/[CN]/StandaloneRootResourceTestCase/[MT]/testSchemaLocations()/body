{
  KernelServices kernelServices=createEmptyRoot();
  ModelNode read=Util.createOperation(READ_ATTRIBUTE_OPERATION,PathAddress.EMPTY_ADDRESS);
  read.get(NAME).set(ModelDescriptionConstants.SCHEMA_LOCATIONS);
  Assert.assertEquals(new ModelNode().setEmptyList(),kernelServices.executeForResult(read));
  ModelNode add=Util.createOperation(SchemaLocationAddHandler.DEFINITION,PathAddress.EMPTY_ADDRESS);
  add.get(ModelDescriptionConstants.URI).set("one");
  add.get(ModelDescriptionConstants.SCHEMA_LOCATION).set("loc-one");
  ModelTestUtils.checkOutcome(kernelServices.executeOperation(add));
  ModelNode result=kernelServices.executeForResult(read);
  List<ModelNode> list=result.asList();
  Assert.assertEquals(1,list.size());
  Property prop=list.get(0).asProperty();
  Assert.assertEquals("one",prop.getName());
  Assert.assertEquals("loc-one",prop.getValue().asString());
  add.get(ModelDescriptionConstants.URI).set("two");
  add.get(ModelDescriptionConstants.SCHEMA_LOCATION).set("loc-two");
  ModelTestUtils.checkOutcome(kernelServices.executeOperation(add));
  result=kernelServices.executeForResult(read);
  list=result.asList();
  Assert.assertEquals(2,list.size());
  prop=list.get(0).asProperty();
  Assert.assertEquals("one",prop.getName());
  Assert.assertEquals("loc-one",prop.getValue().asString());
  prop=list.get(1).asProperty();
  Assert.assertEquals("two",prop.getName());
  Assert.assertEquals("loc-two",prop.getValue().asString());
  ModelNode remove=Util.createOperation(SchemaLocationRemoveHandler.DEFINITION.getName(),PathAddress.EMPTY_ADDRESS);
  remove.get(ModelDescriptionConstants.URI).set("one");
  ModelTestUtils.checkOutcome(kernelServices.executeOperation(remove));
  result=kernelServices.executeForResult(read);
  list=result.asList();
  Assert.assertEquals(1,list.size());
  prop=list.get(0).asProperty();
  Assert.assertEquals("two",prop.getName());
  Assert.assertEquals("loc-two",prop.getValue().asString());
  remove.get(ModelDescriptionConstants.URI).set("two");
  ModelTestUtils.checkOutcome(kernelServices.executeOperation(remove));
  Assert.assertEquals(new ModelNode().setEmptyList(),kernelServices.executeForResult(read));
  remove.get(ModelDescriptionConstants.URI).set("blah");
  kernelServices.executeForFailure(remove);
}

{
  final ModuleLoader moduleLoader=Module.getBootModuleLoader();
  PersistenceProviderAdaptor persistenceProviderAdaptor=null;
  if (adapterModule == null) {
    adapterModule=Configuration.ADAPTER_MODULE_DEFAULT;
  }
  if (persistenceProviderClass == null) {
    persistenceProviderClass=Configuration.PROVIDER_CLASS_DEFAULT;
  }
  try {
    Module module=moduleLoader.loadModule(ModuleIdentifier.fromString(adapterModule));
    final ServiceLoader<PersistenceProviderAdaptor> serviceLoader=module.loadService(PersistenceProviderAdaptor.class);
    if (serviceLoader != null) {
      for (      PersistenceProviderAdaptor adaptor : serviceLoader) {
        if (persistenceProviderAdaptor != null) {
          throw MESSAGES.multipleAdapters(adapterModule);
        }
        persistenceProviderAdaptor=adaptor;
        JPA_LOGGER.debugf("loaded persistence provider adapter %s",adapterModule);
      }
      if (persistenceProviderAdaptor != null) {
        persistenceProviderAdaptor.injectJtaManager(JtaManagerImpl.getInstance());
      }
    }
  }
 catch (  ModuleLoadException e) {
    throw MESSAGES.cannotLoadAdapterModule(e,adapterModule,persistenceProviderClass);
  }
  return persistenceProviderAdaptor;
}

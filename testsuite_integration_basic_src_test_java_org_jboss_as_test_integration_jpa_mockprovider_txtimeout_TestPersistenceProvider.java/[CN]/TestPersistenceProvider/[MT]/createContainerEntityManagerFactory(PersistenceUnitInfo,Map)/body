{
  persistenceUnitInfo.put(info.getPersistenceUnitName(),info);
  TestEntityManagerFactory testEntityManagerFactory=new TestEntityManagerFactory();
  Class[] targetInterfaces=EntityManagerFactory.class.getInterfaces();
  Class[] proxyInterfaces=new Class[targetInterfaces.length + 1];
  boolean alreadyHasInterfaceClass=false;
  for (int interfaceIndex=0; interfaceIndex < targetInterfaces.length; interfaceIndex++) {
    Class interfaceClass=targetInterfaces[interfaceIndex];
    if (interfaceClass.equals(EntityManagerFactory.class)) {
      proxyInterfaces=targetInterfaces;
      alreadyHasInterfaceClass=true;
      break;
    }
    proxyInterfaces[1 + interfaceIndex]=interfaceClass;
  }
  if (!alreadyHasInterfaceClass) {
    proxyInterfaces[0]=EntityManagerFactory.class;
  }
  EntityManagerFactory proxyEntityManagerFactory=(EntityManagerFactory)Proxy.newProxyInstance(testEntityManagerFactory.getClass().getClassLoader(),proxyInterfaces,testEntityManagerFactory);
  System.out.println("TestPersistenceProvider.createContainerEntityManagerFactory() is returning " + proxyEntityManagerFactory);
  return proxyEntityManagerFactory;
}

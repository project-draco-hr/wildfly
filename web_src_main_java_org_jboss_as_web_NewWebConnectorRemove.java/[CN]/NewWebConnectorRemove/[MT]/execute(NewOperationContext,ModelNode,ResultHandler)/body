{
  final ModelNode address=operation.get(OP_ADDR);
  final String name=address.get(address.asInt() - 1).asString();
  final ModelNode subModel=context.getSubModel();
  final ModelNode compensatingOperation=new ModelNode();
  compensatingOperation.get(OP).set(ADD);
  compensatingOperation.get(OP_ADDR).set(address);
  compensatingOperation.get(SECURE).set(subModel.get(SECURE).asBoolean());
  compensatingOperation.get(ENABLE_LOOKUPS).set(subModel.get(ENABLE_LOOKUPS).asBoolean());
  compensatingOperation.get(PROXY_NAME).set(subModel.get(PROXY_NAME).asString());
  compensatingOperation.get(PROXY_PORT).set(subModel.get(PROXY_PORT).asInt());
  compensatingOperation.get(REDIRECT_PORT).set(subModel.get(REDIRECT_PORT).asInt());
  compensatingOperation.get(MAX_POST_SIZE).set(subModel.get(MAX_POST_SIZE).asInt());
  compensatingOperation.get(MAX_SAVE_POST_SIZE).set(subModel.get(MAX_SAVE_POST_SIZE).asInt());
  if (context instanceof NewRuntimeOperationContext) {
    final NewRuntimeOperationContext runtimeContext=(NewRuntimeOperationContext)context;
    final ServiceController<?> service=runtimeContext.getServiceRegistry().getService(WebSubsystemElement.JBOSS_WEB_HOST.append(name));
    if (service != null) {
      service.setMode(Mode.REMOVE);
    }
  }
  resultHandler.handleResultComplete(compensatingOperation);
  return Cancellable.NULL;
}

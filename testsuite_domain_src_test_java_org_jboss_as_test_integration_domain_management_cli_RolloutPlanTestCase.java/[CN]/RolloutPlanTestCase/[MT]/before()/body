{
  war=ShrinkWrap.create(WebArchive.class,"RolloutPlanTestCase.war");
  war.addClass(RolloutPlanTestServlet.class);
  String tempDir=System.getProperty("java.io.tmpdir");
  warFile=new File(tempDir + File.separator + "RolloutPlanTestCase.war");
  new ZipExporterImpl(war).exportTo(warFile,true);
  war=ShrinkWrap.create(WebArchive.class,"RolloutPlanTestCase.war");
  AbstractCliTestBase.initCLI(DomainTestSupport.masterAddress);
  cli.sendLine("/server-group=test-server-group:add(profile=default,socket-binding-group=standard-sockets)");
  cli.sendLine("/host=master/server-config=test-one:add(group=test-server-group,socket-binding-port-offset=700");
  cli.sendLine("/host=master/server-config=test-one/interface=public:add(inet-address=" + CLITestSuite.hostAddresses.get("master") + ")");
  CLITestSuite.addServer("test-one","master","test-server-group","default",700,true);
  cli.sendLine("/host=master/server-config=main-two:start");
  CLIOpResult res=cli.readAllAsOpResult();
  Assert.assertTrue(res.isIsOutcomeSuccess());
  waitUntilState("main-two","STARTED");
  cli.sendLine("/host=master/server-config=test-one:start");
  res=cli.readAllAsOpResult();
  Assert.assertTrue(res.isIsOutcomeSuccess());
  waitUntilState("test-one","STARTED");
}

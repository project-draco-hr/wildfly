{
  final ParsedCommandLine args=ctx.getParsedCommandLine();
  assertNotPresent(allRelevantServerGroups,args);
  final String name=this.name.getValue(args,true);
  final String[] deployments=getLinks(this.deployments,args);
  if (deployments == null) {
    throw new CommandFormatException(this.deployments.getFullName() + " is required.");
  }
  final ModelNode composite=new ModelNode();
  composite.get(Util.OPERATION).set(Util.COMPOSITE);
  composite.get(Util.ADDRESS).setEmptyList();
  final ModelNode steps=composite.get(Util.STEPS);
  final ModelControllerClient client=ctx.getModelControllerClient();
  if (ctx.isDomainMode()) {
    final List<String> sg=getServerGroupsToLink(ctx);
    for (    String group : sg) {
      if (!Util.isValidPath(client,Util.SERVER_GROUP,group,Util.DEPLOYMENT_OVERLAY,name)) {
        final ModelNode op=new ModelNode();
        final ModelNode address=op.get(Util.ADDRESS);
        address.add(Util.SERVER_GROUP,group);
        address.add(Util.DEPLOYMENT_OVERLAY,name);
        op.get(Util.OPERATION).set(Util.ADD);
        steps.add(op);
      }
      addAddRedeployLinksSteps(ctx,steps,name,group,deployments,false);
    }
  }
 else {
    addAddRedeployLinksSteps(ctx,steps,name,null,deployments,false);
  }
  return composite;
}

{
  final ParsedCommandLine args=ctx.getParsedCommandLine();
  final String name=this.name.getValue(args,true);
  final String deploymentsStr=deployments.getValue(args,true);
  final String sgStr=serverGroups.getValue(args);
  final String[] sg;
  if (ctx.isDomainMode()) {
    if (sgStr == null) {
      throw new CommandFormatException(serverGroups.getFullName() + " is missing value.");
    }
    sg=sgStr.split(",+");
    if (sg.length == 0) {
      throw new CommandFormatException(serverGroups.getFullName() + " is missing value.");
    }
  }
 else {
    sg=null;
  }
  final String[] deployments=deploymentsStr.split(",+");
  if (deployments.length == 0) {
    throw new CommandFormatException("Missing value for " + this.deployments.getFullName() + ": '"+ deploymentsStr+ "'");
  }
  final ModelNode composite=new ModelNode();
  composite.get(Util.OPERATION).set(Util.COMPOSITE);
  composite.get(Util.ADDRESS).setEmptyList();
  final ModelNode steps=composite.get(Util.STEPS);
  if (sg != null) {
    for (    String group : sg) {
      if (!Util.isValidPath(ctx.getModelControllerClient(),Util.SERVER_GROUP,group,Util.DEPLOYMENT_OVERLAY,name)) {
        final ModelNode op=new ModelNode();
        final ModelNode address=op.get(Util.ADDRESS);
        address.add(Util.SERVER_GROUP,group);
        address.add(Util.DEPLOYMENT_OVERLAY,name);
        op.get(Util.OPERATION).set(Util.ADD);
        steps.add(op);
      }
      addLinkDeploymentSteps(name,group,deployments,steps);
    }
  }
 else {
    addLinkDeploymentSteps(name,null,deployments,steps);
  }
  try {
    final ModelNode result=ctx.getModelControllerClient().execute(composite);
    if (!Util.isSuccess(result)) {
      throw new CommandFormatException(Util.getFailureDescription(result));
    }
  }
 catch (  IOException e) {
    throw new CommandFormatException("Failed to link overlay",e);
  }
}

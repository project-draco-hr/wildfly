{
  final ParsedCommandLine args=ctx.getParsedCommandLine();
  assertNotPresent(serverGroups,args);
  assertNotPresent(allServerGroups,args);
  assertNotPresent(allRelevantServerGroups,args);
  assertNotPresent(content,args);
  assertNotPresent(deployments,args);
  assertNotPresent(wildcards,args);
  assertNotPresent(redeployAffected,args);
  final String overlay=name.getValue(args,true);
  final ModelControllerClient client=ctx.getModelControllerClient();
  final ModelNode redeployOp=new ModelNode();
  redeployOp.get(Util.OPERATION).set(Util.COMPOSITE);
  redeployOp.get(Util.ADDRESS).setEmptyList();
  final ModelNode steps=redeployOp.get(Util.STEPS);
  if (ctx.isDomainMode()) {
    for (    String group : Util.getServerGroupsReferencingOverlay(overlay,client)) {
      addRemoveRedeployLinksSteps(client,steps,overlay,group,null,false,REDEPLOY_ALL);
    }
  }
 else {
    addRemoveRedeployLinksSteps(client,steps,overlay,null,null,false,REDEPLOY_ALL);
  }
  if (steps.asList().isEmpty()) {
    return;
  }
  try {
    final ModelNode result=client.execute(redeployOp);
    if (!Util.isSuccess(result)) {
      throw new CommandLineException(Util.getFailureDescription(result));
    }
  }
 catch (  IOException e) {
    throw new CommandFormatException("Failed to redeploy affected deployments",e);
  }
}

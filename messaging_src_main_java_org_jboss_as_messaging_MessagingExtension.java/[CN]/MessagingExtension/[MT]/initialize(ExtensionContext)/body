{
  final SubsystemRegistration subsystem=context.registerSubsystem(SUBSYSTEM_NAME);
  subsystem.registerXMLElementWriter(MessagingSubsystemParser.getInstance());
  final ManagementResourceRegistration rootRegistration=subsystem.registerSubsystemModel(MessagingSubsystemProviders.SUBSYSTEM);
  rootRegistration.registerOperationHandler(ADD,MessagingSubsystemAdd.INSTANCE,MessagingSubsystemAdd.INSTANCE,false);
  rootRegistration.registerOperationHandler(DESCRIBE,MessagingSubsystemDescribeHandler.INSTANCE,MessagingSubsystemDescribeHandler.INSTANCE,false,OperationEntry.EntryType.PRIVATE);
  for (  AttributeDefinition attributeDefinition : CommonAttributes.SIMPLE_ROOT_RESOURCE_ATTRIBUTES) {
    rootRegistration.registerReadWriteAttribute(attributeDefinition.getName(),null,HornetQServerControlWriteHandler.INSTANCE,AttributeAccess.Storage.CONFIGURATION);
  }
  final ManagementResourceRegistration queue=rootRegistration.registerSubModel(PathElement.pathElement(QUEUE),MessagingSubsystemProviders.QUEUE_RESOURCE);
  queue.registerOperationHandler(ADD,QueueAdd.INSTANCE,QueueAdd.INSTANCE,false);
  queue.registerOperationHandler(REMOVE,QueueRemove.INSTANCE,QueueRemove.INSTANCE,false);
  for (  AttributeDefinition attributeDefinition : CommonAttributes.CORE_QUEUE_ATTRIBUTES) {
    queue.registerReadWriteAttribute(attributeDefinition.getName(),null,QueueConfigurationWriteHandler.INSTANCE,AttributeAccess.Storage.CONFIGURATION);
  }
  final ManagementResourceRegistration cfs=rootRegistration.registerSubModel(CFS_PATH,MessagingSubsystemProviders.CF);
  cfs.registerOperationHandler(ADD,ConnectionFactoryAdd.INSTANCE,MessagingSubsystemProviders.CF_ADD,false);
  cfs.registerOperationHandler(REMOVE,ConnectionFactoryRemove.INSTANCE,MessagingSubsystemProviders.CF_REMOVE,false);
  final ManagementResourceRegistration queues=rootRegistration.registerSubModel(JMS_QUEUE_PATH,MessagingSubsystemProviders.JMS_QUEUE_RESOURCE);
  queues.registerOperationHandler(ADD,JMSQueueAdd.INSTANCE,JMSQueueAdd.INSTANCE,false);
  queues.registerOperationHandler(REMOVE,JMSQueueRemove.INSTANCE,JMSQueueRemove.INSTANCE,false);
  for (  AttributeDefinition attributeDefinition : CommonAttributes.JMS_QUEUE_ATTRIBUTES) {
    queues.registerReadWriteAttribute(attributeDefinition.getName(),null,JmsQueueConfigurationWriteHandler.INSTANCE,AttributeAccess.Storage.CONFIGURATION);
  }
  final ManagementResourceRegistration topics=rootRegistration.registerSubModel(TOPIC_PATH,MessagingSubsystemProviders.JMS_TOPIC_RESOURCE);
  topics.registerOperationHandler(ADD,JMSTopicAdd.INSTANCE,JMSTopicAdd.INSTANCE,false);
  topics.registerOperationHandler(REMOVE,JMSTopicRemove.INSTANCE,JMSTopicRemove.INSTANCE,false);
  topics.registerReadWriteAttribute(CommonAttributes.ENTRIES.getName(),null,TopicConfigurationWriteHandler.INSTANCE,AttributeAccess.Storage.CONFIGURATION);
  final ManagementResourceRegistration resourceAdapters=rootRegistration.registerSubModel(RA_PATH,MessagingSubsystemProviders.RA);
  resourceAdapters.registerOperationHandler(ADD,PooledConnectionFactoryAdd.INSTANCE,MessagingSubsystemProviders.RA_ADD,false);
  resourceAdapters.registerOperationHandler(REMOVE,PooledConnectionFactoryRemove.INSTANCE,MessagingSubsystemProviders.RA_REMOVE);
  final ManagementResourceRegistration broadcastGroups=rootRegistration.registerSubModel(BROADCAST_GROUP_PATH,MessagingSubsystemProviders.BROADCAST_GROUP_RESOURCE);
  broadcastGroups.registerOperationHandler(ADD,BroadcastGroupAdd.INSTANCE,BroadcastGroupAdd.INSTANCE);
  broadcastGroups.registerOperationHandler(REMOVE,BroadcastGroupRemove.INSTANCE,BroadcastGroupRemove.INSTANCE);
  for (  AttributeDefinition attributeDefinition : CommonAttributes.BROADCAST_GROUP_ATTRIBUTES) {
    broadcastGroups.registerReadWriteAttribute(attributeDefinition.getName(),null,BroadcastGroupWriteAttributeHandler.INSTANCE,AttributeAccess.Storage.CONFIGURATION);
  }
  final ManagementResourceRegistration discoveryGroups=rootRegistration.registerSubModel(DISCOVERY_GROUP_PATH,MessagingSubsystemProviders.DISCOVERY_GROUP_RESOURCE);
  discoveryGroups.registerOperationHandler(ADD,DiscoveryGroupAdd.INSTANCE,DiscoveryGroupAdd.INSTANCE);
  discoveryGroups.registerOperationHandler(REMOVE,DiscoveryGroupRemove.INSTANCE,DiscoveryGroupRemove.INSTANCE);
  for (  AttributeDefinition attributeDefinition : CommonAttributes.DISCOVERY_GROUP_ATTRIBUTES) {
    discoveryGroups.registerReadWriteAttribute(attributeDefinition.getName(),null,DiscoveryGroupWriteAttributeHandler.INSTANCE,AttributeAccess.Storage.CONFIGURATION);
  }
  final ManagementResourceRegistration diverts=rootRegistration.registerSubModel(DIVERT_PATH,MessagingSubsystemProviders.DIVERT_RESOURCE);
  diverts.registerOperationHandler(ADD,DivertAdd.INSTANCE,DivertAdd.INSTANCE);
  diverts.registerOperationHandler(REMOVE,DivertRemove.INSTANCE,DivertRemove.INSTANCE);
  for (  AttributeDefinition attributeDefinition : CommonAttributes.DIVERT_ATTRIBUTES) {
    diverts.registerReadWriteAttribute(attributeDefinition.getName(),null,DivertConfigurationWriteHandler.INSTANCE,AttributeAccess.Storage.CONFIGURATION);
  }
}

{
  System.setProperty("boolean-value","true");
  System.setProperty("long-value","1000");
  System.setProperty("string-value","wildfly");
  System.setProperty("double-value","1.0");
  System.setProperty("int-value","100");
  System.setProperty("bytes-value","wildfly");
  System.setProperty("bigint-value","100");
  System.setProperty("bigdec-value","10.0");
  GlobalOperationHandlers.registerGlobalOperations(rootRegistration,processType);
  rootRegistration.registerOperationHandler(SETUP_OP_DEF,new OperationStepHandler(){
    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {
      final ModelNode model=new ModelNode();
      model.get("profile","profileA","subsystem","subsystem1",BOOLEAN_ATT_NAME).set(true);
      model.get("profile","profileA","subsystem","subsystem1",LONG_ATT_NAME).set(1000L);
      model.get("profile","profileB","subsystem","subsystem1",BOOLEAN_ATT_NAME).set(new ValueExpression("${boolean-value}"));
      model.get("profile","profileB","subsystem","subsystem1",LONG_ATT_NAME).set(new ValueExpression("${long-value}"));
      model.get("profile","profilType","subsystem","subsystem1",BOOLEAN_ATT_NAME).set(true);
      model.get("profile","profilType","subsystem","subsystem1",LONG_ATT_NAME).set(1000L);
      model.get("profile","profilType","subsystem","subsystem1",STRING_ATT_NAME).set("wildfly");
      model.get("profile","profilType","subsystem","subsystem1",DOUBLE_ATT_NAME).set(1.0D);
      model.get("profile","profilType","subsystem","subsystem1",INT_ATT_NAME).set(100);
      model.get("profile","profilType","subsystem","subsystem1",BYTES_ATT_NAME).set("wildfly".getBytes(UTF_8));
      model.get("profile","profilType","subsystem","subsystem1",BIGINT_ATT_NAME).set(new BigInteger("100"));
      model.get("profile","profilType","subsystem","subsystem1",BIGDEC_ATT_NAME).set(new BigDecimal("10.0"));
      createModel(context,model);
      context.stepCompleted();
    }
  }
);
  ResourceDefinition profileDef=ResourceBuilder.Factory.create(PathElement.pathElement("profile","*"),new NonResolvingResourceDescriptionResolver()).addReadOnlyAttribute(SimpleAttributeDefinitionBuilder.create("name",ModelType.STRING,false).setMinSize(1).build()).pushChild(PathElement.pathElement("subsystem","subsystem1")).addReadWriteAttribute(BOOLEAN_ATT,null,handler).addReadWriteAttribute(LONG_ATT,null,handler).addReadWriteAttribute(STRING_ATT,null,handler).addReadWriteAttribute(DOUBLE_ATT,null,handler).addReadWriteAttribute(INT_ATT,null,handler).addReadWriteAttribute(BYTES_ATT,null,handler).addReadWriteAttribute(BIGINT_ATT,null,handler).addReadWriteAttribute(BIGDEC_ATT,null,handler).pop().build();
  rootRegistration.registerSubModel(profileDef);
}

{
  final ModelNode subModel=context.getSubModel();
  final ModelNode compensatingOperation=new ModelNode();
  compensatingOperation.get(OP).set(JPADataSourceAdd.OPERATION_NAME);
  compensatingOperation.get(OP_ADDR).set(operation.require(OP_ADDR));
  compensatingOperation.get(CommonAttributes.DEFAULT_DATASOURCE).set(subModel.get(CommonAttributes.DEFAULT_DATASOURCE));
  subModel.get(CommonAttributes.DEFAULT_DATASOURCE).clear();
  if (context.getRuntimeContext() != null) {
    context.getRuntimeContext().setRuntimeTask(new RuntimeTask(){
      public void execute(      RuntimeTaskContext context) throws OperationFailedException {
        final ServiceController<?> service=context.getServiceRegistry().getService(JPAService.SERVICE_NAME);
        if (service != null) {
          service.setMode(ServiceController.Mode.REMOVE);
        }
        resultHandler.handleResultComplete();
      }
    }
);
  }
 else {
    resultHandler.handleResultComplete();
  }
  return new BasicOperationResult(compensatingOperation);
}

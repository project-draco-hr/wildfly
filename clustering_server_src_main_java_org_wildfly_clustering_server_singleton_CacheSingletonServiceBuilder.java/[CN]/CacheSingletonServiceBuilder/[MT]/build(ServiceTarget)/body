{
  ServiceListener<T> listener=new AbstractServiceListener<T>(){
    @Override public void serviceRemoveRequested(    ServiceController<? extends T> controller){
      ServiceController<?> service=controller.getServiceContainer().getService(CacheSingletonServiceBuilder.this.targetServiceName);
      if (service != null) {
        service.setMode(ServiceController.Mode.REMOVE);
        controller.removeListener(this);
      }
    }
  }
;
  target.addService(this.targetServiceName,this.service).setInitialMode(ServiceController.Mode.NEVER).install();
  return new AsynchronousServiceBuilder<>(this.singletonServiceName,this).build(target).addAliases(this.singletonServiceName.append("singleton")).addDependency(CacheGroupServiceName.SERVICE_PROVIDER_REGISTRY.getServiceName(this.containerName,this.cacheName),ServiceProviderRegistry.class,this.registry).addDependency(GroupServiceName.COMMAND_DISPATCHER.getServiceName(this.containerName),CommandDispatcherFactory.class,this.dispatcherFactory).addListener(listener).setInitialMode(ServiceController.Mode.ACTIVE);
}

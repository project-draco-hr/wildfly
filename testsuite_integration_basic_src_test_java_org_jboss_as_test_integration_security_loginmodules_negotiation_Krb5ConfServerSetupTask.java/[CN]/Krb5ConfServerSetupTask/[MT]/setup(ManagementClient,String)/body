{
  LOGGER.info("(Re)Creating workdir: " + WORK_DIR.getAbsolutePath());
  FileUtils.deleteDirectory(WORK_DIR);
  WORK_DIR.mkdirs();
  final String cannonicalHost=Utils.getCannonicalHost(managementClient);
  final Map<String,String> map=new HashMap<String,String>();
  map.put("hostname",cannonicalHost);
  FileUtils.write(KRB5_CONF_FILE,StrSubstitutor.replace(IOUtils.toString(getClass().getResourceAsStream(KRB5_CONF),"UTF-8"),map),"UTF-8");
  final String principalName="HTTP/" + cannonicalHost + "@JBOSS.ORG";
  LOGGER.info("Principal name: " + principalName);
  final KerberosTime timeStamp=new KerberosTime();
  final long principalType=1L;
  final Keytab keytab=Keytab.getInstance();
  final List<KeytabEntry> entries=new ArrayList<KeytabEntry>();
  for (  Map.Entry<EncryptionType,EncryptionKey> keyEntry : KerberosKeyFactory.getKerberosKeys(principalName,"httppwd").entrySet()) {
    final EncryptionKey key=keyEntry.getValue();
    final byte keyVersion=(byte)key.getKeyVersion();
    entries.add(new KeytabEntry(principalName,principalType,timeStamp,keyVersion,key));
  }
  keytab.setEntries(entries);
  keytab.write(HTTP_KEYTAB_FILE);
}

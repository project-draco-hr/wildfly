{
  if (!currentDescription.isDefined()) {
    errors.add(validationElement.createValidationFailure("Undefined description " + currentDescription.asString()));
  }
  ModelNode typeNode=currentDescription.hasDefined(TYPE) ? currentDescription.get(TYPE) : null;
  ModelNode valueTypeNode=currentDescription.hasDefined(VALUE_TYPE) ? currentDescription.get(VALUE_TYPE) : null;
  ModelType type;
  try {
    type=typeNode.asType();
  }
 catch (  Exception e) {
    errors.add(validationElement.createValidationFailure("Invalid type " + currentDescription.asString()));
    return;
  }
  if (type == ModelType.OBJECT || type == ModelType.LIST) {
    if (valueTypeNode == null && !validationElement.allowNullValueTypeForObject()) {
      errors.add(validationElement.createValidationFailure("No value-type for type=" + type + " "+ currentDescription.asString()));
      return;
    }
  }
 else {
    if (valueTypeNode != null) {
      errors.add(validationElement.createValidationFailure("Unnecessary value-type for type=" + type + " "+ currentDescription.asString()));
    }
  }
  if (valueTypeNode != null) {
    try {
      valueTypeNode.asType();
    }
 catch (    Exception e) {
      for (      String key : valueTypeNode.keys()) {
        validateAttributeOrParameter(validationElement,rawDescription,valueTypeNode.get(key));
      }
    }
  }
  validationElement.validateKeys(type,currentDescription);
}

{
  final String poolName=PathAddress.pathAddress(operation.get(ModelDescriptionConstants.OP_ADDR)).getLastElement().getValue();
  final ServiceName serviceName=PoolConfigService.EJB_POOL_CONFIG_BASE_SERVICE_NAME.append(poolName);
  final ServiceRegistry registry=context.getServiceRegistry(true);
  ServiceController sc=registry.getService(serviceName);
  if (sc != null) {
    StrictMaxPoolConfig smpc=StrictMaxPoolConfig.class.cast(sc.getValue());
    if (StrictMaxPoolResourceDefinition.MAX_POOL_SIZE.equals(attributeName)) {
      int maxPoolSize=StrictMaxPoolResourceDefinition.MAX_POOL_SIZE.validateResolvedOperation(model).asInt();
      smpc.setMaxPoolSize(maxPoolSize);
    }
 else     if (StrictMaxPoolResourceDefinition.INSTANCE_ACQUISITION_TIMEOUT.equals(attributeName)) {
      long timeout=StrictMaxPoolResourceDefinition.INSTANCE_ACQUISITION_TIMEOUT.validateResolvedOperation(model).asLong();
      smpc.setTimeout(timeout);
    }
 else     if (StrictMaxPoolResourceDefinition.INSTANCE_ACQUISITION_TIMEOUT_UNIT.equals(attributeName)) {
      String timeoutUnit=StrictMaxPoolResourceDefinition.INSTANCE_ACQUISITION_TIMEOUT_UNIT.validateResolvedOperation(model).asString();
      smpc.setTimeoutUnit(TimeUnit.valueOf(timeoutUnit));
    }
  }
}

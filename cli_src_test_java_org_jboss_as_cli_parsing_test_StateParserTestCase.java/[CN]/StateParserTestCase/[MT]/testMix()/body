{
  parse("a (b) c [d[e(f{g}h)i]k]l ({[]})");
  assertNotNull(result);
  assertEquals(1,result.children.size());
  assertNull(result.buffer);
  ParsedTerm firstChild=result.children.get(0);
  assertNotNull(firstChild);
  assertEquals(3,firstChild.children.size());
  assertEquals("a  c l ",firstChild.buffer.toString());
  ParsedTerm child=firstChild.children.get(0);
  assertNotNull(child);
  assertTrue(child.children.isEmpty());
  assertEquals("b",child.buffer.toString());
  child=firstChild.children.get(1);
  assertNotNull(child);
  assertEquals(1,child.children.size());
  assertEquals("dk",child.buffer.toString());
  child=child.children.get(0);
  assertNotNull(child);
  assertEquals(1,child.children.size());
  assertEquals("ei",child.buffer.toString());
  child=child.children.get(0);
  assertNotNull(child);
  assertEquals(1,child.children.size());
  assertEquals("fh",child.buffer.toString());
  child=child.children.get(0);
  assertNotNull(child);
  assertEquals(0,child.children.size());
  assertEquals("g",child.buffer.toString());
  child=firstChild.children.get(2);
  assertNotNull(child);
  assertEquals(1,child.children.size());
  assertNull(child.buffer);
  child=child.children.get(0);
  assertNotNull(child);
  assertEquals(1,child.children.size());
  assertNull(child.buffer);
  child=child.children.get(0);
  assertNotNull(child);
  assertEquals(0,child.children.size());
  assertNull(child.buffer);
}

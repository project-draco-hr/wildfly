{
  try {
    channels=new RemoteChannelPairSetup();
    channels.setupRemoting(new ManagementChannelInitialization(){
      @Override public ManagementChannelHandler startReceiving(      Channel channel){
        final ManagementChannelHandler support=new ManagementChannelHandler(channel,channels.getExecutorService());
        support.addHandlerFactory(new TransactionalProtocolOperationHandler(proxiedController,support));
        channel.addCloseHandler(new CloseHandler<Channel>(){
          @Override public void handleClose(          Channel closed,          IOException exception){
            support.shutdownNow();
          }
        }
);
        channel.receiveMessage(support.getReceiver());
        return support;
      }
    }
);
    channels.startClientConnetion();
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
  final Channel clientChannel=channels.getClientChannel();
  final ManagementChannelHandler support=new ManagementChannelHandler(clientChannel,channels.getExecutorService());
  final RemoteProxyController proxyController=RemoteProxyController.create(support,PathAddress.pathAddress(),ProxyOperationAddressTranslator.HOST);
  clientChannel.addCloseHandler(new CloseHandler<Channel>(){
    @Override public void handleClose(    Channel closed,    IOException exception){
      support.shutdownNow();
    }
  }
);
  clientChannel.receiveMessage(support.getReceiver());
  return proxyController;
}

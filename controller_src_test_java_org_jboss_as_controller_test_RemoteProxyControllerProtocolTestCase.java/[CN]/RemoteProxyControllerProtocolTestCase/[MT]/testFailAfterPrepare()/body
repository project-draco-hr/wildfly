{
  final ModelNode node=new ModelNode();
  final ModelController controller=new MockModelController(){
    @Override public ModelNode execute(    ModelNode operation,    OperationMessageHandler handler,    OperationTransactionControl control,    OperationAttachments attachments){
      control.operationPrepared(new OperationTransaction(){
        @Override public void commit(){
        }
        @Override public void rollback(){
        }
      }
,node);
      throw new IllegalStateException();
    }
  }
;
  final ModelNode result=new ModelNode();
  final RemoteProxyController proxyController=setupProxyHandlers(controller);
  final CommitProxyOperationControl commitControl=new CommitProxyOperationControl(){
    @Override public void operationCompleted(    ModelNode response){
      super.operationCompleted(response);
      result.set(response);
    }
  }
;
  proxyController.execute(node,null,commitControl,null);
  commitControl.tx.commit();
  Assert.assertEquals(2,commitControl.txCompletionStatus.get());
  Assert.assertTrue(result.isDefined());
  Assert.assertEquals("failed",result.get("outcome").asString());
  Assert.assertTrue(result.hasDefined("failure-description"));
}

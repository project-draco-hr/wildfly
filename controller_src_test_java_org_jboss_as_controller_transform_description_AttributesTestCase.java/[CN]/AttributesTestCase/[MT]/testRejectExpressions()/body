{
  resourceModel.get("reject").setExpression("${expr}");
  final ResourceTransformationDescriptionBuilder builder=TransformationDescriptionBuilder.Factory.createInstance(PATH);
  builder.getAttributeBuilder().addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,"reject").end();
  TransformationDescription.Tools.register(builder.build(),transformersSubRegistration);
  final Resource resource=transformResource();
  Assert.assertNotNull(resource);
  final Resource toto=resource.getChild(PATH);
  Assert.assertNotNull(toto);
  final ModelNode model=toto.getModel();
  Assert.assertTrue(model.hasDefined("reject"));
  ModelNode add=Util.createAddOperation(PathAddress.pathAddress(PATH));
  add.get("reject").setExpression("${expr}");
  OperationTransformer.TransformedOperation transformedAdd=transformOperation(add);
  Assert.assertTrue(transformedAdd.rejectOperation(success()));
  ModelNode write=Util.getWriteAttributeOperation(PathAddress.pathAddress(PATH),"reject",new ModelNode().setExpression("${expr}"));
  OperationTransformer.TransformedOperation transformedWrite=transformOperation(write);
  Assert.assertTrue(transformedWrite.rejectOperation(success()));
}

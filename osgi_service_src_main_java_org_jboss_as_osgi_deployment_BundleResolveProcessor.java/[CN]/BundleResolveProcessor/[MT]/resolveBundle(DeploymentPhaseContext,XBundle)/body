{
  XBundleRevision brev=bundle.getBundleRevision();
  DeploymentUnit depUnit=phaseContext.getDeploymentUnit();
  XEnvironment env=depUnit.getAttachment(OSGiConstants.ENVIRONMENT_KEY);
  XResolver resolver=depUnit.getAttachment(OSGiConstants.RESOLVER_KEY);
  XResolveContext context=resolver.createResolveContext(env,Collections.singleton(brev),null);
  try {
    resolver.resolveAndApply(context);
    depUnit.putAttachment(Attachments.BUNDLE_STATE_KEY,BundleState.RESOLVED);
    ServiceName bundleInstall=brev.getBundle().adapt(ServiceName.class);
    ServiceName bundleResolve=bundleInstall.getParent().append("RESOLVED");
    phaseContext.addDeploymentDependency(bundleResolve,AttachmentKey.create(Object.class));
    ServiceName moduleService=ServiceModuleLoader.moduleServiceName(brev.getModuleIdentifier());
    phaseContext.addDeploymentDependency(moduleService,Attachments.MODULE);
  }
 catch (  ResolutionException ex) {
    LOGGER.warnCannotResolve(ex.getUnresolvedRequirements());
  }
}

{
  final LinkedHashSet<Cipher> result=new LinkedHashSet<>(ciphers.size());
  result.addAll(filterByKeyExchange(ciphers,Collections.singleton(KeyExchange.EECDH)));
  moveToStart(result,filterByEncryption(result,new HashSet<>(Arrays.asList(Encryption.AES128,Encryption.AES128GCM,Encryption.AES256,Encryption.AES256GCM))));
  result.addAll(filterByEncryption(ciphers,new HashSet<>(Arrays.asList(Encryption.AES128,Encryption.AES128GCM,Encryption.AES256,Encryption.AES256GCM))));
  result.addAll(ciphers);
  moveToEnd(result,filterByProtocol(result,Collections.singleton(Protocol.SSLv2)));
  moveToEnd(result,filterByMessageDigest(result,Collections.singleton(MessageDigest.MD5)));
  moveToEnd(result,filterByAuthentication(result,Collections.singleton(Authentication.aNULL)));
  moveToEnd(result,filterByAuthentication(result,Collections.singleton(Authentication.ECDH)));
  moveToEnd(result,filterByKeyExchange(result,Collections.singleton(KeyExchange.RSA)));
  moveToEnd(result,filterByKeyExchange(result,Collections.singleton(KeyExchange.PSK)));
  moveToEnd(result,filterByKeyExchange(result,Collections.singleton(KeyExchange.KRB5)));
  moveToEnd(result,filterByEncryption(result,Collections.singleton(Encryption.RC4)));
  return strengthSort(result);
}

{
  if (ignoreOperationIfServerNotActive(context,operation)) {
    return;
  }
  final PathAddress address=PathAddress.pathAddress(operation.get(OP_ADDR));
  final ServiceName serviceName=MessagingServices.getActiveMQServiceName(address);
  ServiceController<?> service=context.getServiceRegistry(false).getService(serviceName);
  ActiveMQServer server=ActiveMQServer.class.cast(service.getValue());
  final String activeMQAddress=ACTIVEMQ_ADDRESS.resolveModelAttribute(context,operation).asString();
  AddressSettings settings=server.getAddressSettingsRepository().getMatch(activeMQAddress);
  ModelNode result=context.getResult();
  result.get(ADDRESS_FULL_MESSAGE_POLICY.getName()).set(settings.getAddressFullMessagePolicy().toString());
  ModelNode deadLetterAddress=result.get(DEAD_LETTER_ADDRESS.getName());
  if (settings.getDeadLetterAddress() != null) {
    deadLetterAddress.set(settings.getDeadLetterAddress().toString());
  }
  ModelNode expiryAddress=result.get(EXPIRY_ADDRESS.getName());
  if (settings.getExpiryAddress() != null) {
    expiryAddress.set(settings.getExpiryAddress().toString());
  }
  result.get(EXPIRY_DELAY.getName()).set(settings.getExpiryDelay());
  result.get(LAST_VALUE_QUEUE.getName()).set(settings.isLastValueQueue());
  result.get(MAX_DELIVERY_ATTEMPTS.getName()).set(settings.getMaxDeliveryAttempts());
  result.get(MAX_REDELIVERY_DELAY.getName()).set(settings.getMaxRedeliveryDelay());
  result.get(MAX_SIZE_BYTES.getName()).set(settings.getMaxSizeBytes());
  result.get(MESSAGE_COUNTER_HISTORY_DAY_LIMIT.getName()).set(settings.getMessageCounterHistoryDayLimit());
  result.get(PAGE_MAX_CACHE_SIZE.getName()).set(settings.getPageCacheMaxSize());
  result.get(PAGE_SIZE_BYTES.getName()).set(settings.getPageSizeBytes());
  result.get(REDELIVERY_DELAY.getName()).set(settings.getRedeliveryDelay());
  result.get(REDELIVERY_MULTIPLIER.getName()).set(settings.getRedeliveryMultiplier());
  result.get(REDISTRIBUTION_DELAY.getName()).set(settings.getRedistributionDelay());
  result.get(SEND_TO_DLA_ON_NO_ROUTE.getName()).set(settings.isSendToDLAOnNoRoute());
  result.get(SLOW_CONSUMER_CHECK_PERIOD.getName()).set(settings.getSlowConsumerCheckPeriod());
  result.get(SLOW_CONSUMER_POLICY.getName()).set(settings.getSlowConsumerPolicy().toString());
  result.get(SLOW_CONSUMER_THRESHOLD.getName()).set(settings.getSlowConsumerThreshold());
}

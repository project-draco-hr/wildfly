{
  context.addStep(new AbstractDeploymentChainStep(){
    public void execute(    DeploymentProcessorTarget processorTarget){
      processorTarget.addDeploymentProcessor(BatchSubsystemDefinition.NAME,Phase.DEPENDENCIES,Phase.DEPENDENCIES_BATCH,new BatchDependencyProcessor());
    }
  }
,OperationContext.Stage.RUNTIME);
  context.addStep(new AbstractDeploymentChainStep(){
    public void execute(    DeploymentProcessorTarget processorTarget){
      processorTarget.addDeploymentProcessor(BatchSubsystemDefinition.NAME,Phase.POST_MODULE,Phase.POST_MODULE_BATCH_ENVIRONMENT,new BatchEnvironmentProcessor());
    }
  }
,OperationContext.Stage.RUNTIME);
  final BatchConfiguration batchConfiguration=BatchConfiguration.getInstance();
  final String repositoryType=JOB_REPOSITORY_TYPE.resolveModelAttribute(context,model).asString();
  batchConfiguration.setJobRepositoryType(repositoryType);
}

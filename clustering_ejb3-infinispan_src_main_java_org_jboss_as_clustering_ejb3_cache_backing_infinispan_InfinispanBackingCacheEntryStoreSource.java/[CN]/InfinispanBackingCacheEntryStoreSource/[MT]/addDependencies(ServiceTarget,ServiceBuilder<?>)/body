{
  ServiceName groupCacheServiceName=CacheService.getServiceName(this.cacheContainerName,this.beanCacheName);
  builder.addDependency(groupCacheServiceName,Cache.class,this.groupCache);
  builder.addDependency(SharedLocalYieldingClusterLockManagerService.getServiceName(this.cacheContainerName),SharedLocalYieldingClusterLockManager.class,this.lockManager);
  builder.addDependency(ClusteredBackingCacheEntryStoreSourceService.getClientMappingRegistryServiceName(this.cacheContainerName),Registry.class,this.registry);
  InjectedValue<Cache> cache=new InjectedValue<Cache>();
  InjectedValue<Registry.RegistryEntryProvider> provider=new InjectedValue<Registry.RegistryEntryProvider>();
  target.addService(ClusteredBackingCacheEntryStoreSourceService.getClientMappingRegistryServiceName(this.cacheContainerName),new RegistryService(cache,provider)).addDependency(EJBRemotingConnectorClientMappingsEntryProviderService.SERVICE_NAME,Registry.RegistryEntryProvider.class,provider).addDependency(CacheService.getServiceName(this.cacheContainerName,this.clientMappingsCacheName),Cache.class,cache).setInitialMode(ServiceController.Mode.ON_DEMAND).install();
  InjectedValue<EmbeddedCacheManager> container=new InjectedValue<EmbeddedCacheManager>();
  target.addService(ClusteredBackingCacheEntryStoreSourceService.getCacheContainerClusterNameServiceName(this.cacheContainerName),new ClusterNameService(container)).addDependency(EmbeddedCacheManagerService.getServiceName(this.cacheContainerName),EmbeddedCacheManager.class,container).setInitialMode(ServiceController.Mode.ON_DEMAND).install();
}

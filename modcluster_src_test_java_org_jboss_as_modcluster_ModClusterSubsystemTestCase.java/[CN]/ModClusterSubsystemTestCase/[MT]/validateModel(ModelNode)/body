{
  super.validateModel(model);
  ModelNode ssl=model.get(SUBSYSTEM,getMainSubsystemName()).get(MOD_CLUSTER_CONFIG,CONFIGURATION).get(SSL,CONFIGURATION);
  Assert.assertEquals(ssl.get("ca-certificate-file").resolve().asString(),"/home/rhusar/client-keystore.jks");
  Assert.assertEquals(ssl.get("ca-revocation-url").resolve().asString(),"/home/rhusar/revocations");
  Assert.assertEquals(ssl.get("certificate-key-file").resolve().asString(),"/home/rhusar/client-keystore.jks");
  Assert.assertEquals(ssl.get("cipher-suite").resolve().asString(),"SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA,SSL_RSA_WITH_RC4_128_MD5,SSL_RSA_WITH_RC4_128_SHA,SSL_RSA_WITH_3DES_EDE_CBC_SHA");
  Assert.assertEquals(ssl.get("key-alias").resolve().asString(),"mykeyalias");
  Assert.assertEquals(ssl.get("password").resolve().asString(),"mypassword");
  Assert.assertEquals(ssl.get("protocol").resolve().asString(),"TLS");
}

{
  Object value=null;
switch (jdbcType) {
case Types.CLOB:
case Types.LONGVARCHAR:
case Types.BLOB:
case Types.LONGVARBINARY:
    throw MESSAGES.longBinaryNotSupported();
case Types.BINARY:
case Types.VARBINARY:
{
    byte[] bytes=cs.getBytes(index);
    if (!cs.wasNull()) {
      if (destination == byte[].class)       value=bytes;
 else       value=convertToObject(bytes);
    }
    if (log.isTraceEnabled()) {
      log.trace("Get result: index=" + index + ", javaType="+ destination.getName()+ ", Binary, value="+ value);
    }
  }
break;
case Types.JAVA_OBJECT:
case Types.STRUCT:
case Types.ARRAY:
case Types.OTHER:
{
value=cs.getObject(index);
if (log.isTraceEnabled()) {
  log.trace("Get result: index=" + index + ", javaType="+ destination.getName()+ ", Object, value="+ value);
}
}
break;
default :
Method method=(Method)csTypes.get(destination.getName());
if (method != null) {
try {
value=method.invoke(cs,new Object[]{new Integer(index)});
if (cs.wasNull()) {
value=null;
}
if (log.isTraceEnabled()) {
log.trace("Get result: index=" + index + ", javaType="+ destination.getName()+ ", Simple, value="+ value);
}
}
 catch (IllegalAccessException e) {
}
catch (InvocationTargetException e) {
}
}
 else {
value=cs.getObject(index);
if (log.isTraceEnabled()) {
log.trace("Get result: index=" + index + ", javaType="+ destination.getName()+ ", Object, value="+ value);
}
}
}
return coerceToJavaType(value,destination);
}

{
  final PathAddress domain=PathAddress.pathAddress(PROFILE,FULL_HA).append(SUBSYSTEM,SecurityExtension.SUBSYSTEM_NAME).append("security-domain","jaspi-test");
  DomainTestUtils.executeForResult(Util.createAddOperation(domain),client);
  final PathAddress auth=domain.append(AUTHENTICATION,"jaspi");
  DomainTestUtils.executeForResult(Util.createAddOperation(auth),client);
  final PathAddress stack=auth.append("login-module-stack","lm-stack");
  DomainTestUtils.executeForResult(Util.createAddOperation(stack),client);
  final ModelNode addLoginModule=Util.createAddOperation(stack.append("login-module","lm"));
  addLoginModule.get("code").set("UsersRoles");
  addLoginModule.get("flag").set("required");
  addLoginModule.get("module").set("test-jaspi");
  final ModelNode options=addLoginModule.get("module-options");
  options.setEmptyList();
  options.add(new ModelNode().set("usersProperties","${jboss.server.config.dir:}/application-users.properties"));
  options.add(new ModelNode().set("rolesProperties","${jboss.server.config.dir:}/application-roles.properties"));
  DomainTestUtils.executeForResult(addLoginModule,client);
  final ModelNode addAuthModule=Util.createAddOperation(auth.append("auth-module",getJaspiTestAuthModuleName()));
  addAuthModule.get("code").set(getJaspiTestAuthModuleName());
  addAuthModule.get("login-module-stack-ref").set("lm-stack");
  addAuthModule.get("flag").set("${test.prop:optional}");
  DomainTestUtils.executeForResult(addAuthModule,client);
}

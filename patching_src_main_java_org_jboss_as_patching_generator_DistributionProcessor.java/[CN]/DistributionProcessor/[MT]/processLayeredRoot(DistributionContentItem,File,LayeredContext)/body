{
  final LayersConfig layersConfig=LayersConfig.getLayersConfig(root);
  final File layersDir=new File(root,layersConfig.getLayersPath());
  final DistributionContentItem newParent=DistributionStructureImpl.createMiscItem(parent,layersConfig.getLayersPath());
  if (!layersDir.exists()) {
    if (layersConfig.isConfigured()) {
      throw processingError("No layers directory found at " + layersDir);
    }
    return;
  }
  final List<String> layers;
  if (layersConfig.isConfigured()) {
    layers=layersConfig.getLayers();
    if (layers.size() != layersDir.listFiles(new FileFilter(){
      @Override public boolean accept(      File pathName){
        return pathName.isDirectory();
      }
    }
).length) {
      throw processingError("configured layers does not match actual ones %s",layers);
    }
  }
 else {
    layers=Collections.singletonList("base");
  }
  for (  final String layer : layers) {
    File layerDir=new File(layersDir,layer);
    if (!layerDir.exists()) {
      if (layersConfig.isConfigured()) {
        throw processingError("Cannot find layer '%s' under directory %s",layer,layersDir);
      }
      return;
    }
    context.addLayer(newParent,layer,layerDir);
  }
  final File addOnsDir=new File(root,layersConfig.getAddOnsPath());
  final File[] addOnsList=addOnsDir.listFiles();
  if (addOnsList != null) {
    for (    final File addOn : addOnsList) {
      context.addAddOn(newParent,addOn.getName(),addOn);
    }
  }
}

{
  if (model.hasDefined(BOUNDED_QUEUE_THREAD_POOL)) {
    ModelNode pools=model.get(BOUNDED_QUEUE_THREAD_POOL);
    for (    Property poolProp : pools.asPropertyList()) {
      final ModelNode operation=Util.getEmptyOperation(ADD,pathAddress(PathElement.pathElement(SUBSYSTEM,SUBSYSTEM_NAME),PathElement.pathElement(BOUNDED_QUEUE_THREAD_POOL,poolProp.getName())));
      final ModelNode pool=poolProp.getValue();
      operation.get(NAME).set(pool.require(NAME));
      if (pool.hasDefined(THREAD_FACTORY)) {
        operation.get(THREAD_FACTORY).set(pool.get(THREAD_FACTORY));
      }
      if (pool.hasDefined(PROPERTIES)) {
        operation.get(PROPERTIES).set(pool.get(PROPERTIES));
      }
      if (pool.hasDefined(MAX_THREADS)) {
        operation.get(MAX_THREADS).set(pool.get(MAX_THREADS));
      }
      if (pool.hasDefined(KEEPALIVE_TIME)) {
        operation.get(KEEPALIVE_TIME).set(pool.get(KEEPALIVE_TIME));
      }
      if (pool.hasDefined(BLOCKING)) {
        operation.get(BLOCKING).set(pool.get(BLOCKING));
      }
      if (pool.hasDefined(HANDOFF_EXECUTOR)) {
        operation.get(HANDOFF_EXECUTOR).set(pool.get(HANDOFF_EXECUTOR));
      }
      if (pool.hasDefined(ALLOW_CORE_TIMEOUT)) {
        operation.get(ALLOW_CORE_TIMEOUT).set(pool.get(ALLOW_CORE_TIMEOUT));
      }
      if (pool.hasDefined(QUEUE_LENGTH)) {
        operation.get(QUEUE_LENGTH).set(pool.get(QUEUE_LENGTH));
      }
      if (pool.hasDefined(CORE_THREADS)) {
        operation.get(CORE_THREADS).set(pool.get(CORE_THREADS));
      }
      result.add(operation);
    }
  }
}

{
  context.startSubsystemElement(Namespace.CURRENT.getUriString(),false);
  ModelNode node=context.getModelNode();
  if (has(node,THREAD_FACTORY)) {
    for (    String name : node.get(THREAD_FACTORY).keys()) {
      final ModelNode child=node.get(THREAD_FACTORY,name);
      if (child.isDefined()) {
        writeThreadFactory(writer,child);
      }
    }
  }
  if (has(node,BOUNDED_QUEUE_THREAD_POOL)) {
    for (    String name : node.get(BOUNDED_QUEUE_THREAD_POOL).keys()) {
      final ModelNode child=node.get(BOUNDED_QUEUE_THREAD_POOL,name);
      if (child.isDefined()) {
        writeBoundedQueueThreadPool(writer,child);
      }
    }
  }
  if (has(node,QUEUELESS_THREAD_POOL)) {
    for (    String name : node.get(QUEUELESS_THREAD_POOL).keys()) {
      final ModelNode child=node.get(QUEUELESS_THREAD_POOL,name);
      if (child.isDefined()) {
        writeQueuelessThreadPool(writer,child);
      }
    }
  }
  if (has(node,SCHEDULED_THREAD_POOL)) {
    for (    String name : node.get(SCHEDULED_THREAD_POOL).keys()) {
      final ModelNode child=node.get(SCHEDULED_THREAD_POOL,name);
      if (child.isDefined()) {
        writeScheduledQueueThreadPool(writer,child);
      }
    }
  }
  if (has(node,UNBOUNDED_QUEUE_THREAD_POOL)) {
    for (    String name : node.get(UNBOUNDED_QUEUE_THREAD_POOL).keys()) {
      final ModelNode child=node.get(UNBOUNDED_QUEUE_THREAD_POOL,name);
      if (child.isDefined()) {
        writeUnboundedQueueThreadPool(writer,child);
      }
    }
  }
  writer.writeEndElement();
}

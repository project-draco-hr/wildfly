{
  ModelNode node=new ModelNode();
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
switch (Element.forName(reader.getLocalName())) {
case PROPERTY:
{
        final int attrCount=reader.getAttributeCount();
        String propName=null;
        String propValue=null;
        for (int i=0; i < attrCount; i++) {
          requireNoNamespaceAttribute(reader,i);
          final String value=reader.getAttributeValue(i);
          final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case NAME:
{
              propName=value;
              break;
            }
case VALUE:
{
            propValue=value;
          }
        break;
default :
      throw unexpectedAttribute(reader,i);
  }
}
if (propName == null || propValue == null) {
  Set<Attribute> missing=new HashSet<Attribute>();
  if (propName == null) {
    missing.add(Attribute.NAME);
  }
  if (propValue == null) {
    missing.add(Attribute.VALUE);
  }
  throw missingRequired(reader,missing);
}
node.add(propName,propValue);
if (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
  throw unexpectedElement(reader);
}
}
}
}
return node;
}

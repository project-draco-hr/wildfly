{
  final int attrCount=reader.getAttributeCount();
  BigDecimal count=null;
  BigDecimal perCpu=null;
  for (int i=0; i < attrCount; i++) {
    requireNoNamespaceAttribute(reader,i);
    final String value=reader.getAttributeValue(i);
    final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case COUNT:
{
        try {
          count=new BigDecimal(value);
        }
 catch (        NumberFormatException e) {
          throw invalidAttributeValue(reader,i);
        }
        break;
      }
case PER_CPU:
{
      try {
        perCpu=new BigDecimal(value);
      }
 catch (      NumberFormatException e) {
        throw invalidAttributeValue(reader,i);
      }
      break;
    }
default :
  throw unexpectedAttribute(reader,i);
}
}
if (count == null || perCpu == null) {
Set<Attribute> missing=new HashSet<Attribute>();
if (count == null) {
missing.add(Attribute.COUNT);
}
if (perCpu == null) {
missing.add(Attribute.PER_CPU);
}
throw missingRequired(reader,missing);
}
if (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
throw unexpectedElement(reader);
}
return new ScaledCount(count,perCpu);
}

{
  final SubsystemRegistration registration=context.registerSubsystem(THREADS);
  registration.registerXMLElementWriter(NewThreadsSubsystemParser.INSTANCE);
  final ModelNodeRegistration subsystem=registration.registerSubsystemModel(SUBSYSTEM);
  subsystem.registerOperationHandler(ADD,NewThreadsSubsystemAdd.INSTANCE,SUBSYSTEM_ADD_DESC,false);
  final ModelNodeRegistration threadFactories=subsystem.registerSubModel(PathElement.pathElement(THREAD_FACTORY),THREAD_FACTORY_DESC);
  threadFactories.registerOperationHandler(ADD,NewThreadFactoryAdd.INSTANCE,ADD_THREAD_FACTORY_DESC,false);
  threadFactories.registerOperationHandler(REMOVE,NewThreadFactoryRemove.INSTANCE,REMOVE_THREAD_FACTORY_DESC,false);
  final ModelNodeRegistration boundedQueueThreadPools=subsystem.registerSubModel(PathElement.pathElement(BOUNDED_QUEUE_THREAD_POOL),BOUNDED_QUEUE_THREAD_POOL_DESC);
  boundedQueueThreadPools.registerOperationHandler(ADD,NewBoundedQueueThreadPoolAdd.INSTANCE,ADD_BOUNDED_QUEUE_THREAD_POOL_DESC,false);
  boundedQueueThreadPools.registerOperationHandler(REMOVE,NewBoundedQueueThreadPoolRemove.INSTANCE,REMOVE_BOUNDED_QUEUE_THREAD_POOL_DESC,false);
  final ModelNodeRegistration unboundedQueueThreadPools=subsystem.registerSubModel(PathElement.pathElement(UNBOUNDED_QUEUE_THREAD_POOL),UNBOUNDED_QUEUE_THREAD_POOL_DESC);
  unboundedQueueThreadPools.registerOperationHandler(ADD,NewUnboundedQueueThreadPoolAdd.INSTANCE,ADD_UNBOUNDED_QUEUE_THREAD_POOL_DESC,false);
  unboundedQueueThreadPools.registerOperationHandler(REMOVE,NewUnboundedQueueThreadPoolRemove.INSTANCE,REMOVE_UNBOUNDED_QUEUE_THREAD_POOL_DESC,false);
  final ModelNodeRegistration queuelessThreadPools=subsystem.registerSubModel(PathElement.pathElement(QUEUELESS_THREAD_POOL),QUEUELESS_THREAD_POOL_DESC);
  queuelessThreadPools.registerOperationHandler(ADD,NewQueuelessThreadPoolAdd.INSTANCE,ADD_QUEUELESS_THREAD_POOL_DESC,false);
  queuelessThreadPools.registerOperationHandler(REMOVE,NewQueuelessThreadPoolRemove.INSTANCE,REMOVE_QUEUELESS_THREAD_POOL_DESC,false);
  final ModelNodeRegistration scheduledThreadPools=subsystem.registerSubModel(PathElement.pathElement(SCHEDULED_THREAD_POOL),SCHEDULED_THREAD_POOL_DESC);
  scheduledThreadPools.registerOperationHandler(ADD,NewScheduledThreadPoolAdd.INSTANCE,ADD_SCHEDULED_THREAD_POOL_DESC,false);
  scheduledThreadPools.registerOperationHandler(REMOVE,NewScheduledThreadPoolRemove.INSTANCE,REMOVE_SCHEDULED_THREAD_POOL_DESC,false);
}

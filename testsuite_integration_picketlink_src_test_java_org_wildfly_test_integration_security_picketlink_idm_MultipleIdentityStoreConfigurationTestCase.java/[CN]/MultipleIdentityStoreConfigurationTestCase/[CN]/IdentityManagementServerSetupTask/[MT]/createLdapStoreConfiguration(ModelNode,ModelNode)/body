{
  ModelNode operationAddIdentityStore=createLdapStoreAddOperation(operationAddIdentityConfiguration);
  operationSteps.add(operationAddIdentityStore);
  createLdapSupportedTypesAddOperation(operationSteps,operationAddIdentityStore);
  LdapMapping agentMapping=new LdapMapping(AttributedTypeEnum.AGENT.getAlias(),"ou=Agent,dc=jboss,dc=org","account");
  agentMapping.addAttribute("loginName","uid",true,false);
  agentMapping.addAttribute("createdDate","createTimeStamp",false,true);
  operationSteps.add(agentMapping.createAddOperation(operationAddIdentityStore));
  LdapMapping userMapping=new LdapMapping(AttributedTypeEnum.USER.getAlias(),"ou=People,dc=jboss,dc=org","inetOrgPerson, organizationalPerson");
  userMapping.addAttribute("loginName","uid",true,false);
  userMapping.addAttribute("firstName","cn",false,false);
  userMapping.addAttribute("lastName","sn",false,false);
  userMapping.addAttribute("email","mail",false,false);
  userMapping.addAttribute("createdDate","createTimeStamp",false,true);
  operationSteps.add(userMapping.createAddOperation(operationAddIdentityStore));
  LdapMapping roleMapping=new LdapMapping(AttributedTypeEnum.ROLE.getAlias(),"ou=Roles,dc=jboss,dc=org","groupOfNames");
  roleMapping.addAttribute("name","cn",true,false);
  roleMapping.addAttribute("createdDate","createTimeStamp",false,true);
  operationSteps.add(roleMapping.createAddOperation(operationAddIdentityStore));
  LdapMapping groupMapping=new LdapMapping(AttributedTypeEnum.GROUP.getAlias(),"ou=Groups,dc=jboss,dc=org","groupOfNames");
  groupMapping.addAttribute("name","cn",true,false);
  groupMapping.addAttribute("createdDate","createTimeStamp",false,true);
  operationSteps.add(groupMapping.createAddOperation(operationAddIdentityStore));
}

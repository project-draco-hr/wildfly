{
  super.registerOperations(resourceRegistration);
  final ResourceDescriptionResolver rootResolver=getResourceDescriptionResolver();
  EnumSet<OperationEntry.Flag> runtimeOnlyFlags=EnumSet.of(OperationEntry.Flag.RUNTIME_ONLY);
  final DescriptionProvider addMetric=new DefaultOperationDescriptionProvider(CommonAttributes.ADD_METRIC,rootResolver,LoadMetricDefinition.ATTRIBUTES);
  resourceRegistration.registerOperationHandler(CommonAttributes.ADD_METRIC,ModClusterAddMetric.INSTANCE,addMetric,false,runtimeOnlyFlags);
  final DescriptionProvider addCustomMetric=new DefaultOperationDescriptionProvider(CommonAttributes.ADD_CUSTOM_METRIC,rootResolver,CustomLoadMetricDefinition.ATTRIBUTES);
  resourceRegistration.registerOperationHandler(CommonAttributes.ADD_CUSTOM_METRIC,ModClusterAddCustomMetric.INSTANCE,addCustomMetric,false,runtimeOnlyFlags);
  final DescriptionProvider removeMetric=new DefaultOperationDescriptionProvider(CommonAttributes.REMOVE_METRIC,rootResolver,LoadMetricDefinition.TYPE);
  resourceRegistration.registerOperationHandler(CommonAttributes.REMOVE_METRIC,ModClusterRemoveMetric.INSTANCE,removeMetric,false,runtimeOnlyFlags);
  final DescriptionProvider removeCustomMetric=new DefaultOperationDescriptionProvider(CommonAttributes.REMOVE_CUSTOM_METRIC,rootResolver,CustomLoadMetricDefinition.CLASS);
  resourceRegistration.registerOperationHandler(CommonAttributes.REMOVE_CUSTOM_METRIC,ModClusterRemoveCustomMetric.INSTANCE,removeCustomMetric,false,runtimeOnlyFlags);
}

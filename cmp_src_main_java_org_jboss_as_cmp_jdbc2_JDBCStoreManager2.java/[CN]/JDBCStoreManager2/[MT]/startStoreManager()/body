{
  queryFactory=new QueryFactory(entityBridge);
  queryFactory.init();
  bridgeInvocationHandler=new EntityBridgeInvocationHandler(createFieldMap(entityBridge),createSelectorMap(entityBridge,queryFactory));
  startCmd=new JDBCStartCommand(this);
  startCmd.execute();
  final JDBCEntityCommandMetaData entityCommand=getMetaData().getEntityCommand();
  if (entityCommand == null || "default".equals(entityCommand.getCommandName())) {
    createCmd=new ApplicationPkCreateCommand();
  }
 else {
    final Class cmdClass=entityCommand.getCommandClass();
    if (cmdClass == null) {
      throw new RuntimeException("entity-command class name is not specified for entity " + entityBridge.getEntityName());
    }
    try {
      createCmd=(CreateCommand)cmdClass.newInstance();
    }
 catch (    ClassCastException cce) {
      throw new RuntimeException("Entity command " + cmdClass + " does not implement "+ CreateCommand.class);
    }
  }
  createCmd.init(this);
}

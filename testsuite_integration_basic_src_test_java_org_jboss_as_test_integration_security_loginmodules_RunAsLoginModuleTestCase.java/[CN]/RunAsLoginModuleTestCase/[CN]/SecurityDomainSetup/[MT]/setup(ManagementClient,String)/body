{
  final ModelNode compositeOp=new ModelNode();
  compositeOp.get(OP).set(COMPOSITE);
  compositeOp.get(OP_ADDR).setEmptyList();
  ModelNode updates=compositeOp.get(STEPS);
  PathAddress address=PathAddress.pathAddress().append(SUBSYSTEM,"security").append(SECURITY_DOMAIN,getSecurityDomainName());
  updates.add(Util.createAddOperation(address));
  address=address.append(Constants.AUTHENTICATION,Constants.CLASSIC);
  updates.add(Util.createAddOperation(address));
  ModelNode loginModule=Util.createAddOperation(address.append(LOGIN_MODULE,RunAsLoginModule.class.getName()));
  loginModule.get(CODE).set(RunAsLoginModule.class.getName());
  loginModule.get(FLAG).set("optional");
  ModelNode moduleOptions=loginModule.get("module-options");
  moduleOptions.get("roleName").set("RunAsLoginModuleRole");
  ModelNode loginModule2=Util.createAddOperation(address.append(LOGIN_MODULE,CustomEjbAccessingLoginModule.class.getName()));
  loginModule2.get(CODE).set(CustomEjbAccessingLoginModule.class.getName());
  loginModule2.get(FLAG).set("required");
  loginModule.get(OPERATION_HEADERS).get(ALLOW_RESOURCE_SERVICE_RESTART).set(true);
  loginModule2.get(OPERATION_HEADERS).get(ALLOW_RESOURCE_SERVICE_RESTART).set(true);
  updates.add(loginModule);
  updates.add(loginModule2);
  applyUpdates(managementClient.getControllerClient(),Arrays.asList(compositeOp));
}

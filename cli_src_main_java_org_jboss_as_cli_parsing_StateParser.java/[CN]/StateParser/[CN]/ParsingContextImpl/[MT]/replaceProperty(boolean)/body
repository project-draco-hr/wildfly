{
  if (input.charAt(location) == '$' && input.length() > location + 3 && input.charAt(location + 1) == '{') {
    final int end=input.indexOf('}',location + 2);
    if (end == -1) {
      return;
    }
    final String prop=input.substring(location,end + 1);
    final String resolved=Util.resolveProperties(prop);
    if (!resolved.equals(prop)) {
      StringBuilder buf=new StringBuilder(input.length() - prop.length() + resolved.length());
      buf.append(input.substring(0,location)).append(resolved);
      if (end < input.length() - 1) {
        buf.append(input.substring(end + 1));
      }
      input=buf.toString();
      --location;
    }
 else     if (exceptionIfNotResolved) {
      throw new CommandFormatException("Couldn't resolve property " + prop + " in '"+ input+ "'");
    }
  }
}

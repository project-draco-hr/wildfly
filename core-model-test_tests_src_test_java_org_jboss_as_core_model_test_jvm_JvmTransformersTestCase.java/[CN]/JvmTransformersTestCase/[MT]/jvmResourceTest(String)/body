{
  KernelServicesBuilder builder=createKernelServicesBuilder(TestModelType.DOMAIN).setModelInitializer(StandardServerGroupInitializers.XML_MODEL_INITIALIZER,StandardServerGroupInitializers.XML_MODEL_WRITE_SANITIZER);
  StandardServerGroupInitializers.addServerGroupInitializers(builder.createLegacyKernelServicesBuilder(modelVersion,testControllerVersion));
  KernelServices mainServices=builder.build();
  assertTrue(mainServices.isSuccessfulBoot());
  KernelServices legacyServices=mainServices.getLegacyServices(modelVersion);
  assertTrue(legacyServices.isSuccessfulBoot());
  List<ModelNode> operations=builder.parseXmlResource(configFile);
  ModelTestUtils.checkFailedTransformedBootOperations(mainServices,modelVersion,operations,getConfig());
  boolean allowResourceTransformation=!isIgnoredResourceListAvailableAtRegistration() || modelVersion.getMajor() >= 3;
  try {
    checkCoreModelTransformation(mainServices,modelVersion,FIXER,FIXER);
    if (!allowResourceTransformation) {
      Assert.fail("Resource transformation did not fail");
    }
  }
 catch (  Exception e) {
    if (allowResourceTransformation) {
      throw e;
    }
  }
  if (modelVersion.getMajor() < 3) {
    ModelNode op=Util.getWriteAttributeOperation(ADDRESS,LAUNCH_COMMAND.getName(),new ModelNode());
    mainServices.executeOperation(op,ModelController.OperationTransactionControl.COMMIT);
    checkCoreModelTransformation(mainServices,modelVersion,FIXER,FIXER);
  }
}

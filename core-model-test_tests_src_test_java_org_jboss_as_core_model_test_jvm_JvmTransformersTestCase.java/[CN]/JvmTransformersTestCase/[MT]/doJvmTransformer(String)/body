{
  KernelServicesBuilder builder=createKernelServicesBuilder(TestModelType.DOMAIN).setModelInitializer(StandardServerGroupInitializers.XML_MODEL_INITIALIZER,StandardServerGroupInitializers.XML_MODEL_WRITE_SANITIZER);
  StandardServerGroupInitializers.addServerGroupInitializers(builder.createLegacyKernelServicesBuilder(modelVersion,testControllerVersion));
  KernelServices mainServices=builder.build();
  assertTrue(mainServices.isSuccessfulBoot());
  KernelServices legacyServices=mainServices.getLegacyServices(modelVersion);
  assertTrue(legacyServices.isSuccessfulBoot());
  List<ModelNode> operations=builder.parseXmlResource(xmlResource);
  ModelTestUtils.checkFailedTransformedBootOperations(mainServices,modelVersion,operations,getConfig());
  checkCoreModelTransformation(mainServices,modelVersion,new ModelFixer(){
    @Override public ModelNode fixModel(    ModelNode modelNode){
      modelNode.remove(SOCKET_BINDING_GROUP);
      return modelNode;
    }
  }
,new ModelFixer(){
    @Override public ModelNode fixModel(    ModelNode modelNode){
      modelNode.remove(SOCKET_BINDING_GROUP);
      return isFailExpressions() ? modelNode.resolve() : modelNode;
    }
  }
);
}

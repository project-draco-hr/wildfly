{
  final ServiceRegistry serviceRegistry=context.getServiceRegistry(true);
  if (serviceRegistry.getService(LogServices.loggerName(loggerName)) == null) {
    throw createFailureMessage(MESSAGES.loggerNotFound(loggerName));
  }
  final ServiceController<?> loggerHandlerController=serviceRegistry.getService(LogServices.loggerHandlerName(loggerName,handlerName));
  @SuppressWarnings("unchecked") final ServiceController<Handler> handlerController=(ServiceController<Handler>)serviceRegistry.getService(LogServices.handlerName(handlerName));
  if (loggerHandlerController != null) {
    throw createFailureMessage(MESSAGES.handlerAlreadyDefined(handlerName));
  }
  if (handlerController == null) {
    throw createFailureMessage(MESSAGES.handlerNotFound(handlerName));
  }
  final ServiceTarget target=context.getServiceTarget();
  final LoggerHandlerService service=new LoggerHandlerService(loggerName);
  final ServiceBuilder<Logger> builder=target.addService(LogServices.loggerHandlerName(loggerName,handlerName),service);
  builder.addDependency(LogServices.loggerName(loggerName));
  builder.addDependency(LogServices.handlerName(handlerName),Handler.class,service.getHandlerInjector());
  if (verificationHandler != null)   builder.addListener(verificationHandler);
  return builder.install();
}

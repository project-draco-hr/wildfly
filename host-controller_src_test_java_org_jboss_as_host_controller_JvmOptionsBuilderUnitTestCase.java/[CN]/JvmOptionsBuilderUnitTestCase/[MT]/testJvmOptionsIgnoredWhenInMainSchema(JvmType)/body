{
  JvmElement element=JvmElementTestUtils.create(type);
  JvmElementTestUtils.setDebugEnabled(element,true);
  JvmElementTestUtils.setDebugOptions(element,"-Xrunjdwp:transport=dt_socket,server=y,suspend=n");
  JvmElementTestUtils.setHeapSize(element,"28M");
  JvmElementTestUtils.setMaxHeap(element,"96M");
  JvmElementTestUtils.setPermgenSize(element,"32M");
  JvmElementTestUtils.setMaxPermgen(element,"64M");
  JvmElementTestUtils.setStack(element,"1M");
  JvmElementTestUtils.setAgentLib(element,"blah=x");
  JvmElementTestUtils.setJavaagent(element,"blah.jar=x");
  JvmElementTestUtils.addJvmOption(element,"-Xblah1=yes");
  JvmElementTestUtils.addJvmOption(element,"-Xblah2=no");
  JvmElementTestUtils.addJvmOption(element,"-Xrunjdwp:ignoreme");
  JvmElementTestUtils.addJvmOption(element,"-Xms1024M");
  JvmElementTestUtils.addJvmOption(element,"-Xmx1024M");
  JvmElementTestUtils.addJvmOption(element,"-XX:PermSize=1024M");
  JvmElementTestUtils.addJvmOption(element,"-XX:MaxPermSize=1024M");
  JvmElementTestUtils.addJvmOption(element,"-Xss100M");
  JvmElementTestUtils.addJvmOption(element,"-agentlib:other=x");
  JvmElementTestUtils.addJvmOption(element,"-javaagent:other.jar=x");
  List<String> command=new ArrayList<String>();
  JvmOptionsBuilderFactory.getInstance().addOptions(element,command);
  Assert.assertEquals(type == JvmType.SUN ? 10 : 8,command.size());
  Assert.assertTrue(command.contains("-Xrunjdwp:transport=dt_socket,server=y,suspend=n"));
  Assert.assertTrue(command.contains("-Xms28M"));
  Assert.assertTrue(command.contains("-Xmx96M"));
  if (type == JvmType.SUN) {
    Assert.assertTrue(command.contains("-XX:PermSize=32M"));
    Assert.assertTrue(command.contains("-XX:MaxPermSize=64M"));
  }
  Assert.assertTrue(command.contains("-Xss1M"));
  Assert.assertTrue(command.contains("-agentlib:blah=x"));
  Assert.assertTrue(command.contains("-javaagent:blah.jar=x"));
  Assert.assertTrue(command.contains("-Xblah1=yes"));
  Assert.assertTrue(command.contains("-Xblah2=no"));
}

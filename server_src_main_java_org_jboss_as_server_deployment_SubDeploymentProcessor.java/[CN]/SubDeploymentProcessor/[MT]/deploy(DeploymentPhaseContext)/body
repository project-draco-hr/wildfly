{
  final DeploymentUnit deploymentUnit=phaseContext.getDeploymentUnit();
  final ServiceVerificationHandler serviceVerificationHandler=deploymentUnit.getAttachment(Attachments.SERVICE_VERIFICATION_HANDLER);
  final List<ResourceRoot> childRoots=deploymentUnit.getAttachment(Attachments.RESOURCE_ROOTS);
  if (childRoots != null) {
    final ServiceTarget serviceTarget=phaseContext.getServiceTarget();
    ServiceName previous=null;
    for (    final ResourceRoot childRoot : childRoots) {
      if (!SubDeploymentMarker.isSubDeployment(childRoot)) {
        continue;
      }
      final Resource resource=DeploymentModelUtils.createSubDeployment(childRoot.getRootName(),deploymentUnit);
      final ImmutableManagementResourceRegistration registration=deploymentUnit.getAttachment(DeploymentModelUtils.REGISTRATION_ATTACHMENT);
      final SubDeploymentUnitService service=new SubDeploymentUnitService(childRoot,deploymentUnit,registration,resource,serviceVerificationHandler);
      final ResourceRoot parentRoot=deploymentUnit.getAttachment(Attachments.DEPLOYMENT_ROOT);
      final String relativePath=childRoot.getRoot().getPathNameRelativeTo(parentRoot.getRoot());
      final ServiceName serviceName=Services.deploymentUnitName(deploymentUnit.getName(),relativePath);
      serviceTarget.addService(serviceName,service).addDependency(Services.JBOSS_DEPLOYMENT_CHAINS,DeployerChains.class,service.getDeployerChainsInjector()).setInitialMode(ServiceController.Mode.ACTIVE).install();
      phaseContext.addDeploymentDependency(serviceName,Attachments.SUB_DEPLOYMENTS);
      phaseContext.addToAttachmentList(Attachments.NEXT_PHASE_DEPS,serviceName.append(ServiceName.of(Phase.STRUCTURE.name())));
      previous=serviceName;
    }
  }
}

{
  SwitchContext context=switcher.getSwitchContext(this.getClass().getClassLoader());
  try {
    final Cache<K,V> cache=this.container.getCache(this.getCacheName(cacheName));
    return new AbstractDelegatingCache<K,V>(cache){
      @Override public CacheContainer getCacheManager(){
        return DefaultEmbeddedCacheManager.this;
      }
      @Override public AdvancedCache<K,V> getAdvancedCache(){
        final AdvancedCache<K,V> advancedCache=cache.getAdvancedCache();
        return new AbstractDelegatingAdvancedCache<K,V>(advancedCache){
          @Override public CacheContainer getCacheManager(){
            return DefaultEmbeddedCacheManager.this;
          }
          @Override public AdvancedCache<K,V> getAdvancedCache(){
            return this;
          }
          @Override public Stats getStats(){
            return advancedCache.getStats();
          }
        }
;
      }
    }
;
  }
  finally {
    context.reset();
  }
}

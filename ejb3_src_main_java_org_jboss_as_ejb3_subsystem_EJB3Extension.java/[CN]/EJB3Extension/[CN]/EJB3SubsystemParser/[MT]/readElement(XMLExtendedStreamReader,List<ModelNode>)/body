{
  requireNoAttributes(reader);
  final ModelNode update=new ModelNode();
  update.get(OP).set(ADD);
  update.get(OP_ADDR).add(SUBSYSTEM,SUBSYSTEM_NAME);
  list.add(update);
  final EnumSet<Element> encountered=EnumSet.noneOf(Element.class);
  while (reader.hasNext() && reader.nextTag() != XMLStreamReader.END_ELEMENT) {
switch (Namespace.forUri(reader.getNamespaceURI())) {
case EJB3_1_0:
{
        final Element element=Element.forName(reader.getLocalName());
        if (!encountered.add(element)) {
          throw unexpectedElement(reader);
        }
switch (element) {
case TIMER_SERVICE:
{
            final ModelNode model=parseTimerService(reader);
            update.get(CommonAttributes.TIMER_SERVICE).set(model);
            break;
          }
default :
{
          throw unexpectedElement(reader);
        }
    }
    break;
  }
default :
{
  throw unexpectedElement(reader);
}
}
}
}

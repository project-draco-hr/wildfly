{
  ManagementResourceRegistration registration=parentRegistration.registerSubModel(this);
  ResourceDescriptor descriptor=new ResourceDescriptor(this.getResourceDescriptionResolver()).addAttributes(Attribute.class).addCapabilities(Capability.class);
  ResourceServiceHandler handler=new SimpleResourceServiceHandler<>(new ProtocolConfigurationBuilderFactory());
  new RestartParentResourceAddStepHandler<ChannelFactory>(this.parentBuilderFactory,descriptor,handler){
    @Override protected void populateModel(    OperationContext context,    ModelNode operation,    Resource resource) throws OperationFailedException {
      super.populateModel(context,operation,resource);
      if (ForkProtocolResourceDefinition.this.allowRuntimeOnlyRegistration && (context.getRunningMode() == RunningMode.NORMAL)) {
        context.addStep(new ForkProtocolResourceRegistrationHandler(),OperationContext.Stage.MODEL);
      }
    }
  }
.register(registration);
  new RestartParentResourceRemoveStepHandler<>(this.parentBuilderFactory,descriptor,handler).register(registration);
  for (  DeprecatedAttribute attribute : DeprecatedAttribute.values()) {
    registration.registerReadOnlyAttribute(attribute.getDefinition(),null);
  }
  super.register(registration);
}

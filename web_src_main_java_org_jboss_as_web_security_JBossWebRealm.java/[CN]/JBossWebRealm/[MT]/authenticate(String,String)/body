{
  if (username == null && credentials == null)   return null;
  if (authenticationManager == null)   throw new IllegalStateException("Authentication Manager has not been set");
  if (authorizationManager == null)   throw new IllegalStateException("Authorization Manager has not been set");
  Principal userPrincipal=new SimplePrincipal(username);
  Subject subject=new Subject();
  boolean isValid=authenticationManager.isValid(userPrincipal,credentials,subject);
  if (isValid) {
    if (log.isTraceEnabled()) {
      log.trace("User: " + userPrincipal + " is authenticated");
    }
    SecurityContext sc=SecurityActions.createSecurityContext(authenticationManager.getSecurityDomain());
    sc.getUtil().createSubjectInfo(userPrincipal,credentials,subject);
    SecurityActions.setSecurityContextOnAssociation(sc);
    SecurityContextCallbackHandler scb=new SecurityContextCallbackHandler(sc);
    RoleGroup roles=authorizationManager.getSubjectRoles(subject,scb);
    List<Role> rolesAsList=roles.getRoles();
    List<String> rolesAsStringList=new ArrayList<String>();
    for (    Role role : rolesAsList) {
      rolesAsStringList.add(role.getRoleName());
    }
    return new GenericPrincipal(this,username,credentials,rolesAsStringList);
  }
  return super.authenticate(username,credentials);
}

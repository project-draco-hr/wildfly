{
  waitForComponentStart();
  final BasicComponentInstance basicComponentInstance=this.instantiateComponentInstance(preDestroyInterceptor,interceptorInstanceMap,context);
  if (instance != null) {
    basicComponentInstance.setInstanceData(BasicComponentInstance.INSTANCE_KEY,instance);
  }
  if (invokePostConstruct) {
    final InterceptorContext interceptorContext=new InterceptorContext();
    interceptorContext.putPrivateData(Component.class,this);
    interceptorContext.putPrivateData(ComponentInstance.class,basicComponentInstance);
    interceptorContext.putPrivateData(InvocationType.class,InvocationType.POST_CONSTRUCT);
    interceptorContext.setContextData(new HashMap<String,Object>());
    try {
      postConstructInterceptor.processInvocation(interceptorContext);
    }
 catch (    Exception e) {
      throw MESSAGES.componentConstructionFailure(e);
    }
  }
  componentInstanceCreated(basicComponentInstance);
  return basicComponentInstance;
}

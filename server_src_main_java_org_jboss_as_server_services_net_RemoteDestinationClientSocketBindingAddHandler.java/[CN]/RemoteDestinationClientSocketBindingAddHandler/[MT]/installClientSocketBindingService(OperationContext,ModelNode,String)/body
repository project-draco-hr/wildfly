{
  final ServiceTarget serviceTarget=context.getServiceTarget();
  final String destinationHost=RemoteDestinationClientSocketBindingResourceDefinition.HOST.validateResolvedOperation(model).asString();
  final InetAddress destinationHostAddress=InetAddress.getByName(destinationHost);
  final int destinationPort=RemoteDestinationClientSocketBindingResourceDefinition.PORT.validateResolvedOperation(model).asInt();
  final ModelNode sourceInterfaceModelNode=ClientSocketBindingResourceDefinition.SOURCE_INTERFACE.validateResolvedOperation(model);
  final String sourceInterfaceName=sourceInterfaceModelNode.isDefined() ? sourceInterfaceModelNode.asString() : null;
  final ModelNode sourcePortModelNode=ClientSocketBindingResourceDefinition.SOURCE_PORT.validateResolvedOperation(model);
  final Integer sourcePort=sourcePortModelNode.isDefined() ? sourcePortModelNode.asInt() : null;
  final ModelNode fixedSourcePortModelNode=ClientSocketBindingResourceDefinition.FIXED_SOURCE_PORT.validateResolvedOperation(model);
  final boolean fixedSourcePort=fixedSourcePortModelNode.isDefined() ? fixedSourcePortModelNode.asBoolean() : false;
  final ClientSocketBindingService clientSocketBindingService=new RemoteDestinationClientSocketBindingService(clientSocketName,destinationHostAddress,destinationPort,sourcePort,fixedSourcePort);
  final ServiceBuilder<ClientSocketBinding> serviceBuilder=serviceTarget.addService(ClientSocketBinding.CLIENT_SOCKET_BINDING_BASE_SERVICE_NAME.append(clientSocketName),clientSocketBindingService);
  if (sourceInterfaceName != null) {
    serviceBuilder.addDependency(NetworkInterfaceService.JBOSS_NETWORK_INTERFACE.append(sourceInterfaceName),NetworkInterfaceBinding.class,clientSocketBindingService.getSourceNetworkInterfaceBindingInjector());
  }
  serviceBuilder.addDependency(SocketBindingManager.SOCKET_BINDING_MANAGER,SocketBindingManager.class,clientSocketBindingService.getSocketBindingManagerInjector());
  return serviceBuilder.setInitialMode(ServiceController.Mode.ON_DEMAND).install();
}

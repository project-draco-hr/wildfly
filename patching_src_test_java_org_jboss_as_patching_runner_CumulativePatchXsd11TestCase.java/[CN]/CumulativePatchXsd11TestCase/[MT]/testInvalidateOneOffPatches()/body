{
  PatchInfo info=new LocalPatchInfo(randomString(),PatchInfo.BASE,Collections.<String>emptyList(),env);
  String moduleName=randomString();
  String patchID=randomString();
  File patchDir=mkdir(tempDir,patchID);
  File oneModuleDir=createModule(patchDir,moduleName);
  byte[] oneModuleHash=hashFile(oneModuleDir);
  ContentModification oneModuleAdded=new ContentModification(new ModuleItem(moduleName,null,oneModuleHash),NO_CONTENT,ADD);
  IdentityImpl identity=new IdentityImpl("eap",info.getVersion());
  PatchBuilder1_1 builder=PatchBuilder1_1.create().setPatchId(patchID).setDescription(randomString()).setNoUpgrade().setIdentity(identity);
  PatchElementImpl element=new PatchElementImpl("patch element 01");
  builder.addElement(element);
  element.setDescription("patch element 01 description");
  element.setNoUpgrade();
  PatchElementProviderImpl provider=new PatchElementProviderImpl("base","4.5.6",false);
  provider.require("patch element 02");
  element.setProvider(provider);
  element.addContentModification(oneModuleAdded);
  Patch patch=builder.build();
  createPatchXMLFile(patchDir,patch);
  File zippedPatch=createZippedPatchFile(patchDir,patchID);
  PatchingResult result=executePatch(info,zippedPatch);
  assertPatchHasBeenApplied(result,patch);
  tree(env.getInstalledImage().getJbossHome());
  assertDefinedModule(getModulePath(env,result.getPatchInfo()),moduleName,oneModuleHash);
  String cumulativePatchID=randomString() + "-CP";
  File cumulativePatchDir=mkdir(tempDir,cumulativePatchID);
  File moduleDir=createModule(cumulativePatchDir,moduleName,"this is a module update in a cumulative patch");
  byte[] updatedHashCP=hashFile(moduleDir);
  ContentModification moduleAdded=new ContentModification(new ModuleItem(moduleName,null,updatedHashCP),NO_CONTENT,ADD);
  identity=new IdentityImpl("eap",info.getVersion());
  builder=PatchBuilder1_1.create().setPatchId(cumulativePatchID).setDescription(randomString()).setUpgrade(info.getVersion() + "-CP").setIdentity(identity);
  element=new PatchElementImpl("patch element 01");
  builder.addElement(element);
  element.setDescription("patch element 01 description");
  element.setUpgrade("4.5.7");
  provider=new PatchElementProviderImpl("base","4.5.6",false);
  provider.require("patch element 02");
  element.setProvider(provider);
  element.addContentModification(moduleAdded);
  Patch cumulativePatch=builder.build();
  createPatchXMLFile(cumulativePatchDir,cumulativePatch);
  File zippedCumulativePatch=createZippedPatchFile(cumulativePatchDir,cumulativePatchID);
  PatchingResult resultOfCumulativePatch=executePatch(info,zippedCumulativePatch);
  assertPatchHasBeenApplied(resultOfCumulativePatch,cumulativePatch);
  assertEquals(2,getModulePath(env,resultOfCumulativePatch.getPatchInfo()).length);
  assertDefinedModule(getModulePath(env,resultOfCumulativePatch.getPatchInfo()),moduleName,updatedHashCP);
}

{
  PatchInfo info=new LocalPatchInfo(randomString(),PatchInfo.BASE,Collections.<String>emptyList(),env);
  String moduleName=randomString();
  createModule(env.getInstalledImage().getJbossHome(),moduleName);
  tree(env.getInstalledImage().getJbossHome());
  byte[] existingHash=hashFile(new File(env.getInstalledImage().getModulesDir(),moduleName));
  String cumulativePatchID=randomString() + "-CP";
  File cumulativePatchDir=mkdir(tempDir,cumulativePatchID);
  File moduleDir=createModule(cumulativePatchDir,moduleName,"this is a module update in a cumulative patch");
  byte[] updatedHashCP=hashFile(moduleDir);
  ContentModification moduleAdded=new ContentModification(new ModuleItem(moduleName,null,updatedHashCP),existingHash,MODIFY);
  IdentityImpl identity=new IdentityImpl("eap",info.getVersion());
  PatchBuilder1_1 builder=PatchBuilder1_1.create().setPatchId(cumulativePatchID).setDescription(randomString()).setUpgrade(info.getVersion() + "-CP").setIdentity(identity);
  PatchElementImpl element=new PatchElementImpl("patch element 01");
  builder.addElement(element);
  element.setDescription("patch element 01 description");
  element.setUpgrade("4.5.7");
  PatchElementProviderImpl provider=new PatchElementProviderImpl("base","4.5.6",false);
  provider.require("patch element 02");
  element.setProvider(provider);
  element.addContentModification(moduleAdded);
  Patch cumulativePatch=builder.build();
  createPatchXMLFile(cumulativePatchDir,cumulativePatch);
  File zippedCumulativePatch=createZippedPatchFile(cumulativePatchDir,cumulativePatchID);
  PatchingResult resultOfCumulativePatch=executePatch(info,zippedCumulativePatch);
  assertPatchHasBeenApplied(resultOfCumulativePatch,cumulativePatch);
  assertDefinedModule(getModulePath(env,resultOfCumulativePatch.getPatchInfo()),moduleName,updatedHashCP);
  String oneOffPatchID=randomString();
  File oneOffPatchDir=mkdir(tempDir,oneOffPatchID);
  File oneOffmoduleDir=createModule(oneOffPatchDir,moduleName,"update module resource");
  byte[] updatedHashOneOff=hashFile(oneOffmoduleDir);
  ContentModification moduleUpdated=new ContentModification(new ModuleItem(moduleName,null,updatedHashOneOff),updatedHashCP,MODIFY);
  identity=new IdentityImpl("eap",cumulativePatch.getResultingVersion());
  builder=PatchBuilder1_1.create().setPatchId(oneOffPatchID + "-oneoff").setDescription(randomString()).setNoUpgrade().setIdentity(identity);
  element=new PatchElementImpl("patch element 01");
  builder.addElement(element);
  element.setDescription("patch element 01 description");
  element.setNoUpgrade();
  provider=new PatchElementProviderImpl("base","4.5.7",false);
  provider.require("patch element 02");
  element.setProvider(provider);
  element.addContentModification(moduleUpdated);
  Patch oneOffPatch=builder.build();
  createPatchXMLFile(oneOffPatchDir,oneOffPatch);
  File zippedOneOffPatch=createZippedPatchFile(oneOffPatchDir,oneOffPatchID);
  PatchingResult resultOfOneOffPatch=executePatch(resultOfCumulativePatch.getPatchInfo(),zippedOneOffPatch);
  assertPatchHasBeenApplied(resultOfOneOffPatch,oneOffPatch);
  assertDefinedModule(getModulePath(env,resultOfOneOffPatch.getPatchInfo()),moduleName,updatedHashOneOff);
  PatchingResult resultOfCumulativePatchRollback=rollback(resultOfOneOffPatch.getPatchInfo(),cumulativePatchID);
  tree(env.getInstalledImage().getJbossHome());
  assertPatchHasBeenRolledBack(resultOfCumulativePatchRollback,cumulativePatch,info);
  assertDefinedModule(getModulePath(env,resultOfCumulativePatchRollback.getPatchInfo()),moduleName,existingHash);
}

{
  ModelNode op=httpMgmt.getOpNode("socket-binding-group=standard-sockets/socket-binding=test","add");
  op.get("port").set(8181);
  ModelNode ret=httpMgmt.sendPostCommand(op);
  assertTrue("success".equals(ret.get("outcome").asString()));
  op=httpMgmt.getOpNode("subsystem=undertow/server=default-server/http-listener=test-listener","add");
  op.get("socket-binding").set("test");
  op.get("enabled").set(true);
  ret=httpMgmt.sendPostCommand(op);
  assertTrue("success".equals(ret.get("outcome").asString()));
  String cURL="http://localhost:8181";
  String response=HttpRequest.get(cURL,10,TimeUnit.SECONDS);
  assertTrue("Invalid response: " + response,response.indexOf("JBoss") >= 0);
  ModelNode operation=HttpMgmtProxy.getOpNode("subsystem=undertow/server=default-server/http-listener=test-listener","remove");
  operation.get(OPERATION_HEADERS,ALLOW_RESOURCE_SERVICE_RESTART).set(true);
  ret=httpMgmt.sendPostCommand(operation);
  assertTrue("success".equals(ret.get("outcome").asString()));
  ret=httpMgmt.sendPostCommand("socket-binding-group=standard-sockets/socket-binding=test","remove");
  assertTrue("success".equals(ret.get("outcome").asString()));
  Thread.sleep(5000);
  boolean failed=false;
  try {
    response=HttpRequest.get(cURL,10,TimeUnit.SECONDS);
  }
 catch (  Exception e) {
    failed=true;
  }
  assertTrue("Connector still live: " + response,failed);
}

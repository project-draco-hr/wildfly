{
  PassivationInterceptor.reset();
  TestPassivationRemote remote1=(TestPassivationRemote)ctx.lookup("java:module/" + BeanWithSerializationIssue.class.getSimpleName());
  Assert.assertEquals("Returned remote1 result was not expected",TestPassivationRemote.EXPECTED_RESULT,remote1.returnTrueString());
  TestPassivationRemote remote2=(TestPassivationRemote)ctx.lookup("java:module/" + BeanWithSerializationIssue.class.getSimpleName());
  Assert.assertEquals("Returned remote2 result was not expected",TestPassivationRemote.EXPECTED_RESULT,remote2.returnTrueString());
  Thread.sleep(PASSIVATION_WAIT);
  Assert.assertTrue(PassivationInterceptor.getPrePassivateTarget() instanceof BeanWithSerializationIssue);
  Assert.assertTrue(((BeanWithSerializationIssue)PassivationInterceptor.getPrePassivateTarget()).hasBeenPassivated());
  Assert.assertTrue(PassivationInterceptor.getPostActivateTarget() == null);
  try {
    remote1.returnTrueString();
    Assert.fail("This invocation should not succeed since passivation failed");
  }
 catch (  NoSuchEJBException e) {
  }
}

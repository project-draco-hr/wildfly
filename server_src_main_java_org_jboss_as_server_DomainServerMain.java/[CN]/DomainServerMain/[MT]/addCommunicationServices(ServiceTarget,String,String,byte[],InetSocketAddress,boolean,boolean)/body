{
  final ServiceName endpointName;
  if (!managementSubsystemEndpoint) {
    endpointName=ManagementRemotingServices.MANAGEMENT_ENDPOINT;
    if (!isReconnect) {
      ManagementRemotingServices.installRemotingEndpoint(serviceTarget,ManagementRemotingServices.MANAGEMENT_ENDPOINT,SecurityActions.getSystemProperty(ServerEnvironment.NODE_NAME),EndpointService.EndpointType.MANAGEMENT,OptionMap.create(RemotingOptions.RECEIVE_WINDOW_SIZE,ProtocolChannelClient.Configuration.WINDOW_SIZE),null,null);
    }
  }
 else {
    endpointName=RemotingServices.SUBSYSTEM_ENDPOINT;
  }
  final int port=managementSocket.getPort();
  final String host=NetworkUtils.formatPossibleIpv6Address(managementSocket.getAddress().getHostAddress());
  final HostControllerServerClient client=new HostControllerServerClient(serverName,serverProcessName,host,port,authKey);
  serviceTarget.addService(HostControllerServerClient.SERVICE_NAME,client).addDependency(endpointName,Endpoint.class,client.getEndpointInjector()).addDependency(Services.JBOSS_SERVER_CONTROLLER,ModelController.class,client.getServerControllerInjector()).addDependency(RemoteFileRepository.SERVICE_NAME,RemoteFileRepository.class,client.getRemoteFileRepositoryInjector()).addDependency(ControlledProcessStateService.SERVICE_NAME,ControlledProcessStateService.class,client.getProcessStateInjectedValue()).setInitialMode(ServiceController.Mode.ACTIVE).install();
}

{
  params.address=operation.require(OP_ADDR);
  PathAddress pathAddress=PathAddress.pathAddress(params.address);
  params.name=pathAddress.getLastElement().getValue();
  ModelNode tfNode=PoolAttributeDefinitions.THREAD_FACTORY.resolveModelAttribute(context,model);
  params.threadFactory=tfNode.isDefined() ? tfNode.asString() : null;
  params.properties=model.hasDefined(PROPERTIES) ? model.get(PROPERTIES) : null;
  if (params.properties != null) {
    if (params.properties.getType() != ModelType.LIST) {
      throw new IllegalArgumentException(PROPERTIES + " must be a list of properties");
    }
    for (    ModelNode property : params.properties.asList()) {
      if (property.getType() != ModelType.PROPERTY) {
        throw new IllegalArgumentException(PROPERTIES + " must be a list of properties");
      }
    }
  }
  params.maxThreads=PoolAttributeDefinitions.MAX_THREADS.resolveModelAttribute(context,model).asInt();
  if (model.hasDefined(KEEPALIVE_TIME)) {
    ModelNode keepaliveTime=model.get(KEEPALIVE_TIME);
    if (!keepaliveTime.hasDefined(TIME)) {
      throw new IllegalArgumentException("Missing '" + TIME + "' for '"+ KEEPALIVE_TIME+ "'");
    }
    if (!keepaliveTime.hasDefined(UNIT)) {
      throw new IllegalArgumentException("Missing '" + UNIT + "' for '"+ KEEPALIVE_TIME+ "'");
    }
    params.keepAliveTime=new TimeSpec(Enum.valueOf(TimeUnit.class,keepaliveTime.get(UNIT).asString()),keepaliveTime.get(TIME).asLong());
  }
  return params;
}

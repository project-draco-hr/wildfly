{
  State retryState=stateValues.isSilentOrNonInteractive() ? null : new PromptNewUserState(theConsole,stateValues);
  if (Arrays.equals(stateValues.getUserName().toCharArray(),stateValues.getPassword())) {
    return new ErrorState(theConsole,MESSAGES.usernamePasswordMatch(),retryState);
  }
  for (  char currentChar : stateValues.getUserName().toCharArray()) {
    if ((!isValidPunctuation(currentChar)) && (Character.isLetter(currentChar) || Character.isDigit(currentChar)) == false) {
      return new ErrorState(theConsole,MESSAGES.usernameNotAlphaNumeric(),retryState);
    }
  }
  boolean weakUserName=false;
  for (  String current : BAD_USER_NAMES) {
    if (current.equals(stateValues.getUserName().toLowerCase())) {
      weakUserName=true;
      break;
    }
  }
  State continuingState=new DuplicateUserCheckState(theConsole,stateValues);
  if (weakUserName && stateValues.isSilentOrNonInteractive() == false) {
    String message=MESSAGES.usernameEasyToGuess(stateValues.getUserName());
    String prompt=MESSAGES.sureToAddUser(stateValues.getUserName());
    State noState=new PromptNewUserState(theConsole,stateValues);
    return new ConfirmationChoice(theConsole,message,prompt,continuingState,noState);
  }
  return continuingState;
}

{
  final SimpleInterceptorFactoryContext factoryContext=new SimpleInterceptorFactoryContext();
  final Map<Method,InterceptorFactory> viewInterceptorFactories=ViewService.this.viewInterceptorFactories;
  final Map<Method,Interceptor> viewEntryPoints=new IdentityHashMap<Method,Interceptor>(viewInterceptorFactories.size());
  factoryContext.getContextData().put(Component.class,component);
  for (  Method method : viewInterceptorFactories.keySet()) {
    viewEntryPoints.put(method,viewInterceptorFactories.get(method).create(factoryContext));
  }
  final Interceptor postConstructInterceptor=viewPostConstruct.create(factoryContext);
  final Interceptor preDestroyInterceptor=viewPreDestroy.create(factoryContext);
  final ComponentViewInstance instance=new ViewInstance(viewEntryPoints,preDestroyInterceptor);
  try {
    InterceptorContext context=new InterceptorContext();
    context.putPrivateData(ComponentView.class,this);
    context.putPrivateData(Component.class,component);
    postConstructInterceptor.processInvocation(context);
  }
 catch (  Exception e) {
    throw new RuntimeException("Failed to instantiate component view",e);
  }
  return instance;
}

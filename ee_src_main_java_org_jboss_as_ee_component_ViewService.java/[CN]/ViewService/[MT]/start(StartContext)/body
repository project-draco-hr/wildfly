{
  View view=new View(privateData);
  view.initializeInterceptors();
  this.view=view;
  final SimpleInterceptorFactoryContext factoryContext=new SimpleInterceptorFactoryContext();
  final Component component=view.getComponent();
  factoryContext.getContextData().put(Component.class,component);
  factoryContext.getContextData().put(ComponentView.class,view);
  clientPostConstructInterceptor=clientPostConstruct.create(factoryContext);
  clientPreDestroyInterceptor=clientPreDestroy.create(factoryContext);
  final Map<Method,InterceptorFactory> clientInterceptorFactories=ViewService.this.clientInterceptorFactories;
  clientInterceptors=new IdentityHashMap<Method,Interceptor>(clientInterceptorFactories.size());
  for (  Method method : clientInterceptorFactories.keySet()) {
    clientInterceptors.put(method,clientInterceptorFactories.get(method).create(factoryContext));
  }
}

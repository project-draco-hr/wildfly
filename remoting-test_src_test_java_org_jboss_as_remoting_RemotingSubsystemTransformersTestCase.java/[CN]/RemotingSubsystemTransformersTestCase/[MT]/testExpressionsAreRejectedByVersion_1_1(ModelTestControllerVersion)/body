{
  if (controllerVersion.isEap()) {
    ignoreThisTestIfEAPRepositoryIsNotReachable();
  }
  String subsystemXml=readResource("remoting-with-expressions.xml");
  KernelServicesBuilder builder=createKernelServicesBuilder(createAdditionalInitialization());
  ModelVersion version_1_1=ModelVersion.create(1,1);
  builder.createLegacyKernelServicesBuilder(createAdditionalInitialization(),controllerVersion,version_1_1).addMavenResourceURL("org.jboss.as:jboss-as-remoting:" + controllerVersion.getMavenGavVersion());
  KernelServices mainServices=builder.build();
  assertTrue(mainServices.isSuccessfulBoot());
  KernelServices legacyServices=mainServices.getLegacyServices(version_1_1);
  assertNotNull(legacyServices);
  assertTrue(legacyServices.isSuccessfulBoot());
  PathAddress rootAddr=PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM,RemotingExtension.SUBSYSTEM_NAME));
  ModelTestUtils.checkFailedTransformedBootOperations(mainServices,version_1_1,parse(subsystemXml),new FailedOperationTransformationConfig().addFailedAttribute(rootAddr,new FailedOperationTransformationConfig.RejectExpressionsConfig(RemotingSubsystemRootResource.WORKER_READ_THREADS,RemotingSubsystemRootResource.WORKER_TASK_CORE_THREADS,RemotingSubsystemRootResource.WORKER_TASK_KEEPALIVE,RemotingSubsystemRootResource.WORKER_TASK_LIMIT,RemotingSubsystemRootResource.WORKER_TASK_MAX_THREADS,RemotingSubsystemRootResource.WORKER_WRITE_THREADS)).addFailedAttribute(rootAddr.append(PathElement.pathElement(CommonAttributes.CONNECTOR)).append(PathElement.pathElement(CommonAttributes.PROPERTY)),new FailedOperationTransformationConfig.RejectExpressionsConfig(VALUE)).addFailedAttribute(rootAddr.append(PathElement.pathElement(CommonAttributes.CONNECTOR)).append(PathElement.pathElement(CommonAttributes.SECURITY,CommonAttributes.SASL)),new FailedOperationTransformationConfig.RejectExpressionsConfig(CommonAttributes.SERVER_AUTH,CommonAttributes.REUSE_SESSION)).addFailedAttribute(rootAddr.append(PathElement.pathElement(CommonAttributes.CONNECTOR)).append(PathElement.pathElement(CommonAttributes.SECURITY,CommonAttributes.SASL)).append(PathElement.pathElement(CommonAttributes.SASL_POLICY)),new FailedOperationTransformationConfig.RejectExpressionsConfig(CommonAttributes.FORWARD_SECRECY,CommonAttributes.NO_ACTIVE,CommonAttributes.NO_ANONYMOUS,CommonAttributes.NO_DICTIONARY,CommonAttributes.NO_PLAIN_TEXT,CommonAttributes.PASS_CREDENTIALS)).addFailedAttribute(rootAddr.append(PathElement.pathElement(CommonAttributes.CONNECTOR)).append(PathElement.pathElement(CommonAttributes.PROPERTY)),new FailedOperationTransformationConfig.RejectExpressionsConfig(CommonAttributes.VALUE)).addFailedAttribute(rootAddr.append(PathElement.pathElement(CommonAttributes.CONNECTOR)).append(PathElement.pathElement(CommonAttributes.SECURITY,CommonAttributes.SASL)).append(CommonAttributes.PROPERTY),new FailedOperationTransformationConfig.RejectExpressionsConfig(CommonAttributes.VALUE)).addFailedAttribute(rootAddr.append(PathElement.pathElement(CommonAttributes.OUTBOUND_CONNECTION)).append(CommonAttributes.PROPERTY),new FailedOperationTransformationConfig.RejectExpressionsConfig(CommonAttributes.VALUE)).addFailedAttribute(rootAddr.append(PathElement.pathElement(CommonAttributes.REMOTE_OUTBOUND_CONNECTION)),new FailedOperationTransformationConfig.ChainedConfig(toList(new FailedOperationTransformationConfig.RejectExpressionsConfig(CommonAttributes.USERNAME),new FixProtocolConfig(CommonAttributes.PROTOCOL)),CommonAttributes.USERNAME,CommonAttributes.PROTOCOL)).addFailedAttribute(rootAddr.append(PathElement.pathElement(CommonAttributes.REMOTE_OUTBOUND_CONNECTION)).append(PathElement.pathElement(CommonAttributes.PROPERTY)),new FailedOperationTransformationConfig.RejectExpressionsConfig(CommonAttributes.VALUE)).addFailedAttribute(rootAddr.append(PathElement.pathElement(CommonAttributes.LOCAL_OUTBOUND_CONNECTION)).append(PathElement.pathElement(CommonAttributes.PROPERTY)),new FailedOperationTransformationConfig.RejectExpressionsConfig(CommonAttributes.VALUE)));
}

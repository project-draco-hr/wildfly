{
  final ModelVersion version=ModelVersion.create(1,4,0);
  final ResourceTransformationDescriptionBuilder subsystemBuilder=TransformationDescriptionBuilder.Factory.createSubsystemInstance();
  subsystemBuilder.addChildResource(CacheContainerResourceDefinition.CONTAINER_PATH).addChildResource(DistributedCacheResourceDefinition.DISTRIBUTED_CACHE_PATH).getAttributeBuilder().setDiscard(DiscardAttributeChecker.UNDEFINED,DistributedCacheResourceDefinition.VIRTUAL_NODES).setValueConverter(new AttributeConverter.DefaultAttributeConverter(){
    @Override protected void convertAttribute(    PathAddress address,    String attributeName,    ModelNode attributeValue,    TransformationContext context){
      if (attributeValue.isDefined()) {
        attributeValue.set(SegmentsAndVirtualNodeConverter.virtualNodesToSegments(attributeValue));
      }
    }
  }
,DistributedCacheResourceDefinition.VIRTUAL_NODES).addRename(DistributedCacheResourceDefinition.VIRTUAL_NODES,DistributedCacheResourceDefinition.SEGMENTS.getName()).end();
  TransformationDescription.Tools.register(subsystemBuilder.build(),subsystem,version);
}

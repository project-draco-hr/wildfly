{
  ResourceTransformationDescriptionBuilder builder=TransformationDescriptionBuilder.Factory.createSubsystemInstance();
  ResourceTransformationDescriptionBuilder containerBuilder=builder.addChildResource(CacheContainerResourceDefinition.CONTAINER_PATH).getAttributeBuilder().setDiscard(new DiscardAttributeChecker.DiscardAttributeValueChecker(false,false,new ModelNode(true)),CacheResourceDefinition.STATISTICS).addRejectCheck(RejectAttributeChecker.UNDEFINED,CacheResourceDefinition.STATISTICS).addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,CacheResourceDefinition.STATISTICS).addRejectCheck(new RejectAttributeChecker.SimpleRejectAttributeChecker(new ModelNode(false)),CacheResourceDefinition.STATISTICS).end();
  ResourceTransformationDescriptionBuilder distributedCacheBuilder=containerBuilder.addChildResource(DistributedCacheResourceDefinition.DISTRIBUTED_CACHE_PATH);
  distributedCacheBuilder.getAttributeBuilder().setDiscard(new DiscardAttributeChecker.DiscardAttributeValueChecker(false,false,new ModelNode(true)),CacheResourceDefinition.STATISTICS).addRejectCheck(RejectAttributeChecker.UNDEFINED,CacheResourceDefinition.STATISTICS).addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,CacheResourceDefinition.STATISTICS).addRejectCheck(new RejectAttributeChecker.SimpleRejectAttributeChecker(new ModelNode(false)),CacheResourceDefinition.STATISTICS).end();
  distributedCacheBuilder.rejectChildResource(BackupSiteResourceDefinition.BACKUP_PATH);
  distributedCacheBuilder.rejectChildResource(BackupForResourceDefinition.BACKUP_FOR_PATH);
  ResourceTransformationDescriptionBuilder replicatedCacheBuilder=containerBuilder.addChildResource(ReplicatedCacheResourceDefinition.REPLICATED_CACHE_PATH);
  replicatedCacheBuilder.getAttributeBuilder().setDiscard(new DiscardAttributeChecker.DiscardAttributeValueChecker(false,false,new ModelNode(true)),CacheResourceDefinition.STATISTICS).addRejectCheck(RejectAttributeChecker.UNDEFINED,CacheResourceDefinition.STATISTICS).addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,CacheResourceDefinition.STATISTICS).addRejectCheck(new RejectAttributeChecker.SimpleRejectAttributeChecker(new ModelNode(false)),CacheResourceDefinition.STATISTICS).end();
  replicatedCacheBuilder.rejectChildResource(BackupSiteResourceDefinition.BACKUP_PATH);
  replicatedCacheBuilder.rejectChildResource(BackupForResourceDefinition.BACKUP_FOR_PATH);
  containerBuilder.addChildResource(InvalidationCacheResourceDefinition.INVALIDATION_CACHE_PATH).getAttributeBuilder().setDiscard(new DiscardAttributeChecker.DiscardAttributeValueChecker(false,false,new ModelNode(true)),CacheResourceDefinition.STATISTICS).addRejectCheck(RejectAttributeChecker.UNDEFINED,CacheResourceDefinition.STATISTICS).addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,CacheResourceDefinition.STATISTICS).addRejectCheck(new RejectAttributeChecker.SimpleRejectAttributeChecker(new ModelNode(false)),CacheResourceDefinition.STATISTICS).end();
  containerBuilder.addChildResource(LocalCacheResourceDefinition.LOCAL_CACHE_PATH).getAttributeBuilder().setDiscard(new DiscardAttributeChecker.DiscardAttributeValueChecker(false,false,new ModelNode(true)),CacheResourceDefinition.STATISTICS).addRejectCheck(RejectAttributeChecker.UNDEFINED,CacheResourceDefinition.STATISTICS).addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,CacheResourceDefinition.STATISTICS).addRejectCheck(new RejectAttributeChecker.SimpleRejectAttributeChecker(new ModelNode(false)),CacheResourceDefinition.STATISTICS).end();
  TransformationDescription.Tools.register(builder.build(),subsystem,ModelVersion.create(1,4,1));
}

{
  Map<PathAddress,ModelNode> operations=new LinkedHashMap<>();
  PathAddress address=PathAddress.pathAddress(JGroupsSubsystemResourceDefinition.PATH);
  ModelNode operation=Util.createAddOperation(address);
  operations.put(address,operation);
  if (!this.schema.since(JGroupsSchema.VERSION_3_0)) {
    @SuppressWarnings("deprecation") String defaultStack=require(reader,Attribute.DEFAULT_STACK);
    JGroupsSubsystemResourceDefinition.DEFAULT_STACK.parseAndSetParameter(defaultStack,operation,reader);
  }
  while (reader.hasNext() && (reader.nextTag() != XMLStreamConstants.END_ELEMENT)) {
    Element element=Element.forName(reader.getLocalName());
switch (element) {
case CHANNELS:
{
        if (this.schema.since(JGroupsSchema.VERSION_3_0)) {
          this.parseChannels(reader,address,operations);
          break;
        }
      }
case STACKS:
{
      if (this.schema.since(JGroupsSchema.VERSION_3_0)) {
        this.parseStacks(reader,address,operations);
        break;
      }
    }
case STACK:
{
    if (!this.schema.since(JGroupsSchema.VERSION_3_0)) {
      this.parseStack(reader,address,operations);
      break;
    }
  }
default :
{
  throw ParseUtils.unexpectedElement(reader);
}
}
}
result.addAll(operations.values());
}

{
  deployer.undeploy(DEPLOYMENT_2);
  controller.stop(CONTAINER_2);
  DefaultHttpClient client=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient();
  URI uri1=MyServiceServlet.createURI(baseURL1);
  URI uri2=MyServiceServlet.createURI(baseURL2);
  try {
    this.establishView(client,baseURL1,NODE_1);
    HttpResponse response=client.execute(new HttpGet(uri1));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertEquals(NODE_1,response.getFirstHeader("node").getValue());
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    controller.start(CONTAINER_2);
    deployer.deploy(DEPLOYMENT_2);
    this.establishView(client,baseURL1,NODE_1,NODE_2);
    response=client.execute(new HttpGet(uri1));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertEquals(MyServiceActivator.PREFERRED_NODE,response.getFirstHeader("node").getValue());
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    response=client.execute(new HttpGet(uri2));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertEquals(MyServiceActivator.PREFERRED_NODE,response.getFirstHeader("node").getValue());
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    controller.stop(CONTAINER_2);
    this.establishView(client,baseURL1,NODE_1);
    response=client.execute(new HttpGet(uri1));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertEquals(NODE_1,response.getFirstHeader("node").getValue());
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    controller.start(CONTAINER_2);
    this.establishView(client,baseURL1,NODE_1,NODE_2);
    response=client.execute(new HttpGet(uri1));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertEquals(MyServiceActivator.PREFERRED_NODE,response.getFirstHeader("node").getValue());
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    response=client.execute(new HttpGet(uri2));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertEquals(MyServiceActivator.PREFERRED_NODE,response.getFirstHeader("node").getValue());
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    controller.stop(CONTAINER_1);
    this.establishView(client,baseURL2,NODE_2);
    response=client.execute(new HttpGet(uri2));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertEquals(NODE_2,response.getFirstHeader("node").getValue());
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    controller.start(CONTAINER_1);
    this.establishView(client,baseURL2,NODE_1,NODE_2);
    response=client.execute(new HttpGet(uri1));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertEquals(MyServiceActivator.PREFERRED_NODE,response.getFirstHeader("node").getValue());
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    response=client.execute(new HttpGet(uri2));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertEquals(MyServiceActivator.PREFERRED_NODE,response.getFirstHeader("node").getValue());
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
  }
  finally {
    HttpClientUtils.closeQuietly(client);
    deployer.undeploy(DEPLOYMENT_1);
    controller.stop(CONTAINER_1);
    deployer.undeploy(DEPLOYMENT_2);
    controller.stop(CONTAINER_2);
  }
}

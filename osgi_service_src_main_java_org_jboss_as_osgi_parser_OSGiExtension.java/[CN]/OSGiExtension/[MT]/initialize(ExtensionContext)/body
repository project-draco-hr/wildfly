{
  boolean registerRuntimeOnly=context.isRuntimeOnlyRegistrationValid();
  final SubsystemRegistration subsystem=context.registerSubsystem(SUBSYSTEM_NAME,1,0);
  final ManagementResourceRegistration registration=subsystem.registerSubsystemModel(OSGiDescriptionProviders.SUBSYSTEM);
  registration.registerOperationHandler(ModelDescriptionConstants.ADD,OSGiSubsystemAdd.INSTANCE,OSGiDescriptionProviders.SUBSYSTEM_ADD,false);
  registration.registerReadWriteAttribute(ModelConstants.ACTIVATION,null,ActivationAttributeHandler.INSTANCE,EnumSet.of(AttributeAccess.Flag.STORAGE_CONFIGURATION,AttributeAccess.Flag.RESTART_JVM));
  registration.registerOperationHandler(ModelDescriptionConstants.DESCRIBE,OSGiSubsystemDescribeHandler.INSTANCE,OSGiDescriptionProviders.SUBSYSTEM_ADD,false,OperationEntry.EntryType.PRIVATE);
  registration.registerOperationHandler(ModelDescriptionConstants.REMOVE,ReloadRequiredRemoveStepHandler.INSTANCE,OSGiDescriptionProviders.SUBSYSTEM_REMOVE,false);
  ManagementResourceRegistration properties=registration.registerSubModel(PathElement.pathElement(ModelConstants.PROPERTY),OSGiDescriptionProviders.PROPERTY_DESCRIPTION);
  properties.registerOperationHandler(ModelDescriptionConstants.ADD,OSGiFrameworkPropertyAdd.INSTANCE,OSGiFrameworkPropertyAdd.DESCRIPTION,false);
  properties.registerOperationHandler(ModelDescriptionConstants.REMOVE,OSGiFrameworkPropertyRemove.INSTANCE,OSGiFrameworkPropertyRemove.DESCRIPTION,false);
  properties.registerReadWriteAttribute(ModelConstants.VALUE,null,OSGiFrameworkPropertyWrite.INSTANCE,Storage.CONFIGURATION);
  ManagementResourceRegistration capabilities=registration.registerSubModel(PathElement.pathElement(ModelConstants.CAPABILITY),OSGiDescriptionProviders.CAPABILITY_DESCRIPTION);
  capabilities.registerOperationHandler(ModelDescriptionConstants.ADD,OSGiCapabilityAdd.INSTANCE,OSGiCapabilityAdd.DESCRIPTION,false);
  capabilities.registerOperationHandler(ModelDescriptionConstants.REMOVE,OSGiCapabilityRemove.INSTANCE,OSGiCapabilityRemove.DESCRIPTION,false);
  capabilities.registerReadOnlyAttribute(ModelConstants.STARTLEVEL,null,Storage.RUNTIME);
  if (registerRuntimeOnly) {
    registration.registerOperationHandler(ModelConstants.ACTIVATE,ActivateOperationHandler.INSTANCE,OSGiDescriptionProviders.ACTIVATE_OPERATION,EnumSet.of(OperationEntry.Flag.RESTART_NONE));
    registration.registerReadWriteAttribute(ModelConstants.STARTLEVEL,StartLevelHandler.READ_HANDLER,StartLevelHandler.WRITE_HANDLER,Storage.RUNTIME);
    BundleResourceHandler.INSTANCE.register(registration.registerSubModel(PathElement.pathElement(ModelConstants.BUNDLE),OSGiDescriptionProviders.BUNDLE_DESCRIPTION));
  }
  subsystem.registerXMLElementWriter(OSGiSubsystemWriter.INSTANCE);
}

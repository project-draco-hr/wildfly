{
  final ModelVersion version110=ModelVersion.create(1,1,0);
  final RejectExpressionValuesTransformer TRANSFORMER=new RejectExpressionValuesTransformer(PropertyResourceDefinition.VALUE,TransportResourceDefinition.PROPERTIES,ProtocolResourceDefinition.PROPERTIES,TransportResourceDefinition.SHARED);
  final TransformersSubRegistration registration=subsystem.registerModelTransformers(version110,ResourceTransformer.DEFAULT);
  final TransformersSubRegistration stack=registration.registerSubResource(StackResourceDefinition.STACK_PATH);
  final TransformersSubRegistration transport=stack.registerSubResource(TransportResourceDefinition.TRANSPORT_PATH,(ResourceTransformer)TRANSFORMER);
  transport.registerOperationTransformer(ADD,TRANSFORMER);
  transport.registerOperationTransformer(WRITE_ATTRIBUTE_OPERATION,TRANSFORMER.getWriteAttributeTransformer());
  final TransformersSubRegistration transport_property=transport.registerSubResource(PropertyResourceDefinition.PROPERTY_PATH);
  transport_property.registerOperationTransformer(ADD,TRANSFORMER);
  transport_property.registerOperationTransformer(WRITE_ATTRIBUTE_OPERATION,TRANSFORMER.getWriteAttributeTransformer());
  final TransformersSubRegistration protocol=stack.registerSubResource(ProtocolResourceDefinition.PROTOCOL_PATH,(ResourceTransformer)TRANSFORMER);
  protocol.registerOperationTransformer(ADD,TRANSFORMER);
  final TransformersSubRegistration protocol_property=protocol.registerSubResource(PropertyResourceDefinition.PROPERTY_PATH);
  protocol_property.registerOperationTransformer(ADD,TRANSFORMER);
  protocol_property.registerOperationTransformer(WRITE_ATTRIBUTE_OPERATION,TRANSFORMER.getWriteAttributeTransformer());
}

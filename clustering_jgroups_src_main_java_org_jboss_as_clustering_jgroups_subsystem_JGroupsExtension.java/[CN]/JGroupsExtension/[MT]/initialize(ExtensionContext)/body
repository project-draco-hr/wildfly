{
  SubsystemRegistration subsystem=context.registerSubsystem(SUBSYSTEM_NAME,Namespace.CURRENT.getMajorVersion(),Namespace.CURRENT.getMinorVersion());
  subsystem.registerXMLElementWriter(new JGroupsSubsystemXMLWriter());
  ManagementResourceRegistration registration=subsystem.registerSubsystemModel(JGroupsSubsystemProviders.SUBSYSTEM_DESCRIBE);
  registration.registerOperationHandler(ModelDescriptionConstants.ADD,JGroupsSubsystemAdd.INSTANCE,JGroupsSubsystemProviders.SUBSYSTEM_ADD,false);
  registration.registerOperationHandler(ModelDescriptionConstants.REMOVE,JGroupsSubsystemRemove.INSTANCE,JGroupsSubsystemProviders.SUBSYSTEM_REMOVE,false);
  registration.registerOperationHandler(ModelDescriptionConstants.DESCRIBE,JGroupsSubsystemDescribe.INSTANCE,JGroupsSubsystemProviders.SUBSYSTEM_DESCRIBE,false,EntryType.PRIVATE);
  ManagementResourceRegistration stacks=registration.registerSubModel(stacksPath,JGroupsSubsystemProviders.STACK);
  stacks.registerOperationHandler(ModelDescriptionConstants.ADD,ProtocolStackAdd.INSTANCE,JGroupsSubsystemProviders.STACK_ADD,false);
  stacks.registerOperationHandler(ModelDescriptionConstants.REMOVE,ProtocolStackRemove.INSTANCE,JGroupsSubsystemProviders.STACK_REMOVE,false);
  stacks.registerOperationHandler(ModelKeys.ADD_PROTOCOL,StackConfigOperationHandlers.PROTOCOL_ADD,JGroupsSubsystemProviders.PROTOCOL_ADD);
  stacks.registerOperationHandler(ModelKeys.REMOVE_PROTOCOL,StackConfigOperationHandlers.PROTOCOL_REMOVE,JGroupsSubsystemProviders.PROTOCOL_REMOVE);
  final ManagementResourceRegistration transport=stacks.registerSubModel(transportPath,JGroupsSubsystemProviders.TRANSPORT);
  transport.registerOperationHandler(ADD,StackConfigOperationHandlers.TRANSPORT_ADD,JGroupsSubsystemProviders.TRANSPORT_ADD);
  transport.registerOperationHandler(REMOVE,StackConfigOperationHandlers.REMOVE,JGroupsSubsystemProviders.TRANSPORT_REMOVE);
  StackConfigOperationHandlers.TRANSPORT_ATTR.registerAttributes(transport);
  createPropertyRegistration(transport);
  final ManagementResourceRegistration protocol=stacks.registerSubModel(protocolPath,JGroupsSubsystemProviders.PROTOCOL);
  protocol.registerOperationHandler(ADD,StackConfigOperationHandlers.PROTOCOL_ADD,JGroupsSubsystemProviders.PROTOCOL_ADD);
  protocol.registerOperationHandler(ModelDescriptionConstants.REMOVE,StackConfigOperationHandlers.REMOVE,JGroupsSubsystemProviders.PROTOCOL_REMOVE);
  StackConfigOperationHandlers.PROTOCOL_ATTR.registerAttributes(protocol);
  JGroupsExtension.createPropertyRegistration(protocol);
}

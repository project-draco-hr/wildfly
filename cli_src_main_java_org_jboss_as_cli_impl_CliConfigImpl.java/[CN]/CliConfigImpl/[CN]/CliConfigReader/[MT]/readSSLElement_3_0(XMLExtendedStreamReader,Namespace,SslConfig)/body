{
  final CLIVaultReader vaultReader=new CLIVaultReader();
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
    assertExpectedNamespace(reader,expectedNs);
    final String localName=reader.getLocalName();
    if ("vault".equals(localName)) {
      assertExpectedNamespace(reader,expectedNs);
      final VaultConfig vaultConfig=VaultConfig.readVaultElement_3_0(reader,expectedNs);
      try {
        vaultReader.init(vaultConfig);
      }
 catch (      GeneralSecurityException e) {
        throw new XMLStreamException("Failed to initialize vault",e);
      }
    }
 else     if ("alias".equals(localName)) {
      config.setAlias(reader.getElementText());
    }
 else     if ("key-store".equals(localName) || "keyStore".equals(localName)) {
      config.setKeyStore(reader.getElementText());
    }
 else     if ("key-store-password".equals(localName) || "keyStorePassword".equals(localName)) {
      config.setKeyStorePassword(getPassword(vaultReader,reader.getElementText()));
    }
 else     if ("key-password".equals(localName) || "keyPassword".equals(localName)) {
      config.setKeyPassword(getPassword(vaultReader,reader.getElementText()));
    }
 else     if ("trust-store".equals(localName) || "trustStore".equals(localName)) {
      config.setTrustStore(reader.getElementText());
    }
 else     if ("trust-store-password".equals(localName) || "trustStorePassword".equals(localName)) {
      config.setTrustStorePassword(getPassword(vaultReader,reader.getElementText()));
    }
 else     if ("modify-trust-store".equals(localName) || "modifyTrustStore".equals(localName)) {
      config.setModifyTrustStore(resolveBoolean(reader.getElementText()));
    }
 else {
      throw new XMLStreamException("Unexpected child of ssl : " + localName);
    }
  }
}

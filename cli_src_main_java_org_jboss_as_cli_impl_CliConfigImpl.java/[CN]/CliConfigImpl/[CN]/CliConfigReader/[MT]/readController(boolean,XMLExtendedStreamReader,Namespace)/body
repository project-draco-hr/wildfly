{
  String protocol=null;
  String host=null;
  int port=-1;
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
    assertExpectedNamespace(reader,expectedNs);
    final String localName=reader.getLocalName();
    final String resolved=resolveString(reader.getElementText());
    if (HOST.equals(localName) && host == null) {
      host=resolved;
    }
 else     if (PROTOCOL.equals(localName) && protocol == null && allowProtocol) {
      protocol=resolved;
    }
 else     if (PORT.equals(localName) && port < 0) {
      try {
        port=Integer.parseInt(resolved);
        if (port < 0) {
          throw new XMLStreamException("Invalid negative port \"" + resolved + "\"");
        }
      }
 catch (      NumberFormatException e) {
        throw new XMLStreamException("Failed to parse " + DEFAULT_CONTROLLER + " "+ PORT+ " value '"+ resolved+ "'",e);
      }
    }
 else {
      throw new XMLStreamException("Unexpected child of " + DEFAULT_CONTROLLER + ": "+ localName);
    }
  }
  return new ControllerAddress(protocol,host == null ? "localhost" : host,port);
}

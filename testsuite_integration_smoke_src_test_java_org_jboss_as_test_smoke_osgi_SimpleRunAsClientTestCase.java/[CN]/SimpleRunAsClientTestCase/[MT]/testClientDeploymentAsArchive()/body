{
  deployer.deploy(DEPLOYMENT_NAME);
  try {
    Long bundleId=getBundleId(getControllerClient(),SYMBOLIC_NAME,null);
    Assert.assertNotNull("Bundle found",bundleId);
    Assert.assertEquals("INSTALLED",getBundleState(getControllerClient(),bundleId));
    Assert.assertTrue("Bundle started",bundleStart(getControllerClient(),bundleId));
    Assert.assertEquals("ACTIVE",getBundleState(getControllerClient(),bundleId));
    ModelNode info=getBundleInfo(getControllerClient(),bundleId);
    Assert.assertEquals(7,info.asList().size());
    Assert.assertEquals(bundleId,(Long)info.get(ModelConstants.ID).asLong());
    Assert.assertEquals(1,info.get(ModelConstants.STARTLEVEL).asInt());
    Assert.assertEquals("ACTIVE",info.get(ModelConstants.STATE).asString());
    Assert.assertEquals(SYMBOLIC_NAME,info.get(ModelConstants.SYMBOLIC_NAME).asString());
    Assert.assertEquals(DEPLOYMENT_NAME,info.get(ModelConstants.LOCATION).asString());
    Assert.assertEquals("bundle",info.get(ModelConstants.TYPE).asString());
    Assert.assertEquals("0.0.0",info.get(ModelConstants.VERSION).asString());
    Assert.assertTrue("Bundle stopped",bundleStop(getControllerClient(),bundleId));
    Assert.assertEquals("RESOLVED",getBundleState(getControllerClient(),bundleId));
    Assert.assertTrue("Bundle started",bundleStart(getControllerClient(),DEPLOYMENT_NAME));
    Assert.assertEquals("ACTIVE",getBundleState(getControllerClient(),DEPLOYMENT_NAME));
    Assert.assertTrue("Bundle stopped",bundleStop(getControllerClient(),DEPLOYMENT_NAME));
    Assert.assertEquals("RESOLVED",getBundleState(getControllerClient(),DEPLOYMENT_NAME));
  }
  finally {
    deployer.undeploy(DEPLOYMENT_NAME);
  }
}

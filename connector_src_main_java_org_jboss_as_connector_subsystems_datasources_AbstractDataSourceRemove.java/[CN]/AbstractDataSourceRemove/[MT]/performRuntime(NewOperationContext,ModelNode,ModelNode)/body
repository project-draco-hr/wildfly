{
  final ModelNode opAddr=operation.require(OP_ADDR);
  final String serviceName=PathAddress.pathAddress(opAddr).getLastElement().getValue();
  final String rawJndiName=model.require(JNDINAME).asString();
  final String jndiName;
  if (!rawJndiName.startsWith("java:/") && model.hasDefined(USE_JAVA_CONTEXT) && model.get(USE_JAVA_CONTEXT).asBoolean()) {
    jndiName="java:/" + rawJndiName;
  }
 else {
    jndiName=rawJndiName;
  }
  final ServiceRegistry registry=context.getServiceRegistry(true);
  final ServiceName binderServiceName=ContextNames.JAVA_CONTEXT_SERVICE_NAME.append(jndiName);
  final ServiceController<?> binderController=registry.getService(binderServiceName);
  if (binderController != null) {
    context.removeService(binderServiceName);
  }
  final ServiceName referenceFactoryServiceName=DataSourceReferenceFactoryService.SERVICE_NAME_BASE.append(serviceName);
  final ServiceController<?> referenceFactoryController=registry.getService(referenceFactoryServiceName);
  if (referenceFactoryController != null) {
    context.removeService(referenceFactoryServiceName);
  }
  final ServiceName dataSourceConfigServiceName=DataSourceConfigService.SERVICE_NAME_BASE.append(serviceName);
  final ServiceController<?> dataSourceConfigController=registry.getService(dataSourceConfigServiceName);
  if (dataSourceConfigController != null) {
    context.removeService(dataSourceConfigServiceName);
  }
  final ServiceName xaDataSourceConfigServiceName=XADataSourceConfigService.SERVICE_NAME_BASE.append(serviceName);
  final ServiceController<?> xaDataSourceConfigController=registry.getService(xaDataSourceConfigServiceName);
  if (xaDataSourceConfigController != null) {
    context.removeService(xaDataSourceConfigServiceName);
  }
  final ServiceName dataSourceServiceName=AbstractDataSourceService.SERVICE_NAME_BASE.append(serviceName);
  final ServiceController<?> dataSourceController=registry.getService(dataSourceServiceName);
  if (dataSourceController != null) {
    context.removeService(dataSourceServiceName);
  }
}

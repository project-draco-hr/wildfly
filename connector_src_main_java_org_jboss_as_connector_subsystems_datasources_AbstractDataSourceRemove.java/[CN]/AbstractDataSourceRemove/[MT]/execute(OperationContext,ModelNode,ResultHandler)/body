{
  final ModelNode opAddr=operation.require(OP_ADDR);
  final String serviceName=PathAddress.pathAddress(opAddr).getLastElement().getValue();
  final ModelNode model=context.getSubModel();
  final ModelNode compensating=Util.getEmptyOperation(ADD,opAddr);
  final String rawJndiName=model.require(JNDINAME).asString();
  final String jndiName;
  if (!rawJndiName.startsWith("java:/") && model.hasDefined(USE_JAVA_CONTEXT) && model.get(USE_JAVA_CONTEXT).asBoolean()) {
    jndiName="java:/" + rawJndiName;
  }
 else {
    jndiName=rawJndiName;
  }
  if (model.has(CONNECTION_PROPERTIES)) {
    for (    ModelNode property : model.get(CONNECTION_PROPERTIES).asList()) {
      compensating.get(CONNECTION_PROPERTIES,property.asProperty().getName()).set(property.asString());
    }
  }
  for (  final AttributeDefinition attribute : getModelProperties()) {
    if (model.hasDefined(attribute.getName())) {
      compensating.get(attribute.getName()).set(model.get(attribute.getName()));
    }
  }
  if (context.getRuntimeContext() != null) {
    context.getRuntimeContext().setRuntimeTask(new RuntimeTask(){
      @Override public void execute(      RuntimeTaskContext context) throws OperationFailedException {
        final ServiceRegistry registry=context.getServiceRegistry();
        final ServiceName binderServiceName=ContextNames.JAVA_CONTEXT_SERVICE_NAME.append(jndiName);
        final ServiceController<?> binderController=registry.getService(binderServiceName);
        if (binderController != null) {
          binderController.setMode(ServiceController.Mode.REMOVE);
        }
        final ServiceName referenceFactoryServiceName=DataSourceReferenceFactoryService.SERVICE_NAME_BASE.append(serviceName);
        final ServiceController<?> referenceFactoryController=registry.getService(referenceFactoryServiceName);
        if (referenceFactoryController != null) {
          referenceFactoryController.setMode(ServiceController.Mode.REMOVE);
        }
        final ServiceName dataSourceConfigServiceName=DataSourceConfigService.SERVICE_NAME_BASE.append(serviceName);
        final ServiceController<?> dataSourceConfigController=registry.getService(dataSourceConfigServiceName);
        if (dataSourceConfigController != null) {
          dataSourceConfigController.setMode(ServiceController.Mode.REMOVE);
        }
        final ServiceName xaDataSourceConfigServiceName=XADataSourceConfigService.SERVICE_NAME_BASE.append(serviceName);
        final ServiceController<?> xaDataSourceConfigController=registry.getService(xaDataSourceConfigServiceName);
        if (xaDataSourceConfigController != null) {
          xaDataSourceConfigController.setMode(ServiceController.Mode.REMOVE);
        }
        final ServiceName dataSourceServiceName=AbstractDataSourceService.SERVICE_NAME_BASE.append(serviceName);
        final ServiceController<?> dataSourceController=registry.getService(dataSourceServiceName);
        if (dataSourceController != null) {
          dataSourceController.setMode(ServiceController.Mode.REMOVE);
        }
        resultHandler.handleResultComplete();
      }
    }
);
  }
 else {
    resultHandler.handleResultComplete();
  }
  return new BasicOperationResult(compensating);
}

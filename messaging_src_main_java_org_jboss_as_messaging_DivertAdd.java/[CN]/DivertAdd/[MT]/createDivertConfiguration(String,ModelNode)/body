{
  final ModelNode routingNode=CommonAttributes.ROUTING_NAME.validateResolvedOperation(model);
  final String routingName=routingNode.isDefined() ? routingNode.asString() : null;
  final String address=CommonAttributes.DIVERT_ADDRESS.validateResolvedOperation(model).asString();
  final String forwardingAddress=CommonAttributes.FORWARDING_ADDRESS.validateResolvedOperation(model).asString();
  final boolean exclusive=CommonAttributes.EXCLUSIVE.validateResolvedOperation(model).asBoolean();
  final ModelNode filterNode=CommonAttributes.FILTER.validateResolvedOperation(model);
  final String filter=filterNode.isDefined() ? filterNode.asString() : null;
  final ModelNode transformerNode=CommonAttributes.TRANSFORMER_CLASS_NAME.validateResolvedOperation(model);
  final String transformerClassName=transformerNode.isDefined() ? transformerNode.asString() : null;
  return new DivertConfiguration(name,routingName,address,forwardingAddress,exclusive,filter,transformerClassName);
}

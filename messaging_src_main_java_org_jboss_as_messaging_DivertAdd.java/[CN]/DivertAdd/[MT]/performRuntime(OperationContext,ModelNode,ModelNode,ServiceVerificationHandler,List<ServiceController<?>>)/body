{
  ServiceRegistry registry=context.getServiceRegistry(true);
  final ServiceName hqServiceName=MessagingServices.getHornetQServiceName(PathAddress.pathAddress(operation.get(ModelDescriptionConstants.OP_ADDR)));
  ServiceController<?> hqService=registry.getService(hqServiceName);
  if (hqService != null) {
    if (hqService.getState() != ServiceController.State.UP) {
      throw MessagingLogger.ROOT_LOGGER.invalidServiceState(hqServiceName,ServiceController.State.UP,hqService.getState());
    }
    final String name=PathAddress.pathAddress(operation.require(ModelDescriptionConstants.OP_ADDR)).getLastElement().getValue();
    DivertConfiguration divertConfiguration=createDivertConfiguration(context,name,model);
    HornetQServerControl serverControl=HornetQServer.class.cast(hqService.getValue()).getHornetQServerControl();
    createDivert(name,divertConfiguration,serverControl);
  }
}

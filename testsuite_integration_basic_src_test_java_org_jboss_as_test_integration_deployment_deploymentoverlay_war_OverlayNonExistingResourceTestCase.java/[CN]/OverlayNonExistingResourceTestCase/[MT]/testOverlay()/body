{
  final InitialContext ctx=getInitialContext();
  Map<String,String> overlay=new HashMap<String,String>();
  try {
    OverlayableInterface iface=(OverlayableInterface)ctx.lookup(getEjbBinding("",DEPLOYMENT_SHELL,"",OverlayEJB.class,OverlayableInterface.class));
    Assert.assertEquals("Overlayed resource in war/jar does not match pre-overlay expectations!",null,iface.fetchResource());
    Assert.assertEquals("Static resource in war/jar does not match pre-overlay expectations!",OverlayableInterface.STATIC,iface.fetchResourceStatic());
    Assert.assertEquals("HTML resource in war does not match pre-overlay expectations!",null,readContent(managementClient.getWebUri() + "/" + DEPLOYMENT_SHELL+ "/"+ OVERLAY_HTML));
    Assert.assertEquals("HTML Static resource in war does not match pre-overlay expectations!",OverlayableInterface.STATIC,readContent(managementClient.getWebUri() + "/" + DEPLOYMENT_SHELL+ "/"+ STATIC_HTML));
    overlay.put(RESOURCE,OverlayableInterface.OVERLAYED);
    overlay.put(OVERLAY_HTML,OverlayableInterface.OVERLAYED);
    OverlayUtils.setupOverlay(managementClient,DEPLOYMENT_SHELL_ARCHIVE,OVERLAY,overlay);
    Assert.assertEquals("Overlayed resource in war/jar does not match post-overlay expectations!",OverlayableInterface.OVERLAYED,iface.fetchResource());
    Assert.assertEquals("Static resource in war/jar does not match post-overlay expectations!",OverlayableInterface.STATIC,iface.fetchResourceStatic());
    Assert.assertEquals("HTML static resource in war does not match post-overlay expectations!",OverlayableInterface.STATIC,readContent(managementClient.getWebUri() + "/" + DEPLOYMENT_SHELL+ "/"+ STATIC_HTML));
    Assert.assertEquals("HTML resource in war does not match post-overlay expectations!",OverlayableInterface.OVERLAYED,readContent(managementClient.getWebUri() + "/" + DEPLOYMENT_SHELL+ "/"+ OVERLAY_HTML));
  }
  finally {
    try {
      ctx.close();
    }
 catch (    Exception e) {
    }
    OverlayUtils.removeOverlay(managementClient,DEPLOYMENT_SHELL_ARCHIVE,OVERLAY,overlay.keySet());
  }
}

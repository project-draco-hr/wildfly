{
  final DeploymentUnit deploymentUnit=phaseContext.getDeploymentUnit();
  if (!CmpDeploymentMarker.isCmpDeployment(deploymentUnit)) {
    return;
  }
  final EjbJarMetaData jarMetaData=deploymentUnit.getAttachment(EjbDeploymentAttachmentKeys.EJB_JAR_METADATA);
  if (jarMetaData == null || jarMetaData.getEnterpriseBeans() == null) {
    throw CmpMessages.MESSAGES.invalidCmpDeployment(deploymentUnit);
  }
  final Module module=deploymentUnit.getAttachment(org.jboss.as.server.deployment.Attachments.MODULE);
  final XMLInputFactory inputFactory=XMLInputFactory.newInstance();
  inputFactory.setXMLResolver(NoopXMLResolver.create());
  XMLStreamReader xmlReader=null;
  JDBCApplicationMetaData jdbcMetaData=new JDBCApplicationMetaData(jarMetaData,module.getClassLoader());
  InputStream inputStream=null;
  try {
    inputStream=this.getClass().getClassLoader().getResourceAsStream("standardjbosscmp-jdbc.xml");
    xmlReader=inputFactory.createXMLStreamReader(inputStream);
    jdbcMetaData=JDBCMetaDataParser.parse(xmlReader,jdbcMetaData);
  }
 catch (  Exception e) {
    throw CmpMessages.MESSAGES.failedToParse("standardjbosscmp-jdbc.xml",e);
  }
 finally {
    VFSUtils.safeClose(inputStream);
  }
  final VirtualFile deploymentRoot=deploymentUnit.getAttachment(org.jboss.as.server.deployment.Attachments.DEPLOYMENT_ROOT).getRoot();
  final VirtualFile descriptor=deploymentRoot.getChild("META-INF/jbosscmp-jdbc.xml");
  JDBCApplicationMetaData deploymentJdbcApplicationMetaData=null;
  if (descriptor != null && descriptor.exists()) {
    try {
      inputStream=descriptor.openStream();
      xmlReader=inputFactory.createXMLStreamReader(inputStream);
      jdbcMetaData=JDBCMetaDataParser.parse(xmlReader,jdbcMetaData);
    }
 catch (    Exception e) {
      throw CmpMessages.MESSAGES.failedToParse("jbosscmp-jdbc.xml",e);
    }
 finally {
      VFSUtils.safeClose(inputStream);
    }
  }
  deploymentUnit.putAttachment(Attachments.JDBC_APPLICATION_KEY,jdbcMetaData);
}

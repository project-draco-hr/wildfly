{
  if (PlatformMBeanUtil.JVM_MAJOR_VERSION > 6 && PlatformMBeanConstants.OBJECT_NAME.equals(name)) {
    store.set(ManagementFactory.THREAD_MXBEAN_NAME);
  }
 else   if (PlatformMBeanConstants.THREAD_COUNT.equals(name)) {
    store.set(ManagementFactory.getThreadMXBean().getThreadCount());
  }
 else   if (PlatformMBeanConstants.PEAK_THREAD_COUNT.equals(name)) {
    store.set(ManagementFactory.getThreadMXBean().getPeakThreadCount());
  }
 else   if (PlatformMBeanConstants.TOTAL_STARTED_THREAD_COUNT.equals(name)) {
    store.set(ManagementFactory.getThreadMXBean().getTotalStartedThreadCount());
  }
 else   if (PlatformMBeanConstants.DAEMON_THREAD_COUNT.equals(name)) {
    store.set(ManagementFactory.getThreadMXBean().getDaemonThreadCount());
  }
 else   if (PlatformMBeanConstants.ALL_THREAD_IDS.equals(name)) {
    store.setEmptyList();
    for (    Long id : ManagementFactory.getThreadMXBean().getAllThreadIds()) {
      store.add(id);
    }
  }
 else   if (PlatformMBeanConstants.THREAD_CONTENTION_MONITORING_SUPPORTED.equals(name)) {
    store.set(ManagementFactory.getThreadMXBean().isThreadContentionMonitoringSupported());
  }
 else   if (PlatformMBeanConstants.THREAD_CONTENTION_MONITORING_ENABLED.equals(name)) {
    store.set(ManagementFactory.getThreadMXBean().isThreadContentionMonitoringEnabled());
  }
 else   if (PlatformMBeanConstants.CURRENT_THREAD_CPU_TIME.equals(name)) {
    store.set(ManagementFactory.getThreadMXBean().getCurrentThreadCpuTime());
  }
 else   if (PlatformMBeanConstants.CURRENT_THREAD_USER_TIME.equals(name)) {
    store.set(ManagementFactory.getThreadMXBean().getCurrentThreadUserTime());
  }
 else   if (PlatformMBeanConstants.THREAD_CPU_TIME_SUPPORTED.equals(name)) {
    store.set(ManagementFactory.getThreadMXBean().isThreadCpuTimeSupported());
  }
 else   if (PlatformMBeanConstants.CURRENT_THREAD_CPU_TIME_SUPPORTED.equals(name)) {
    store.set(ManagementFactory.getThreadMXBean().isCurrentThreadCpuTimeSupported());
  }
 else   if (PlatformMBeanConstants.THREAD_CPU_TIME_ENABLED.equals(name)) {
    store.set(ManagementFactory.getThreadMXBean().isThreadCpuTimeEnabled());
  }
 else   if (PlatformMBeanConstants.OBJECT_MONITOR_USAGE_SUPPORTED.equals(name)) {
    store.set(ManagementFactory.getThreadMXBean().isObjectMonitorUsageSupported());
  }
 else   if (PlatformMBeanConstants.SYNCHRONIZER_USAGE_SUPPORTED.equals(name)) {
    store.set(ManagementFactory.getThreadMXBean().isSynchronizerUsageSupported());
  }
 else   if (PlatformMBeanConstants.THREADING_READ_ATTRIBUTES.contains(name) || PlatformMBeanConstants.THREADING_READ_WRITE_ATTRIBUTES.contains(name) || PlatformMBeanConstants.THREADING_METRICS.contains(name)) {
    throw PlatformMBeanMessages.MESSAGES.badReadAttributeImpl11(name);
  }
}

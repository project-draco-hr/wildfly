{
  final DeploymentUnit deploymentUnit=phaseContext.getDeploymentUnit();
  final ResourceRoot deploymentRoot=deploymentUnit.getAttachment(Attachments.DEPLOYMENT_ROOT);
  final VirtualFile file=deploymentRoot.getRoot();
  if (file == null || !file.exists())   return;
  final String deploymentRootName=file.getLowerCaseName();
  if (!deploymentRootName.endsWith(".rar")) {
    return;
  }
  final VirtualFile alternateDescriptor=deploymentRoot.getAttachment(org.jboss.as.ee.structure.Attachments.ALTERNATE_CONNECTOR_DEPLOYMENT_DESCRIPTOR);
  final VirtualFile serviceXmlFile;
  if (alternateDescriptor != null) {
    serviceXmlFile=alternateDescriptor;
  }
 else {
    serviceXmlFile=file.getChild("/META-INF/ra.xml");
  }
  InputStream xmlStream=null;
  Connector result=null;
  try {
    if (serviceXmlFile != null && serviceXmlFile.exists()) {
      xmlStream=serviceXmlFile.openStream();
      result=(new RaParser()).parse(xmlStream);
      if (result == null)       throw MESSAGES.failedToParseServiceXml(serviceXmlFile);
    }
    File root=file.getPhysicalFile();
    URL url=root.toURI().toURL();
    String prefix="";
    if (deploymentUnit.getParent() != null) {
      prefix=deploymentUnit.getParent().getName() + "#";
    }
    String deploymentName=prefix + file.getName().substring(0,file.getName().indexOf(".rar"));
    ConnectorXmlDescriptor xmlDescriptor=new ConnectorXmlDescriptor(result,root,url,deploymentName);
    phaseContext.getDeploymentUnit().putAttachment(ConnectorXmlDescriptor.ATTACHMENT_KEY,xmlDescriptor);
  }
 catch (  Exception e) {
    throw MESSAGES.failedToParseServiceXml(e,serviceXmlFile);
  }
 finally {
    VFSUtils.safeClose(xmlStream);
  }
}

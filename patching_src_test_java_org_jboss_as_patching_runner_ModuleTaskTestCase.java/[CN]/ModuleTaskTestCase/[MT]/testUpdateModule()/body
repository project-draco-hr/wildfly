{
  String moduleName=randomString();
  PatchInfo info=new LocalPatchInfo(randomString(),PatchInfo.BASE,Collections.<String>emptyList(),env);
  createModule(env.getInstalledImage().getJbossHome(),moduleName);
  tree(env.getInstalledImage().getJbossHome());
  byte[] existingHash=calculateHash(new File(env.getInstalledImage().getModulesDir(),moduleName));
  String patchID=randomString();
  File patchDir=mkdir(tempDir,patchID);
  File moduleDir=createModule(patchDir,moduleName,"new resource in the module");
  byte[] updatedHash=calculateHash(moduleDir);
  ContentModification moduleUpdated=new ContentModification(new ModuleItem(moduleName,updatedHash),existingHash,MODIFY);
  Patch patch=PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setOneOffType(info.getVersion()).addContentModification(moduleUpdated).build();
  createPatchXMLFile(patchDir,patch);
  File zippedPatch=createZippedPatchFile(patchDir,patch.getPatchId());
  PatchingResult result=executePatch(info,zippedPatch);
  assertPatchHasBeenApplied(result,patch);
  File modulesPatchDir=env.getModulePatchDirectory(patch.getPatchId());
  assertDirExists(modulesPatchDir);
  assertContains(modulesPatchDir,result.getPatchInfo().getModulePath());
  assertDefinedModule(result.getPatchInfo().getModulePath(),moduleName,updatedHash);
}

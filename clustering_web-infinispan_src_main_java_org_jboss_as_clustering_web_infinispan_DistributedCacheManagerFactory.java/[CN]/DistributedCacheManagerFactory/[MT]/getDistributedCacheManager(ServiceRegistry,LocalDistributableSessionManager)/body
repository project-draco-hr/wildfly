{
  AdvancedCache<SessionKeyImpl,Map<Object,Object>> sessionCache=this.sessionCacheSource.<SessionKeyImpl,Map<Object,Object>>getCache(registry,manager).getAdvancedCache().with(this.getClass().getClassLoader());
  if (!sessionCache.getConfiguration().isInvocationBatchingEnabled()) {
    throw new ClusteringNotSupportedException(MESSAGES.failedToConfigureWebApp(sessionCache.getCacheManager().getGlobalConfiguration().getCacheManagerName(),sessionCache.getName()));
  }
  SharedLocalYieldingClusterLockManager lockManager=this.lockManagerSource.getLockManager(sessionCache);
  BatchingManager batchingManager=new TransactionBatchingManager(sessionCache.getTransactionManager());
  SessionAttributeStorage<T> storage=this.storageFactory.createStorage(manager.getReplicationConfig().getReplicationGranularity(),this.marshallerFactory.createMarshaller(manager));
  return new DistributedCacheManager<T,SessionKeyImpl>(registry,manager,new AtomicMapCache<SessionKeyImpl,Object,Object>(sessionCache),this.jvmRouteCacheSource,lockManager,storage,batchingManager,new SessionKeyFactoryImpl(manager),this.invoker);
}

{
  AttributeDefinition attributeDefinition=getAttributeDefinition(attributeName);
  ModelType type;
  if (attributeDefinition != null) {
    type=attributeDefinition.getType();
  }
 else {
    type=ModelType.STRING;
  }
  ModelNode converted=resolvedValue.clone();
  try {
switch (type) {
case BIG_DECIMAL:
      converted.set(resolvedValue.asBigDecimal());
    break;
case BIG_INTEGER:
  converted.set(resolvedValue.asBigInteger());
break;
case BOOLEAN:
converted.set(resolvedValue.asBoolean());
break;
case BYTES:
converted.set(resolvedValue.asBytes());
break;
case DOUBLE:
converted.set(resolvedValue.asDouble());
break;
case INT:
converted.set(resolvedValue.asInt());
break;
case LIST:
break;
case LONG:
converted.set(resolvedValue.asLong());
break;
case OBJECT:
break;
case PROPERTY:
break;
case STRING:
converted.set(resolvedValue.asString());
break;
case TYPE:
converted.set(resolvedValue.asType());
break;
case UNDEFINED:
break;
}
}
 catch (IllegalArgumentException ex) {
}
return converted;
}

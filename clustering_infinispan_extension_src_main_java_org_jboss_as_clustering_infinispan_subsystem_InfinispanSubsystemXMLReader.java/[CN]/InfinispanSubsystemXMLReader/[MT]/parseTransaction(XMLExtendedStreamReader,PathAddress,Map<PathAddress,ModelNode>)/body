{
  PathAddress address=cacheAddress.append(TransactionResourceDefinition.PATH);
  ModelNode operation=operations.get(address);
  if (operation == null) {
    operation=Util.createAddOperation(address);
    operations.put(address,operation);
  }
  for (int i=0; i < reader.getAttributeCount(); i++) {
    String value=reader.getAttributeValue(i);
    Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case STOP_TIMEOUT:
{
        TransactionResourceDefinition.STOP_TIMEOUT.parseAndSetParameter(value,operation,reader);
        break;
      }
case MODE:
{
      TransactionResourceDefinition.MODE.parseAndSetParameter(value,operation,reader);
      break;
    }
case LOCKING:
{
    TransactionResourceDefinition.LOCKING.parseAndSetParameter(value,operation,reader);
    break;
  }
case EAGER_LOCKING:
{
  if (!this.schema.since(InfinispanSchema.VERSION_1_1)) {
    ROOT_LOGGER.eagerAttributeDeprecated();
    break;
  }
}
default :
{
throw ParseUtils.unexpectedAttribute(reader,i);
}
}
}
ParseUtils.requireNoContent(reader);
}

{
  PathAddress address=containerAddress.append(JGroupsTransportResourceDefinition.PATH);
  ModelNode operation=Util.createAddOperation(address);
  operations.put(containerAddress.append(TransportResourceDefinition.WILDCARD_PATH),operation);
  String stack=null;
  String cluster=null;
  for (int i=0; i < reader.getAttributeCount(); i++) {
    String value=reader.getAttributeValue(i);
    XMLAttribute attribute=XMLAttribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case STACK:
{
        if (this.schema.since(InfinispanSchema.VERSION_3_0)) {
          throw ParseUtils.unexpectedAttribute(reader,i);
        }
        stack=value;
        break;
      }
case EXECUTOR:
{
      readAttribute(reader,i,operation,JGroupsTransportResourceDefinition.Attribute.EXECUTOR);
      break;
    }
case LOCK_TIMEOUT:
{
    readAttribute(reader,i,operation,JGroupsTransportResourceDefinition.Attribute.LOCK_TIMEOUT);
    break;
  }
case SITE:
{
  if (this.schema.since(InfinispanSchema.VERSION_1_1)) {
    throw ParseUtils.unexpectedAttribute(reader,i);
  }
  ROOT_LOGGER.topologyAttributeDeprecated(XMLAttribute.SITE.getLocalName());
  break;
}
case RACK:
{
if (this.schema.since(InfinispanSchema.VERSION_1_1)) {
  throw ParseUtils.unexpectedAttribute(reader,i);
}
ROOT_LOGGER.topologyAttributeDeprecated(XMLAttribute.RACK.getLocalName());
break;
}
case MACHINE:
{
if (this.schema.since(InfinispanSchema.VERSION_1_1)) {
throw ParseUtils.unexpectedAttribute(reader,i);
}
ROOT_LOGGER.topologyAttributeDeprecated(XMLAttribute.MACHINE.getLocalName());
break;
}
case CLUSTER:
{
if (this.schema.since(InfinispanSchema.VERSION_1_2) && !this.schema.since(InfinispanSchema.VERSION_3_0)) {
cluster=value;
break;
}
throw ParseUtils.unexpectedAttribute(reader,i);
}
case CHANNEL:
{
if (this.schema.since(InfinispanSchema.VERSION_3_0)) {
readAttribute(reader,i,operation,JGroupsTransportResourceDefinition.Attribute.CHANNEL);
break;
}
}
default :
{
throw ParseUtils.unexpectedAttribute(reader,i);
}
}
}
if (!this.schema.since(InfinispanSchema.VERSION_3_0)) {
String channel=(cluster != null) ? cluster : ("ee-" + containerAddress.getLastElement().getValue());
setAttribute(reader,channel,operation,JGroupsTransportResourceDefinition.Attribute.CHANNEL);
PathAddress channelAddress=PathAddress.pathAddress(JGroupsSubsystemResourceDefinition.PATH,ChannelResourceDefinition.pathElement(channel));
ModelNode channelOperation=Util.createAddOperation(channelAddress);
if (stack != null) {
ChannelResourceDefinition.STACK.parseAndSetParameter(stack,channelOperation,reader);
}
operations.put(channelAddress,channelOperation);
}
ParseUtils.requireNoContent(reader);
}

{
  PathAddress address=cacheAddress.append(StateTransferResourceDefinition.PATH);
  ModelNode operation=Util.createAddOperation(address);
  operations.put(address,operation);
  for (int i=0; i < reader.getAttributeCount(); i++) {
    String value=reader.getAttributeValue(i);
    Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case ENABLED:
{
        StateTransferResourceDefinition.ENABLED.parseAndSetParameter(value,operation,reader);
        break;
      }
case TIMEOUT:
{
      StateTransferResourceDefinition.TIMEOUT.parseAndSetParameter(value,operation,reader);
      break;
    }
case FLUSH_TIMEOUT:
{
    if (!this.schema.since(InfinispanSchema.VERSION_1_1)) {
      break;
    }
  }
case CHUNK_SIZE:
{
  if (this.schema.since(InfinispanSchema.VERSION_1_1)) {
    StateTransferResourceDefinition.CHUNK_SIZE.parseAndSetParameter(value,operation,reader);
    break;
  }
}
default :
{
throw ParseUtils.unexpectedAttribute(reader,i);
}
}
}
ParseUtils.requireNoContent(reader);
}

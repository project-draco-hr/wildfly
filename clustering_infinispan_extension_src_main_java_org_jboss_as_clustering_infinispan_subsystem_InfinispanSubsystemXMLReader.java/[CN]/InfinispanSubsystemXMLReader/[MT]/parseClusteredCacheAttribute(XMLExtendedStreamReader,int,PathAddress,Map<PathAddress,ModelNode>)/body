{
  ModelNode operation=operations.get(address);
  XMLAttribute attribute=XMLAttribute.forName(reader.getAttributeLocalName(index));
switch (attribute) {
case MODE:
{
      readAttribute(reader,index,operation,ClusteredCacheResourceDefinition.Attribute.MODE);
      break;
    }
case QUEUE_SIZE:
{
    readAttribute(reader,index,operation,ClusteredCacheResourceDefinition.Attribute.QUEUE_SIZE);
    break;
  }
case QUEUE_FLUSH_INTERVAL:
{
  readAttribute(reader,index,operation,ClusteredCacheResourceDefinition.Attribute.QUEUE_FLUSH_INTERVAL);
  break;
}
case REMOTE_TIMEOUT:
{
readAttribute(reader,index,operation,ClusteredCacheResourceDefinition.Attribute.REMOTE_TIMEOUT);
break;
}
case ASYNC_MARSHALLING:
{
if (!this.schema.since(InfinispanSchema.VERSION_1_2) && this.schema.since(InfinispanSchema.VERSION_4_0)) {
throw ParseUtils.unexpectedAttribute(reader,index);
}
ROOT_LOGGER.attributeDeprecated(attribute.getLocalName(),reader.getLocalName());
break;
}
default :
{
this.parseCacheAttribute(reader,index,address,operations);
}
}
}

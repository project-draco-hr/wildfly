{
  requireNoAttributes(reader);
  final ModelNode eeSubSystem=Util.createAddOperation(PathAddress.pathAddress(EeExtension.PATH_SUBSYSTEM));
  list.add(eeSubSystem);
  final EnumSet<Element> encountered=EnumSet.noneOf(Element.class);
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
switch (Namespace.forUri(reader.getNamespaceURI())) {
case EE_1_0:
{
        final Element element=Element.forName(reader.getLocalName());
        if (!encountered.add(element)) {
          throw unexpectedElement(reader);
        }
switch (element) {
case GLOBAL_MODULES:
{
            final ModelNode model=parseGlobalModules(reader);
            eeSubSystem.get(GlobalModulesDefinition.GLOBAL_MODULES).set(model);
            break;
          }
case EAR_SUBDEPLOYMENTS_ISOLATED:
{
          final String earSubDeploymentsIsolated=parseEarSubDeploymentsIsolatedElement(reader);
          EeSubsystemRootResource.EAR_SUBDEPLOYMENTS_ISOLATED.parseAndSetParameter(earSubDeploymentsIsolated,eeSubSystem,reader);
          break;
        }
default :
{
        throw unexpectedElement(reader);
      }
  }
  break;
}
default :
{
throw unexpectedElement(reader);
}
}
}
}

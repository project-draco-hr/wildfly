{
  try {
    byte[] hash=null;
    String failure=validator.validate(operation);
    if (failure == null) {
      hash=operation.get(HASH).asBytes();
      if (!deploymentRepository.hasDeploymentContent(hash)) {
        failure=String.format("No deployment content with hash %s is available in the deployment content repository.",HashUtil.bytesToHexString(hash));
      }
    }
    if (failure == null) {
      ModelNode rootModel=context.getSubModel();
      ModelNode deployments=rootModel.get(DEPLOYMENT);
      String name=operation.require(NAME).asString();
      ModelNode replaceNode=has(deployments,name) ? deployments.get(name) : null;
      if (replaceNode == null) {
        failure=String.format("No deployment with name %s found",name);
      }
      if (failure == null) {
        boolean start=replaceNode.get(START).asBoolean();
        String runtimeName=has(operation,RUNTIME_NAME) ? operation.get(RUNTIME_NAME).asString() : name;
        ModelNode deployNode=new ModelNode();
        deployNode.get(NAME).set(name);
        deployNode.get(RUNTIME_NAME).set(runtimeName);
        deployNode.get(HASH).set(hash);
        deployNode.get(START).set(start);
        deployments.get(name).set(deployNode);
        ModelNode compensatingOp=operation.clone();
        compensatingOp.get(HASH).set(replaceNode.get(HASH));
        compensatingOp.get(START).set(start);
        if (start) {
          DeploymentHandlerUtil.replace(deployNode,name,context,resultHandler,compensatingOp);
        }
 else {
          resultHandler.handleResultComplete(compensatingOp);
        }
      }
    }
    if (failure != null) {
      resultHandler.handleFailed(new ModelNode().set(failure));
    }
  }
 catch (  Exception e) {
    resultHandler.handleFailed(new ModelNode().set(e.getLocalizedMessage()));
  }
  return Cancellable.NULL;
}

{
  validator.validate(operation);
  final String name=operation.require(NAME).asString();
  final PathAddress address=PathAddress.EMPTY_ADDRESS.append(PathElement.pathElement(DEPLOYMENT,name));
  final Resource root=context.readResource(PathAddress.EMPTY_ADDRESS);
  boolean exists=root.hasChild(PathElement.pathElement(DEPLOYMENT,name));
  if (!exists) {
    ServerMessages.MESSAGES.noSuchDeployment(name);
  }
  final ModelNode replaceNode=context.readResourceForUpdate(address).getModel();
  final String replacedRuntimeName=replaceNode.require(RUNTIME_NAME).asString();
  final String runtimeName=operation.hasDefined(RUNTIME_NAME) ? operation.get(RUNTIME_NAME).asString() : replacedRuntimeName;
  final byte[] hash;
  final ModelNode content=operation.require(CONTENT).clone();
  final DeploymentHandlerUtil.ContentItem contentItem;
  final ModelNode contentItemNode=content.require(0);
  if (contentItemNode.hasDefined(HASH)) {
    managedContentValidator.validate(contentItemNode);
    hash=contentItemNode.require(HASH).asBytes();
    if (!contentRepository.hasContent(hash)) {
      ServerMessages.MESSAGES.noSuchDeploymentContent(HashUtil.bytesToHexString(hash));
    }
    contentItem=new DeploymentHandlerUtil.ContentItem(hash);
  }
 else   if (hasValidContentAdditionParameterDefined(contentItemNode)) {
    InputStream in=getInputStream(context,contentItemNode);
    try {
      try {
        hash=contentRepository.addContent(in);
      }
 catch (      IOException e) {
        throw createFailureException(e.toString());
      }
    }
  finally {
      StreamUtils.safeClose(in);
    }
    contentItemNode.clear();
    contentItemNode.get(HASH).set(hash);
    contentItem=new DeploymentHandlerUtil.ContentItem(hash);
  }
 else {
    unmanagedContentValidator.validate(contentItemNode);
    final String path=contentItemNode.require(PATH).asString();
    final String relativeTo=asString(contentItemNode,RELATIVE_TO);
    final boolean archive=contentItemNode.require(ARCHIVE).asBoolean();
    contentItem=new DeploymentHandlerUtil.ContentItem(path,relativeTo,archive);
  }
  boolean start=replaceNode.get(ENABLED).asBoolean();
  final ModelNode deployNode=context.readResourceForUpdate(address).getModel();
  deployNode.get(NAME).set(name);
  deployNode.get(RUNTIME_NAME).set(runtimeName);
  deployNode.get(CONTENT).set(content);
  deployNode.get(ENABLED).set(start);
  removeContentAdditions(deployNode.require(CONTENT));
  if (start) {
    DeploymentHandlerUtil.replace(context,replaceNode,runtimeName,name,replacedRuntimeName,contentItem);
  }
  context.completeStep();
}

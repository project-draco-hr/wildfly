{
  context.executeAsync(new ManagementRequestContext.AsyncTask<Void>(){
    @Override public void execute(    final ManagementRequestContext<Void> context) throws Exception {
      try {
        registry.registerChannel(hostId,handler,new ProxyCreatedCallback(){
          @Override public void proxyCreated(          final ManagementRequestHandlerFactory handlerFactory){
            proxyHandler=handlerFactory;
            handler.addHandlerFactory(handlerFactory);
          }
        }
);
        final ModelNode op=new ModelNode();
        op.get(OP).set(ReadMasterDomainModelHandler.OPERATION_NAME);
        op.get(OP_ADDR).setEmptyList();
        op.get(HOST).set(hostId);
        final ModelNode result=MasterDomainControllerOperationHandlerImpl.this.controller.execute(op,OperationMessageHandler.logging,OperationTransactionControl.COMMIT,null);
        if (result.hasDefined(FAILURE_DESCRIPTION)) {
          error=SlaveRegistrationException.forUnknownError(result.get(FAILURE_DESCRIPTION).asString()).marshal();
        }
      }
 catch (      SlaveRegistrationException e) {
        error=e.marshal();
      }
catch (      Exception e) {
        error=SlaveRegistrationException.forUnknownError(e.getMessage()).marshal();
      }
      final FlushableDataOutput output=writeGenericResponseHeader(context);
      try {
        if (error != null) {
          output.write(DomainControllerProtocol.PARAM_ERROR);
          output.writeUTF(error);
        }
 else {
          output.write(DomainControllerProtocol.PARAM_OK);
        }
        output.close();
      }
  finally {
        StreamUtils.safeClose(output);
      }
    }
  }
);
}

{
  Date nextExpiration=timer.getNextExpiration();
  if (nextExpiration == null) {
    ROOT_LOGGER.nextExpirationIsNull(timer);
    return;
  }
  final Runnable timerTask=timer.getTimerTask();
  long delay=nextExpiration.getTime() - System.currentTimeMillis();
  if (delay < 0) {
    delay=0;
  }
  long intervalDuration=timer.getInterval();
  if (intervalDuration > 0) {
    ROOT_LOGGER.debug("Scheduling timer " + timer + " at fixed rate, starting at "+ delay+ " milli seconds from now with repeated interval="+ intervalDuration);
    final Task task=new Task(timerTask);
    this.timerInjectedValue.getValue().scheduleAtFixedRate(task,delay,intervalDuration);
    this.scheduledTimerFutures.put(timer.getTimerHandle(),task);
  }
 else {
    ROOT_LOGGER.debug("Scheduling a single action timer " + timer + " starting at "+ delay+ " milli seconds from now");
    this.timerInjectedValue.getValue().schedule(new Task(timerTask),delay);
    final Task task=new Task(timerTask);
    this.scheduledTimerFutures.put(timer.getTimerHandle(),task);
  }
}

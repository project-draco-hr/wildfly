{
  assertTimerServiceState();
  Object pk=currentPrimaryKey();
  final Set<Timer> activeTimers=new HashSet<Timer>();
  for (  final TimerImpl timer : this.nonPersistentTimers.values()) {
    if (ineligibleTimerStates.contains(timer.getState())) {
      continue;
    }
 else     if (timer.isActive()) {
      if (timer.getPrimaryKey() == pk) {
        activeTimers.add(timer);
      }
    }
  }
  for (  final TimerImpl timer : this.persistentWaitingOnTxCompletionTimers.values()) {
    if (ineligibleTimerStates.contains(timer.getState())) {
      continue;
    }
 else     if (timer.isActive()) {
      if (timer.getPrimaryKey() == pk) {
        activeTimers.add(timer);
      }
    }
  }
  for (  final TimerImpl timer : this.getActivePersistentTimers()) {
    if (timer.getPrimaryKey() == pk) {
      activeTimers.add(timer);
    }
  }
  return activeTimers;
}

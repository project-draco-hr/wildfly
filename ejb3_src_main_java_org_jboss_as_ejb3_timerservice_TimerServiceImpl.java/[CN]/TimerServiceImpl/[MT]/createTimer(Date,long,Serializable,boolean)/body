{
  if (this.isLifecycleCallbackInvocation() && !this.isSingletonBeanInvocation()) {
    throw MESSAGES.failToCreateTimerDoLifecycle();
  }
  if (initialExpiration == null) {
    throw MESSAGES.initialExpirationIsNull();
  }
  if (intervalDuration < 0) {
    throw MESSAGES.invalidIntervalDuration();
  }
  UUID uuid=UUID.randomUUID();
  TimerImpl timer=new TimerImpl(uuid.toString(),this,initialExpiration,intervalDuration,info,persistent,currentPrimaryKey());
  if (persistent) {
    this.persistTimer(timer);
  }
  this.startTimer(timer);
  this.addTimer(timer);
  return timer;
}

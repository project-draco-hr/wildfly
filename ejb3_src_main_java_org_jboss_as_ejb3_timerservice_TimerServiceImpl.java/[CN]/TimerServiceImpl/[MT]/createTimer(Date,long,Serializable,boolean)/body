{
  if (this.isLifecycleCallbackInvocation() && !this.isSingletonBeanInvocation()) {
    throw MESSAGES.failToCreateTimerDoLifecycle();
  }
  if (initialExpiration == null) {
    throw MESSAGES.initialExpirationIsNull();
  }
  if (intervalDuration < 0) {
    throw MESSAGES.invalidIntervalDuration();
  }
  UUID uuid=UUID.randomUUID();
  TimerImpl timer=TimerImpl.builder().setNewTimer(true).setId(uuid.toString()).setInitialDate(initialExpiration).setRepeatInterval(intervalDuration).setInfo(info).setPersistent(persistent).setPrimaryKey(currentPrimaryKey()).setTimerState(TimerState.CREATED).setTimedObjectId(getInvoker().getTimedObjectId()).build(this);
  this.persistTimer(timer,true);
  this.startTimer(timer);
  return timer;
}

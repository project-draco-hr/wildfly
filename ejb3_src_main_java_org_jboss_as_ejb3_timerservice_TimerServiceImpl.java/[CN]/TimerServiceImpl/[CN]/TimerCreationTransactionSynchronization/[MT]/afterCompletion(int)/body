{
  if (this.timer.persistent) {
synchronized (TimerServiceImpl.this.persistentWaitingOnTxCompletionTimers) {
      TimerServiceImpl.this.persistentWaitingOnTxCompletionTimers.remove(this.timer.getId());
    }
  }
  if (status == Status.STATUS_COMMITTED) {
    ROOT_LOGGER.debug("commit timer creation: " + this.timer);
    TimerState timerState=this.timer.getState();
switch (timerState) {
case CREATED:
      this.timer.setTimerState(TimerState.ACTIVE);
    this.timer.scheduleTimeout();
  break;
case ACTIVE:
this.timer.scheduleTimeout();
break;
}
}
 else if (status == Status.STATUS_ROLLEDBACK) {
ROOT_LOGGER.debug("Rolling back timer creation: " + this.timer);
if (!timer.isPersistent()) {
nonPersistentTimers.remove(timer.getId());
}
TimerState timerState=this.timer.getState();
switch (timerState) {
case ACTIVE:
this.timer.setTimerState(TimerState.CANCELED);
break;
}
}
}

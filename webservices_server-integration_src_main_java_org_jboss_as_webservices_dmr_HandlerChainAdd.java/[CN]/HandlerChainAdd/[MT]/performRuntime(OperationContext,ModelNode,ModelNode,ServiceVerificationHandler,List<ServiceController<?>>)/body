{
  if (context.isBooting()) {
    final String protocolBindings=getAttributeValue(operation,PROTOCOL_BINDINGS);
    final PathAddress address=PathAddress.pathAddress(operation.require(OP_ADDR));
    final PathElement confElem=address.getElement(address.size() - 2);
    final String configType=confElem.getKey();
    final String configName=confElem.getValue();
    final String handlerChainType=address.getElement(address.size() - 1).getKey();
    final String handlerChainId=address.getElement(address.size() - 1).getValue();
    final ServiceName configServiceName=getConfigServiceName(configType,configName);
    if (context.getServiceRegistry(false).getService(configServiceName) == null) {
      throw MESSAGES.missingConfig(configName);
    }
    final ServiceName handlerChainServiceName=getHandlerChainServiceName(configServiceName,handlerChainId);
    final HandlerChainService<AbstractCommonConfig> service=new HandlerChainService<AbstractCommonConfig>(handlerChainType,handlerChainId,protocolBindings);
    final ServiceTarget target=context.getServiceTarget();
    final ServiceBuilder<?> handlerChainServiceBuilder=target.addService(handlerChainServiceName,service);
    handlerChainServiceBuilder.addDependency(configServiceName,AbstractCommonConfig.class,service.getAbstractCommonConfig());
    handlerChainServiceBuilder.setInitialMode(ServiceController.Mode.ACTIVE).install();
  }
 else {
    context.reloadRequired();
  }
}

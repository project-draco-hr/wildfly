{
  String home=null;
  String localHome=null;
  if (!MetadataCompleteMarker.isMetadataComplete(deploymentUnit)) {
    final EEModuleClassDescription clazz=applicationClasses.getClassByName(description.getComponentClassName());
    if (clazz != null) {
      final ClassAnnotationInformation<LocalHome,String> localAnnotations=clazz.getAnnotationInformation(LocalHome.class);
      if (localAnnotations != null) {
        if (!localAnnotations.getClassLevelAnnotations().isEmpty()) {
          localHome=localAnnotations.getClassLevelAnnotations().get(0);
          if (description.getEjbLocalView() == null) {
            final Class localHomeClass=module.getClassLoader().loadClass(localHome);
            final ClassReflectionIndex<?> index=deploymentReflectionIndex.getClassIndex(localHomeClass);
            Class<?> localClass=null;
            for (            final Method method : index.getMethods()) {
              if (method.getName().startsWith("create")) {
                if (localClass != null && localClass != method.getReturnType()) {
                  throw MESSAGES.multipleCreateMethod(localHomeClass);
                }
                localClass=method.getReturnType();
              }
            }
            description.addEjbLocalObjectView(localClass.getName());
          }
        }
      }
      final ClassAnnotationInformation<RemoteHome,String> remoteAnnotations=clazz.getAnnotationInformation(RemoteHome.class);
      if (remoteAnnotations != null) {
        if (!remoteAnnotations.getClassLevelAnnotations().isEmpty()) {
          home=remoteAnnotations.getClassLevelAnnotations().get(0);
          if (description.getEjbRemoteView() == null) {
            final Class homeClass=module.getClassLoader().loadClass(home);
            final ClassReflectionIndex<?> index=deploymentReflectionIndex.getClassIndex(homeClass);
            Class<?> remote=null;
            for (            final Method method : index.getMethods()) {
              if (method.getName().startsWith("create")) {
                if (remote != null && remote != method.getReturnType()) {
                  throw MESSAGES.multipleCreateMethod(homeClass);
                }
                remote=method.getReturnType();
              }
            }
            if (remote == null) {
              throw new DeploymentUnitProcessingException("Could not determine remove interface type from home " + homeClass + " for bean "+ description.getEJBName());
            }
            description.addEjbObjectView(remote.getName());
          }
        }
      }
    }
  }
  final SessionBeanMetaData descriptorData=description.getDescriptorData();
  if (descriptorData != null) {
    if (descriptorData.getHome() != null) {
      home=descriptorData.getHome();
    }
    if (descriptorData.getLocalHome() != null) {
      localHome=descriptorData.getLocalHome();
    }
  }
  if (localHome != null) {
    description.addLocalHome(localHome);
  }
  if (home != null) {
    description.addRemoteHome(home);
  }
}

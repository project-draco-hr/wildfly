{
  controller.start(CONTAINER1);
  deployer.deploy(DEPLOYMENT1);
  DefaultHttpClient client=new DefaultHttpClient();
  String url1="http://127.0.0.1:8080/stateful/count";
  String url2="http://127.0.0.1:8180/stateful/count";
  try {
    HttpResponse response=client.execute(new HttpGet(url1));
    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
    Assert.assertEquals(1,Integer.parseInt(response.getFirstHeader("count").getValue()));
    response.getEntity().getContent().close();
    response=client.execute(new HttpGet(url1));
    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
    Assert.assertEquals(2,Integer.parseInt(response.getFirstHeader("count").getValue()));
    response.getEntity().getContent().close();
    controller.start(CONTAINER2);
    deployer.deploy(DEPLOYMENT2);
    Thread.sleep(GRACE_TIME_TO_MEMBERSHIP_CHANGE);
    response=client.execute(new HttpGet(url1));
    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
    Assert.assertEquals(3,Integer.parseInt(response.getFirstHeader("count").getValue()));
    response.getEntity().getContent().close();
    response=client.execute(new HttpGet(url1));
    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
    Assert.assertEquals(4,Integer.parseInt(response.getFirstHeader("count").getValue()));
    response.getEntity().getContent().close();
    Thread.sleep(GRACE_TIME_TO_REPLICATE);
    response=client.execute(new HttpGet(url2));
    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
    Assert.assertEquals(5,Integer.parseInt(response.getFirstHeader("count").getValue()));
    response.getEntity().getContent().close();
    response=client.execute(new HttpGet(url2));
    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
    Assert.assertEquals(6,Integer.parseInt(response.getFirstHeader("count").getValue()));
    response.getEntity().getContent().close();
    controller.stop(CONTAINER2);
    Thread.sleep(GRACE_TIME_TO_MEMBERSHIP_CHANGE);
    response=client.execute(new HttpGet(url1));
    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
    Assert.assertEquals(7,Integer.parseInt(response.getFirstHeader("count").getValue()));
    response.getEntity().getContent().close();
    response=client.execute(new HttpGet(url1));
    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
    Assert.assertEquals(8,Integer.parseInt(response.getFirstHeader("count").getValue()));
    response.getEntity().getContent().close();
    controller.start(CONTAINER2);
    Thread.sleep(GRACE_TIME_TO_MEMBERSHIP_CHANGE);
    response=client.execute(new HttpGet(url1));
    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
    Assert.assertEquals(9,Integer.parseInt(response.getFirstHeader("count").getValue()));
    response.getEntity().getContent().close();
    response=client.execute(new HttpGet(url1));
    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
    Assert.assertEquals(10,Integer.parseInt(response.getFirstHeader("count").getValue()));
    response.getEntity().getContent().close();
    Thread.sleep(GRACE_TIME_TO_REPLICATE);
    response=client.execute(new HttpGet(url2));
    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
    Assert.assertEquals(11,Integer.parseInt(response.getFirstHeader("count").getValue()));
    response.getEntity().getContent().close();
    response=client.execute(new HttpGet(url2));
    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
    Assert.assertEquals(12,Integer.parseInt(response.getFirstHeader("count").getValue()));
    response.getEntity().getContent().close();
    controller.stop(CONTAINER1);
    Thread.sleep(GRACE_TIME_TO_MEMBERSHIP_CHANGE);
    response=client.execute(new HttpGet(url2));
    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
    Assert.assertEquals(13,Integer.parseInt(response.getFirstHeader("count").getValue()));
    response.getEntity().getContent().close();
    response=client.execute(new HttpGet(url2));
    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
    Assert.assertEquals(14,Integer.parseInt(response.getFirstHeader("count").getValue()));
    response.getEntity().getContent().close();
    controller.start(CONTAINER1);
    Thread.sleep(GRACE_TIME_TO_MEMBERSHIP_CHANGE);
    response=client.execute(new HttpGet(url1));
    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
    Assert.assertEquals(15,Integer.parseInt(response.getFirstHeader("count").getValue()));
    response.getEntity().getContent().close();
    response=client.execute(new HttpGet(url1));
    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
    Assert.assertEquals(16,Integer.parseInt(response.getFirstHeader("count").getValue()));
    response.getEntity().getContent().close();
    Thread.sleep(GRACE_TIME_TO_REPLICATE);
    response=client.execute(new HttpGet(url2));
    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
    Assert.assertEquals(17,Integer.parseInt(response.getFirstHeader("count").getValue()));
    response.getEntity().getContent().close();
    response=client.execute(new HttpGet(url2));
    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
    Assert.assertEquals(18,Integer.parseInt(response.getFirstHeader("count").getValue()));
    response.getEntity().getContent().close();
  }
  finally {
    client.getConnectionManager().shutdown();
    deployer.undeploy(DEPLOYMENT1);
    controller.stop(CONTAINER1);
    deployer.undeploy(DEPLOYMENT2);
    controller.stop(CONTAINER2);
  }
}

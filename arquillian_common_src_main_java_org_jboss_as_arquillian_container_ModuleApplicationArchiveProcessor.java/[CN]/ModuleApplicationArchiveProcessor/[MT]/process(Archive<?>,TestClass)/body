{
  if (appArchive instanceof ManifestContainer<?> == false)   throw new IllegalArgumentException("ManifestContainer expected " + appArchive);
  final Manifest manifest=ManifestUtils.getOrCreateManifest(appArchive);
  Attributes attributes=manifest.getMainAttributes();
  String value=attributes.getValue("Dependencies");
  StringBuffer moduleDeps=new StringBuffer(value != null && value.trim().length() > 0 ? value : "org.jboss.modules");
  for (  String dep : defaultDependencies) {
    if (moduleDeps.indexOf(dep) < 0)     moduleDeps.append("," + dep);
  }
  if (Boolean.valueOf(System.getProperty("jboss.arquillian.jsfunit","false"))) {
    for (    String dep : jsfDependencies) {
      if (moduleDeps.indexOf(dep) < 0) {
        moduleDeps.append("," + dep);
      }
    }
  }
  attributes.putValue("Dependencies",moduleDeps.toString());
  ArchivePath path=ArchivePaths.create("META-INF","MANIFEST.MF");
  appArchive.add(new Asset(){
    public InputStream openStream(){
      try {
        ByteArrayOutputStream baos=new ByteArrayOutputStream();
        manifest.write(baos);
        return new ByteArrayInputStream(baos.toByteArray());
      }
 catch (      IOException ex) {
        throw new IllegalStateException("Cannot write manifest",ex);
      }
    }
  }
,path);
}

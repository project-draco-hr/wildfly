{
  if (this.getGroup().isCoordinator()) {
    final Set<Node> deadNodes=new HashSet<>(previousMembers);
    deadNodes.removeAll(members);
    final Set<Node> newNodes=new HashSet<>(members);
    newNodes.removeAll(previousMembers);
    try (Batch batch=this.batcher.createBatch()){
      if (!deadNodes.isEmpty()) {
        for (        Object service : this.cache.keySet()) {
          Set<Node> nodes=this.cache.get(service);
          if (nodes != null) {
            if (nodes.removeAll(deadNodes)) {
              this.cache.getAdvancedCache().withFlags(Flag.IGNORE_RETURN_VALUES).replace(service,nodes);
            }
          }
        }
      }
      if (merged) {
        for (        Node node : newNodes) {
          List<Object> services=CacheServiceProviderRegistrationFactory.this.getServices(node);
          for (          Object service : services) {
            Set<Node> nodes=new HashSet<>(Collections.singleton(node));
            Set<Node> existing=this.cache.getAdvancedCache().withFlags(Flag.FORCE_SYNCHRONOUS).putIfAbsent(service,nodes);
            if (existing != null) {
              if (existing.add(node)) {
                this.cache.getAdvancedCache().withFlags(Flag.IGNORE_RETURN_VALUES).replace(service,existing);
              }
            }
          }
        }
      }
    }
   }
}

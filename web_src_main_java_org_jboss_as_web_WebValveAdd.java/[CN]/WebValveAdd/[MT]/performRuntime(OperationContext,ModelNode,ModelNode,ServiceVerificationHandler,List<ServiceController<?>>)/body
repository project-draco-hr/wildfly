{
  ModelNode operation=Resource.Tools.readModel(context.readResource(PathAddress.EMPTY_ADDRESS));
  final PathAddress address=PathAddress.pathAddress(baseOperation.get(OP_ADDR));
  final String name=address.getLastElement().getValue();
  String classname=null;
  if (WebValveDefinition.CLASS_NAME.resolveModelAttribute(context,operation).isDefined())   classname=WebValveDefinition.CLASS_NAME.resolveModelAttribute(context,operation).asString();
  String module=null;
  if (WebValveDefinition.MODULE.resolveModelAttribute(context,operation).isDefined())   module=WebValveDefinition.MODULE.resolveModelAttribute(context,operation).asString();
  final WebValveService service=new WebValveService(name,classname,module);
  final ServiceTarget serviceTarget=context.getServiceTarget();
  final ServiceBuilder<?> serviceBuilder=serviceTarget.addService(WebSubsystemServices.JBOSS_WEB_VALVE.append(name),service).addDependency(PathManagerService.SERVICE_NAME,PathManager.class,service.getPathManagerInjector()).addDependency(WebSubsystemServices.JBOSS_WEB,WebServer.class,service.getWebServer());
  if (operation.get(FILE_PATH.getKey(),FILE_PATH.getValue()).isDefined()) {
    final ModelNode directory=operation.get(FILE_PATH.getKey(),FILE_PATH.getValue());
    String relativeTo=null;
    if (WebValveFileDefinition.RELATIVE_TO.resolveModelAttribute(context,directory).isDefined())     relativeTo=WebValveFileDefinition.RELATIVE_TO.resolveModelAttribute(context,directory).asString();
    String path=null;
    if (WebValveFileDefinition.PATH.resolveModelAttribute(context,directory).isDefined())     path=WebValveFileDefinition.PATH.resolveModelAttribute(context,directory).asString();
    service.setFilePaths(path,relativeTo);
  }
  if (operation.hasDefined(PARAM)) {
    service.setParam(operation.get(PARAM).clone());
  }
  serviceBuilder.addListener(verificationHandler);
  newControllers.add(serviceBuilder.install());
}

{
  ModelNode fullModel=Resource.Tools.readModel(context.readResource(PathAddress.EMPTY_ADDRESS));
  final PathAddress address=PathAddress.pathAddress(baseOperation.get(OP_ADDR));
  final String name=address.getLastElement().getValue();
  String classname=null;
  ModelNode resolved;
  if ((resolved=WebValveDefinition.CLASS_NAME.resolveModelAttribute(context,fullModel)).isDefined()) {
    classname=resolved.asString();
  }
  String module=null;
  if ((resolved=WebValveDefinition.MODULE.resolveModelAttribute(context,fullModel)).isDefined()) {
    module=resolved.asString();
  }
  final boolean enabled=WebValveDefinition.ENABLED.resolveModelAttribute(context,fullModel).asBoolean();
  final WebValveService service=new WebValveService(name,classname,module);
  final ServiceTarget serviceTarget=context.getServiceTarget();
  final ServiceBuilder<?> serviceBuilder=serviceTarget.addService(WebSubsystemServices.JBOSS_WEB_VALVE.append(name),service).addDependency(WebSubsystemServices.JBOSS_WEB,WebServer.class,service.getWebServer());
  if ((resolved=WebValveDefinition.PARAMS.resolveModelAttribute(context,fullModel)).isDefined()) {
    service.setParam(resolved.clone());
  }
  serviceBuilder.setInitialMode(enabled ? Mode.ACTIVE : Mode.NEVER);
  if (enabled)   serviceBuilder.addListener(verificationHandler);
  newControllers.add(serviceBuilder.install());
}

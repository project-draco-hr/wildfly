{
  bootOperations.add(Util.createAddOperation(PathAddress.pathAddress(AccessAuditResourceDefinition.PATH_ELEMENT)));
  ModelNode add=Util.createAddOperation(PathAddress.pathAddress(AccessAuditResourceDefinition.PATH_ELEMENT,PathElement.pathElement(ModelDescriptionConstants.JSON_FORMATTER,"test-formatter")));
  bootOperations.add(add);
  bootOperations.add(createAddFileHandlerOperation("test-file","test-formatter","test-file.log"));
  add=Util.createAddOperation(PathAddress.pathAddress(AccessAuditResourceDefinition.PATH_ELEMENT,AuditLogLoggerResourceDefinition.PATH_ELEMENT));
  add.get(ModelDescriptionConstants.LOG_READ_ONLY).set(true);
  bootOperations.add(add);
  PathAddress address=PathAddress.pathAddress(JMXSubsystemRootResource.PATH_ELEMENT);
  add=Util.createAddOperation(address);
  bootOperations.add(add);
  add=Util.createAddOperation(address.append(ExposeModelResourceResolved.PATH_ELEMENT));
  add.get(ExposeModelResourceResolved.DOMAIN_NAME.getName()).set("wildfly.test");
  bootOperations.add(add);
  address=address.append(JmxAuditLoggerResourceDefinition.PATH_ELEMENT);
  add=Util.createAddOperation(address);
  add.get(ModelDescriptionConstants.LOG_READ_ONLY).set(true);
  bootOperations.add(add);
  bootOperations.add(createAddJmxHandlerReferenceOperation("test-file"));
}

{
  Assert.assertEquals("method",bootRecord.get("type").asString());
  Assert.assertEquals(readOnly,bootRecord.get("r/o").asBoolean());
  Assert.assertFalse(bootRecord.get("booting").asBoolean());
  Assert.assertFalse(bootRecord.get("user").isDefined());
  Assert.assertFalse(bootRecord.get("domainUUID").isDefined());
  Assert.assertFalse(bootRecord.get("access").isDefined());
  Assert.assertFalse(bootRecord.get("remote-address").isDefined());
  List<ModelNode> sigs=bootRecord.get("sig").asList();
  Assert.assertEquals(sig.length,sigs.size());
  for (int i=0; i < sig.length; i++) {
    Assert.assertEquals(sig[i],sigs.get(i).asString());
  }
  List<ModelNode> params=bootRecord.get("params").asList();
  Assert.assertEquals(args.length,params.size());
  for (int i=0; i < args.length; i++) {
    if (args[i] == null) {
      Assert.assertFalse(params.get(i).isDefined());
    }
 else     if (!args[i].equals(ANY_PLACEHOLDER)) {
      Assert.assertEquals(args[i],params.get(i).asString());
    }
  }
}

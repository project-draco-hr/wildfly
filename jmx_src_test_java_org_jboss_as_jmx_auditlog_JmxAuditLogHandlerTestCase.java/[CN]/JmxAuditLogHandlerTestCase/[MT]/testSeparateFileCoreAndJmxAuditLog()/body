{
  File fileJmx=new File(logDir,"test-file.log");
  File fileCore=new File(logDir,"test-file2.log");
  readFile(fileJmx,1);
  ModelNode op=createAddFileHandlerOperation("test-file2","test-formatter","test-file2.log");
  executeForResult(op);
  readFile(fileJmx,1);
  Assert.assertFalse(fileCore.exists());
  op=createAddCoreHandlerReferenceOperation("test-file2");
  executeForResult(op);
  readFile(fileJmx,1);
  List<ModelNode> records=readFile(fileCore,1);
  List<ModelNode> ops=checkCoreBootRecordHeader(records.get(0),1,false,false,true);
  checkOpsEqual(op,ops.get(0));
  op=Util.createOperation(ModelDescriptionConstants.READ_RESOURCE_DESCRIPTION_OPERATION,PathAddress.EMPTY_ADDRESS);
  executeForResult(op);
  readFile(fileJmx,1);
  records=readFile(fileCore,2);
  ops=checkCoreBootRecordHeader(records.get(1),1,true,false,true);
  checkOpsEqual(op,ops.get(0));
  Assert.assertTrue(server.queryNames(OBJECT_NAME,null).contains(OBJECT_NAME));
  readFile(fileCore,2);
  records=readFile(fileJmx,2);
  checkJmxBootRecordHeader(records.get(1),true,new String[]{ObjectName.class.getName(),QueryExp.class.getName()},new String[]{OBJECT_NAME.toString(),null});
  op=createRemoveJmxHandlerReferenceOperation("test-file");
  executeForResult(op);
  readFile(fileJmx,2);
  records=readFile(fileCore,3);
  ops=checkCoreBootRecordHeader(records.get(2),1,false,false,true);
  checkOpsEqual(op,ops.get(0));
  Assert.assertTrue(server.queryNames(OBJECT_NAME,null).contains(OBJECT_NAME));
  readFile(fileJmx,2);
  op=createAddJmxHandlerReferenceOperation("test-file");
  executeForResult(op);
  readFile(fileJmx,2);
  records=readFile(fileCore,4);
  ops=checkCoreBootRecordHeader(records.get(3),1,false,false,true);
  checkOpsEqual(op,ops.get(0));
  Assert.assertTrue(server.queryNames(OBJECT_NAME,null).contains(OBJECT_NAME));
  readFile(fileCore,4);
  records=readFile(fileJmx,1);
  checkJmxBootRecordHeader(records.get(0),true,new String[]{ObjectName.class.getName(),QueryExp.class.getName()},new String[]{OBJECT_NAME.toString(),null});
  op=createRemoveCoreHandlerReferenceOperation("test-file2");
  executeForResult(op);
  readFile(fileJmx,1);
  records=readFile(fileCore,5);
  ops=checkCoreBootRecordHeader(records.get(4),1,false,false,true);
  checkOpsEqual(op,ops.get(0));
  Assert.assertTrue(server.queryNames(OBJECT_NAME,null).contains(OBJECT_NAME));
  readFile(fileCore,5);
  records=readFile(fileJmx,2);
  checkJmxBootRecordHeader(records.get(1),true,new String[]{ObjectName.class.getName(),QueryExp.class.getName()},new String[]{OBJECT_NAME.toString(),null});
  op=Util.createOperation(ModelDescriptionConstants.READ_RESOURCE_DESCRIPTION_OPERATION,PathAddress.EMPTY_ADDRESS);
  executeForResult(op);
  readFile(fileJmx,2);
  records=readFile(fileCore,5);
  op=createAddCoreHandlerReferenceOperation("test-file2");
  executeForResult(op);
  readFile(fileJmx,2);
  records=readFile(fileCore,1);
  ops=checkCoreBootRecordHeader(records.get(0),1,false,false,true);
  checkOpsEqual(op,ops.get(0));
}

{
  final String attribute=operation.require(NAME).asString();
  boolean ourAttribute=attributeNames.contains(attribute);
  final boolean rejectResult=ourAttribute && operation.hasDefined(VALUE);
  if (rejectResult) {
    final OperationRejectionPolicy rejectPolicy=new OperationRejectionPolicy(){
      @Override public boolean rejectOperation(      ModelNode preparedResult){
        return true;
      }
      @Override public String getFailureDescription(){
        return context.getLogger().getAttributeWarning(address,operation,attribute);
      }
    }
;
    return new TransformedOperation(operation,rejectPolicy,OperationResultTransformer.ORIGINAL_RESULT);
  }
 else   if (ourAttribute) {
    return OperationTransformer.DISCARD.transformOperation(context,address,operation);
  }
  return new TransformedOperation(operation,OperationResultTransformer.ORIGINAL_RESULT);
}

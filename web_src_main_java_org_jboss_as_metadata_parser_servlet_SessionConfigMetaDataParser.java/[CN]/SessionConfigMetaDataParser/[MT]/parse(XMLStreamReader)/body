{
  SessionConfigMetaData sessionConfig=new SessionConfigMetaData();
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    final String value=reader.getAttributeValue(i);
    if (reader.getAttributeNamespace(i) != null) {
      continue;
    }
    final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case ID:
{
        sessionConfig.setId(value);
        break;
      }
default :
    throw unexpectedAttribute(reader,i);
}
}
while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
final Element element=Element.forName(reader.getLocalName());
switch (element) {
case SESSION_TIMEOUT:
  try {
    sessionConfig.setSessionTimeout(Integer.valueOf(reader.getElementText()));
  }
 catch (  NumberFormatException e) {
    throw unexpectedValue(reader,e);
  }
break;
case COOKIE_CONFIG:
sessionConfig.setCookieConfig(CookieConfigMetaDataParser.parse(reader));
break;
case TRACKING_MODE:
List<SessionTrackingModeType> trackingModes=sessionConfig.getSessionTrackingModes();
if (trackingModes == null) {
trackingModes=new ArrayList<SessionTrackingModeType>();
sessionConfig.setSessionTrackingModes(trackingModes);
}
trackingModes.add(SessionTrackingModeType.valueOf(reader.getElementText()));
break;
default :
throw unexpectedElement(reader);
}
}
return sessionConfig;
}

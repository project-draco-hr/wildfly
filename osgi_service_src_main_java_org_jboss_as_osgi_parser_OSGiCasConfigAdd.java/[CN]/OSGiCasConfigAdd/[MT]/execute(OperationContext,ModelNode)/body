{
  Resource resource=context.createResource(PathAddress.EMPTY_ADDRESS);
  ModelNode model=resource.getModel();
  final ModelNode entries=operation.get(CommonAttributes.ENTRIES);
  model.get(CommonAttributes.ENTRIES).set(entries);
  if (context.getType() == OperationContext.Type.SERVER) {
    context.addStep(new OperationStepHandler(){
      @Override public void execute(      OperationContext context,      ModelNode operation) throws OperationFailedException {
        final ModelNode identifier=operation.get(ModelDescriptionConstants.OP_ADDR).asObject().get(CommonAttributes.CONFIGURATION);
        String pid=identifier.asString();
        Dictionary<String,String> dictionary=new Hashtable<String,String>();
        for (        String key : entries.keys()) {
          dictionary.put(key,entries.get(key).asString());
        }
        SubsystemState stateService=(SubsystemState)context.getServiceRegistry(true).getRequiredService(SubsystemState.SERVICE_NAME).getValue();
        stateService.putConfiguration(pid,dictionary);
        if (context.completeStep() == OperationContext.ResultAction.ROLLBACK) {
          stateService.removeConfiguration(pid);
        }
      }
    }
,OperationContext.Stage.RUNTIME);
  }
  context.completeStep();
}

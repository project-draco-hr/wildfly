{
  final ModelNode opAddr=operation.require(OP_ADDR);
  final String raName=PathAddress.pathAddress(opAddr).getLastElement().getValue();
  final ModelNode model=context.readModel(PathAddress.EMPTY_ADDRESS);
  final String archive=model.get(ARCHIVE.getName()).asString();
  final ModelNode compensating=Util.getEmptyOperation(ADD,opAddr);
  if (model.hasDefined(RESOURCEADAPTERS_NAME)) {
    for (    ModelNode raNode : model.get(RESOURCEADAPTERS_NAME).asList()) {
      ModelNode raCompensatingNode=raNode.clone();
      compensating.get(RESOURCEADAPTERS_NAME).add(raCompensatingNode);
    }
  }
  context.removeResource(PathAddress.EMPTY_ADDRESS);
  context.addStep(new OperationStepHandler(){
    public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {
      RaOperationUtil.deactivateIfActive(context,raName);
      ServiceName raServiceName=ServiceName.of(ConnectorServices.RA_SERVICE,raName);
      final List<ServiceName> serviceNameList=context.getServiceRegistry(false).getServiceNames();
      for (      ServiceName name : serviceNameList) {
        if (raServiceName.isParentOf(name)) {
          context.removeService(name);
        }
      }
      context.removeService(raServiceName);
      if (context.completeStep() == OperationContext.ResultAction.ROLLBACK) {
      }
    }
  }
,OperationContext.Stage.RUNTIME);
  context.completeStep();
}

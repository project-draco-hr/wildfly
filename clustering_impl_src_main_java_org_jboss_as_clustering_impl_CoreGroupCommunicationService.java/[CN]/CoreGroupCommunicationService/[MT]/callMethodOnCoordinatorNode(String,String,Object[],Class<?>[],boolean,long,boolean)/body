{
  boolean trace=this.log.isTraceEnabled();
  MethodCall m=new MethodCall(serviceName + "." + methodName,args,types);
  if (trace) {
    this.log.tracef("callMethodOnCoordinatorNode(false), objName=%s, methodName=%s",serviceName,methodName);
  }
  if (this.isCoordinator()) {
    if (excludeSelf) {
      return null;
    }
 else     if (this.directlyInvokeLocal) {
      return this.<T>invokeDirectly(serviceName,methodName,args,types,null,null);
    }
  }
  Address coord=this.groupView.coordinator;
  RequestOptions opt=new RequestOptions(ResponseMode.GET_ALL,methodTimeout,false,new NoHandlerForRPCRspFilter());
  if (unordered) {
    opt.setFlags(Message.OOB);
  }
  try {
    return this.dispatcher.<T>callRemoteMethod(coord,m,opt);
  }
 catch (  Exception e) {
    throw e;
  }
catch (  Error e) {
    throw e;
  }
catch (  Throwable e) {
    throw MESSAGES.caughtRemoteInvocationThrowable(e);
  }
}

{
  if (!(targetNode instanceof ClusterNodeImpl)) {
    throw MESSAGES.invalidTargetNodeInstance(targetNode,ClusterNodeImpl.class);
  }
  boolean trace=ClusteringImplLogger.ROOT_LOGGER.isTraceEnabled();
  MethodCall m=new MethodCall(serviceName + "." + methodName,args,types);
  if (trace) {
    ClusteringImplLogger.ROOT_LOGGER.tracef("callAsyncMethodOnNode( objName=%s, methodName=%s )" + methodName,serviceName,methodName);
  }
  if (this.directlyInvokeLocal && this.me.equals(targetNode)) {
    new AsynchronousLocalInvocation(serviceName,methodName,args,types).invoke();
    return;
  }
  RequestOptions opt=new RequestOptions(ResponseMode.GET_NONE,this.getMethodCallTimeout(),false,new NoHandlerForRPCRspFilter());
  if (unordered) {
    opt.setFlags(Message.OOB);
  }
  try {
    this.dispatcher.callRemoteMethod(((ClusterNodeImpl)targetNode).getOriginalJGAddress(),m,opt);
  }
 catch (  Exception e) {
    throw e;
  }
catch (  Error e) {
    throw e;
  }
catch (  Throwable e) {
    throw MESSAGES.caughtRemoteInvocationThrowable(e);
  }
}

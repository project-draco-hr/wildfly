{
  MethodCall m=new MethodCall(serviceName + "." + methodName,args,types);
  RequestOptions options=new RequestOptions(ResponseMode.GET_NONE,this.getMethodCallTimeout(),false,new NoHandlerForRPCRspFilter());
  if (excludeSelf) {
    options.setExclusionList(this.localJGAddress);
  }
  if (this.channel.flushSupported()) {
    this.flushBlockGate.await(this.getMethodCallTimeout());
  }
  if (this.log.isTraceEnabled()) {
    this.log.tracef("calling asynch method on cluster, serviceName=%s, methodName=%s, members=%s, excludeSelf=%s",serviceName,methodName,this.groupView,excludeSelf);
  }
  try {
    this.dispatcher.callRemoteMethods(null,m,options);
  }
 catch (  RuntimeException e) {
    throw e;
  }
catch (  Error e) {
    throw e;
  }
catch (  Exception e) {
    throw new RuntimeException(e);
  }
 finally {
    if (!excludeSelf && this.directlyInvokeLocal) {
      new AsynchronousLocalInvocation(serviceName,methodName,args,types).invoke();
    }
  }
}

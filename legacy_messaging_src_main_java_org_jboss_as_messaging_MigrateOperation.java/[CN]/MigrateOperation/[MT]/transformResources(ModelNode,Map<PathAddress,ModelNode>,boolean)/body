{
  for (  ModelNode legacyAddOp : legacyModelDescription.get(RESULT).asList()) {
    final ModelNode newAddOp=legacyAddOp.clone();
    ModelNode newAddress=transformAddress(legacyAddOp.get(OP_ADDR).clone());
    newAddOp.get(OP_ADDR).set(newAddress);
    if (newAddress.asList().size() > 2) {
      Property subsystemSubresource=newAddress.asPropertyList().get(1);
      if (subsystemSubresource.getName().equals("server")) {
        Property serverSubresource=newAddress.asPropertyList().get(2);
switch (serverSubresource.getName()) {
case CONNECTION_FACTORY:
          if (addLegacyEntries) {
            PathAddress address=PathAddress.pathAddress(newAddress);
            PathAddress legacyConnectionFactoryAddress=address.getParent().append("legacy-connection-factory",address.getLastElement().getValue());
            final ModelNode addLegacyConnectionFactoryOp=legacyAddOp.clone();
            addLegacyConnectionFactoryOp.get(OP_ADDR).set(legacyConnectionFactoryAddress.toModelNode());
            migrateConnectionFactory(addLegacyConnectionFactoryOp,"");
            newAddOperations.put(pathAddress(addLegacyConnectionFactoryOp.get(OP_ADDR)),addLegacyConnectionFactoryOp);
          }
        migrateConnectionFactory(newAddOp,addLegacyEntries ? NEW_ENTRY_SUFFIX : "");
      break;
case POOLED_CONNECTION_FACTORY:
    migratePooledConnectionFactory(newAddOp);
  break;
case CLUSTER_CONNECTION:
migrateClusterConnection(newAddOp);
break;
case BRIDGE:
migrateBridge(newAddOp);
break;
case JMS_QUEUE:
case JMS_TOPIC:
if (addLegacyEntries) {
addLegacyEntries(newAddOp);
}
break;
case ACCEPTOR:
case CONNECTOR:
migrateGenericTransport(newAddOp);
case HTTP_ACCEPTOR:
case REMOTE_ACCEPTOR:
case HTTP_CONNECTOR:
case REMOTE_CONNECTOR:
case CONNECTOR_SERVICE:
if (newAddress.asPropertyList().size() > 3) {
String name=newAddress.asPropertyList().get(3).getValue().asString();
ModelNode value=newAddOp.get(VALUE);
PathAddress currentAddress=pathAddress(newAddress);
ModelNode parentAddOp=newAddOperations.get(currentAddress.getParent());
parentAddOp.get("params").add(new Property(name,value));
continue;
}
break;
}
}
}
newAddOperations.put(pathAddress(newAddOp.get(OP_ADDR)),newAddOp);
}
}

{
  if (!describe && context.getRunningMode() != RunningMode.ADMIN_ONLY) {
    throw MessagingLogger.ROOT_LOGGER.migrateOperationAllowedOnlyInAdminOnly();
  }
  boolean addLegacyEntries=ADD_LEGACY_ENTRIES.resolveModelAttribute(context,operation).asBoolean();
  final ModelNode legacyModelAddOps=new ModelNode();
  final Map<PathAddress,ModelNode> migrationOperations=new LinkedHashMap<PathAddress,ModelNode>();
  describeLegacyMessagingResources(context,legacyModelAddOps);
  addMessagingActiveMQExtension(context,migrationOperations,describe);
  context.addStep(new OperationStepHandler(){
    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {
      transformResources(legacyModelAddOps,migrationOperations,addLegacyEntries);
      removeMessagingSubsystem(migrationOperations);
      PathAddress parentAddress=context.getCurrentAddress().getParent();
      fixAddressesForDomainMode(parentAddress,migrationOperations);
      if (describe) {
        context.getResult().set(migrationOperations.values());
      }
 else {
        migrateSubsystems(context,migrationOperations);
      }
    }
  }
,MODEL);
}

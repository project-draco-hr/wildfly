{
  Map<PathAddress,ModelNode> stackOperations=new LinkedHashMap<>();
  PathAddress address=PathAddress.pathAddress(JGroupsSubsystemResourceDefinition.PATH);
  ModelNode operation=Util.createAddOperation(address);
  stackOperations.put(address,operation);
  if (!this.schema.since(JGroupsSchema.VERSION_3_0)) {
    String defaultStack=require(reader,XMLAttribute.DEFAULT_STACK);
    setAttribute(reader,defaultStack,operation,JGroupsSubsystemResourceDefinition.Attribute.DEFAULT_STACK);
  }
  Map<PathAddress,ModelNode> channelOperations=new LinkedHashMap<>();
  while (reader.hasNext() && (reader.nextTag() != XMLStreamConstants.END_ELEMENT)) {
    XMLElement element=XMLElement.forName(reader.getLocalName());
switch (element) {
case CHANNELS:
{
        if (this.schema.since(JGroupsSchema.VERSION_3_0)) {
          this.parseChannels(reader,address,channelOperations);
          break;
        }
      }
case STACKS:
{
      if (this.schema.since(JGroupsSchema.VERSION_3_0)) {
        this.parseStacks(reader,address,stackOperations,channelOperations);
        break;
      }
    }
case STACK:
{
    if (!this.schema.since(JGroupsSchema.VERSION_3_0)) {
      this.parseStack(reader,address,stackOperations,channelOperations);
      break;
    }
  }
default :
{
  throw ParseUtils.unexpectedElement(reader);
}
}
}
if (!this.schema.since(JGroupsSchema.VERSION_4_0)) {
ModelNode defaultStack=operation.get(JGroupsSubsystemResourceDefinition.Attribute.DEFAULT_STACK.getDefinition().getName());
for (Map.Entry<PathAddress,ModelNode> entry : channelOperations.entrySet()) {
PathAddress opAddr=entry.getKey();
if (opAddr.getLastElement().getKey().equals(ChannelResourceDefinition.WILDCARD_PATH.getKey())) {
ModelNode op=entry.getValue();
if (!op.hasDefined(ChannelResourceDefinition.Attribute.STACK.getDefinition().getName())) {
  op.get(ChannelResourceDefinition.Attribute.STACK.getDefinition().getName()).set(defaultStack);
}
}
}
}
result.addAll(stackOperations.values());
result.addAll(channelOperations.values());
}

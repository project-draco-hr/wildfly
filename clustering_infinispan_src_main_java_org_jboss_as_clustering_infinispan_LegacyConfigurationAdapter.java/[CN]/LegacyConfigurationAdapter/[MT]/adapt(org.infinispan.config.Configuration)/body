{
  if (legacy == null)   return null;
  ConfigurationBuilder builder=new ConfigurationBuilder();
  builder.clustering().cacheMode(org.infinispan.configuration.cache.CacheMode.valueOf(legacy.getCacheMode().name()));
  if (!legacy.getCacheMode().isSynchronous()) {
    if (legacy.isUseAsyncMarshalling())     builder.clustering().async().asyncMarshalling();
 else     builder.clustering().async().syncMarshalling();
    builder.clustering().async().replQueue(Util.<ReplicationQueue>getInstance(legacy.getReplQueueClass(),legacy.getClassLoader())).replQueueInterval(legacy.getReplQueueInterval()).replQueueMaxElements(legacy.getReplQueueMaxElements());
  }
  if (legacy.getConsistentHashClass() != null) {
    builder.clustering().hash().consistentHash(Util.<ConsistentHash>getInstance(legacy.getConsistentHashClass(),legacy.getClassLoader()));
  }
  if (legacy.getHashFunctionClass() != null) {
    builder.clustering().hash().hash(Util.<Hash>getInstance(legacy.getHashFunctionClass(),legacy.getClassLoader()));
  }
  builder.clustering().hash().numOwners(legacy.getNumOwners()).numVirtualNodes(legacy.getNumVirtualNodes()).rehashEnabled(legacy.isRehashEnabled()).rehashRpcTimeout(legacy.getRehashRpcTimeout()).rehashWait(legacy.getRehashWaitTime()).groups().enabled(legacy.isGroupsEnabled()).withGroupers(legacy.getGroupers());
  if (legacy.isL1CacheEnabled()) {
    builder.clustering().l1().invalidationThreshold(legacy.getL1InvalidationThreshold()).lifespan(legacy.getL1Lifespan()).onRehash(legacy.isL1OnRehash());
  }
 else {
    builder.clustering().l1().disable();
  }
  builder.clustering().stateRetrieval().alwaysProvideInMemoryState(legacy.isAlwaysProvideInMemoryState()).fetchInMemoryState(legacy.isFetchInMemoryState()).initialRetryWaitTime(legacy.getStateRetrievalInitialRetryWaitTime()).logFlushTimeout(legacy.getStateRetrievalLogFlushTimeout()).maxNonProgressingLogWrites(legacy.getStateRetrievalMaxNonProgressingLogWrites()).numRetries(legacy.getStateRetrievalNumRetries()).retryWaitTimeIncreaseFactor(legacy.getStateRetrievalRetryWaitTimeIncreaseFactor()).timeout(legacy.getStateRetrievalTimeout());
  if (legacy.getCacheMode().isSynchronous()) {
    builder.clustering().sync().replTimeout(legacy.getSyncReplTimeout());
  }
  for (  CustomInterceptorConfig interceptor : legacy.getCustomInterceptors()) {
    InterceptorConfigurationBuilder interceptorConfigurationBuilder=builder.clustering().customInterceptors().addInterceptor();
    interceptorConfigurationBuilder.after(Util.<CommandInterceptor>loadClass(interceptor.getAfter(),legacy.getClassLoader()));
    interceptorConfigurationBuilder.before(Util.<CommandInterceptor>loadClass(interceptor.getBefore(),legacy.getClassLoader()));
    interceptorConfigurationBuilder.index(interceptor.getIndex());
    interceptorConfigurationBuilder.interceptor(interceptor.getInterceptor());
    interceptorConfigurationBuilder.position(Position.valueOf(interceptor.getPositionAsString()));
  }
  builder.dataContainer().dataContainer(legacy.getDataContainer()).withProperties(legacy.getDataContainerProperties());
  builder.deadlockDetection().enabled(legacy.isDeadlockDetectionEnabled()).spinDuration(legacy.getDeadlockDetectionSpinDuration());
  builder.eviction().maxEntries(legacy.getEvictionMaxEntries()).strategy(legacy.getEvictionStrategy()).threadPolicy(legacy.getEvictionThreadPolicy());
  builder.expiration().lifespan(legacy.getExpirationLifespan()).maxIdle(legacy.getExpirationMaxIdle()).reaperEnabled(legacy.isExpirationReaperEnabled()).wakeUpInterval(legacy.getExpirationWakeUpInterval());
  builder.indexing().enabled(legacy.isIndexingEnabled()).indexLocalOnly(legacy.isIndexLocalOnly());
  if (legacy.isInvocationBatchingEnabled()) {
    builder.invocationBatching().enable();
  }
 else {
    builder.invocationBatching().disable();
  }
  builder.jmxStatistics().enabled(legacy.isExposeJmxStatistics());
  builder.loaders().passivation(legacy.isCacheLoaderPassivation()).preload(legacy.isCacheLoaderPreload()).shared(legacy.isCacheLoaderShared());
  for (  CacheLoaderConfig clc : legacy.getCacheLoaders()) {
    LoaderConfigurationBuilder loaderBuilder=builder.loaders().addCacheLoader();
    loaderBuilder.cacheLoader(Util.<CacheLoader>getInstance(clc.getCacheLoaderClassName(),legacy.getClassLoader()));
    if (clc instanceof CacheStoreConfig) {
      CacheStoreConfig csc=(CacheStoreConfig)clc;
      loaderBuilder.fetchPersistentState(csc.isFetchPersistentState());
      loaderBuilder.ignoreModifications(csc.isIgnoreModifications());
      loaderBuilder.purgeOnStartup(csc.isPurgeOnStartup());
      loaderBuilder.purgerThreads(csc.getPurgerThreads());
      loaderBuilder.purgeSynchronously(csc.isPurgeSynchronously());
      loaderBuilder.async().enabled(csc.getAsyncStoreConfig().isEnabled());
      loaderBuilder.async().flushLockTimeout(csc.getAsyncStoreConfig().getFlushLockTimeout());
      loaderBuilder.async().modificationQueueSize(csc.getAsyncStoreConfig().getModificationQueueSize());
      loaderBuilder.async().shutdownTimeout(csc.getAsyncStoreConfig().getShutdownTimeout());
      loaderBuilder.async().threadPoolSize(csc.getAsyncStoreConfig().getThreadPoolSize());
      loaderBuilder.singletonStore().enabled(csc.getSingletonStoreConfig().isSingletonStoreEnabled());
      loaderBuilder.singletonStore().pushStateTimeout(csc.getSingletonStoreConfig().getPushStateTimeout());
      loaderBuilder.singletonStore().pushStateWhenCoordinator(csc.getSingletonStoreConfig().isPushStateWhenCoordinator());
    }
    if (clc instanceof AbstractCacheStoreConfig) {
      loaderBuilder.withProperties(((AbstractCacheLoaderConfig)clc).getProperties());
    }
  }
  builder.locking().concurrencyLevel(legacy.getConcurrencyLevel()).isolationLevel(legacy.getIsolationLevel()).lockAcquisitionTimeout(legacy.getLockAcquisitionTimeout()).useLockStriping(legacy.isUseLockStriping()).writeSkewCheck(legacy.isWriteSkewCheck());
  builder.storeAsBinary().enabled(legacy.isStoreAsBinary()).storeKeysAsBinary(legacy.isStoreKeysAsBinary()).storeValuesAsBinary(legacy.isStoreValuesAsBinary());
  builder.transaction().autoCommit(legacy.isTransactionAutoCommit()).cacheStopTimeout((int)legacy.getCacheStopTimeout()).eagerLockingSingleNode(legacy.isEagerLockSingleNode()).lockingMode(legacy.getTransactionLockingMode()).syncCommitPhase(legacy.isSyncCommitPhase()).syncRollbackPhase(legacy.isSyncRollbackPhase()).transactionManagerLookup(legacy.getTransactionManagerLookup()).transactionMode(legacy.getTransactionMode()).transactionSynchronizationRegistryLookup(legacy.getTransactionSynchronizationRegistryLookup()).useEagerLocking(legacy.isUseEagerLocking()).useSynchronization(legacy.isUseSynchronizationForTransactions());
  if (legacy.isTransactionRecoveryEnabled()) {
    builder.transaction().recovery();
  }
  builder.unsafe().unreliableReturnValues(legacy.isUnsafeUnreliableReturnValues());
  return builder.build();
}

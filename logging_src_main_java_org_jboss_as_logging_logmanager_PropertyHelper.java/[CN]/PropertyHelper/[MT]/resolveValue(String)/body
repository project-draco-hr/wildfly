{
  if (value == null)   return null;
  final StringBuilder builder=new StringBuilder();
  final char[] chars=value.toCharArray();
  final int len=chars.length;
  int state=0;
  int start=-1;
  int nameStart=-1;
  for (int i=0; i < len; i++) {
    char ch=chars[i];
switch (state) {
case INITIAL:
{
switch (ch) {
case '$':
{
            state=GOT_DOLLAR;
            continue;
          }
default :
{
          builder.append(ch);
          continue;
        }
    }
  }
case GOT_DOLLAR:
{
switch (ch) {
case '$':
{
      builder.append(ch);
      state=INITIAL;
      continue;
    }
case '{':
{
    start=i + 1;
    nameStart=start;
    state=GOT_OPEN_BRACE;
    continue;
  }
default :
{
  builder.append('$').append(ch);
  state=INITIAL;
  continue;
}
}
}
case GOT_OPEN_BRACE:
{
switch (ch) {
case ':':
case '}':
case ',':
{
final String name=value.substring(nameStart,i).trim();
if ("/".equals(name)) {
builder.append(File.separator);
state=ch == '}' ? INITIAL : RESOLVED;
continue;
}
 else if (":".equals(name)) {
builder.append(File.pathSeparator);
state=ch == '}' ? INITIAL : RESOLVED;
continue;
}
final String val=System.getProperty(name);
if (val != null) {
builder.append(val);
state=ch == '}' ? INITIAL : RESOLVED;
continue;
}
 else if (ch == ',') {
nameStart=i + 1;
continue;
}
 else if (ch == ':') {
start=i + 1;
state=DEFAULT;
continue;
}
 else {
builder.append(value.substring(start - 2,i + 1));
state=INITIAL;
continue;
}
}
default :
{
continue;
}
}
}
case RESOLVED:
{
if (ch == '}') {
state=INITIAL;
}
continue;
}
case DEFAULT:
{
if (ch == '}') {
state=INITIAL;
builder.append(value.substring(start,i));
}
continue;
}
default :
throw new IllegalStateException();
}
}
switch (state) {
case GOT_DOLLAR:
{
builder.append('$');
break;
}
case DEFAULT:
case GOT_OPEN_BRACE:
{
builder.append(value.substring(start - 2));
break;
}
}
return builder.toString();
}

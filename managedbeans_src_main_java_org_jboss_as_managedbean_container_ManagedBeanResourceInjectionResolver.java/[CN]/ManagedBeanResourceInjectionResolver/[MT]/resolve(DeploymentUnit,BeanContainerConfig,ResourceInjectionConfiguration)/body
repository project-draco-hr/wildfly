{
  final JndiName managedBeanContextJndiName=ContextNames.MODULE_CONTEXT_NAME.append("env").append(containerConfig.getName());
  final JndiName localContextName=managedBeanContextJndiName.append(configuration.getLocalContextName());
  final NamingLookupValue<Object> lookupValue=new NamingLookupValue<Object>(localContextName);
  final ResourceInjection injection=ResourceInjection.Factory.create(configuration,lookupValue);
  final NamingContextConfig moduleContext=deploymentUnit.getAttachment(org.jboss.as.ee.naming.Attachments.MODULE_CONTEXT_CONFIG);
  final ServiceName managedBeanContextServiceName=moduleContext.getContextServiceName().append("env").append(containerConfig.getName());
  final JndiName targetContextName=configuration.getTargetContextName().startsWith("java") ? JndiName.of(configuration.getTargetContextName()) : ContextNames.MODULE_CONTEXT_NAME.append(configuration.getTargetContextName());
  final List<ResolverDependency<?>> dependencies=new ArrayList<ResolverDependency<?>>();
  dependencies.add(new ResolverDependency<Context>(){
    public ServiceName getServiceName(){
      return managedBeanContextServiceName;
    }
    public Injector<Context> getInjector(){
      return lookupValue.getContextInjector();
    }
    public Class<Context> getInjectorType(){
      return Context.class;
    }
  }
);
  return new ResolverResult(){
    public ResourceInjection getInjection(){
      return injection;
    }
    public ServiceName getBindContextName(){
      return managedBeanContextServiceName;
    }
    public String getBindName(){
      return localContextName.getLocalName();
    }
    public String getBindTargetName(){
      return targetContextName.getAbsoluteName();
    }
    public List<ResolverDependency<?>> getDependencies(){
      return dependencies;
    }
    public boolean shouldBind(){
      return injection != null;
    }
  }
;
}

{
  SessionMetaDataFactory<Object,Object> factory=mock(SessionMetaDataFactory.class);
  Remover<String> remover=mock(Remover.class);
  ImmutableSessionMetaData validMetaData=mock(ImmutableSessionMetaData.class);
  ImmutableSessionMetaData expiredMetaData=mock(ImmutableSessionMetaData.class);
  String missingSessionId="missing";
  String expiredSessionId="expired";
  String validSessionId="valid";
  Object expiredValue=new Object();
  Object validValue=new Object();
  Remover<String> subject=new ExpiredSessionRemover<>(factory,remover);
  when(factory.tryValue(missingSessionId)).thenReturn(null);
  when(factory.tryValue(expiredSessionId)).thenReturn(expiredValue);
  when(factory.tryValue(validSessionId)).thenReturn(validValue);
  when(factory.createImmutableSessionMetaData(expiredSessionId,expiredValue)).thenReturn(expiredMetaData);
  when(factory.createImmutableSessionMetaData(validSessionId,validValue)).thenReturn(validMetaData);
  when(expiredMetaData.isExpired()).thenReturn(true);
  when(validMetaData.isExpired()).thenReturn(false);
  subject.remove(missingSessionId);
  subject.remove(expiredSessionId);
  subject.remove(validSessionId);
  verify(remover).remove(expiredSessionId);
  verify(remover,never()).remove(validSessionId);
}

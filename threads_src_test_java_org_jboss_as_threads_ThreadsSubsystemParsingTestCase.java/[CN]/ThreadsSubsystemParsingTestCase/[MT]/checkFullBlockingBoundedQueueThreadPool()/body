{
  ModelNode subsystem=model.require("subsystem").require("threads");
  ModelNode threadPool=subsystem.require("blocking-bounded-queue-thread-pool");
  assertEquals(1,threadPool.keys().size());
  assertTrue(threadPool.require("test-pool").require("allow-core-timeout").asBoolean());
  assertEquals(200,threadPool.require("test-pool").require(CORE_THREADS).asInt());
  assertEquals(300,threadPool.require("test-pool").require(QUEUE_LENGTH).asInt());
  assertEquals(100,threadPool.require("test-pool").require(MAX_THREADS).asInt());
  assertEquals(1000L,threadPool.require("test-pool").require(KEEPALIVE_TIME).require(TIME).asLong());
  assertEquals("MILLISECONDS",threadPool.require("test-pool").require(KEEPALIVE_TIME).require(UNIT).asString());
  assertFalse(threadPool.has(HANDOFF_EXECUTOR));
}

{
  bootFile.getParentFile().mkdirs();
  createFile(historyDir,bootFile.getName(),"boot");
  ConfigurationFile configurationFile=new ConfigurationFile(standardDir,"standard.xml","standard_xml_history/standard.boot.xml",false);
  File bootingFile=configurationFile.getBootFile();
  Assert.assertEquals(bootFile.getCanonicalPath(),bootingFile.getCanonicalPath());
  TestConfigurationFilePersister persister=new TestConfigurationFilePersister(configurationFile);
  configurationFile.successfulBoot();
  checkDirectoryExists(historyDir);
  checkDirectoryExists(currentHistoryDir);
  checkFiles(null,"std","boot","boot","boot");
  store(persister,"One");
  checkFiles(null,"std","boot","boot","One","boot");
  store(persister,"Two");
  checkFiles(null,"std","boot","boot","Two","boot","One");
  store(persister,"Three");
  checkFiles(null,"std","boot","boot","Three","boot","One","Two");
  configurationFile=new ConfigurationFile(standardDir,"standard.xml","standard_xml_history/standard.last.xml",false);
  bootingFile=configurationFile.getBootFile();
  Assert.assertEquals(lastFile.getCanonicalPath(),bootingFile.getCanonicalPath());
  persister=new TestConfigurationFilePersister(configurationFile);
  configurationFile.successfulBoot();
  checkDirectoryExists(historyDir);
  checkDirectoryExists(currentHistoryDir);
  checkFiles(null,"std","boot","Three","Three");
  store(persister,"Four");
  checkFiles(null,"std","boot","Three","Four","Three");
  configurationFile=new ConfigurationFile(standardDir,"standard.xml","standard_xml_history/standard.initial.xml",false);
  bootingFile=configurationFile.getBootFile();
  Assert.assertEquals(initialFile.getCanonicalPath(),bootingFile.getCanonicalPath());
  persister=new TestConfigurationFilePersister(configurationFile);
  configurationFile.successfulBoot();
  checkDirectoryExists(historyDir);
  checkDirectoryExists(currentHistoryDir);
  checkFiles(null,"std","boot","boot","boot");
  store(persister,"Four");
  checkFiles(null,"std","boot","boot","Four","boot");
  store(persister,"Five");
  checkFiles(null,"std","boot","boot","Five","boot","Four");
  store(persister,"Six");
  checkFiles(null,"std","boot","boot","Six","boot","Four","Five");
  configurationFile=new ConfigurationFile(standardDir,"standard.xml","standard_xml_history/current/standard.v2.xml",false);
  bootingFile=configurationFile.getBootFile();
  Assert.assertEquals(new File(currentHistoryDir,"standard.v2.xml").getCanonicalPath(),bootingFile.getCanonicalPath());
  persister=new TestConfigurationFilePersister(configurationFile);
  configurationFile.successfulBoot();
  checkDirectoryExists(historyDir);
  checkDirectoryExists(currentHistoryDir);
  checkFiles(null,"std","boot","Four","Four");
}

{
  final CompositeIndex compositeIndex=depUnit.getAttachment(Attachments.COMPOSITE_ANNOTATION_INDEX);
  if (compositeIndex == null) {
    log.warnf("Cannot find composite annotation index in: %s",depUnit);
    return null;
  }
  final DotName runWithName=DotName.createSimple(CLASS_NAME_JUNIT_RUNNER);
  final List<AnnotationInstance> runWithList=compositeIndex.getAnnotations(runWithName);
  final DotName testNGClassName=DotName.createSimple(CLASS_NAME_TESTNG_RUNNER);
  final Set<ClassInfo> testNgTests=compositeIndex.getAllKnownSubclasses(testNGClassName);
  final Set<String> testClasses=new HashSet<String>();
  for (  AnnotationInstance instance : runWithList) {
    final AnnotationTarget target=instance.target();
    if (target instanceof ClassInfo) {
      final ClassInfo classInfo=(ClassInfo)target;
      final String testClassName=classInfo.name().toString();
      testClasses.add(testClassName);
    }
  }
  for (  final ClassInfo classInfo : testNgTests) {
    testClasses.add(classInfo.name().toString());
  }
  if (testClasses.isEmpty()) {
    return null;
  }
  ArquillianConfig arqConfig=new ArquillianConfig(arqService,depUnit,testClasses);
  if (arqService.getServiceContainer().getService(arqConfig.getServiceName()) != null) {
    log.warnf("Arquillian config already registered: %s",arqConfig);
    return null;
  }
  depUnit.putAttachment(ArquillianConfig.KEY,arqConfig);
  return arqConfig;
}

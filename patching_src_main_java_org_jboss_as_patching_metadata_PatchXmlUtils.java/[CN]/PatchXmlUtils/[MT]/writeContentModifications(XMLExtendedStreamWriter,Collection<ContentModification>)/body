{
  final List<ContentModification> bundlesAdd=new ArrayList<ContentModification>();
  final List<ContentModification> bundlesUpdate=new ArrayList<ContentModification>();
  final List<ContentModification> bundlesRemove=new ArrayList<ContentModification>();
  final List<ContentModification> miscAdd=new ArrayList<ContentModification>();
  final List<ContentModification> miscUpdate=new ArrayList<ContentModification>();
  final List<ContentModification> miscRemove=new ArrayList<ContentModification>();
  final List<ContentModification> modulesAdd=new ArrayList<ContentModification>();
  final List<ContentModification> modulesUpdate=new ArrayList<ContentModification>();
  final List<ContentModification> modulesRemove=new ArrayList<ContentModification>();
  for (  final ContentModification mod : modifications) {
    final ModificationType modificationType=mod.getType();
    final ContentType contentType=mod.getItem().getContentType();
switch (contentType) {
case BUNDLE:
switch (modificationType) {
case ADD:
        bundlesAdd.add(mod);
      break;
case MODIFY:
    bundlesUpdate.add(mod);
  break;
case REMOVE:
bundlesRemove.add(mod);
break;
}
break;
case MODULE:
switch (modificationType) {
case ADD:
modulesAdd.add(mod);
break;
case MODIFY:
modulesUpdate.add(mod);
break;
case REMOVE:
modulesRemove.add(mod);
break;
}
break;
case MISC:
switch (modificationType) {
case ADD:
miscAdd.add(mod);
break;
case MODIFY:
miscUpdate.add(mod);
break;
case REMOVE:
miscRemove.add(mod);
break;
}
break;
}
}
if (!modulesAdd.isEmpty() || !modulesUpdate.isEmpty() || !modulesRemove.isEmpty()) {
writer.writeStartElement(Element.MODULES.name);
writeSlottedItems(writer,Element.ADDED,modulesAdd);
writeSlottedItems(writer,Element.UPDATED,modulesUpdate);
writeSlottedItems(writer,Element.REMOVED,modulesRemove);
writer.writeEndElement();
}
if (!bundlesAdd.isEmpty() || !bundlesUpdate.isEmpty() || !bundlesRemove.isEmpty()) {
writer.writeStartElement(Element.BUNDLES.name);
writeSlottedItems(writer,Element.ADDED,bundlesAdd);
writeSlottedItems(writer,Element.UPDATED,bundlesUpdate);
writeSlottedItems(writer,Element.REMOVED,bundlesRemove);
writer.writeEndElement();
}
if (!miscAdd.isEmpty() || !miscUpdate.isEmpty() || !miscRemove.isEmpty()) {
writer.writeStartElement(Element.MISC_FILES.name);
writeMiscItems(writer,Element.ADDED,miscAdd);
writeMiscItems(writer,Element.UPDATED,miscUpdate);
writeMiscItems(writer,Element.REMOVED,miscRemove);
writer.writeEndElement();
}
}

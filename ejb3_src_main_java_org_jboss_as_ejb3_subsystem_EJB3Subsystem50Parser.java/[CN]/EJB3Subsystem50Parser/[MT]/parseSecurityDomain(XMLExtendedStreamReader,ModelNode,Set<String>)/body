{
  String securityDomainName=null;
  ModelNode securityDomain=new ModelNode();
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    requireNoNamespaceAttribute(reader,i);
    final String attributeValue=reader.getAttributeValue(i);
    final EJB3SubsystemXMLAttribute attribute=EJB3SubsystemXMLAttribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case NAME:
      securityDomainName=attributeValue;
    if (!securityDomainNames.add(securityDomainName)) {
      throw duplicateNamedElement(reader,securityDomainName);
    }
  EJB3SubsystemRootResourceDefinition.SECURITY_DOMAIN_NAME.parseAndSetParameter(securityDomainName,securityDomain,reader);
break;
case ALIAS:
EJB3SubsystemRootResourceDefinition.SECURITY_DOMAIN_ALIAS.parseAndSetParameter(attributeValue,securityDomain,reader);
break;
default :
throw unexpectedAttribute(reader,i);
}
}
if (securityDomainName == null) {
throw missingRequired(reader,Collections.singleton(EJB3SubsystemXMLAttribute.NAME.getLocalName()));
}
requireNoContent(reader);
ejb3SubsystemAddOperation.get(SECURITY_DOMAINS).add(securityDomain);
}

{
  final boolean rcPresent=context.getOriginalRootResource().hasChild(PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,RequestControllerExtension.SUBSYSTEM_NAME));
  context.addStep(new AbstractDeploymentChainStep(){
    public void execute(    DeploymentProcessorTarget processorTarget){
      processorTarget.addDeploymentProcessor(BatchSubsystemDefinition.NAME,Phase.STRUCTURE,Phase.STRUCTURE_REGISTER_JBOSS_ALL_BATCH,new JBossAllXmlParserRegisteringProcessor<>(BatchDeploymentDescriptorParser_1_0.ROOT_ELEMENT,BatchDeploymentDescriptorParser_1_0.ATTACHMENT_KEY,new BatchDeploymentDescriptorParser_1_0()));
      processorTarget.addDeploymentProcessor(NAME,Phase.DEPENDENCIES,Phase.DEPENDENCIES_BATCH,new BatchDependencyProcessor());
      processorTarget.addDeploymentProcessor(NAME,Phase.POST_MODULE,Phase.POST_MODULE_BATCH_ENVIRONMENT,new BatchEnvironmentProcessor(rcPresent));
      processorTarget.addDeploymentProcessor(NAME,Phase.INSTALL,Phase.INSTALL_BATCH_RESOURCES,new BatchDeploymentResourceProcessor(NAME));
    }
  }
,OperationContext.Stage.RUNTIME);
  final ServiceTarget target=context.getServiceTarget();
  final ModelNode defaultJobRepository=DEFAULT_JOB_REPOSITORY.resolveModelAttribute(context,model);
  if (defaultJobRepository.isDefined()) {
    final String name=defaultJobRepository.asString();
    final DefaultValueService<JobRepository> service=DefaultValueService.create();
    target.addService(context.getCapabilityServiceName(Capabilities.DEFAULT_JOB_REPOSITORY_CAPABILITY.getName(),JobRepository.class),service).addDependency(context.getCapabilityServiceName(Capabilities.JOB_REPOSITORY_CAPABILITY.getName(),name,JobRepository.class),JobRepository.class,service.getInjector()).install();
  }
  final ModelNode defaultThreadPool=DEFAULT_THREAD_POOL.resolveModelAttribute(context,model);
  if (defaultThreadPool.isDefined()) {
    final String name=defaultThreadPool.asString();
    final JobExecutorService service=new JobExecutorService();
    target.addService(context.getCapabilityServiceName(Capabilities.DEFAULT_THREAD_POOL_CAPABILITY.getName(),JobExecutor.class),service).addDependency(BatchServiceNames.BASE_BATCH_THREAD_POOL_NAME.append(name),ManagedJBossThreadPoolExecutorService.class,service.getThreadPoolInjector()).install();
  }
}

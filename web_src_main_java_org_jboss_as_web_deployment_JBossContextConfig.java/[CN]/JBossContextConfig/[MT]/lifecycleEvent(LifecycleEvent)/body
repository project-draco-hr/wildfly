{
  if (event.getType().equals(Lifecycle.AFTER_START_EVENT)) {
    final WarMetaData warMetaData=deploymentUnitContext.getAttachment(WarMetaData.ATTACHMENT_KEY);
    Set<VirtualFile> overlayVirtualFiles=warMetaData.getOverlays();
    if (overlayVirtualFiles != null) {
      if (context.getResources() instanceof ProxyDirContext) {
        ProxyDirContext resources=(ProxyDirContext)context.getResources();
        for (        VirtualFile overlay : overlayVirtualFiles) {
          VFSDirContext dirContext=new VFSDirContext();
          dirContext.setVirtualFile(overlay);
          resources.addOverlay(dirContext);
        }
      }
 else       if (overlayVirtualFiles.size() > 0) {
        WebLogger.WEB_LOGGER.noOverlay(context.getName());
        ok=false;
      }
    }
    for (    String overlay : overlays) {
      if (context.getResources() instanceof ProxyDirContext) {
        ProxyDirContext resources=(ProxyDirContext)context.getResources();
        FileDirContext dirContext=new FileDirContext();
        dirContext.setDocBase(overlay);
        resources.addOverlay(dirContext);
      }
    }
    final ScisMetaData scisMetaData=deploymentUnitContext.getAttachment(ScisMetaData.ATTACHMENT_KEY);
    if (scisMetaData != null) {
      for (      ServletContainerInitializer sci : scisMetaData.getScis()) {
        try {
          sci.onStartup(scisMetaData.getHandlesTypes().get(sci),context.getServletContext());
        }
 catch (        Throwable t) {
          WebLogger.WEB_LOGGER.sciOnStartupError(sci.getClass().getName(),t);
          ok=false;
        }
      }
    }
    List<String> order=warMetaData.getOrder();
    if (!warMetaData.isNoOrder()) {
      context.getServletContext().setAttribute(ServletContext.ORDERED_LIBS,order);
    }
  }
  super.lifecycleEvent(event);
}

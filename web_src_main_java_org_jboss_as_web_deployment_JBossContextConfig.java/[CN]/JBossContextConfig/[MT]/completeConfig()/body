{
  final WarMetaData warMetaData=deploymentUnitContext.getAttachment(WarMetaData.ATTACHMENT_KEY);
  JBossWebMetaData metaData=warMetaData.getMergedJBossWebMetaData();
  if (ok && (metaData != null)) {
    metaData.resolveAnnotations();
    resolveAnnotations(metaData.getAnnotations());
  }
  if (ok) {
    resolveServletSecurity();
  }
  if (ok) {
    validateSecurityRoles();
  }
  if (ok && (metaData != null)) {
    metaData.resolveRunAs();
    Map<String,RunAsIdentityMetaData> runAs=metaData.getRunAsIdentity();
    Map<String,RunAsIdentityMetaData> newRunAs=new ConcurrentHashMap<String,RunAsIdentityMetaData>();
    Map<String,Set<String>> principalVersusRolesMap=metaData.getSecurityRoles().getPrincipalVersusRolesMap();
    for (    Entry<String,RunAsIdentityMetaData> entry : runAs.entrySet()) {
      String roleName=entry.getValue().getRoleName();
      if (principalVersusRolesMap.containsKey(roleName)) {
        Set<String> principals=principalVersusRolesMap.get(roleName);
        String runAsPrincipal=principals.iterator().next();
        RunAsIdentityMetaData newRunAsIdentity=new RunAsIdentityMetaData(roleName,runAsPrincipal);
        newRunAs.put(entry.getKey(),newRunAsIdentity);
      }
    }
    if (!newRunAs.isEmpty()) {
      metaData.setRunAsIdentity(newRunAs);
    }
  }
  if (ok) {
    authenticatorConfig();
  }
  if (ok) {
    Set<VirtualFile> overlays=warMetaData.getOverlays();
    if (overlays != null) {
      if (context.getResources() instanceof ProxyDirContext) {
        ProxyDirContext resources=(ProxyDirContext)context.getResources();
        for (        VirtualFile overlay : overlays) {
          VFSDirContext dirContext=new VFSDirContext();
          dirContext.setVirtualFile(overlay);
          resources.addOverlay(dirContext);
        }
      }
 else       if (overlays.size() > 0) {
        log.error(sm.getString("contextConfig.noOverlay",context.getName()));
        ok=false;
      }
    }
  }
  if (ok) {
    for (    String overlay : overlays) {
      if (context.getResources() instanceof ProxyDirContext) {
        ProxyDirContext resources=(ProxyDirContext)context.getResources();
        FileDirContext dirContext=new FileDirContext();
        dirContext.setDocBase(overlay);
        resources.addOverlay(dirContext);
      }
    }
  }
  if (!ok) {
    log.error(sm.getString("contextConfig.unavailable"));
    context.setConfigured(false);
  }
}

{
  final ServiceName serviceName=getServiceName(unit,endpoint.getShortName());
  final String propContext=endpoint.getName().getKeyProperty(Endpoint.SEPID_PROPERTY_CONTEXT);
  final String propEndpoint=endpoint.getName().getKeyProperty(Endpoint.SEPID_PROPERTY_ENDPOINT);
  final StringBuilder context=new StringBuilder(Endpoint.SEPID_PROPERTY_CONTEXT).append("=").append(propContext);
  final EndpointService service=new EndpointService(endpoint,serviceName);
  final ServiceBuilder<Endpoint> builder=serviceTarget.addService(serviceName,service);
  final ServiceName alias=WSServices.ENDPOINT_SERVICE.append(context.toString()).append(propEndpoint);
  builder.addAliases(alias);
  builder.addDependency(DependencyType.REQUIRED,SecurityDomainService.SERVICE_NAME.append(getDeploymentSecurityDomainName(endpoint)),SecurityDomainContext.class,service.getSecurityDomainContextInjector());
  builder.addDependency(DependencyType.REQUIRED,WSServices.CONFIG_SERVICE);
  builder.addDependency(DependencyType.OPTIONAL,MBEAN_SERVER_NAME,MBeanServer.class,service.getMBeanServerInjector());
  if (EndpointType.JAXWS_EJB3.equals(endpoint.getType())) {
    builder.addDependency(DependencyType.OPTIONAL,getEJBViewMethodSecurityAttributesServiceName(unit,endpoint),EJBViewMethodSecurityAttributesService.class,service.getEJBMethodSecurityAttributeServiceInjector());
  }
  builder.setInitialMode(Mode.ACTIVE);
  builder.install();
  unit.addToAttachmentList(Attachments.WEB_DEPENDENCIES,serviceName);
}

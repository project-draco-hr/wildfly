{
  OperationRouting routing=determineRouting(executionContext.getOperation());
  if (routing.isRouteToMaster()) {
    return masterDomainControllerClient.execute(executionContext,handler);
  }
 else   if (routing.isLocalOnly()) {
    return localDomainModel.execute(executionContext,handler);
  }
  ControllerTransaction transaction=new ControllerTransaction();
  Map<String,ModelNode> hostResults=pushToHosts(executionContext,routing,transaction);
  for (  ModelNode hostResult : hostResults.values()) {
    if (hostResult.hasDefined(OUTCOME) && FAILED.equals(hostResult.get(OUTCOME).asString())) {
      transaction.setRollbackOnly();
      break;
    }
  }
  for (  Map.Entry<String,ModelNode> entry : hostResults.entrySet()) {
    System.out.println("======================================================");
    System.out.println(entry.getKey());
    System.out.println("======================================================");
    System.out.println(entry.getValue());
  }
  if (transaction.isRollbackOnly()) {
    transaction.commit();
    throw new UnsupportedOperationException("implement reporting of domain-level failure");
  }
 else {
    transaction.commit();
    Map<String,Map<ServerIdentity,ModelNode>> opsByGroup=getOpsByGroup(hostResults);
    handler.handleResultComplete();
    return new BasicOperationResult();
  }
}

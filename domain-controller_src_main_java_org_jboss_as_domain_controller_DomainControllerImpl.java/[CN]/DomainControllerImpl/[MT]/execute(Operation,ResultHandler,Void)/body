{
  try {
    ModelNode operationNode=operation.getOperation();
    OperationRouting routing=determineRouting(operationNode);
    if ((routing.isRouteToMaster() || !routing.isLocalOnly()) && masterDomainControllerClient != null) {
      PathAddress addr=PathAddress.pathAddress(operationNode.get(OP_ADDR));
      handler.handleFailed(new ModelNode().set("Operations for address " + addr + " can only handled by the master Domain Controller; this host is not the master Domain Controller"));
      return new BasicOperationResult();
    }
 else     if (!routing.isTwoStep()) {
      String host=routing.getSingleHost();
      return executeOnHost(host,operation,handler);
    }
 else     if (routing.getSingleHost() != null && !localHostName.equals(routing.getSingleHost())) {
      String host=routing.getSingleHost();
      return executeOnHost(host,operation,handler);
    }
 else {
      return executeTwoPhaseOperation(operation,handler,operationNode,routing);
    }
  }
 catch (  OperationFailedException e) {
    log.debugf(e,"operation (%s) failed - address: (%s)",operation.getOperation().get(OP),operation.getOperation().get(OP_ADDR));
    handler.handleFailed(e.getFailureDescription());
    return new BasicOperationResult();
  }
catch (  final Throwable t) {
    log.errorf(t,"operation (%s) failed - address: (%s)",operation.getOperation().get(OP),operation.getOperation().get(OP_ADDR));
    handler.handleFailed(getFailureResult(t));
    return new BasicOperationResult();
  }
}

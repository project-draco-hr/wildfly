{
  final TransactionalModelController client=hosts.get(host);
  if (client != null) {
    final ModelNode hostResult=new ModelNode();
    hostResults.put(host,hostResult);
    final ResultHandler handler=new ResultHandler(){
      @Override public void handleResultFragment(      String[] location,      ModelNode result){
        hostResult.get(location).set(result);
      }
      @Override public void handleResultComplete(){
        hostResult.get(OUTCOME).set("success");
      }
      @Override public void handleFailed(      ModelNode failureDescription){
        hostResult.get(OUTCOME).set("failed");
      }
      @Override public void handleCancellation(){
        hostResult.get(OUTCOME).set("cancelled");
      }
    }
;
    final Callable<OperationResult> callable=new Callable<OperationResult>(){
      @Override public OperationResult call() throws Exception {
        return client.execute(executionContext,handler,transaction);
      }
    }
;
    futures.put(host,scheduledExecutorService.submit(callable));
  }
}

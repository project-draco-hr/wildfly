{
  operationValidator.validate(operation);
  final ModelNode config=operation.require(CONFIGURATION);
  configValidator.validate(config);
  final ModelNode subModel=context.getSubModel();
  subModel.get(CONFIGURATION).set(config);
  if (context instanceof BootOperationContext) {
    final BootOperationContext updateContext=(BootOperationContext)context;
    context.getRuntimeContext().setRuntimeTask(new RuntimeTask(){
      @Override public void execute(      RuntimeTaskContext context) throws OperationFailedException {
        log.info("Activating WebServices Extension");
        WSServices.saveContainerRegistry(context.getServiceRegistry());
        ServiceTarget serviceTarget=context.getServiceTarget();
        ServerConfigImpl serverConfig=createServerConfig(config);
        ServerConfigService.install(serviceTarget,serverConfig);
        EndpointRegistryService.install(serviceTarget);
        WSDeploymentActivator.activate(updateContext);
        resultHandler.handleResultComplete();
      }
    }
);
  }
 else {
    resultHandler.handleResultComplete();
  }
  final ModelNode compensatingOperation=Util.getResourceRemoveOperation(operation.require(OP_ADDR));
  return new BasicOperationResult(compensatingOperation);
}

{
  ROOT_LOGGER.activatingWebservicesExtension();
  ModuleClassLoaderProvider.register();
  final boolean appclient=context.getProcessType() == ProcessType.APPLICATION_CLIENT;
  context.addStep(new AbstractDeploymentChainStep(){
    protected void execute(    DeploymentProcessorTarget processorTarget){
      WSDeploymentActivator.activate(processorTarget,appclient);
    }
  }
,OperationContext.Stage.RUNTIME);
  ServiceTarget serviceTarget=context.getServiceTarget();
  if (appclient && model.hasDefined(WSDL_HOST)) {
    ServerConfigImpl serverConfig=createServerConfig(model,true,context);
    newControllers.add(ServerConfigService.install(serviceTarget,serverConfig,verificationHandler));
  }
  if (!appclient) {
    ServerConfigImpl serverConfig=createServerConfig(model,false,context);
    newControllers.add(ServerConfigService.install(serviceTarget,serverConfig,verificationHandler));
    newControllers.add(EndpointRegistryService.install(serviceTarget,verificationHandler));
    String defaultHost="localhost";
    try {
      final Resource webSubsystem=context.readResourceFromRoot(PathAddress.pathAddress(PathElement.pathElement("subsystem","web")));
      defaultHost=webSubsystem.getModel().get("default-virtual-server").asString();
    }
 catch (    Exception e) {
      ROOT_LOGGER.info("Could not get default virtual host: " + e.getMessage());
    }
    newControllers.add(PortComponentLinkService.install(serviceTarget,defaultHost,verificationHandler));
  }
}

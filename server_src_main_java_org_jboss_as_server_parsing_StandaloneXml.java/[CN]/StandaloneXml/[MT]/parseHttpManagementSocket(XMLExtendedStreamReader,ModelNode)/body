{
  boolean hasInterface=false;
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    final String value=reader.getAttributeValue(i);
    if (!isNoNamespaceAttribute(reader,i)) {
      throw unexpectedAttribute(reader,i);
    }
 else {
      final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case INTERFACE:
{
          HttpManagementResourceDefinition.INTERFACE.parseAndSetParameter(value,addOp,reader.getLocation());
          hasInterface=true;
          break;
        }
case PORT:
{
        HttpManagementResourceDefinition.HTTP_PORT.parseAndSetParameter(value,addOp,reader.getLocation());
        break;
      }
case SECURE_PORT:
{
      HttpManagementResourceDefinition.HTTPS_PORT.parseAndSetParameter(value,addOp,reader.getLocation());
      break;
    }
default :
  throw unexpectedAttribute(reader,i);
}
}
}
requireNoContent(reader);
if (!hasInterface) {
throw missingRequired(reader,Collections.singleton(Attribute.INTERFACE.getLocalName()));
}
}

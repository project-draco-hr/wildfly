{
  final ModelNode operationAddress=address.clone();
  operationAddress.add(MANAGEMENT_INTERFACE,http ? HTTP_INTERFACE : NATIVE_INTERFACE);
  final ModelNode addOp=Util.getEmptyOperation(ADD,operationAddress);
  if (http) {
    parseHttpManagementInterfaceAttributes2_0(reader,addOp);
  }
 else {
    parseNativeManagementInterfaceAttributes2_0(reader,addOp);
  }
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
    requireNamespace(reader,expectedNs);
    final Element element=Element.forName(reader.getLocalName());
switch (element) {
case SOCKET:
      if (http) {
        parseHttpManagementSocket(reader,addOp);
      }
 else {
        parseNativeManagementSocket(reader,addOp);
      }
    break;
case SOCKET_BINDING:
  if (http) {
    parseHttpManagementSocketBinding(reader,addOp);
  }
 else {
    parseNativeManagementSocketBinding(reader,addOp);
  }
break;
default :
throw unexpectedElement(reader);
}
}
list.add(addOp);
}

{
  ModelNode modelNode=context.getModelNode();
  writer.writeStartDocument();
  writer.writeStartElement(Element.SERVER.getLocalName());
  if (modelNode.hasDefined(NAME)) {
    ServerRootResourceDefinition.NAME.marshallAsAttribute(modelNode,false,writer);
  }
  writer.writeDefaultNamespace(Namespace.CURRENT.getUriString());
  writeNamespaces(writer,modelNode);
  writeSchemaLocation(writer,modelNode);
  writeNewLine(writer);
  if (modelNode.hasDefined(EXTENSION)) {
    extensionXml.writeExtensions(writer,modelNode.get(EXTENSION));
    writeNewLine(writer);
  }
  if (modelNode.hasDefined(SYSTEM_PROPERTY)) {
    writeProperties(writer,modelNode.get(SYSTEM_PROPERTY),Element.SYSTEM_PROPERTIES,true);
    writeNewLine(writer);
  }
  if (modelNode.hasDefined(PATH)) {
    writePaths(writer,modelNode.get(PATH),false);
    writeNewLine(writer);
  }
  if (modelNode.hasDefined(CORE_SERVICE) && modelNode.get(CORE_SERVICE).hasDefined(VAULT)) {
    writeVault(writer,modelNode.get(CORE_SERVICE,VAULT));
    writeNewLine(writer);
  }
  if (modelNode.hasDefined(CORE_SERVICE)) {
    ManagementXml managementXml=new ManagementXml(new ManagementXmlDelegate());
    managementXml.writeManagement(writer,modelNode.get(CORE_SERVICE,MANAGEMENT),modelNode.get(CORE_SERVICE,ACCESS_CONTROL),true);
    writeNewLine(writer);
  }
  writeServerProfile(writer,context);
  writeNewLine(writer);
  if (modelNode.hasDefined(INTERFACE)) {
    writeInterfaces(writer,modelNode.get(INTERFACE));
    writeNewLine(writer);
  }
  if (modelNode.hasDefined(SOCKET_BINDING_GROUP)) {
    Set<String> groups=modelNode.get(SOCKET_BINDING_GROUP).keys();
    if (groups.size() > 1) {
      throw MESSAGES.multipleModelNodes(SOCKET_BINDING_GROUP);
    }
    for (    String group : groups) {
      writeSocketBindingGroup(writer,modelNode.get(SOCKET_BINDING_GROUP,group),true);
    }
    writeNewLine(writer);
  }
  if (modelNode.hasDefined(DEPLOYMENT)) {
    writeServerDeployments(writer,modelNode.get(DEPLOYMENT));
    writeNewLine(writer);
  }
  if (modelNode.hasDefined(DEPLOYMENT_OVERLAY)) {
    writeDeploymentOverlays(writer,modelNode.get(DEPLOYMENT_OVERLAY));
    writeNewLine(writer);
  }
  writer.writeEndElement();
  writeNewLine(writer);
  writer.writeEndDocument();
}

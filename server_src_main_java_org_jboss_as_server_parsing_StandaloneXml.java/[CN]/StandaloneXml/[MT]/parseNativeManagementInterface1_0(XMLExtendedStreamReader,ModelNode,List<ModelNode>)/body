{
  final ModelNode mgmtSocket=new ModelNode();
  mgmtSocket.get(OP).set(ADD);
  ModelNode operationAddress=address.clone();
  operationAddress.add(MANAGEMENT_INTERFACE,NATIVE_INTERFACE);
  mgmtSocket.get(OP_ADDR).set(operationAddress);
  boolean hasInterface=false;
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    if (!isNoNamespaceAttribute(reader,i)) {
      throw unexpectedAttribute(reader,i);
    }
 else {
      final String value=reader.getAttributeValue(i);
      final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case INTERFACE:
{
          NativeManagementResourceDefinition.INTERFACE.parseAndSetParameter(value,mgmtSocket,reader.getLocation());
          hasInterface=true;
          break;
        }
case PORT:
{
        NativeManagementResourceDefinition.NATIVE_PORT.parseAndSetParameter(value,mgmtSocket,reader.getLocation());
        break;
      }
case SECURE_PORT:
    break;
case SECURITY_REALM:
{
    NativeManagementResourceDefinition.SECURITY_REALM.parseAndSetParameter(value,mgmtSocket,reader.getLocation());
    break;
  }
default :
throw unexpectedAttribute(reader,i);
}
}
}
requireNoContent(reader);
if (!hasInterface) {
throw missingRequired(reader,Collections.singleton(Attribute.INTERFACE.getLocalName()));
}
list.add(mgmtSocket);
}

{
  File storageDir=new File(serverEnvironment.getServerTempDir() + File.separator + alias+ File.separator+ "osgiservlet-root");
  storageDir.mkdirs();
  WebDeploymentBuilder deploymentBuilder=new WebDeploymentBuilder();
  ShareableContextWrapper scWrapper=null;
  if (httpContext != null) {
    scWrapper=contexts.get(httpContext);
  }
 else {
    scWrapper=new ShareableContextWrapper();
    httpContext=new DefaultHttpContext(bundle);
  }
  if (scWrapper == null) {
    contexts.put(httpContext,scWrapper);
  }
  deploymentBuilder.setDocumentRoot(storageDir);
  deploymentBuilder.setContextRoot(alias);
  deploymentBuilder.setApplicationContextWrapper(scWrapper);
  deploymentBuilder.setClassLoader(servlet.getClass().getClassLoader());
  deploymentBuilder.addMimeMapping("html","text/html");
  deploymentBuilder.addMimeMapping("jpg","image/jpeg");
  deploymentBuilder.addMimeMapping("png","image/png");
  deploymentBuilder.addMimeMapping("gif","image/gif");
  deploymentBuilder.addMimeMapping("css","text/css");
  deploymentBuilder.addMimeMapping("js","text/javascript");
  String wrapperName=alias.substring(1);
  ServletBuilder wrapper=new ServletBuilder();
  wrapper.setServletName(wrapperName);
  wrapper.setServlet(new SecurityServletWrapper(servlet,httpContext));
  wrapper.setServletClass(servlet.getClass());
  if (initparams != null) {
    Enumeration keys=initparams.keys();
    while (keys.hasMoreElements()) {
      String key=(String)keys.nextElement();
      String val=(String)initparams.get(key);
      wrapper.addInitParam(key,val);
    }
  }
  wrapper.setForceInit(true);
  wrapper.addUrlMapping("/*");
  deploymentBuilder.addServlet(wrapper);
  WebDeploymentController deploymentController;
  try {
    deploymentController=virtualHost.addWebDeployment(deploymentBuilder);
    WEB_LOGGER.registerWebapp(deploymentBuilder.getContextRoot());
    deploymentController.create();
  }
 catch (  Exception ex) {
    throw new NamespaceException(WEB_LOGGER.createContextFailed(),ex);
  }
  try {
    deploymentController.start();
  }
 catch (  Exception ex) {
    throw new NamespaceException(WEB_LOGGER.startContextFailed(),ex);
  }
  registry.register(alias,bundle,deploymentController,servlet,type);
  return wrapper;
}

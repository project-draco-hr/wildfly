{
  try {
    Object instance;
    if (HttpHandler.class.isAssignableFrom(handlerClass)) {
      Constructor<?> ctor=handlerClass.getConstructor(HttpHandler.class);
      instance=ctor.newInstance(handler);
    }
 else     if (HandlerWrapper.class.isAssignableFrom(handlerClass)) {
      instance=handlerClass.newInstance();
    }
 else {
      throw UndertowLogger.ROOT_LOGGER.handlerWasNotAHandlerOrWrapper(handlerClass);
    }
    Properties p=new Properties();
    p.putAll(properties);
    ClassLoader oldCl=WildFlySecurityManager.getCurrentContextClassLoaderPrivileged();
    try {
      WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(BeanUtils.class);
      BeanUtils.mapJavaBeanProperties(instance,p);
    }
  finally {
      WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(oldCl);
    }
    if (HttpHandler.class.isAssignableFrom(handlerClass)) {
      return (HttpHandler)instance;
    }
 else {
      return ((HandlerWrapper)instance).wrap(handler);
    }
  }
 catch (  Exception e) {
    throw UndertowLogger.ROOT_LOGGER.failedToConfigureHandler(handlerClass,e);
  }
}

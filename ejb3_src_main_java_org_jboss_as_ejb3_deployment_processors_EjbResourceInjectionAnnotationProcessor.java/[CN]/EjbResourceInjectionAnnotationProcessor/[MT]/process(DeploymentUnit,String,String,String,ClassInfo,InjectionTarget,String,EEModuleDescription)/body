{
  if (!isEmpty(lookup) && !isEmpty(beanName)) {
    EjbLogger.DEPLOYMENT_LOGGER.debugf("Both beanName = %s and lookup = %s have been specified in @EJB annotation. Lookup will be given preference. Class: %s",beanName,lookup,classInfo.name());
  }
  final EEModuleClassDescription classDescription=eeModuleDescription.addOrGetLocalClassDescription(classInfo.name().toString());
  final InjectionSource valueSource;
  EjbInjectionSource ejbInjectionSource=null;
  if (!isEmpty(lookup)) {
    if (!lookup.startsWith("java:")) {
      valueSource=new EjbLookupInjectionSource(lookup,targetDescription.getDeclaredValueClassName());
    }
 else {
      valueSource=createLookup(lookup,appclient);
    }
  }
 else   if (!isEmpty(beanName)) {
    valueSource=ejbInjectionSource=new EjbInjectionSource(beanName,beanInterface,localContextName,deploymentUnit,appclient);
  }
 else {
    valueSource=ejbInjectionSource=new EjbInjectionSource(beanInterface,localContextName,deploymentUnit,appclient);
  }
  if (ejbInjectionSource != null) {
    deploymentUnit.addToAttachmentList(EjbDeploymentAttachmentKeys.EJB_INJECTIONS,ejbInjectionSource);
  }
  final ResourceInjectionConfiguration injectionConfiguration=targetDescription != null ? new ResourceInjectionConfiguration(targetDescription,createLookup(localContextName,appclient)) : null;
  final BindingConfiguration bindingConfiguration=new BindingConfiguration(localContextName,valueSource);
  classDescription.getBindingConfigurations().add(bindingConfiguration);
  if (injectionConfiguration != null) {
    classDescription.addResourceInjection(injectionConfiguration);
  }
}

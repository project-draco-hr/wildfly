{
  final DeploymentUnit deploymentUnit=phaseContext.getDeploymentUnit();
  final EEModuleDescription moduleDescription=deploymentUnit.getAttachment(Attachments.EE_MODULE_DESCRIPTION);
  final CompositeIndex index=deploymentUnit.getAttachment(org.jboss.as.server.deployment.Attachments.COMPOSITE_ANNOTATION_INDEX);
  final List<AnnotationInstance> resourceAnnotations=index.getAnnotations(EJB_ANNOTATION_NAME);
  for (  AnnotationInstance annotation : resourceAnnotations) {
    final AnnotationTarget annotationTarget=annotation.target();
    final EJBResourceWrapper annotationWrapper=new EJBResourceWrapper(annotation);
    if (annotationTarget instanceof FieldInfo) {
      processField(deploymentUnit,annotationWrapper,(FieldInfo)annotationTarget,moduleDescription);
    }
 else     if (annotationTarget instanceof MethodInfo) {
      processMethod(deploymentUnit,annotationWrapper,(MethodInfo)annotationTarget,moduleDescription);
    }
 else     if (annotationTarget instanceof ClassInfo) {
      processClass(deploymentUnit,annotationWrapper,(ClassInfo)annotationTarget,moduleDescription);
    }
  }
  final List<AnnotationInstance> ejbsAnnotations=index.getAnnotations(EJBS_ANNOTATION_NAME);
  for (  AnnotationInstance annotation : ejbsAnnotations) {
    final AnnotationTarget annotationTarget=annotation.target();
    if (annotationTarget instanceof ClassInfo) {
      final AnnotationValue annotationValue=annotation.value();
      final AnnotationInstance[] ejbAnnotations=annotationValue.asNestedArray();
      for (      AnnotationInstance ejbAnnotation : ejbAnnotations) {
        final EJBResourceWrapper annotationWrapper=new EJBResourceWrapper(ejbAnnotation);
        processClass(deploymentUnit,annotationWrapper,(ClassInfo)annotationTarget,moduleDescription);
      }
    }
 else {
      throw EjbLogger.EJB3_LOGGER.annotationOnlyAllowedOnClass(EJBs.class.getName(),annotation.target());
    }
  }
}

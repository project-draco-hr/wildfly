{
  context.addStep(new OperationStepHandler(){
    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {
      final ModelNode model=Resource.Tools.readModel(context.getRootResource());
      final String group=getServerGroupName(operation);
      context.addStep(new OperationStepHandler(){
        @Override public void execute(        OperationContext context,        ModelNode operation) throws OperationFailedException {
          Map<String,ProcessInfo> processes=serverInventory.determineRunningProcesses(true);
          final Set<String> serversInGroup=getServersForGroup(model,group);
          for (          String serverName : processes.keySet()) {
            final String serverModelName=serverInventory.getProcessServerName(serverName);
            if (group == null || serversInGroup.contains(serverModelName)) {
              serverInventory.restartServer(serverModelName,TIMEOUT,model);
            }
          }
          context.completeStep();
        }
      }
,Stage.RUNTIME);
      context.completeStep();
    }
  }
,Stage.RUNTIME);
  context.completeStep();
}

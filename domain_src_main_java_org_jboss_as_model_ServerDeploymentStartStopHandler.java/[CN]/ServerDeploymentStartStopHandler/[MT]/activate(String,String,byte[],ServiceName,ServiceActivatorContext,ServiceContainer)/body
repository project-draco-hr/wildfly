{
  log.infof("Activating deployment: %s",deploymentName);
  MountHandle handle=null;
  try {
    final ServerDeploymentRepository deploymentRepo=getDeploymentRepository(serviceContainer);
    final VirtualFile deploymentRoot=VFS.getChild("content/" + runtimeName);
    try {
      Closeable mount=deploymentRepo.mountDeploymentContent(deploymentName,runtimeName,deploymentHash,deploymentRoot);
      handle=new MountHandle(mount);
    }
 catch (    IOException e) {
      throw new RuntimeException("Failed to mount deployment archive",e);
    }
    final BatchBuilder batchBuilder=context.getBatchBuilder();
    DeploymentService deploymentService=new DeploymentService(handle);
    BatchServiceBuilder<Void> serviceBuilder=batchBuilder.addService(deploymentServiceName,deploymentService);
    final BatchBuilder deploymentSubBatch=batchBuilder.subBatchBuilder();
    deploymentSubBatch.addDependency(deploymentServiceName);
    deploymentSubBatch.addListener(new DeploymentFailureListener(deploymentServiceName));
    final DeploymentUnitContext deploymentUnitContext=new DeploymentUnitContextImpl(deploymentServiceName.getSimpleName(),deploymentSubBatch,serviceBuilder);
    attachVirtualFile(deploymentUnitContext,deploymentRoot);
    deploymentUnitContext.putAttachment(MountHandle.ATTACHMENT_KEY,handle);
    try {
      Manifest manifest=VFSUtils.getManifest(deploymentRoot);
      if (manifest != null)       ManifestAttachment.attachManifest(deploymentUnitContext,manifest);
    }
 catch (    IOException e) {
      throw new RuntimeException("Failed to get manifest for deployment " + deploymentRoot,e);
    }
    final ServiceController<?> deploymentChainController=serviceContainer.getService(DeploymentChain.SERVICE_NAME);
    final DeploymentChain deploymentChain=(DeploymentChain)deploymentChainController.getValue();
    log.debugf("Executing deployment '%s' with chain: %s",deploymentName,deploymentChain);
    if (deploymentChain == null)     throw new RuntimeException("Failed determine the deployment chain for deployment root: " + deploymentRoot);
    try {
      deploymentChain.processDeployment(deploymentUnitContext);
    }
 catch (    DeploymentUnitProcessingException e) {
      throw new RuntimeException("Failed to process deployment chain.",e);
    }
  }
 catch (  Throwable t) {
    VFSUtils.safeClose(handle);
    if (t instanceof RuntimeException) {
      throw (RuntimeException)t;
    }
    throw new RuntimeException("Failed to activate deployment unit " + deploymentName,t);
  }
}

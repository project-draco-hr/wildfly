{
  final PatchingTestBuilder builder=createDefaultBuilder();
  final byte[] standaloneHash=new byte[20];
  final byte[] configHash=new byte[20];
  final byte[] existingHash=new byte[20];
  final File existing=builder.getFile(FILE_EXISTING);
  touch(existing);
  dump(existing,randomString());
  final PatchingTestStepBuilder cp1=builder.createStepBuilder();
  cp1.setPatchId("cp1").upgradeIdentity(PRODUCT_VERSION,PRODUCT_VERSION).addFileWithRandomContent(standaloneHash,FILE_ONE);
  final PatchingTestStepBuilder cp2=builder.createStepBuilder();
  cp2.setPatchId("cp2").upgradeIdentity(PRODUCT_VERSION,PRODUCT_VERSION).addFileWithRandomContent(configHash,FILE_TWO);
  final PatchingTestStepBuilder cp3=builder.createStepBuilder();
  cp3.setPatchId("cp3").upgradeIdentity(PRODUCT_VERSION,PRODUCT_VERSION).addFileWithRandomContent(existingHash,FILE_EXISTING);
  final File multiPatch=prepare(builder.getRoot(),cp1,cp2,cp3);
  InstallationManager mgr=loadInstallationManager();
  final PatchTool patchTool=PatchTool.Factory.create(mgr);
  try {
    patchTool.applyPatch(multiPatch,ContentVerificationPolicy.STRICT);
    Assert.fail();
  }
 catch (  PatchingException e) {
  }
  Assert.assertFalse(builder.hasFile(FILE_ONE));
  Assert.assertFalse(builder.hasFile(FILE_TWO));
}

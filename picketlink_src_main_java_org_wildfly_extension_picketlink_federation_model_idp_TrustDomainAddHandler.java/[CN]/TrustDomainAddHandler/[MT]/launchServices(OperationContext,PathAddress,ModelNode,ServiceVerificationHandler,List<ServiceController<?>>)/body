{
  String identityProviderAlias=pathAddress.subAddress(0,pathAddress.size() - 1).getLastElement().getValue();
  String domainName=pathAddress.getLastElement().getValue();
  ModelNode certAliasNode=TrustDomainResourceDefinition.CERT_ALIAS.resolveModelAttribute(context,model);
  String domainCertAlias=null;
  if (certAliasNode.isDefined()) {
    domainCertAlias=certAliasNode.asString();
  }
  TrustDomainService service=new TrustDomainService(domainName,domainCertAlias);
  ServiceBuilder<TrustDomainService> serviceBuilder=context.getServiceTarget().addService(TrustDomainService.createServiceName(identityProviderAlias,domainName),service);
  serviceBuilder.addDependency(IdentityProviderService.createServiceName(identityProviderAlias),IdentityProviderService.class,service.getIdentityProviderService());
  String federationAlias=pathAddress.subAddress(0,pathAddress.size() - 2).getLastElement().getValue();
  serviceBuilder.addDependency(FederationService.createServiceName(federationAlias),FederationService.class,service.getFederationService());
  ServiceController<TrustDomainService> controller=serviceBuilder.addListener(verificationHandler).setInitialMode(ServiceController.Mode.PASSIVE).install();
  if (newControllers != null) {
    newControllers.add(controller);
  }
}

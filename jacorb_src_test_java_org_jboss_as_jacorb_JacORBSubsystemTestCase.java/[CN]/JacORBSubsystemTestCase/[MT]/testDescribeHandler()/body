{
  String subsystemXml="<subsystem xmlns=\"" + JacORBSubsystemParser.Namespace.CURRENT.getUriString() + "\">"+ "</subsystem>";
  AdditionalInitialization additionalInit=new AdditionalInitialization(){
    @Override protected void setupController(    ControllerInitializer controllerInitializer){
      controllerInitializer.addSocketBinding("jacorb",3528);
      controllerInitializer.addSocketBinding("jacorb-ssl",3529);
    }
  }
;
  KernelServices servicesA=createKernelServicesBuilder(additionalInit).setSubsystemXml(subsystemXml).build();
  ModelNode modelA=servicesA.readWholeModel();
  ModelNode describeOp=new ModelNode();
  describeOp.get(OP).set(DESCRIBE);
  describeOp.get(OP_ADDR).set(PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM,JacORBExtension.SUBSYSTEM_NAME)).toModelNode());
  List<ModelNode> operations=checkResultAndGetContents(servicesA.executeOperation(describeOp)).asList();
  servicesA.shutdown();
  Assert.assertEquals(1,operations.size());
  KernelServices servicesB=createKernelServicesBuilder(additionalInit).setBootOperations(operations).build();
  ModelNode modelB=servicesB.readWholeModel();
  servicesB.shutdown();
  super.compare(modelA,modelB);
}

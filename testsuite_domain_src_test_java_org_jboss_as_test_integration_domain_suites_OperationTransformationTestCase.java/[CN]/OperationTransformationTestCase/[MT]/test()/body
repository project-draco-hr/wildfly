{
  final PathAddress extension=PathAddress.pathAddress(PathElement.pathElement(EXTENSION,VersionedExtensionCommon.EXTENSION_NAME));
  final PathAddress address=PathAddress.pathAddress(PathElement.pathElement(PROFILE,"default"),PathElement.pathElement(SUBSYSTEM,VersionedExtensionCommon.SUBSYSTEM_NAME));
  final ModelNode serverAddress=getRunningServerAddress("slave","main-three");
  serverAddress.add(SUBSYSTEM,VersionedExtensionCommon.SUBSYSTEM_NAME);
  final DomainClient client=master.getDomainClient();
  final ModelNode extensionAdd=createAdd(extension);
  executeForResult(extensionAdd,client);
  final ModelNode subsystemAdd=createAdd(address);
  executeForResult(subsystemAdd,client);
  final ModelNode mExt=create(READ_RESOURCE_OPERATION,extension.append(PathElement.pathElement(SUBSYSTEM,VersionedExtensionCommon.SUBSYSTEM_NAME)));
  assertVersion(executeForResult(mExt,client),ModelVersion.create(2));
  final PathAddress newElement=address.append(PathElement.pathElement("new-element","new1"));
  final ModelNode addNew=createAdd(newElement);
  executeForResult(addNew,client);
  Assert.assertTrue(exists(newElement,client));
  final ModelNode newElementOnSlave=serverAddress.clone();
  newElementOnSlave.add("new-element","new1");
  Assert.assertFalse(exists(newElementOnSlave,client));
  final PathAddress renamedAddress=address.append(PathElement.pathElement("renamed","element"));
  final ModelNode renamedAdd=createAdd(renamedAddress);
  executeForResult(renamedAdd,client);
  Assert.assertTrue(exists(renamedAddress,client));
  final ModelNode renamedElementOnSlave=serverAddress.clone();
  renamedElementOnSlave.add("renamed","element");
  Assert.assertFalse(exists(renamedElementOnSlave,client));
  final ModelNode elementRenamedOnSlave=serverAddress.clone();
  elementRenamedOnSlave.add("element","renamed");
  Assert.assertTrue(exists(elementRenamedOnSlave,client));
  final ModelNode update=new ModelNode();
  update.get(OP).set("update");
  update.get(OP_ADDR).set(address.toModelNode());
  System.out.println(client.execute(update));
  final ModelNode composite=new ModelNode();
  composite.get(OP).set(COMPOSITE);
  composite.get(OP_ADDR).setEmptyList();
  final ModelNode steps=composite.get(STEPS);
  steps.add();
  testPropertiesModel();
}

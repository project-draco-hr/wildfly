{
  final DomainClient client=master.getDomainClient();
  final DomainClient slaveClient=slave.getDomainClient();
  final PathAddress address=PathAddress.pathAddress(PathElement.pathElement(PROFILE,"default"));
  final PathAddress properties=address.append(PathElement.pathElement(SUBSYSTEM,VersionedExtensionCommon.SUBSYSTEM_NAME));
  final ModelNode writePropertiesInt=writeAttribute(properties,"int","${org.jboss.domain.tests.int:1}");
  executeForFailure(writePropertiesInt,client);
  Assert.assertFalse(executeForResult(readAttribute(properties,"int"),client).isDefined());
  Assert.assertFalse(executeForResult(readAttribute(properties,"int"),slaveClient).isDefined());
  final ModelNode writePropertiesString=writeAttribute(properties,"string","${org.jboss.domain.tests.string:abc}");
  executeForFailure(writePropertiesString,client);
  Assert.assertFalse(executeForResult(readAttribute(properties,"string"),client).isDefined());
  Assert.assertFalse(executeForResult(readAttribute(properties,"string"),slaveClient).isDefined());
  final PathAddress ignored=PathAddress.pathAddress(PathElement.pathElement(PROFILE,"ignored"),PathElement.pathElement(SUBSYSTEM,VersionedExtensionCommon.SUBSYSTEM_NAME));
  final ModelNode newIgnored=createAdd(ignored);
  executeForResult(newIgnored,client);
  Assert.assertTrue(exists(ignored,client));
  final ModelNode writeIgnoredString=writeAttribute(ignored,"string","${org.jboss.domain.tests.string:abc}");
  executeForResult(writeIgnoredString,client);
  Assert.assertTrue(executeForResult(readAttribute(ignored,"string"),client).isDefined());
  Assert.assertFalse(executeForResult(readAttribute(ignored,"string"),slaveClient).isDefined());
  final ModelNode writeIgnoredInt=writeAttribute(ignored,"int","${org.jboss.domain.tests.int:1}");
  executeForResult(writeIgnoredInt,client);
  Assert.assertTrue(executeForResult(readAttribute(ignored,"int"),client).isDefined());
  Assert.assertFalse(executeForResult(readAttribute(ignored,"int"),slaveClient).isDefined());
}

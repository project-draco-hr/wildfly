{
  ServiceRegistry registry=context.getServiceRegistry(true);
  final ServiceName serviceName=MessagingServices.getActiveMQServiceName(PathAddress.pathAddress(operation.get(ModelDescriptionConstants.OP_ADDR)));
  ServiceController<?> service=registry.getService(serviceName);
  if (service != null) {
    if (service.getState() != ServiceController.State.UP) {
      throw MessagingLogger.ROOT_LOGGER.invalidServiceState(serviceName,ServiceController.State.UP,service.getState());
    }
    final String name=PathAddress.pathAddress(operation.require(ModelDescriptionConstants.OP_ADDR)).getLastElement().getValue();
    DivertConfiguration divertConfiguration=createDivertConfiguration(context,name,model);
    ActiveMQServerControl serverControl=ActiveMQServer.class.cast(service.getValue()).getActiveMQServerControl();
    createDivert(name,divertConfiguration,serverControl);
  }
}

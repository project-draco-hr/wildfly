{
  ServiceName serviceName=ConnectorServices.registerDeployment(deploymentUnitName);
  ResourceAdapterXmlDeploymentService service=new ResourceAdapterXmlDeploymentService(connectorXmlDescriptor,raxml,module,deployment,serviceName,deploymentUnitServiceName);
  String bootStrapCtxName=DEFAULT_NAME;
  if (raxml.getBootstrapContext() != null && !raxml.getBootstrapContext().equals("undefined")) {
    bootStrapCtxName=raxml.getBootstrapContext();
  }
  ServiceBuilder builder=serviceTarget.addService(serviceName,service).addDependency(ConnectorServices.IRONJACAMAR_MDR,AS7MetadataRepository.class,service.getMdrInjector()).addDependency(ConnectorServices.RA_REPOSITORY_SERVICE,ResourceAdapterRepository.class,service.getRaRepositoryInjector()).addDependency(ConnectorServices.MANAGEMENT_REPOSITORY_SERVICE,ManagementRepository.class,service.getManagementRepositoryInjector()).addDependency(ConnectorServices.RESOURCE_ADAPTER_REGISTRY_SERVICE,ResourceAdapterDeploymentRegistry.class,service.getRegistryInjector()).addDependency(ConnectorServices.TRANSACTION_INTEGRATION_SERVICE,TransactionIntegration.class,service.getTxIntegrationInjector()).addDependency(ConnectorServices.CONNECTOR_CONFIG_SERVICE,JcaSubsystemConfiguration.class,service.getConfigInjector()).addDependency(SubjectFactoryService.SERVICE_NAME,SubjectFactory.class,service.getSubjectFactoryInjector()).addDependency(ConnectorServices.CCM_SERVICE,CachedConnectionManager.class,service.getCcmInjector()).addDependency(ConnectorServices.IDLE_REMOVER_SERVICE).addDependency(ConnectorServices.CONNECTION_VALIDATOR_SERVICE).addDependency(NamingService.SERVICE_NAME).addDependency(ConnectorServices.BOOTSTRAP_CONTEXT_SERVICE.append(bootStrapCtxName)).addDependency(ConnectorServices.RESOURCE_ADAPTER_DEPLOYER_SERVICE_PREFIX.append(connectorXmlDescriptor.getDeploymentName()));
  if (serviceVerificationHandler != null) {
    builder.addListener(serviceVerificationHandler);
  }
  if (registration != null && deploymentResource != null) {
    String bootstrapCtxName=raxml.getBootstrapContext() != null ? raxml.getBootstrapContext() : "default";
    builder.addListener(new AbstractResourceAdapterDeploymentServiceListener(registration,deploymentUnitName,deploymentResource,bootstrapCtxName,raxml.getId()){
      @Override protected void registerIronjacamar(      ServiceController<? extends Object> controller,      ManagementResourceRegistration subRegistration,      Resource subsystemResource){
      }
      @Override protected CommonDeployment getDeploymentMetadata(      final ServiceController<? extends Object> controller){
        return ((ResourceAdapterXmlDeploymentService)controller.getService()).getRaxmlDeployment();
      }
    }
);
  }
  builder.setInitialMode(ServiceController.Mode.ACTIVE).install();
}

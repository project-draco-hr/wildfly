{
  final ModelControllerClient modelControllerClient=getModelControllerClient(managementServerHostName,managementPort);
  try {
    final ModelNode readConnectorRefAttribute=new ModelNode();
    readConnectorRefAttribute.get(ModelDescriptionConstants.OP).set(ModelDescriptionConstants.READ_ATTRIBUTE_OPERATION);
    readConnectorRefAttribute.get(NAME).set(EJB3SubsystemModel.CONNECTOR_REF);
    final PathAddress ejbRemotingServiceAddress=PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM,EJB3Extension.SUBSYSTEM_NAME),EJB3SubsystemModel.REMOTE_SERVICE_PATH);
    readConnectorRefAttribute.get(OP_ADDR).set(ejbRemotingServiceAddress.toModelNode());
    final ModelNode connectorRefResult=execute(modelControllerClient,readConnectorRefAttribute);
    final String connectorRef=connectorRefResult.get(RESULT).asString();
    final ModelNode readSocketBindingRefAttribute=new ModelNode();
    readSocketBindingRefAttribute.get(OP).set(READ_ATTRIBUTE_OPERATION);
    readSocketBindingRefAttribute.get(NAME).set(SOCKET_BINDING);
    final PathAddress remotingSubsystemAddress=PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM,RemotingExtension.SUBSYSTEM_NAME),PathElement.pathElement("connector",connectorRef));
    readSocketBindingRefAttribute.get(OP_ADDR).set(remotingSubsystemAddress.toModelNode());
    final ModelNode socketBindingRefResult=execute(modelControllerClient,readSocketBindingRefAttribute);
    final String socketBindingRef=socketBindingRefResult.get(RESULT).asString();
    final ModelNode readPortAttribute=new ModelNode();
    readPortAttribute.get(OP).set(READ_ATTRIBUTE_OPERATION);
    readPortAttribute.get(NAME).set(PORT);
    final PathAddress socketBindingAddress=PathAddress.pathAddress(PathElement.pathElement(SOCKET_BINDING_GROUP,"standard-sockets"),PathElement.pathElement(SOCKET_BINDING,socketBindingRef));
    readPortAttribute.get(OP_ADDR).set(socketBindingAddress.toModelNode());
    final ModelNode portResult=execute(modelControllerClient,readPortAttribute);
    return portResult.get(RESULT).asInt();
  }
 catch (  IOException ioe) {
    throw new RuntimeException(ioe);
  }
 finally {
    try {
      modelControllerClient.close();
    }
 catch (    IOException e) {
      logger.warn("Error closing model controller client",e);
    }
  }
}

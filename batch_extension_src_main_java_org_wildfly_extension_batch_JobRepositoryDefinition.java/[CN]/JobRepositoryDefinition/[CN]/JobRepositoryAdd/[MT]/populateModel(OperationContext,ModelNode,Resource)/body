{
  super.populateModel(context,operation,resource);
  context.addStep(new OperationStepHandler(){
    @Override public void execute(    final OperationContext context,    final ModelNode operation) throws OperationFailedException {
      final PathAddress address=PathAddress.pathAddress(operation.get(ModelDescriptionConstants.OP_ADDR));
      final PathAddress parent=address.subAddress(0,address.size() - 1);
      final Set<ResourceEntry> jobRepositoryResources=context.readResourceFromRoot(parent).getChildren(NAME);
      if (jobRepositoryResources.isEmpty()) {
        throw BatchMessages.MESSAGES.jobRepositoryRequired();
      }
 else       if (jobRepositoryResources.size() > 1) {
        final List<String> found=new ArrayList<String>(jobRepositoryResources.size());
        for (        ResourceEntry entry : jobRepositoryResources) {
          found.add(entry.getName());
        }
        throw BatchMessages.MESSAGES.multipleJobRepositoriesNotAllowed(found);
      }
      context.completeStep(ResultHandler.NOOP_RESULT_HANDLER);
    }
  }
,Stage.MODEL);
}

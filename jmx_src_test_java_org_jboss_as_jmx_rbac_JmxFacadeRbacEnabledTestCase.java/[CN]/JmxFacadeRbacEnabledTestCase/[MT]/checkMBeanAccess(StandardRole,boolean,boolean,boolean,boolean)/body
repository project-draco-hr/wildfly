{
  Subject subject=standardRole == null ? null : new Subject(true,Collections.singleton(new RealmUser(roleToUserName(standardRole))),Collections.emptySet(),Collections.emptySet());
  Subject.doAs(subject,new PrivilegedExceptionAction<Void>(){
    @Override public Void run() throws Exception {
      Set<ObjectName> names=server.queryNames(null,null);
      Assert.assertEquals(addressable,names.contains(ONE_A_NAME));
      Assert.assertEquals(addressable,names.contains(ONE_B_NAME));
      Set<ObjectInstance> instances=server.queryMBeans(null,null);
      Assert.assertEquals(names.size(),instances.size());
      for (      ObjectInstance instance : instances) {
        Assert.assertTrue(names.contains(instance.getObjectName()));
      }
      int number=server.getMBeanCount();
      Assert.assertEquals(names.size(),number);
      try {
        server.getMBeanInfo(ONE_A_NAME);
        Assert.assertTrue(addressable);
      }
 catch (      InstanceNotFoundException e) {
        Assert.assertFalse(addressable);
      }
      try {
        server.getObjectInstance(ONE_A_NAME);
        Assert.assertTrue(addressable);
      }
 catch (      InstanceNotFoundException e) {
        Assert.assertFalse(addressable);
      }
      try {
        server.getAttribute(ONE_A_NAME,"attr1");
        Assert.assertTrue(addressable);
        Assert.assertTrue(readable);
      }
 catch (      InstanceNotFoundException e) {
        Assert.assertFalse(addressable);
      }
catch (      JMRuntimeException e) {
        Assert.assertTrue(addressable);
        Assert.assertFalse(readable);
      }
      try {
        server.getAttributes(ONE_B_NAME,new String[]{"attr1"});
        Assert.assertTrue(addressable);
        Assert.assertTrue(readable);
      }
 catch (      InstanceNotFoundException e) {
        Assert.assertFalse(addressable);
      }
catch (      JMRuntimeException e) {
        Assert.assertTrue(addressable);
        Assert.assertFalse(readable);
      }
      try {
        server.setAttribute(ONE_A_NAME,new Attribute("attr1","Test"));
        Assert.assertTrue(addressable);
        Assert.assertTrue(writable);
      }
 catch (      InstanceNotFoundException e) {
        Assert.assertFalse(addressable);
      }
catch (      JMRuntimeException e) {
        Assert.assertTrue(addressable);
        Assert.assertFalse(writable);
      }
      try {
        server.setAttributes(ONE_A_NAME,new AttributeList(Collections.singletonList(new Attribute("attr1","Test"))));
        Assert.assertTrue(addressable);
        Assert.assertTrue(writable);
      }
 catch (      InstanceNotFoundException e) {
        Assert.assertFalse(addressable);
      }
catch (      JMRuntimeException e) {
        Assert.assertTrue(addressable);
        Assert.assertFalse(writable);
      }
      try {
        server.invoke(ONE_A_NAME,"test",new Object[0],new String[0]);
        Assert.assertTrue(addressable);
        Assert.assertTrue(executable);
      }
 catch (      InstanceNotFoundException e) {
        Assert.assertFalse(addressable);
      }
catch (      JMRuntimeException e) {
        Assert.assertTrue(addressable);
        Assert.assertFalse(executable);
      }
      return null;
    }
  }
);
}

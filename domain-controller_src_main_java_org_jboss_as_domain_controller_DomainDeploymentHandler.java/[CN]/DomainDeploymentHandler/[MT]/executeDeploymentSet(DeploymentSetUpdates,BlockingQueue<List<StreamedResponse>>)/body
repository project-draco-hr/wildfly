{
  logger.debugf("Executing deployment set %s",updateSet.setPlan.getId());
  List<DomainUpdateApplierResponse> rsps=domainController.applyUpdatesToModel(updateSet.getDomainUpdates());
  pushSingleResponse(responseQueue,new StreamedResponse((byte)DomainClientProtocol.RETURN_DEPLOYMENT_SET_ID,updateSet.setPlan.getId()));
  DeploymentAction lastResponseAction=null;
  for (int i=0; i < rsps.size(); i++) {
    DomainUpdateApplierResponse duar=rsps.get(i);
    if (duar.getDomainFailure() != null || duar.getHostFailures().size() > 0 || updateSet.isLastDomainUpdateForAction(i)) {
      DeploymentAction action=updateSet.getDeploymentActionForDomainUpdate(i);
      if (action != lastResponseAction) {
        List<StreamedResponse> rspList=new ArrayList<StreamedResponse>(2);
        rspList.add(new StreamedResponse((byte)DomainClientProtocol.RETURN_DEPLOYMENT_ACTION_ID,action.getId()));
        rspList.add(new StreamedResponse((byte)DomainClientProtocol.RETURN_DEPLOYMENT_ACTION_MODEL_RESULT,duar));
        responseQueue.put(rspList);
        lastResponseAction=action;
      }
    }
  }
  DomainUpdateApplierResponse last=rsps.get(rsps.size() - 1);
  if (last.getDomainFailure() != null || last.getHostFailures().size() > 0) {
    return false;
  }
  Runnable r=getServerUpdateTask(updateSet,rsps,responseQueue);
  r.run();
  boolean ok=true;
  for (  ServerUpdatePolicy policy : updateSet.updatePolicies.values()) {
    if (policy.isFailed()) {
      logger.infof("Deployment set failed on %s",policy.getServerGroupName());
      ok=false;
      break;
    }
  }
  if (!ok) {
    rollbackDeploymentSet(updateSet,responseQueue);
  }
  return ok;
}

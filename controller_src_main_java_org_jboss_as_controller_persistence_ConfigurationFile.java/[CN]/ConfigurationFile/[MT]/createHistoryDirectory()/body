{
  mkdir(this.historyRoot);
  mkdir(this.snapshotsDirectory);
  if (currentHistory.exists()) {
    if (!currentHistory.isDirectory()) {
      throw MESSAGES.notADirectory(currentHistory.getAbsolutePath());
    }
    Date date=new Date();
    File[] currentHistoryFiles=currentHistory.listFiles();
    if (currentHistoryFiles != null && currentHistoryFiles.length > 0) {
      String backupName=getTimeStamp(date);
      File old=new File(historyRoot,backupName);
      if (!new File(currentHistory.getAbsolutePath()).renameTo(old)) {
        if (old.exists()) {
          date=new Date(date.getTime() + 100);
          backupName=getTimeStamp(date);
          old=new File(historyRoot,backupName);
          if (!new File(currentHistory.getAbsolutePath()).renameTo(old)) {
            throw MESSAGES.cannotRename(currentHistory.getAbsolutePath(),old.getAbsolutePath());
          }
        }
 else {
          throw MESSAGES.cannotRename(currentHistory.getAbsolutePath(),old.getAbsolutePath());
        }
      }
    }
    int historyDays=getInteger(HISTORY_DAYS_PROPERTY,HISTORY_DAYS,0);
    final String cutoffFileName=getTimeStamp(subtractDays(date,historyDays));
    for (    String name : historyRoot.list()) {
      if (name.length() == cutoffFileName.length() && TIMESTAMP_PATTERN.matcher(name).matches() && name.compareTo(cutoffFileName) < 0) {
        deleteRecursive(new File(historyRoot,name));
      }
    }
  }
  currentHistory.mkdir();
  if (!currentHistory.exists()) {
    throw MESSAGES.cannotCreate(currentHistory.getAbsolutePath());
  }
}

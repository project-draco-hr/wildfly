{
  super.registerChildren(hostRegistration);
  hostRegistration.registerSubModel(SystemPropertyResourceDefinition.createForDomainOrHost(SystemPropertyResourceDefinition.Location.HOST));
  PatchResourceRegistration.registerPatchModel(hostRegistration);
  hostRegistration.registerSubModel(new VaultResourceDefinition(vaultReader));
  ResourceDefinition nativeManagement=new NativeManagementResourceDefinition(hostControllerInfo);
  ResourceDefinition httpManagement=new HttpManagementResourceDefinition(hostControllerInfo,environment);
  final EnvironmentNameReader environmentNameReader=new EnvironmentNameReader(){
    public boolean isServer(){
      return false;
    }
    public String getServerName(){
      return null;
    }
    public String getHostName(){
      return environment.getHostControllerName();
    }
    public String getProductName(){
      if (environment.getProductConfig() != null && environment.getProductConfig().getProductName() != null) {
        return environment.getProductConfig().getProductName();
      }
      return null;
    }
  }
;
  hostRegistration.registerSubModel(CoreManagementResourceDefinition.forHost(authorizer,auditLogger,pathManager,environmentNameReader,nativeManagement,httpManagement));
  hostRegistration.registerSubModel(HostEnvironmentResourceDefinition.of(environment));
  hostRegistration.registerSubModel(new ModuleLoadingResourceDefinition());
  ManagementResourceRegistration discoveryOptions=hostRegistration.registerSubModel(DiscoveryOptionsResourceDefinition.INSTANCE);
  discoveryOptions.registerSubModel(new StaticDiscoveryResourceDefinition(hostControllerInfo));
  discoveryOptions.registerSubModel(new DiscoveryOptionResourceDefinition(hostControllerInfo));
  final ManagementResourceRegistration jvms=hostRegistration.registerSubModel(JvmResourceDefinition.GLOBAL);
  hostRegistration.registerSubModel(PathResourceDefinition.createSpecified(pathManager));
  ManagementResourceRegistration interfaces=hostRegistration.registerSubModel(new InterfaceDefinition(new HostSpecifiedInterfaceAddHandler(),new HostSpecifiedInterfaceRemoveHandler(),true));
  interfaces.registerOperationHandler(SpecifiedInterfaceResolveHandler.DEFINITION,SpecifiedInterfaceResolveHandler.INSTANCE);
  hostRegistration.registerSubModel(new ServerConfigResourceDefinition(hostControllerInfo,serverInventory,pathManager));
  hostRegistration.registerSubModel(new StoppedServerResource(serverInventory));
}

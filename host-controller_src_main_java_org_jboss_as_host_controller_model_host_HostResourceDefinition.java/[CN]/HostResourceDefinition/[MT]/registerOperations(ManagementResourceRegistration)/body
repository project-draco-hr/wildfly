{
  super.registerOperations(hostRegistration);
  hostRegistration.registerOperationHandler(NamespaceAddHandler.DEFINITION,NamespaceAddHandler.INSTANCE);
  hostRegistration.registerOperationHandler(NamespaceRemoveHandler.DEFINITION,NamespaceRemoveHandler.INSTANCE);
  hostRegistration.registerOperationHandler(SchemaLocationAddHandler.DEFINITION,SchemaLocationAddHandler.INSTANCE);
  hostRegistration.registerOperationHandler(SchemaLocationRemoveHandler.DEFINITION,SchemaLocationRemoveHandler.INSTANCE);
  hostRegistration.registerOperationHandler(ValidateAddressOperationHandler.DEFINITION,ValidateAddressOperationHandler.INSTANCE);
  hostRegistration.registerOperationHandler(ResolveExpressionHandler.DEFINITION,ResolveExpressionHandler.INSTANCE);
  hostRegistration.registerOperationHandler(ResolveExpressionOnHostHandler.DEFINITION,ResolveExpressionOnHostHandler.INSTANCE);
  hostRegistration.registerOperationHandler(SpecifiedInterfaceResolveHandler.DEFINITION,SpecifiedInterfaceResolveHandler.INSTANCE);
  XmlMarshallingHandler xmh=new HostXmlMarshallingHandler(configurationPersister.getHostPersister(),hostControllerInfo);
  hostRegistration.registerOperationHandler(XmlMarshallingHandler.DEFINITION,xmh);
  StartServersHandler ssh=new StartServersHandler(environment,serverInventory,runningModeControl);
  hostRegistration.registerOperationHandler(StartServersHandler.DEFINITION,ssh);
  HostShutdownHandler hsh=new HostShutdownHandler(domainController);
  hostRegistration.registerOperationHandler(HostShutdownHandler.DEFINITION,hsh);
  HostProcessReloadHandler reloadHandler=new HostProcessReloadHandler(HostControllerService.HC_SERVICE_NAME,runningModeControl,processState);
  hostRegistration.registerOperationHandler(HostProcessReloadHandler.getDefinition(hostControllerInfo),reloadHandler);
  DomainServerLifecycleHandlers.initializeServerInventory(serverInventory);
  DomainSocketBindingGroupRemoveHandler.INSTANCE.initializeServerInventory(serverInventory);
  ValidateOperationHandler validateOperationHandler=hostControllerInfo.isMasterDomainController() ? ValidateOperationHandler.INSTANCE : ValidateOperationHandler.SLAVE_HC_INSTANCE;
  hostRegistration.registerOperationHandler(ValidateOperationHandler.DEFINITION_PRIVATE,validateOperationHandler);
  SnapshotDeleteHandler snapshotDelete=new SnapshotDeleteHandler(configurationPersister.getHostPersister());
  hostRegistration.registerOperationHandler(SnapshotDeleteHandler.DEFINITION,snapshotDelete);
  SnapshotListHandler snapshotList=new SnapshotListHandler(configurationPersister.getHostPersister());
  hostRegistration.registerOperationHandler(SnapshotListHandler.DEFINITION,snapshotList);
  SnapshotTakeHandler snapshotTake=new SnapshotTakeHandler(configurationPersister.getHostPersister());
  hostRegistration.registerOperationHandler(SnapshotTakeHandler.DEFINITION,snapshotTake);
  ignoredRegistry.registerResources(hostRegistration);
  PlatformMBeanResourceRegistrar.registerPlatformMBeanResources(hostRegistration);
}

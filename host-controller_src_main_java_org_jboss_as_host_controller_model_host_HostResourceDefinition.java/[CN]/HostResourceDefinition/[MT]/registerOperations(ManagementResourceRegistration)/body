{
  super.registerOperations(hostRegistration);
  hostRegistration.registerOperationHandler(NamespaceAddHandler.DEFINITION,NamespaceAddHandler.INSTANCE);
  hostRegistration.registerOperationHandler(NamespaceRemoveHandler.DEFINITION,NamespaceRemoveHandler.INSTANCE);
  hostRegistration.registerOperationHandler(SchemaLocationAddHandler.DEFINITION,SchemaLocationAddHandler.INSTANCE);
  hostRegistration.registerOperationHandler(SchemaLocationRemoveHandler.DEFINITION,SchemaLocationRemoveHandler.INSTANCE);
  hostRegistration.registerOperationHandler(ValidateAddressOperationHandler.OPERATION_NAME,ValidateAddressOperationHandler.INSTANCE,ValidateAddressOperationHandler.INSTANCE,false,EnumSet.of(OperationEntry.Flag.READ_ONLY));
  hostRegistration.registerOperationHandler(ResolveExpressionHandler.OPERATION_NAME,ResolveExpressionHandler.INSTANCE,ResolveExpressionHandler.INSTANCE,EnumSet.of(OperationEntry.Flag.READ_ONLY));
  hostRegistration.registerOperationHandler(ResolveExpressionOnHostHandler.OPERATION_NAME,ResolveExpressionOnHostHandler.INSTANCE,ResolveExpressionOnHostHandler.INSTANCE,EnumSet.of(OperationEntry.Flag.READ_ONLY,OperationEntry.Flag.DOMAIN_PUSH_TO_SERVERS));
  hostRegistration.registerOperationHandler(SpecifiedInterfaceResolveHandler.DEFINITION,SpecifiedInterfaceResolveHandler.INSTANCE);
  XmlMarshallingHandler xmh=new HostXmlMarshallingHandler(configurationPersister.getHostPersister(),hostControllerInfo);
  hostRegistration.registerOperationHandler(XmlMarshallingHandler.DEFINITION,xmh);
  StartServersHandler ssh=new StartServersHandler(environment,serverInventory,runningModeControl);
  hostRegistration.registerOperationHandler(StartServersHandler.OPERATION_NAME,ssh,ssh,false,OperationEntry.EntryType.PRIVATE);
  HostShutdownHandler hsh=new HostShutdownHandler(domainController);
  hostRegistration.registerOperationHandler(HostShutdownHandler.OPERATION_NAME,hsh,hsh,EnumSet.of(OperationEntry.Flag.HOST_CONTROLLER_ONLY));
  HostProcessReloadHandler reloadHandler=new HostProcessReloadHandler(HostControllerService.HC_SERVICE_NAME,runningModeControl,processState,getResourceDescriptionResolver(),hostControllerInfo);
  hostRegistration.registerOperationHandler(ProcessReloadHandler.OPERATION_NAME,reloadHandler,reloadHandler,EnumSet.of(OperationEntry.Flag.HOST_CONTROLLER_ONLY));
  DomainServerLifecycleHandlers.initializeServerInventory(serverInventory);
  DomainSocketBindingGroupRemoveHandler.INSTANCE.initializeServerInventory(serverInventory);
  ValidateOperationHandler validateOperationHandler=hostControllerInfo.isMasterDomainController() ? ValidateOperationHandler.INSTANCE : ValidateOperationHandler.SLAVE_HC_INSTANCE;
  hostRegistration.registerOperationHandler(ValidateOperationHandler.DEFINITION,validateOperationHandler);
  SnapshotDeleteHandler snapshotDelete=new SnapshotDeleteHandler(configurationPersister.getHostPersister());
  hostRegistration.registerOperationHandler(SnapshotDeleteHandler.DEFINITION,snapshotDelete);
  SnapshotListHandler snapshotList=new SnapshotListHandler(configurationPersister.getHostPersister());
  hostRegistration.registerOperationHandler(SnapshotListHandler.DEFINITION,snapshotList);
  SnapshotTakeHandler snapshotTake=new SnapshotTakeHandler(configurationPersister.getHostPersister());
  hostRegistration.registerOperationHandler(SnapshotTakeHandler.DEFINITION,snapshotTake);
  ignoredRegistry.registerResources(hostRegistration);
  PlatformMBeanResourceRegistrar.registerPlatformMBeanResources(hostRegistration);
}

{
  final LockManager delegate=super.createServiceValue(startContext);
  return new LockManager(){
    @Override public <T extends LockableItem>T getItemForType(    Class<T> type){
      return delegate.getItemForType(type);
    }
    @Override public LockContext getCurrentLockContext(){
      return delegate.getCurrentLockContext();
    }
    @Override public LockContext lockItems(    Method method,    LockableItem... items){
      LockContext context=null;
      if (!skipLocking(method,items)) {
        context=delegate.lockItems(method,items);
        pushAttachedLockContext(context,items);
      }
      return context;
    }
    @Override public LockContext lockItems(    Method method,    long timeout,    TimeUnit unit,    LockableItem... items){
      LockContext context=null;
      if (!skipLocking(method,items)) {
        context=delegate.lockItems(method,timeout,unit,items);
        pushAttachedLockContext(context,items);
      }
      return context;
    }
    @Override public void unlockItems(    LockContext context){
      popAttachedLockContext(context);
      delegate.unlockItems(context);
    }
    @SuppressWarnings("unchecked") private synchronized boolean skipLocking(    Method method,    LockableItem... items){
      if (getCurrentLockContext() != null)       return false;
      LockContext context=null;
      for (      LockableItem item : items) {
        if (item instanceof Attachable) {
          Attachable Attachable=(Attachable)item;
          Stack<LockContext> stack=Attachable.getAttachment(LOCK_CONTEXT_KEY);
          LockContext aux=stack != null && !stack.isEmpty() ? stack.peek() : null;
          if (context == null && aux != null) {
            context=aux;
          }
          if (context != aux) {
            return false;
          }
        }
      }
      if (context == null)       return false;
      if (context.getMethod() == Method.UPDATE) {
        if (method == Method.STOP || method == Method.INSTALL || method == Method.START) {
          return true;
        }
      }
      if (context.getMethod() == Method.REFRESH) {
        if (method == Method.STOP || method == Method.UNINSTALL || method == Method.INSTALL || method == Method.START) {
          return true;
        }
      }
      if (context.getMethod() == Method.UNINSTALL) {
        if (method == Method.STOP || method == Method.UNINSTALL) {
          return true;
        }
      }
      return false;
    }
    @SuppressWarnings("unchecked") private synchronized void pushAttachedLockContext(    LockContext context,    LockableItem... items){
      for (      LockableItem item : items) {
        if (item instanceof Attachable) {
          Attachable attach=(Attachable)item;
          Stack<LockContext> stack=attach.getAttachment(LOCK_CONTEXT_KEY);
          if (stack == null) {
            stack=new Stack<LockContext>();
            attach.putAttachment(LOCK_CONTEXT_KEY,stack);
          }
          stack.push(context);
        }
      }
    }
    private synchronized void popAttachedLockContext(    LockContext context){
      if (context != null) {
        for (        LockableItem item : context.getItems()) {
          if (item instanceof Attachable) {
            Attachable attach=(Attachable)item;
            Stack<?> stack=attach.getAttachment(LOCK_CONTEXT_KEY);
            if (stack.size() == 1) {
              attach.removeAttachment(LOCK_CONTEXT_KEY);
            }
 else {
              stack.pop();
            }
          }
        }
      }
    }
  }
;
}

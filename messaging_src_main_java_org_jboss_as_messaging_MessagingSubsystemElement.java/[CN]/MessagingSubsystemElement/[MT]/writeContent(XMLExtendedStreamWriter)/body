{
  ElementUtils.writeSimpleElement(Element.BINDINGS_DIRECTORY,getBindingsDirectory(),streamWriter);
  ElementUtils.writeSimpleElement(Element.CLUSTERED,String.valueOf(isClustered()),streamWriter);
  ElementUtils.writeSimpleElement(Element.JOURNAL_DIRECTORY,getJournalDirectory(),streamWriter);
  ElementUtils.writeSimpleElement(Element.JOURNAL_MIN_FILES,String.valueOf(getJournalMinFiles()),streamWriter);
  JournalType jt=getJournalType();
  if (jt != null) {
    ElementUtils.writeSimpleElement(Element.JOURNAL_TYPE,jt.toString(),streamWriter);
  }
  ElementUtils.writeSimpleElement(Element.JOURNAL_FILE_SIZE,String.valueOf(getJournalFileSize()),streamWriter);
  ElementUtils.writeSimpleElement(Element.LARGE_MESSAGES_DIRECTORY,getLargeMessagesDirectory(),streamWriter);
  ElementUtils.writeSimpleElement(Element.PAGING_DIRECTORY,getPagingDirectory(),streamWriter);
  streamWriter.writeStartElement(Element.ACCEPTORS.getLocalName());
  for (  TransportElement acceptor : acceptors.values()) {
    streamWriter.writeStartElement(Element.ACCEPTOR.getLocalName());
    acceptor.writeContent(streamWriter);
  }
  streamWriter.writeEndElement();
  streamWriter.writeStartElement(Element.ADDRESS_SETTINGS.getLocalName());
  for (  AddressSettingsElement addressSettingsElement : addressSettings.values()) {
    streamWriter.writeStartElement(Element.ADDRESS_SETTING.getLocalName());
    addressSettingsElement.writeContent(streamWriter);
  }
  streamWriter.writeEndElement();
  streamWriter.writeStartElement(Element.CONNECTORS.getLocalName());
  for (  TransportElement connector : connectors.values()) {
    streamWriter.writeStartElement(Element.CONNECTOR.getLocalName());
    connector.writeContent(streamWriter);
  }
  streamWriter.writeEndElement();
  streamWriter.writeStartElement(Element.SECURITY_SETTINGS.getLocalName());
  for (  SecuritySettingElement securitySettingElement : securitySettings.values()) {
    streamWriter.writeStartElement(Element.SECURITY_SETTING.getLocalName());
    securitySettingElement.writeContent(streamWriter);
  }
  streamWriter.writeEndElement();
}

{
  log.info("Activating Messaging Subsystem");
  HornetQService hqservice=new HornetQService();
  Configuration hqConfig=configuration.getConfiguration();
  hqservice.setConfiguration(hqConfig);
  final BatchBuilder batchBuilder=context.getBatchBuilder();
  final BatchServiceBuilder<HornetQServer> serviceBuilder=batchBuilder.addService(JBOSS_MESSAGING,hqservice);
  Collection<TransportConfiguration> acceptors=hqConfig.getAcceptorConfigurations();
  Collection<TransportConfiguration> connectors=hqConfig.getConnectorConfigurations().values();
  if (connectors != null) {
    for (    TransportConfiguration tc : connectors) {
      Object socketRef=tc.getParams().get("socket-ref");
      if (socketRef != null) {
        String name=socketRef.toString();
        ServiceName socketName=SocketBinding.JBOSS_BINDING_NAME.append(name);
        serviceBuilder.addDependency(socketName,SocketBinding.class,hqservice.getSocketBindingInjector(name));
      }
    }
  }
  if (acceptors != null) {
    for (    TransportConfiguration tc : acceptors) {
      Object socketRef=tc.getParams().get("socket-ref");
      if (socketRef != null) {
        String name=socketRef.toString();
        ServiceName socketName=SocketBinding.JBOSS_BINDING_NAME.append(name);
        serviceBuilder.addDependency(socketName,SocketBinding.class,hqservice.getSocketBindingInjector(name));
      }
    }
  }
  serviceBuilder.setInitialMode(ServiceController.Mode.IMMEDIATE);
}

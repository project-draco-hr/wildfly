{
  Map<String,Object> vaultOptions=new HashMap<String,Object>();
  ModelNode vaultClassNode=CODE.resolveModelAttribute(context,model);
  String vaultClass=vaultClassNode.getType() == ModelType.UNDEFINED ? null : vaultClassNode.asString();
  if (operation.hasDefined(Constants.VAULT_OPTIONS)) {
    for (    Map.Entry<String,String> vaultOption : OPTIONS.unwrap(context,model).entrySet()) {
      vaultOptions.put(vaultOption.getKey(),vaultOption.getValue());
    }
  }
  if (vaultClass != null || !vaultOptions.isEmpty()) {
    final SecurityVaultService vaultService=new SecurityVaultService(vaultClass,vaultOptions);
    newControllers.add(context.getServiceTarget().addService(SecurityVaultService.SERVICE_NAME,vaultService).addListener(verificationHandler).setInitialMode(ServiceController.Mode.ACTIVE).install());
  }
}

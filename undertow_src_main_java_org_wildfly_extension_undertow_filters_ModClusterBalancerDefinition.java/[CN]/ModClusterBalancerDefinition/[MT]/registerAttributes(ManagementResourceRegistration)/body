{
  resourceRegistration.registerReadOnlyAttribute(MAX_ATTEMPTS,new AbstractBalancerOperation(){
    @Override protected void handleNode(    OperationContext context,    ModClusterStatus.LoadBalancer ctx,    ModelNode operation) throws OperationFailedException {
      context.getResult().set(new ModelNode(ctx.getMaxAttempts()));
    }
  }
);
  resourceRegistration.registerReadOnlyAttribute(STICKY_SESSION_COOKIE,new AbstractBalancerOperation(){
    @Override protected void handleNode(    OperationContext context,    ModClusterStatus.LoadBalancer ctx,    ModelNode operation) throws OperationFailedException {
      final String stickySessionCookie=ctx.getStickySessionCookie();
      if (stickySessionCookie == null) {
        context.getResult().set(new ModelNode());
      }
 else {
        context.getResult().set(new ModelNode(stickySessionCookie));
      }
    }
  }
);
  resourceRegistration.registerReadOnlyAttribute(STICKY_SESSION_PATH,new AbstractBalancerOperation(){
    @Override protected void handleNode(    OperationContext context,    ModClusterStatus.LoadBalancer ctx,    ModelNode operation) throws OperationFailedException {
      final String stickySessionPath=ctx.getStickySessionPath();
      if (stickySessionPath == null) {
        context.getResult().set(new ModelNode());
      }
 else {
        context.getResult().set(new ModelNode(stickySessionPath));
      }
    }
  }
);
  resourceRegistration.registerReadOnlyAttribute(WAIT_WORKER,new AbstractBalancerOperation(){
    @Override protected void handleNode(    OperationContext context,    ModClusterStatus.LoadBalancer ctx,    ModelNode operation) throws OperationFailedException {
      context.getResult().set(new ModelNode(ctx.getWaitWorker()));
    }
  }
);
  resourceRegistration.registerReadOnlyAttribute(STICKY_SESSION,new AbstractBalancerOperation(){
    @Override protected void handleNode(    OperationContext context,    ModClusterStatus.LoadBalancer ctx,    ModelNode operation) throws OperationFailedException {
      context.getResult().set(new ModelNode(ctx.isStickySession()));
    }
  }
);
  resourceRegistration.registerReadOnlyAttribute(STICKY_SESSION_REMOVE,new AbstractBalancerOperation(){
    @Override protected void handleNode(    OperationContext context,    ModClusterStatus.LoadBalancer ctx,    ModelNode operation) throws OperationFailedException {
      context.getResult().set(new ModelNode(ctx.isStickySessionRemove()));
    }
  }
);
  resourceRegistration.registerReadOnlyAttribute(STICKY_SESSION_FORCE,new AbstractBalancerOperation(){
    @Override protected void handleNode(    OperationContext context,    ModClusterStatus.LoadBalancer ctx,    ModelNode operation) throws OperationFailedException {
      context.getResult().set(new ModelNode(ctx.isStickySessionForce()));
    }
  }
);
}

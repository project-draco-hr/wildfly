{
  final String configPropertyValue=CONFIG_PROPERTY_VALUE.resolveModelAttribute(context,recoveryEnvModel).asString();
  final ModelNode address=operation.require(OP_ADDR);
  PathAddress path=PathAddress.pathAddress(address);
  final String archiveName=path.getElement(path.size() - 3).getValue();
  final String aoName=path.getElement(path.size() - 2).getValue();
  final String configPropertyName=PathAddress.pathAddress(address).getLastElement().getValue();
  ServiceName serviceName=ServiceName.of(ConnectorServices.RA_SERVICE,archiveName,aoName,configPropertyName);
  ServiceName aoServiceName=ServiceName.of(ConnectorServices.RA_SERVICE,archiveName,aoName);
  final ServiceTarget serviceTarget=context.getServiceTarget();
  final AOConfigPropertiesService service=new AOConfigPropertiesService(configPropertyName,configPropertyValue);
  ServiceController<?> controller=serviceTarget.addService(serviceName,service).setInitialMode(ServiceController.Mode.ACTIVE).addDependency(aoServiceName,ModifiableAdminObject.class,service.getAOInjector()).addListener(verificationHandler).install();
  context.addStep(verificationHandler,OperationContext.Stage.VERIFY);
}

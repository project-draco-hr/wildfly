{
  int frameworkStartLevel=startLevel.getStartLevel();
  assertEquals("Framework start level",1,frameworkStartLevel);
  try {
    assertNotNull("StartLevel injected",startLevel);
    int initialStartLevel=startLevel.getInitialBundleStartLevel();
    assertEquals("Initial bundle start level",1,initialStartLevel);
    assertEquals("Bundle RESOLVED",Bundle.RESOLVED,bundle.getState());
    assertEquals("arq465-bundle",bundle.getSymbolicName());
    int bundleStartLevel=startLevel.getBundleStartLevel(bundle);
    assertEquals("Bundle start level",3,bundleStartLevel);
    changeStartLevel(context,2,TIMEOUT,MILLISECONDS);
    assertEquals("Framework start level",2,startLevel.getStartLevel());
    try {
      bundle.start(Bundle.START_TRANSIENT);
      fail("Bundle cannot be started due to the Framework's current start level");
    }
 catch (    BundleException ex) {
    }
    assertEquals("Bundle RESOLVED",Bundle.RESOLVED,bundle.getState());
    bundle.start();
    assertEquals("Bundle RESOLVED",Bundle.RESOLVED,bundle.getState());
    changeStartLevel(context,3,TIMEOUT,MILLISECONDS);
    assertEquals("Bundle ACTIVE",Bundle.ACTIVE,bundle.getState());
    bundle.stop();
    assertEquals("Bundle RESOLVED",Bundle.RESOLVED,bundle.getState());
    bundle.uninstall();
    assertEquals("Bundle UNINSTALLED",Bundle.UNINSTALLED,bundle.getState());
  }
  finally {
    changeStartLevel(context,frameworkStartLevel,TIMEOUT,MILLISECONDS);
  }
}

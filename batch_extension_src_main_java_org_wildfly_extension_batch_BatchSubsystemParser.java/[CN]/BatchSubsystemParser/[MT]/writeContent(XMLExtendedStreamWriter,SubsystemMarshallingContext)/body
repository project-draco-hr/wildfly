{
  context.startSubsystemElement(Namespace.CURRENT.getUriString(),false);
  final ModelNode model=context.getModelNode();
  BatchSubsystemDefinition.JOB_REPOSITORY_TYPE.marshallAsElement(model,writer);
  if (model.hasDefined(BatchConstants.THREAD_POOL)) {
    final List<Property> threadPools=model.get(BatchConstants.THREAD_POOL).asPropertyList();
    for (    Property threadPool : threadPools) {
      threadsParser.writeUnboundedQueueThreadPool(writer,threadPool,Element.THREAD_POOL.getLocalName(),false);
    }
  }
  if (model.hasDefined(BatchConstants.THREAD_FACTORY)) {
    final List<Property> threadFactories=model.get(BatchConstants.THREAD_FACTORY).asPropertyList();
    for (    Property threadFactory : threadFactories) {
      threadsParser.writeThreadFactory(writer,threadFactory);
    }
  }
  writer.writeEndElement();
}

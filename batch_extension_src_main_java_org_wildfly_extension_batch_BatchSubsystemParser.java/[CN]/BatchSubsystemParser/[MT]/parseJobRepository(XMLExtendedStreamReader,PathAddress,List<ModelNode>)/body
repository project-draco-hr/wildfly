{
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
    final String localName=reader.getLocalName();
    final Element element=Element.forName(localName);
    if (element == Element.IN_MEMORY) {
      list.add(Util.createAddOperation(PathAddress.pathAddress(address,JobRepositoryDefinition.IN_MEMORY.getPathElement())));
    }
 else     if (element == Element.JDBC) {
      if (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
        final String value=ParseUtils.readStringAttributeElement(reader,Attribute.JNDI_NAME.getLocalName());
        final ModelNode op=Util.createAddOperation(PathAddress.pathAddress(address,JobRepositoryDefinition.JDBC.getPathElement()));
        JobRepositoryDefinition.JNDI_NAME.parseAndSetParameter(value,op,reader);
        list.add(op);
      }
 else {
        throw ParseUtils.unexpectedElement(reader);
      }
    }
 else {
      throw ParseUtils.unexpectedElement(reader);
    }
  }
  if (!(reader.hasNext() && reader.nextTag() == END_ELEMENT)) {
    throw ParseUtils.unexpectedElement(reader);
  }
}

{
  log.debugf("Starting Arquillian Test Runner");
  final MBeanServer mbeanServer=injectedMBeanServer.getValue();
  final TestClassLoader testClassLoader=new TestClassLoaderImpl();
  serviceContainer=context.getController().getServiceContainer();
  ServiceLoader<TestEnricher> loader=ServiceLoader.load(TestEnricher.class,testClassLoader.getServiceClassLoader());
  for (  TestEnricher enricher : loader.getProviders()) {
    if (enricher instanceof ServiceContainerInjector)     ((ServiceContainerInjector)enricher).inject(serviceContainer);
  }
  try {
    jmxTestRunner=new JMXTestRunner(){
      @Override public TestResult runTestMethod(      String className,      String methodName,      Map<String,String> props){
        final ContextManagerBuilder builder=new ContextManagerBuilder();
        ContextManager contextManager=null;
        ArquillianConfig config=getConfig(className);
        if (config != null) {
          final DeploymentUnit deployment=config.getDeploymentUnitContext();
          final Module module=deployment.getAttachment(Attachments.MODULE);
          builder.add(new TCCLSetup(module.getClassLoader()));
          ServiceController<?> weldService=deployment.getServiceRegistry().getService(deployment.getServiceName().append("beanmanager"));
          if (weldService != null) {
            DeploymentListener listener=new DeploymentListener();
            weldService.addListener(listener);
            listener.waitOnDeployment();
          }
          ServiceName NamespaceContextSelectorServiceName=config.getDeploymentUnitContext().getServiceName().append(NamespaceSelectorService.NAME);
          ServiceController<?> serviceController=serviceContainer.getService(NamespaceContextSelectorServiceName);
          if (serviceController != null) {
            DeploymentListener listener=new DeploymentListener();
            serviceController.addListener(listener);
            listener.waitOnDeployment();
            builder.add(new JavaNamespaceSetup((NamespaceSelectorService)serviceController.getValue()));
          }
          if (weldService != null) {
            builder.add(new WeldContextSetup());
          }
        }
        contextManager=builder.build();
        contextManager.setup();
        try {
          return super.runTestMethod(className,methodName,props);
        }
  finally {
          if (contextManager != null) {
            contextManager.teardown();
          }
        }
      }
      @Override protected TestClassLoader getTestClassLoader(){
        return testClassLoader;
      }
    }
;
    jmxTestRunner.registerMBean(mbeanServer);
  }
 catch (  Throwable t) {
    throw new StartException("Failed to start Arquillian Test Runner",t);
  }
}

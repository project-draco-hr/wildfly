{
  nl();
  indent();
  final StringBuilder b=new StringBuilder(data.length());
  final Iterator<String> i=Spliterator.over(data,'\n');
  if (!i.hasNext()) {
    return;
  }
 else {
    final String first=i.next();
    if (!i.hasNext()) {
      delegate.writeComment(first);
      state=COMMENT;
      return;
    }
 else {
      b.append('\n');
      for (int q=0; q < level; q++) {
        b.append("    ");
      }
      b.append("  ~ ");
      b.append(first);
      do {
        b.append('\n');
        for (int q=0; q < level; q++) {
          b.append("    ");
        }
        b.append("  ~ ");
        b.append(i.next());
      }
 while (i.hasNext());
    }
    b.append('\n');
    for (int q=0; q < level; q++) {
      b.append("    ");
    }
    b.append("  ");
    delegate.writeComment(b.toString());
    state=COMMENT;
  }
}

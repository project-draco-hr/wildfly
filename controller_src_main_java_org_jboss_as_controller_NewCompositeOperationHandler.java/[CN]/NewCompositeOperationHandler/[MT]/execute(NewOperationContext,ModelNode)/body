{
  ModelNodeRegistration registry=context.getModelNodeRegistration();
  final List<ModelNode> list=operation.get(STEPS).asList();
  ModelNode responseMap=context.getResult().setEmptyObject();
  Map<String,NewStepHandler> stepHandlerMap=new HashMap<String,NewStepHandler>();
  final int size=list.size();
  for (int i=0; i < size; i++) {
    String stepName="step-" + (i + 1);
    responseMap.get(stepName);
    final ModelNode subOperation=list.get(i);
    PathAddress stepAddress=PathAddress.pathAddress(subOperation.get(OP_ADDR));
    String stepOpName=subOperation.require(OP).asString();
    NewStepHandler stepHandler=registry.getOperationHandler(stepAddress,stepOpName);
    if (stepHandler == null) {
      context.getFailureDescription().set(String.format("No handler for %s at address %s",stepOpName,stepAddress));
      context.completeStep();
      return;
    }
    stepHandlerMap.put(stepName,stepHandler);
  }
  for (int i=size - 1; i >= 0; i--) {
    final ModelNode subOperation=list.get(i);
    String stepName="step-" + (i + 1);
    context.addStep(responseMap.get(stepName).setEmptyObject(),subOperation,stepHandlerMap.get(stepName),NewOperationContext.Stage.IMMEDIATE);
  }
  if (context.completeStep() == NewOperationContext.ResultAction.ROLLBACK) {
    final ModelNode failureMsg=new ModelNode();
    final String baseMsg="Composite operation failed and was rolled back. Steps that failed:";
    for (int i=0; i < size; i++) {
      String stepName="step-" + (i + 1);
      ModelNode stepResponse=responseMap.get(stepName);
      if (stepResponse.hasDefined(FAILURE_DESCRIPTION)) {
        failureMsg.get(baseMsg,"Operation " + stepName).set(stepResponse.get(FAILURE_DESCRIPTION));
      }
    }
    if (!failureMsg.isDefined()) {
      failureMsg.set("Composite operation was rolled back");
    }
    context.getFailureDescription().set(failureMsg);
  }
}

{
  final Resource resource=context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS);
  final ModelNode model=resource.getModel();
  ModelNode dc=model.get(DOMAIN_CONTROLLER);
  ModelNode remoteDC=dc.get(REMOTE);
  PORT.validateAndSet(operation,remoteDC);
  HOST.validateAndSet(operation,remoteDC);
  USERNAME.validateAndSet(operation,remoteDC);
  IGNORE_UNUSED_CONFIG.validateAndSet(operation,remoteDC);
  if (operation.has(SECURITY_REALM.getName())) {
    SECURITY_REALM.validateAndSet(operation,remoteDC);
    hostControllerInfo.setRemoteDomainControllerSecurityRealm(SECURITY_REALM.resolveModelAttribute(context,operation).asString());
  }
 else {
    remoteDC.get(SECURITY_REALM.getName()).clear();
  }
  if (dc.has(LOCAL)) {
    dc.remove(LOCAL);
  }
  if (context.isBooting()) {
    initializeDomain(context,remoteDC);
  }
 else {
    context.reloadRequired();
  }
  context.completeStep(new OperationContext.RollbackHandler(){
    @Override public void handleRollback(    OperationContext context,    ModelNode operation){
      if (!context.isBooting()) {
        context.revertReloadRequired();
      }
    }
  }
);
}

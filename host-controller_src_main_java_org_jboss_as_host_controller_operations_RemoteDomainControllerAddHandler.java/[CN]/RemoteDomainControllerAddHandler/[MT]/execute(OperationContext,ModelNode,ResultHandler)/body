{
  try {
    final ModelNode model=context.getSubModel();
    model.get(DOMAIN_CONTROLLER,REMOTE,PORT).set(operation.require(PORT).asInt());
    model.get(DOMAIN_CONTROLLER,REMOTE,HOST).set(operation.require(HOST).asString());
    resultHandler.handleResultComplete();
  }
 catch (  Exception e) {
    throw new OperationFailedException(new ModelNode().set(e.getLocalizedMessage()));
  }
  if (context.getRuntimeContext() != null) {
    final DomainModelImpl domainModel=domainModelProxy.getDomainModel();
    context.getRuntimeContext().setRuntimeTask(new RuntimeTask(){
      public void execute(      RuntimeTaskContext context) throws OperationFailedException {
        final ServiceTarget serviceTarget=context.getServiceTarget();
        final FileRepository fileRepository=new LocalFileRepository(environment);
        installRemoteDomainControllerConnection(domainModel.getHostModel(),serviceTarget,fileRepository);
        installLocalDomainController(environment,domainModel.getHostModel(),serviceTarget,true,fileRepository,domainModelProxy.getDomainModel());
      }
    }
);
  }
  ModelNode compensating=Util.getResourceRemoveOperation(operation.get(OP_ADDR));
  return new BasicOperationResult(compensating);
}

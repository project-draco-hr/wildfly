{
  Operation<Set<K>> operation=new Operation<Set<K>>(){
    @Override public Set<K> invoke(    Cache<Address,Map.Entry<K,V>> cache){
      Collection<Address> oldMembers=event.getOldMembers();
      Collection<Address> newMembers=event.getNewMembers();
      Set<K> removed=new HashSet<K>();
      for (      Address member : oldMembers) {
        if (!newMembers.contains(member)) {
          Map.Entry<K,V> old=cache.getAdvancedCache().withFlags(Flag.CACHE_MODE_LOCAL).remove(member);
          if (old != null) {
            removed.add(old.getKey());
          }
        }
      }
      if (event.isMergeView()) {
        RegistryService.this.addLocalCacheEntry(cache,RegistryService.this.createLocalCacheEntry());
      }
      return removed;
    }
  }
;
  Set<K> removed=this.invoke(operation);
  if (!removed.isEmpty()) {
    for (    Listener<K,V> listener : this.listeners) {
      listener.removedEntries(removed);
    }
  }
}

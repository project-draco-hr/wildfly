{
  final EJBComponent component=(EJBComponent)interceptorContext.getPrivateData(Component.class);
  if (!component.isExceptionLoggingEnabled()) {
    return interceptorContext.proceed();
  }
  try {
    return interceptorContext.proceed();
  }
 catch (  EJBComponentUnavailableException ex) {
    if (EjbLogger.EJB3_INVOCATION_LOGGER.isTraceEnabled())     EjbLogger.EJB3_INVOCATION_LOGGER.trace(ex.getMessage());
    throw ex;
  }
catch (  Throwable t) {
    final Method invokedMethod=interceptorContext.getMethod();
    final ApplicationExceptionDetails appException=component.getApplicationException(t.getClass(),invokedMethod);
    if (appException == null) {
      EjbLogger.EJB3_INVOCATION_LOGGER.invocationFailed(component.getComponentName(),invokedMethod,t);
    }
    if (t instanceof Exception) {
      throw (Exception)t;
    }
    throw new Exception(t);
  }
}

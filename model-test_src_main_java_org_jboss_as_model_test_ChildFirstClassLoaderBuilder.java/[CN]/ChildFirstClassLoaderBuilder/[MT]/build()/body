{
  for (  Map.Entry<URL,Set<String>> entry : singleClassesByUrl.entrySet()) {
    if (classloaderURLs.contains(entry.getKey())) {
      throw new IllegalStateException("Url " + entry.getKey() + " which is the code source for the following classes has "+ "already been set up via other means: "+ entry.getValue());
    }
    classloaderURLs.add(entry.getKey());
    Set<String> childFirstNames=new HashSet<String>();
    for (    String clazz : entry.getValue()) {
      childFirst.add(compilePattern(clazz));
      childFirstNames.add(clazz);
    }
    try {
      File file=new File(entry.getKey().toURI());
      if (file.isDirectory()) {
        addParentFirstPatternsFromDirectory(file,"",childFirstNames);
      }
 else {
        throw new IllegalStateException("Single class exclusions from jar files is not working: " + entry);
      }
    }
 catch (    URISyntaxException e) {
      throw new IllegalStateException(e);
    }
  }
  ClassLoader parent=this.getClass().getClassLoader() != null ? this.getClass().getClassLoader() : null;
  return new ChildFirstClassLoader(parent,parentFirst,childFirst,parentExclusionFilter,classloaderURLs.toArray(new URL[classloaderURLs.size()]));
}

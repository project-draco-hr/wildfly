{
  final String root=System.getProperty(ROOT_PROPERTY);
  final String cacheFolderName=System.getProperty(CACHE_FOLDER_PROPERTY);
  if (root == null && cacheFolderName == null) {
    if (System.getProperty(STRICT_PROPERTY) != null) {
      throw new IllegalStateException("Please use the " + ROOT_PROPERTY + " and "+ CACHE_FOLDER_PROPERTY+ " system properties to take advantage of cached classpaths");
    }
    cache=new File("target","cached-classloader");
    cache.mkdirs();
    if (!cache.exists()) {
      throw new IllegalStateException("Could not create cache file");
    }
    System.out.println("To optimize this test use the " + ROOT_PROPERTY + " and "+ CACHE_FOLDER_PROPERTY+ " system properties to take advantage of cached classpaths");
  }
 else   if (root != null && cacheFolderName != null) {
    if (cacheFolderName.indexOf('/') != -1 && cacheFolderName.indexOf('\\') != -1) {
      throw new IllegalStateException("Please use either '/' or '\\' as a file separator");
    }
    File file=new File(".").getAbsoluteFile();
    final String[] rootChildren=root.startsWith("[") && root.endsWith("]") ? root.substring(1,root.length() - 1).split(",") : null;
    if (rootChildren.length > 1) {
      for (int i=0; i < rootChildren.length; i++) {
        if (rootChildren[i].indexOf("/") != -1 || rootChildren[i].indexOf("\\") != -1) {
          throw new IllegalStateException("Children must be direct children");
        }
        rootChildren[i]=rootChildren[i].trim();
      }
    }
    while (file != null) {
      if (rootChildren == null) {
        if (file.getName().equals(root)) {
          break;
        }
      }
 else {
        boolean hasAllChildren=true;
        for (        String child : rootChildren) {
          if (!new File(file,child).exists()) {
            hasAllChildren=false;
            break;
          }
        }
        if (hasAllChildren) {
          break;
        }
      }
      file=file.getParentFile();
    }
    if (file != null) {
      String separator=cacheFolderName.indexOf("/") != -1 ? "/" : "\\";
      for (      String part : cacheFolderName.split(separator)) {
        file=new File(file,part);
        if (file.exists()) {
          if (!file.isDirectory()) {
            throw new IllegalStateException(file.getAbsolutePath() + " is not a directory");
          }
        }
 else {
          if (!file.mkdir()) {
            if (!file.exists()) {
              throw new IllegalStateException(file.getAbsolutePath() + " could not be created");
            }
          }
        }
      }
      cache=file;
    }
 else     if (System.getProperty(STRICT_PROPERTY) != null) {
      throw new IllegalStateException("Could not find a parent file called '" + root + "'");
    }
 else {
      cache=new File("target","cached-classloader");
      cache.mkdirs();
      if (!cache.exists()) {
        throw new IllegalStateException("Could not create cache file");
      }
    }
  }
 else {
    throw new IllegalStateException("You must either set both " + ROOT_PROPERTY + " and "+ CACHE_FOLDER_PROPERTY+ ", or none of them");
  }
}

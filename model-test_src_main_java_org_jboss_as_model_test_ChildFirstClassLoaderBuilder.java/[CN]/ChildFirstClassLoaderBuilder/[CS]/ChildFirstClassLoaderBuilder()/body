{
  String root=System.getProperty(ROOT_PROPERTY);
  String cacheFolderName=System.getProperty(CACHE_FOLDER_PROPERTY);
  if (root == null && cacheFolderName == null) {
    cache=new File("target","cached-classloader");
    cache.mkdirs();
    if (!cache.exists()) {
      throw new IllegalStateException("Could not create cache file");
    }
    throw new IllegalStateException("TODO use the project target directory");
  }
 else   if (root != null && cacheFolderName != null) {
    if (cacheFolderName.indexOf('/') != -1 && cacheFolderName.indexOf('\\') != -1) {
      throw new IllegalStateException("Please use either '/' or '\\' as a file separator");
    }
    File file=new File(".").getAbsoluteFile();
    while (file != null && !file.getName().equals(root)) {
      file=file.getParentFile();
    }
    if (file == null) {
      throw new IllegalStateException("Could not find a parent file called '" + root + "'");
    }
    String separator=cacheFolderName.indexOf("/") != -1 ? "/" : "\\";
    for (    String part : cacheFolderName.split(separator)) {
      file=new File(file,part);
      if (file.exists()) {
        if (!file.isDirectory()) {
          throw new IllegalStateException(file.getAbsolutePath() + " is not a directory");
        }
      }
 else {
        if (!file.mkdir()) {
          if (!file.exists()) {
            throw new IllegalStateException(file.getAbsolutePath() + " could not be created");
          }
        }
      }
    }
    cache=file;
  }
 else {
    throw new IllegalStateException("You must either set both " + ROOT_PROPERTY + " and "+ CACHE_FOLDER_PROPERTY+ ", or none of them");
  }
}

{
  if (context.isNormalServer()) {
    final Resource deployment=context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS);
    final ImmutableManagementResourceRegistration registration=context.getResourceRegistration();
    final ManagementResourceRegistration mutableRegistration=context.getResourceRegistrationForUpdate();
    DeploymentModelUtils.cleanup(deployment);
    context.addStep(new OperationStepHandler(){
      public void execute(      OperationContext context,      ModelNode operation){
        final ServiceName deploymentUnitServiceName=Services.deploymentUnitName(deploymentUnitName);
        context.removeService(deploymentUnitServiceName);
        context.removeService(deploymentUnitServiceName.append("contents"));
        context.completeStep(new OperationContext.ResultHandler(){
          @Override public void handleResult(          OperationContext.ResultAction resultAction,          OperationContext context,          ModelNode operation){
            if (resultAction == OperationContext.ResultAction.ROLLBACK) {
              final ModelNode model=context.readResource(PathAddress.EMPTY_ADDRESS).getModel();
              final String name=model.require(NAME).asString();
              final String runtimeName=model.require(RUNTIME_NAME).asString();
              final DeploymentHandlerUtil.ContentItem[] contents=getContents(model.require(CONTENT));
              final ServiceVerificationHandler verificationHandler=new ServiceVerificationHandler();
              doDeploy(context,runtimeName,name,verificationHandler,deployment,registration,mutableRegistration,vaultReader,contents);
              if (context.hasFailureDescription()) {
                ServerLogger.ROOT_LOGGER.undeploymentRolledBack(deploymentUnitName,getFormattedFailureDescription(context));
              }
 else {
                ServerLogger.ROOT_LOGGER.undeploymentRolledBackWithNoMessage(deploymentUnitName);
              }
            }
 else {
              ServerLogger.ROOT_LOGGER.deploymentUndeployed(deploymentUnitName);
            }
          }
        }
);
      }
    }
,OperationContext.Stage.RUNTIME);
  }
}

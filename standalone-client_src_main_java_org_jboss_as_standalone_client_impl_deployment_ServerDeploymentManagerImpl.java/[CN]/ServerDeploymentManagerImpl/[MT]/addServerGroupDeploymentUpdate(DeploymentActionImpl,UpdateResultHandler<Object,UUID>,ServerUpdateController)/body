{
switch (action.getType()) {
case ADD:
{
      controller.addServerModelUpdate(new ServerModelDeploymentAdd(action.getDeploymentUnitUniqueName(),action.getNewContentFileName(),action.getNewContentHash()),resultHandler,action.getId());
      break;
    }
case REMOVE:
{
    controller.addServerModelUpdate(new ServerModelDeploymentRemove(action.getDeploymentUnitUniqueName()),resultHandler,action.getId());
    break;
  }
case DEPLOY:
{
  controller.addServerModelUpdate(new ServerModelDeploymentStartUpdate(action.getDeploymentUnitUniqueName(),action.getNewContentFileName(),action.getNewContentHash()),resultHandler,action.getId());
  break;
}
case UNDEPLOY:
{
controller.addServerModelUpdate(new ServerModelDeploymentStopUpdate(action.getDeploymentUnitUniqueName()),resultHandler,action.getId());
break;
}
case REDEPLOY:
{
controller.addServerModelUpdate(new ServerModelDeploymentReplaceUpdate(action.getDeploymentUnitUniqueName(),action.getDeploymentUnitUniqueName()),resultHandler,action.getId());
break;
}
case REPLACE:
{
controller.addServerModelUpdate(new ServerModelDeploymentReplaceUpdate(action.getDeploymentUnitUniqueName(),action.getReplacedDeploymentUnitUniqueName()),resultHandler,action.getId());
break;
}
case FULL_REPLACE:
ServerGroupDeploymentElement deployment=serverConfiguration.getDeployment(action.getDeploymentUnitUniqueName());
boolean redeploy=deployment != null && deployment.isStart();
controller.addServerModelUpdate(new ServerModelDeploymentFullReplaceUpdate(action.getDeploymentUnitUniqueName(),action.getNewContentFileName(),action.getNewContentHash(),redeploy),resultHandler,action.getId());
break;
default :
{
throw new IllegalStateException("Unknown type " + action.getType());
}
}
}

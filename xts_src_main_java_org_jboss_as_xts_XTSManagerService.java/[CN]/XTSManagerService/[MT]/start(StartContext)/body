{
  final ClassLoader loader=XTSService.class.getClassLoader();
  WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(loader);
  try {
    ServerConfig serverConfigValue=wsServerConfig.getValue();
    WSCEnvironmentBean wscEnVBean=XTSPropertyManager.getWSCEnvironmentBean();
    if (coordinatorURL != null) {
      wscEnVBean.setCoordinatorURL11(coordinatorURL);
    }
 else {
      String defaultCoordinatorUrl="http://" + serverConfigValue.getWebServiceHost() + ":"+ serverConfigValue.getWebServicePort()+ "/"+ wscEnVBean.getCoordinatorPath11();
      wscEnVBean.setCoordinatorURL11(defaultCoordinatorUrl);
    }
    wscEnVBean.setBindAddress11(serverConfigValue.getWebServiceHost());
    wscEnVBean.setBindPort11(serverConfigValue.getWebServicePort());
    wscEnVBean.setBindPortSecure11(serverConfigValue.getWebServiceSecurePort());
    XTSService service=new XTSService();
    try {
      service.start();
    }
 catch (    Exception e) {
      throw XtsAsMessages.MESSAGES.xtsServiceFailedToStart();
    }
    xtsService=service;
    XTSHandlersManager xtsHandlerManager=new XTSHandlersManager(serverConfigValue);
    xtsHandlerManager.registerClientHandlers(isDefaultContextPropagation);
  }
  finally {
    WildFlySecurityManager.setCurrentContextClassLoaderPrivileged((ClassLoader)null);
  }
}

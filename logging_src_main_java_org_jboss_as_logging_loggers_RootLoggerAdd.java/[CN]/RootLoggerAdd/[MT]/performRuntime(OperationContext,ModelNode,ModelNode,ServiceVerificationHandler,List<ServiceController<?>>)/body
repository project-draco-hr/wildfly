{
  final PathAddress address=PathAddress.pathAddress(LoggingExtension.rootLoggerPath);
  final String name=address.getLastElement().getValue();
  final ModelNode level=LEVEL.resolveModelAttribute(context,model);
  final ModelNode handlers=HANDLERS.resolveModelAttribute(context,model);
  final ServiceTarget target=context.getServiceTarget();
  try {
    final RootLoggerService service=new RootLoggerService();
    if (level.isDefined())     service.setLevel(ModelParser.parseLevel(level));
    newControllers.add(target.addService(LogServices.loggerName(name),service).addListener(verificationHandler).setInitialMode(ServiceController.Mode.ACTIVE).install());
  }
 catch (  Throwable t) {
    throw new OperationFailedException(new ModelNode().set(t.getLocalizedMessage()));
  }
  try {
    if (handlers.isDefined()) {
      newControllers.addAll(LogServices.installLoggerHandlers(target,name,handlers,verificationHandler));
    }
  }
 catch (  Throwable t) {
    throw new OperationFailedException(new ModelNode().set(t.getLocalizedMessage()));
  }
}

{
  final PathAddress address=PathAddress.pathAddress(LoggingExtension.rootLoggerPath);
  final String name=address.getLastElement().getValue();
  final ModelNode level=LEVEL.resolveModelAttribute(context,model);
  final ModelNode handlers=HANDLERS.resolveModelAttribute(context,model);
  final ModelNode filter=FILTER.resolveModelAttribute(context,model);
  final ServiceTarget target=context.getServiceTarget();
  final RootLoggerService service=new RootLoggerService();
  if (level.isDefined())   service.setLevel(ModelParser.parseLevel(level));
  if (filter.isDefined())   service.setFilter(ModelParser.parseFilter(context,filter));
  ServiceBuilder builder=target.addService(LogServices.loggerName(name),service).setInitialMode(ServiceController.Mode.ACTIVE);
  if (verificationHandler != null) {
    builder.addListener(verificationHandler);
  }
  ServiceController<?> controller=builder.install();
  if (newControllers != null) {
    newControllers.add(controller);
  }
  if (handlers.isDefined()) {
    newControllers.addAll(LoggerAssignHandler.installHandlers(target,name,handlers,verificationHandler));
  }
}

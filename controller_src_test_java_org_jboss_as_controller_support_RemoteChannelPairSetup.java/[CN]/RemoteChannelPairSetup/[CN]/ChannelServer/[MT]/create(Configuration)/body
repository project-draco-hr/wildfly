{
  if (configuration == null) {
    throw new IllegalArgumentException("Null configuration");
  }
  configuration.validate();
  final Endpoint endpoint=Remoting.createEndpoint(configuration.getEndpointName(),configuration.getExecutor(),configuration.getOptionMap());
  final Xnio xnio=Xnio.getInstance();
  ThreadGroup group=new ThreadGroup("Remoting test client threads");
  final ReadChannelThread readChannelThread=xnio.createReadChannelThread(group,OptionMap.EMPTY);
  final WriteChannelThread writeChannelThread=xnio.createWriteChannelThread(group,OptionMap.EMPTY);
  final ConnectionChannelThread connectionChannelThread=xnio.createReadChannelThread(group,OptionMap.EMPTY);
  final ChannelThreadPool<ReadChannelThread> readPool=ChannelThreadPools.singleton(readChannelThread);
  final ChannelThreadPool<WriteChannelThread> writePool=ChannelThreadPools.singleton(writeChannelThread);
  final ChannelThreadPool<ConnectionChannelThread> connectionPool=ChannelThreadPools.singleton(connectionChannelThread);
  final Pool<ByteBuffer> bufferPool=Buffers.allocatedBufferPool(BufferAllocator.BYTE_BUFFER_ALLOCATOR,8192);
  endpoint.addConnectionProvider(configuration.getUriScheme(),new RemoteConnectionProviderFactory(xnio,bufferPool,readPool,writePool,connectionPool));
  final NetworkServerProvider networkServerProvider=endpoint.getConnectionProviderInterface(configuration.getUriScheme(),NetworkServerProvider.class);
  SimpleServerAuthenticationProvider provider=new SimpleServerAuthenticationProvider();
  provider.addUser("bob",configuration.getEndpointName(),"pass".toCharArray());
  ChannelListener<AcceptingChannel<ConnectedStreamChannel>> serverListener=networkServerProvider.getServerListener(OptionMap.create(Options.SASL_MECHANISMS,Sequence.of("DIGEST-MD5")),provider);
  AcceptingChannel<? extends ConnectedStreamChannel> streamServer=xnio.createStreamServer(configuration.getBindAddress(),connectionChannelThread,serverListener,OptionMap.EMPTY);
  return new ChannelServer(endpoint,streamServer,readChannelThread,writeChannelThread,connectionChannelThread);
}

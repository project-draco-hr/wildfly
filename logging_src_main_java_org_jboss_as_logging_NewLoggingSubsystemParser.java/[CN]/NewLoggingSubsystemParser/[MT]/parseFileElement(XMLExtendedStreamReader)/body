{
  String path=null;
  String relativeTo=null;
  final EnumSet<Attribute> required=EnumSet.of(Attribute.PATH);
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    final String value=reader.getAttributeValue(i);
    if (reader.getAttributeNamespace(i) != null) {
      throw unexpectedAttribute(reader,i);
    }
 else {
      final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
      required.remove(attribute);
switch (attribute) {
case PATH:
{
          path=value;
          break;
        }
case RELATIVE_TO:
{
        relativeTo=value;
        break;
      }
default :
{
      throw unexpectedAttribute(reader,i);
    }
}
}
}
requireNoContent(reader);
final ModelNode node=new ModelNode();
node.get(PATH).set(path);
node.get(RELATIVE_TO).set(relativeTo);
return node;
}

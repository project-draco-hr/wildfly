{
  final PathAddress address=PathAddress.pathAddress(operation.require(OP_ADDR));
  final String name=address.getLastElement().getValue();
  final String bindingRef=operation.require(SOCKET_BINDING).asString();
  final ModelNode compensatingOperation=new ModelNode();
  compensatingOperation.get(OP).set(REMOVE);
  compensatingOperation.get(OP_ADDR).set(operation.require(OP_ADDR));
  if (context instanceof NewRuntimeOperationContext) {
    final NewRuntimeOperationContext runtimeContext=(NewRuntimeOperationContext)context;
    final boolean enabled=operation.has(ENABLED) ? operation.get(ENABLED).asBoolean() : true;
    final WebConnectorService service=new WebConnectorService(operation.require(PROTOCOL).asString(),operation.get(SCHEME).asString());
    if (operation.has(SECURE))     service.setSecure(operation.get(SECURE).asBoolean());
    if (operation.has(ENABLE_LOOKUPS))     service.setEnableLookups(operation.get(ENABLE_LOOKUPS).asBoolean());
    if (operation.has(PROXY_NAME))     service.setProxyName(operation.get(PROXY_NAME).asString());
    if (operation.has(PROXY_PORT))     service.setProxyPort(operation.get(PROXY_PORT).asInt());
    if (operation.has(REDIRECT_PORT))     service.setRedirectPort(operation.get(REDIRECT_PORT).asInt());
    if (operation.has(MAX_POST_SIZE))     service.setMaxPostSize(operation.get(MAX_POST_SIZE).asInt());
    if (operation.has(MAX_SAVE_POST_SIZE))     service.setMaxSavePostSize(operation.get(MAX_SAVE_POST_SIZE).asInt());
    runtimeContext.getServiceTarget().addService(WebSubsystemElement.JBOSS_WEB_CONNECTOR.append(name),service).addDependency(WebSubsystemElement.JBOSS_WEB,WebServer.class,service.getServer()).addDependency(SocketBinding.JBOSS_BINDING_NAME.append(bindingRef),SocketBinding.class,service.getBinding()).setInitialMode(enabled ? Mode.ACTIVE : Mode.NEVER).install();
  }
  final ModelNode subModel=context.getSubModel();
  subModel.get(PROTOCOL).set(operation.get(PROTOCOL));
  subModel.get(SOCKET_BINDING).set(operation.get(SOCKET_BINDING));
  if (operation.has(SCHEME))   subModel.get(SCHEME).set(operation.get(SCHEME));
  if (operation.has(SECURE))   subModel.get(SECURE).set(operation.get(SECURE).asBoolean());
  if (operation.has(ENABLE_LOOKUPS))   subModel.get(ENABLE_LOOKUPS).set(operation.get(ENABLE_LOOKUPS).asBoolean());
  if (operation.has(PROXY_NAME))   subModel.get(PROXY_NAME).set(operation.get(PROXY_NAME).asString());
  if (operation.has(PROXY_PORT))   subModel.get(PROXY_PORT).set(operation.get(PROXY_PORT).asInt());
  if (operation.has(REDIRECT_PORT))   subModel.get(REDIRECT_PORT).set(operation.get(REDIRECT_PORT).asInt());
  if (operation.has(MAX_POST_SIZE))   subModel.get(MAX_POST_SIZE).set(operation.get(MAX_POST_SIZE).asInt());
  if (operation.has(MAX_SAVE_POST_SIZE))   subModel.get(MAX_SAVE_POST_SIZE).set(operation.get(MAX_SAVE_POST_SIZE).asInt());
  resultHandler.handleResultComplete(compensatingOperation);
  return Cancellable.NULL;
}

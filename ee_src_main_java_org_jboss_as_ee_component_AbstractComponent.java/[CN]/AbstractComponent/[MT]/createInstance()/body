{
  if (!gate) {
synchronized (this) {
      while (!gate) {
        try {
          wait();
        }
 catch (        InterruptedException e) {
          Thread.currentThread().interrupt();
          throw new IllegalStateException("Component not available (interrupted)");
        }
      }
    }
  }
  SimpleInterceptorFactoryContext interceptorContext=new SimpleInterceptorFactoryContext();
  Object objectInstance=createObjectInstance();
  applyInjections(objectInstance);
  performPostConstructLifecycle(objectInstance,interceptorContext);
  return constructComponentInstance(objectInstance,createPreDestroyMethods(interceptorContext));
}

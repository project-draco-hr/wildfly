{
  if (!gate) {
synchronized (this) {
      while (!gate) {
        try {
          wait();
        }
 catch (        InterruptedException e) {
          Thread.currentThread().interrupt();
          throw new IllegalStateException("Component not available (interrupted)");
        }
      }
    }
  }
  NamespaceContextSelector.pushCurrentSelector(selector);
  try {
    Object objectInstance=createObjectInstance();
    applyInjections(objectInstance);
    performPostConstructLifecycle(objectInstance);
    return constructComponentInstance(objectInstance);
  }
  finally {
    NamespaceContextSelector.popCurrentSelector();
  }
}

{
  try {
    attribute.validateOperation(operation);
    AuthorizationResult authorizationResult=context.authorize(operation,ACTION_EFFECT_SET);
    if (authorizationResult.getDecision() == AuthorizationResult.Decision.DENY) {
      throw ControllerMessages.MESSAGES.unauthorized(operation.get(ModelDescriptionConstants.OP).asString(),PathAddress.pathAddress(operation.get(ModelDescriptionConstants.OP_ADDR)),authorizationResult.getExplanation());
    }
    InputStream is=getContentInputStream(context,operation);
    try {
      byte[] hash=contentRepository.addContent(is);
      context.getResult().set(hash);
    }
  finally {
      safeClose(is);
    }
  }
 catch (  IOException e) {
    throw ServerMessages.MESSAGES.caughtIOExceptionUploadingContent(e);
  }
  context.stepCompleted();
}

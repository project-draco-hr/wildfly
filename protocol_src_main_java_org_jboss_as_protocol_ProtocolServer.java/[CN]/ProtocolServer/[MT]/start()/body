{
  stop=false;
  final ServerSocket serverSocket=socketFactory.createServerSocket();
  this.serverSocket=serverSocket;
  thread=threadFactory.newThread(new Runnable(){
    public void run(){
      try {
        while (!serverSocket.isClosed() && !stop) {
          try {
            final Socket socket=serverSocket.accept();
            boolean ok=false;
            try {
              socket.setSoTimeout(readTimeout);
              ok=true;
            }
  finally {
              if (!ok) {
                try {
                  socket.close();
                }
 catch (                IOException e) {
                  log.errorf(e,"Failed to close a socket");
                }
              }
            }
            safeHandleConnection(socket);
          }
 catch (          SocketException e) {
            if (!stop) {
              log.errorf(e,"Failed to accept a connection");
            }
          }
catch (          IOException e) {
            log.errorf(e,"Failed to accept a connection");
          }
        }
      }
  finally {
        StreamUtils.safeClose(serverSocket);
      }
    }
  }
);
  if (thread == null) {
    throw new IOException("Failed to create server thread");
  }
  thread.setName("Accept thread");
  serverSocket.setReuseAddress(true);
  serverSocket.bind(bindAddress,backlog);
  boundAddress=(InetSocketAddress)serverSocket.getLocalSocketAddress();
  thread.start();
}

{
  final ModelNode addOperation=Util.createAddOperation();
  final int count=reader.getAttributeCount();
  String name=null;
  final EnumSet<Attribute> required=EnumSet.of(Attribute.NAME,Attribute.CORE_THREADS);
  for (int i=0; i < count; i++) {
    requireNoNamespaceAttribute(reader,i);
    final String value=reader.getAttributeValue(i);
    final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
    required.remove(attribute);
switch (attribute) {
case NAME:
      name=value.trim();
    if (name.equals(ConcurrentServiceNames.DEFAULT_NAME)) {
      throw invalidAttributeValue(reader,i);
    }
  break;
case CONTEXT_SERVICE:
ManagedExecutorServiceResourceDefinition.CONTEXT_SERVICE_AD.parseAndSetParameter(value,addOperation,reader);
break;
case THREAD_FACTORY:
ManagedScheduledExecutorServiceResourceDefinition.THREAD_FACTORY_AD.parseAndSetParameter(value,addOperation,reader);
break;
case HUNG_TASK_THRESHOLD:
ManagedExecutorServiceResourceDefinition.HUNG_TASK_THRESHOLD_AD.parseAndSetParameter(value,addOperation,reader);
break;
case LONG_RUNNING_TASKS:
ManagedExecutorServiceResourceDefinition.LONG_RUNNING_TASKS_AD.parseAndSetParameter(value,addOperation,reader);
break;
case CORE_THREADS:
ManagedExecutorServiceResourceDefinition.CORE_THREADS_AD.parseAndSetParameter(value,addOperation,reader);
break;
case MAX_THREADS:
ManagedExecutorServiceResourceDefinition.MAX_THREADS_AD.parseAndSetParameter(value,addOperation,reader);
break;
case KEEPALIVE_TIME:
ManagedExecutorServiceResourceDefinition.KEEPALIVE_TIME_AD.parseAndSetParameter(value,addOperation,reader);
break;
case QUEUE_LENGTH:
ManagedExecutorServiceResourceDefinition.QUEUE_LENGTH_AD.parseAndSetParameter(value,addOperation,reader);
break;
case REJECT_POLICY:
ManagedExecutorServiceResourceDefinition.REJECT_POLICY_AD.parseAndSetParameter(value,addOperation,reader);
break;
default :
throw unexpectedAttribute(reader,i);
}
}
if (!required.isEmpty()) {
throw missingRequired(reader,required);
}
requireNoContent(reader);
final PathAddress address=subsystemPathAddress.append(EESubsystemModel.MANAGED_EXECUTOR_SERVICE,name);
addOperation.get(OP_ADDR).set(address.toModelNode());
operations.add(addOperation);
}

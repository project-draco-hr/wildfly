{
  File file=new File(System.getProperty("jboss.home"));
  file=new File(file,"standalone");
  file=new File(file,"data");
  file=new File(file,"audit-log.log");
  if (file.exists()) {
    file.delete();
  }
  ModelControllerClient client=managementClient.getControllerClient();
  ModelNode op=Util.createOperation(READ_RESOURCE_OPERATION,PathAddress.EMPTY_ADDRESS);
  ModelNode result=client.execute(op);
  Assert.assertEquals(SUCCESS,result.get(OUTCOME).asString());
  Assert.assertFalse(file.exists());
  PathAddress auditLogConfigAddress=PathAddress.pathAddress(CoreManagementResourceDefinition.PATH_ELEMENT,AccessAuditResourceDefinition.PATH_ELEMENT,AuditLogLoggerResourceDefinition.PATH_ELEMENT);
  op=Util.getWriteAttributeOperation(auditLogConfigAddress,AuditLogLoggerResourceDefinition.LOG_READ_ONLY.getName(),new ModelNode(true));
  result=client.execute(op);
  Assert.assertEquals(SUCCESS,result.get(OUTCOME).asString());
  op=Util.getWriteAttributeOperation(auditLogConfigAddress,AuditLogLoggerResourceDefinition.ENABLED.getName(),new ModelNode(true));
  result=client.execute(op);
  Assert.assertEquals(SUCCESS,result.get(OUTCOME).asString());
  Assert.assertTrue(file.exists());
  try {
    file.delete();
    op=Util.createOperation(READ_RESOURCE_OPERATION,PathAddress.EMPTY_ADDRESS);
    result=client.execute(op);
    Assert.assertEquals(SUCCESS,result.get(OUTCOME).asString());
    Assert.assertTrue(file.exists());
  }
  finally {
    file.delete();
    op=Util.getWriteAttributeOperation(auditLogConfigAddress,AuditLogLoggerResourceDefinition.ENABLED.getName(),new ModelNode(false));
    result=client.execute(op);
    Assert.assertEquals(SUCCESS,result.get(OUTCOME).asString());
    Assert.assertTrue(file.exists());
    file.delete();
    op=Util.createOperation(READ_RESOURCE_OPERATION,PathAddress.EMPTY_ADDRESS);
    result=client.execute(op);
    Assert.assertEquals(SUCCESS,result.get(OUTCOME).asString());
    Assert.assertFalse(file.exists());
  }
}

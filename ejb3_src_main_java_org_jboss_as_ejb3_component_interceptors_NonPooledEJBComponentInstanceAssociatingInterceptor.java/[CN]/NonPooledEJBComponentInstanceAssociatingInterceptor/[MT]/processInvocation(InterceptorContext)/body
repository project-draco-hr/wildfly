{
  final EJBComponent component=getComponent(context,EJBComponent.class);
  final ComponentInstance componentInstance=component.createInstance();
  context.putPrivateData(ComponentInstance.class,componentInstance);
  boolean discard=false;
  try {
    return context.proceed();
  }
 catch (  Exception ex) {
    final EJBComponent ejbComponent=(EJBComponent)component;
    if (ejbComponent.getApplicationException(ex.getClass(),context.getMethod()) != null) {
      throw ex;
    }
    if (ex instanceof ConcurrentAccessTimeoutException || ex instanceof ConcurrentAccessException) {
      throw ex;
    }
    if (ex instanceof RuntimeException || ex instanceof RemoteException) {
      discard=true;
    }
    throw ex;
  }
catch (  final Error e) {
    discard=true;
    throw e;
  }
catch (  final Throwable t) {
    discard=true;
    throw new RuntimeException(t);
  }
 finally {
    context.putPrivateData(ComponentInstance.class,null);
    if (!discard) {
      componentInstance.destroy();
    }
  }
}

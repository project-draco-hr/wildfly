{
  String protocol=transportBuilder.protocol();
  int port=transportBuilder.port();
  int nbThreads=transportBuilder.nbThreads();
  int backlog=transportBuilder.backlog();
  String address=transportBuilder.address();
  if (port == -1) {
    port=AvailablePortFinder.getNextAvailable(startPort);
    startPort=port + 1;
  }
  if (protocol.equalsIgnoreCase("TCP")) {
    Transport tcp=new TcpTransport(address,port,nbThreads,backlog);
    return tcp;
  }
 else   if (protocol.equalsIgnoreCase("UDP")) {
    UdpTransport udp=new UdpTransport(address,port);
    return udp;
  }
 else {
    throw new IllegalArgumentException(I18n.err(I18n.ERR_689,protocol));
  }
}

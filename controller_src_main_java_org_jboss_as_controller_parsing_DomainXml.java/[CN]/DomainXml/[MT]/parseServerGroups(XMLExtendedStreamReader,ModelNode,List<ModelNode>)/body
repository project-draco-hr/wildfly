{
  requireNoAttributes(reader);
  final Set<String> names=new HashSet<String>();
  while (reader.nextTag() != END_ELEMENT) {
    String name=null;
    String profile=null;
    final int count=reader.getAttributeCount();
    for (int i=0; i < count; i++) {
      final String value=reader.getAttributeValue(i);
      if (!isNoNamespaceAttribute(reader,i)) {
        throw ParseUtils.unexpectedAttribute(reader,i);
      }
 else {
        final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case NAME:
{
            if (name != null) {
              throw ParseUtils.duplicateAttribute(reader,attribute.getLocalName());
            }
            if (!names.add(value)) {
              throw ParseUtils.duplicateNamedElement(reader,value);
            }
            name=value;
            break;
          }
case PROFILE:
{
          if (profile != null) {
            throw ParseUtils.duplicateAttribute(reader,attribute.getLocalName());
          }
          profile=value;
          break;
        }
default :
      throw ParseUtils.unexpectedAttribute(reader,i);
  }
}
}
if (name == null) {
throw ParseUtils.missingRequired(reader,Collections.singleton(Attribute.NAME));
}
if (profile == null) {
throw ParseUtils.missingRequired(reader,Collections.singleton(Attribute.PROFILE));
}
final ModelNode groupAddress=new ModelNode().set(address);
groupAddress.add(ModelDescriptionConstants.SERVER_GROUP,name);
final ModelNode group=new ModelNode();
group.get(OP).set(ADD);
group.get(OP_ADDR).set(groupAddress);
group.get(PROFILE).set(profile);
list.add(group);
boolean sawDeployments=false;
while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
switch (Namespace.forUri(reader.getNamespaceURI())) {
case DOMAIN_1_0:
{
    final Element element=Element.forName(reader.getLocalName());
switch (element) {
case JVM:
{
        parseJvm(reader,groupAddress,list,new HashSet<String>());
        break;
      }
case SOCKET_BINDING_GROUP:
{
      parseSocketBindingGroupRef(reader,groupAddress,list);
      break;
    }
case DEPLOYMENTS:
{
    if (sawDeployments) {
      throw new XMLStreamException(element.getLocalName() + " already defined",reader.getLocation());
    }
    sawDeployments=true;
    parseDeployments(reader,groupAddress,list,true);
    break;
  }
case SYSTEM_PROPERTIES:
{
  parseSystemProperties(reader,groupAddress,list,false);
  break;
}
default :
throw ParseUtils.unexpectedElement(reader);
}
break;
}
default :
throw ParseUtils.unexpectedElement(reader);
}
}
}
}

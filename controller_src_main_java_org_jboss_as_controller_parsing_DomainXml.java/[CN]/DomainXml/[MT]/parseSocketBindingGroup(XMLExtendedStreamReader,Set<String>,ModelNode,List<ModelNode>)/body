{
  final Set<String> includedGroups=new HashSet<String>();
  final Set<String> socketBindings=new HashSet<String>();
  final String[] attrValues=requireAttributes(reader,Attribute.NAME.getLocalName(),Attribute.DEFAULT_INTERFACE.getLocalName());
  final String name=attrValues[0];
  final String defaultInterface=attrValues[1];
  final ModelNode groupAddress=new ModelNode().set(address);
  groupAddress.add(SOCKET_BINDING_GROUP,name);
  final ModelNode bindingGroupUpdate=new ModelNode();
  bindingGroupUpdate.get(OP_ADDR).set(groupAddress);
  bindingGroupUpdate.get(OP).set(ADD);
  bindingGroupUpdate.get(DEFAULT_INTERFACE).set(defaultInterface);
  final ModelNode includes=bindingGroupUpdate.get(INCLUDES);
  includes.setEmptyList();
  updates.add(bindingGroupUpdate);
  while (reader.nextTag() != END_ELEMENT) {
switch (Namespace.forUri(reader.getNamespaceURI())) {
case DOMAIN_1_0:
{
        final Element element=Element.forName(reader.getLocalName());
switch (element) {
case INCLUDE:
{
            final String includedGroup=readStringAttributeElement(reader,Attribute.SOCKET_BINDING_GROUP.getLocalName());
            if (!includedGroups.add(includedGroup)) {
              throw new XMLStreamException("Included socket-binding-group " + includedGroup + " already declared",reader.getLocation());
            }
            includes.add(includedGroup);
            break;
          }
case SOCKET_BINDING:
{
          final String bindingName=parseSocketBinding(reader,interfaces,groupAddress,defaultInterface,updates);
          if (!socketBindings.add(bindingName)) {
            throw new XMLStreamException("socket-binding " + bindingName + " already declared",reader.getLocation());
          }
          break;
        }
default :
      throw unexpectedElement(reader);
  }
  break;
}
default :
throw unexpectedElement(reader);
}
}
}

{
  PathAddress pa=PathAddress.pathAddress(PathElement.pathElement(HOST,"localhost"),PathElement.pathElement(SERVER_CONFIG,"server-one"));
  final MockOperationContext operationContext=getOperationContext(rollback,pa);
  String socketBindingGroupName;
  if (socketBindingGroupOverride == SocketBindingGroupOverrideType.GOOD) {
    socketBindingGroupName="binding-two";
  }
 else   if (socketBindingGroupOverride == SocketBindingGroupOverrideType.BAD) {
    socketBindingGroupName="bad-socket-binding-group";
  }
 else {
    socketBindingGroupName=null;
  }
  final ModelNode operation=new ModelNode();
  operation.get(OP_ADDR).set(pa.toModelNode());
  operation.get(OP).set(WRITE_ATTRIBUTE_OPERATION);
  operation.get(NAME).set(SOCKET_BINDING_GROUP);
  operation.get(VALUE).set(socketBindingGroupName != null ? new ModelNode(socketBindingGroupName) : new ModelNode());
  ServerRestartRequiredServerConfigWriteAttributeHandler.createSocketBindingGroupInstance(new MockHostControllerInfo(master)).execute(operationContext,operation);
  if (master && socketBindingGroupOverride == SocketBindingGroupOverrideType.BAD) {
    Assert.fail();
  }
  Assert.assertFalse(operationContext.isReloadRequired());
}

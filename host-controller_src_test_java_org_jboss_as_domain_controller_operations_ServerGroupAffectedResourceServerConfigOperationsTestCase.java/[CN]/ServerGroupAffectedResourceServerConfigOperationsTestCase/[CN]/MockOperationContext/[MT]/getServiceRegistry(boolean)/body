{
  return new ServiceRegistry(){
    @Override public List<ServiceName> getServiceNames(){
      return null;
    }
    @Override public ServiceController<?> getService(    ServiceName name){
      return null;
    }
    @Override public ServiceController<?> getRequiredService(    ServiceName name) throws ServiceNotFoundException {
      if (name.equals(MasterDomainControllerClient.SERVICE_NAME)) {
        return new ServiceController<MasterDomainControllerClient>(){
          @Override public void addListener(          ServiceListener<? super MasterDomainControllerClient> arg0){
          }
          @Override public MasterDomainControllerClient awaitValue() throws IllegalStateException, InterruptedException {
            return null;
          }
          @Override public MasterDomainControllerClient awaitValue(          long arg0,          TimeUnit arg1) throws IllegalStateException, InterruptedException, TimeoutException {
            return null;
          }
          @Override public boolean compareAndSetMode(          org.jboss.msc.service.ServiceController.Mode arg0,          org.jboss.msc.service.ServiceController.Mode arg1){
            return false;
          }
          @Override public ServiceName[] getAliases(){
            return null;
          }
          @Override public Set<ServiceName> getImmediateUnavailableDependencies(){
            return null;
          }
          @Override public org.jboss.msc.service.ServiceController.Mode getMode(){
            return null;
          }
          @Override public ServiceName getName(){
            return null;
          }
          @Override public ServiceController<?> getParent(){
            return null;
          }
          @Override public Service<MasterDomainControllerClient> getService() throws IllegalStateException {
            return null;
          }
          @Override public ServiceContainer getServiceContainer(){
            return null;
          }
          @Override public StartException getStartException(){
            return null;
          }
          @Override public org.jboss.msc.service.ServiceController.State getState(){
            return null;
          }
          @Override public org.jboss.msc.service.ServiceController.Substate getSubstate(){
            return null;
          }
          @Override public MasterDomainControllerClient getValue() throws IllegalStateException {
            return new MasterDomainControllerClient(){
              @Override public void close() throws IOException {
              }
              @Override public AsyncFuture<ModelNode> executeAsync(              Operation operation,              OperationMessageHandler messageHandler){
                return null;
              }
              @Override public AsyncFuture<ModelNode> executeAsync(              ModelNode operation,              OperationMessageHandler messageHandler){
                return null;
              }
              @Override public ModelNode execute(              Operation operation,              OperationMessageHandler messageHandler) throws IOException {
                return null;
              }
              @Override public ModelNode execute(              ModelNode operation,              OperationMessageHandler messageHandler) throws IOException {
                return null;
              }
              @Override public ModelNode execute(              Operation operation) throws IOException {
                return null;
              }
              @Override public ModelNode execute(              ModelNode operation) throws IOException {
                return null;
              }
              @Override public void unregister(){
              }
              @Override public void fetchDomainWideConfiguration(){
              }
              @Override public void register() throws IOException {
              }
              @Override public HostFileRepository getRemoteFileRepository(){
                return null;
              }
              @Override public void pullDownDataForUpdatedServerConfigAndApplyToModel(              OperationContext context,              String serverName,              String serverGroupName,              String socketBindingGroupName) throws OperationFailedException {
                if (root.getChild(PathElement.pathElement(SERVER_GROUP,serverGroupName)) == null) {
                  root.registerChild(PathElement.pathElement(SERVER_GROUP,serverGroupName),Resource.Factory.create());
                }
                if (socketBindingGroupName != null) {
                  if (root.getChild(PathElement.pathElement(SOCKET_BINDING_GROUP,socketBindingGroupName)) == null) {
                    root.registerChild(PathElement.pathElement(SOCKET_BINDING_GROUP,socketBindingGroupName),Resource.Factory.create());
                  }
                }
              }
            }
;
          }
          @Override public void removeListener(          ServiceListener<? super MasterDomainControllerClient> arg0){
          }
          @Override public void retry(){
          }
          @Override public void setMode(          org.jboss.msc.service.ServiceController.Mode arg0){
          }
        }
;
      }
      throw new ServiceNotFoundException();
    }
  }
;
}

{
  ModelNode applyDomainModel=new ModelNode();
  applyDomainModel.get(OP).set(ApplyRemoteMasterDomainModelHandler.OPERATION_NAME);
  applyDomainModel.get(OPERATION_HEADERS,"execute-for-coordinator").set(true);
  applyDomainModel.get(OP_ADDR).setEmptyList();
  applyDomainModel.get(DOMAIN_MODEL).set(resources);
  final IgnoredDomainResourceRegistry ignoredResourceRegistry=createIgnoredDomainResourceRegistry(ignoredResources);
  ModelNode result=internalExecute(applyDomainModel,new OperationStepHandler(){
    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {
      try {
        final ModelNode domainModel=operation.get(DOMAIN_MODEL);
        final ModelNode startRoot=Resource.Tools.readModel(context.readResourceFromRoot(PathAddress.EMPTY_ADDRESS));
        final Resource rootResource=context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS);
        for (        final ModelNode resourceDescription : domainModel.asList()) {
          final PathAddress resourceAddress=PathAddress.pathAddress(resourceDescription.require("domain-resource-address"));
          if (ignoredResourceRegistry.isResourceExcluded(resourceAddress)) {
            continue;
          }
          final Resource resource=getResource(resourceAddress,rootResource,context);
          if (resourceAddress.size() == 1 && resourceAddress.getElement(0).getKey().equals(EXTENSION)) {
            continue;
          }
          resource.writeModel(resourceDescription.get("domain-resource-model"));
        }
        context.completeStep();
      }
 catch (      Exception e) {
        throw new OperationFailedException(e.getMessage());
      }
    }
    private Resource getResource(    PathAddress resourceAddress,    Resource rootResource,    OperationContext context){
      if (resourceAddress.size() == 0) {
        return rootResource;
      }
      Resource temp=rootResource;
      int idx=0;
      for (      PathElement element : resourceAddress) {
        temp=temp.getChild(element);
        if (temp == null) {
          if (idx == 0) {
            String type=element.getKey();
            if (type.equals(EXTENSION)) {
              continue;
            }
 else             if (type.equals(MANAGEMENT_CLIENT_CONTENT) && element.getValue().equals(ROLLOUT_PLANS)) {
              temp=new ManagedDMRContentTypeResource(element,ROLLOUT_PLAN,null,contentRepository);
              context.addResource(resourceAddress,temp);
            }
          }
          if (temp == null) {
            temp=context.createResource(resourceAddress);
          }
          break;
        }
        idx++;
      }
      return temp;
    }
  }
);
  if (!SUCCESS.equals(result.get(OUTCOME).asString())) {
    throw new RuntimeException(result.get(FAILURE_DESCRIPTION).asString());
  }
}

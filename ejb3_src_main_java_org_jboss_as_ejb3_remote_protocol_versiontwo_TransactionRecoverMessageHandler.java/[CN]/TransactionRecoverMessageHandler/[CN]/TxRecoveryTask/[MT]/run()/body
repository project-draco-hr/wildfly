{
  Xid[] xidsToRecover=new Xid[0];
  try {
    xidsToRecover=transactionsRepository.getXidsToRecoverForParentNode(this.txParentNodeName,this.recoveryFlags);
  }
 catch (  Throwable t) {
    try {
      EjbLogger.REMOTE_LOGGER.errorDuringTransactionRecovery(t);
      TransactionRecoverMessageHandler.this.writeException(channelAssociation,marshallerFactory,invocationId,t,null);
    }
 catch (    IOException e) {
      EjbLogger.REMOTE_LOGGER.couldNotWriteOutToChannel(e);
      IoUtils.safeClose(channelAssociation.getChannel());
    }
    return;
  }
  try {
    if (EjbLogger.REMOTE_LOGGER.isTraceEnabled()) {
      EjbLogger.REMOTE_LOGGER.trace("Returning " + xidsToRecover.length + " Xid(s) to recover for parent node: "+ txParentNodeName);
      for (      final Xid xid : xidsToRecover) {
        EjbLogger.REMOTE_LOGGER.trace("EJB Xid to recover " + XAHelper.xidToString(xid));
      }
    }
    this.writeResponse(xidsToRecover);
  }
 catch (  IOException e) {
    EjbLogger.REMOTE_LOGGER.couldNotWriteInvocationSuccessMessage(e);
    IoUtils.safeClose(this.channelAssociation.getChannel());
  }
}

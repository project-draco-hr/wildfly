{
  boolean disabled=config.get(DISABLED).asBoolean(false);
  if (disabled) {
    return null;
  }
  final io.undertow.servlet.api.ServletInfo jspServlet=new ServletInfo("Default JSP Servlet",JspServlet.class).addMapping("*.jsp").addMapping("*.jspx");
  jspServlet.addInitParam("development",config.require(DEVELOPMENT).asString());
  jspServlet.addInitParam("keepgenerated",config.require(KEEP_GENERATED).asString());
  jspServlet.addInitParam("trimSpaces",config.require(TRIM_SPACES).asString());
  jspServlet.addInitParam("enablePooling",config.require(TAG_POOLING).asString());
  jspServlet.addInitParam("mappedfile",config.require(MAPPED_FILE).asString());
  jspServlet.addInitParam("checkInterval",config.require(CHECK_INTERVAL).asString());
  jspServlet.addInitParam("modificationTestInterval",config.require(MODIFICATION_TEST_INTERVAL).asString());
  jspServlet.addInitParam("recompileOnFail",config.require(RECOMPILE_ON_FAIL).asString());
  jspServlet.addInitParam("suppressSmap",Boolean.toString(!config.require(SMAP).asBoolean()));
  jspServlet.addInitParam("dumpSmap",config.require(DUMP_SMAP).asString());
  jspServlet.addInitParam("genStringAsCharArray",config.require(GENERATE_STRINGS_AS_CHAR_ARRAYS).asString());
  jspServlet.addInitParam("errorOnUseBeanInvalidClassAttribute",config.require(ERROR_ON_USE_BEAN_INVALID_CLASS_ATTRIBUTE).asString());
  if (config.hasDefined(SCRATCH_DIR)) {
    jspServlet.addInitParam("scratchdir",config.require(SCRATCH_DIR).asString());
  }
  jspServlet.addInitParam("compilerSourceVM",config.require(SOURCE_VM).asString());
  jspServlet.addInitParam("compilerTargetVM",config.require(TARGET_VM).asString());
  jspServlet.addInitParam("javaEncoding",config.require(JAVA_ENCODING).asString());
  jspServlet.addInitParam("xpoweredBy",config.require(X_POWERED_BY).asString());
  jspServlet.addInitParam("displaySourceFragment",config.require(DISPLAY_SOURCE_FRAGMENT).asString());
  return jspServlet;
}

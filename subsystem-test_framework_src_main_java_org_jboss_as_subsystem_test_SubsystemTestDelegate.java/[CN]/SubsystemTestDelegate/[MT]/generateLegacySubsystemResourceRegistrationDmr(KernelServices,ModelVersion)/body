{
  KernelServices legacy=kernelServices.getLegacyServices(modelVersion);
  PathAddress pathAddress=PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM,mainSubsystemName));
  ModelNode desc=((KernelServicesInternal)legacy).readFullModelDescription(pathAddress.toModelNode());
  File file=new File("target/test-classes").getAbsoluteFile();
  Assert.assertTrue(file.exists());
  for (  String part : TransformerRegistry.class.getPackage().getName().split("\\.")) {
    file=new File(file,part);
    if (!file.exists()) {
      file.mkdir();
    }
  }
  PrintWriter pw=new PrintWriter(new File(file,mainSubsystemName + "-" + modelVersion.getMajor()+ "."+ modelVersion.getMinor()+ "."+ modelVersion.getMicro()+ ".dmr"));
  try {
    desc.writeString(pw,false);
  }
  finally {
    IoUtils.safeClose(pw);
  }
}

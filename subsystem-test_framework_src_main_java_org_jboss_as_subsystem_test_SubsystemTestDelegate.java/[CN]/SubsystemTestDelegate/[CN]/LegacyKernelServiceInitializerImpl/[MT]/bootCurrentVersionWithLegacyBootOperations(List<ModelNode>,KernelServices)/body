{
  List<ModelNode> clonedBootOperations=new ArrayList<ModelNode>();
  for (  ModelNode op : bootOperations) {
    ModelNode cloned=reverseCheckOperationFixer.fixOperation(op.clone());
    if (cloned != null) {
      clonedBootOperations.add(cloned);
    }
  }
  KernelServices reverseServices=createKernelServicesBuilder(reverseCheckConfig).setBootOperations(clonedBootOperations).build();
  if (reverseServices.getBootError() != null) {
    Throwable t=reverseServices.getBootError();
    if (t instanceof Exception) {
      throw (Exception)t;
    }
    throw new Exception(t);
  }
  Assert.assertTrue(reverseServices.isSuccessfulBoot());
  ModelNode reverseSubsystem=reverseServices.readWholeModel().get(SUBSYSTEM,getMainSubsystemName());
  if (reverseCheckModelFixer != null) {
    reverseSubsystem=reverseCheckModelFixer.fixModel(reverseSubsystem);
  }
  ModelTestUtils.compare(mainServices.readWholeModel().get(SUBSYSTEM,getMainSubsystemName()),reverseSubsystem);
  return reverseServices;
}

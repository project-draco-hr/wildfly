{
  if (!skipReverseCheck) {
    bootCurrentVersionWithLegacyBootOperations(bootOperations,mainServices);
  }
  classLoaderBuilder.addParentFirstClassPattern("org.jboss.as.subsystem.bridge.shared.*");
  classLoaderBuilder.addMavenResourceURL("org.jboss.as:jboss-as-subsystem-test-framework:" + ModelTestControllerVersion.CurrentVersion.VERSION);
  classLoaderBuilder.addMavenResourceURL("org.jboss.as:jboss-as-model-test:" + ModelTestControllerVersion.CurrentVersion.VERSION);
  if (testControllerVersion != ModelTestControllerVersion.MASTER) {
    classLoaderBuilder.addRecursiveMavenResourceURL("org.jboss.as:jboss-as-server:" + testControllerVersion.getMavenGavVersion());
    classLoaderBuilder.addParentFirstClassPattern("__redirected.*");
    classLoaderBuilder.addParentFirstClassPattern("org.jboss.modules.*");
    classLoaderBuilder.addMavenResourceURL("org.jboss.as:jboss-as-subsystem-test-controller-" + testControllerVersion.getTestControllerVersion() + ":"+ ModelTestControllerVersion.CurrentVersion.VERSION);
  }
  ClassLoader legacyCl=classLoaderBuilder.build();
  ScopedKernelServicesBootstrap scopedBootstrap=new ScopedKernelServicesBootstrap(legacyCl);
  return scopedBootstrap.createKernelServices(mainSubsystemName,extensionClassName != null ? extensionClassName : mainExtension.getClass().getName(),additionalInit,getOperationValidationFilter(),bootOperations,modelVersion,persistXml);
}

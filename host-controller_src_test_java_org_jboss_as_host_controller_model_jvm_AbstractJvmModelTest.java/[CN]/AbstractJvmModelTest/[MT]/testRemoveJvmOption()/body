{
  testEmptyAddSubsystem();
  executeForResult(createAddJvmOptionOperation("-Xoption1"));
  executeForResult(createAddJvmOptionOperation("-Xoption2"));
  executeForResult(createAddJvmOptionOperation("-Xoption3"));
  ModelNode resource=readModel(true);
  Assert.assertEquals(new ModelNode().add("-Xoption1").add("-Xoption2").add("-Xoption3"),resource.get(JVM,"test","jvm-options"));
  executeForResult(createRemoveJvmOptionOperation("-Xoption2"));
  Assert.assertEquals(new ModelNode().add("-Xoption1").add("-Xoption3"),readModel(true).get(JVM,"test","jvm-options"));
  executeForResult(createRemoveJvmOptionOperation("-Xoption2"));
  Assert.assertEquals(new ModelNode().add("-Xoption1").add("-Xoption3"),readModel(true).get(JVM,"test","jvm-options"));
  executeForResult(createRemoveJvmOptionOperation("-Xoption1"));
  Assert.assertEquals(new ModelNode().add("-Xoption3"),readModel(true).get(JVM,"test","jvm-options"));
  executeForResult(createRemoveJvmOptionOperation("-Xoption3"));
  Assert.assertEquals(new ModelNode().setEmptyList(),readModel(true).get(JVM,"test","jvm-options"));
}

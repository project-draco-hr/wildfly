{
  try {
    if (scanner == null) {
      final PathManager pathManager=pathManagerValue.getValue();
      final String pathName=pathManager.resolveRelativePathEntry(path,relativeTo);
      File relativePath=null;
      if (relativeTo != null) {
        relativePath=new File(pathManager.getPathEntry(relativeTo).resolvePath());
        callbackHandle=pathManager.registerCallback(pathName,PathManager.ReloadServerCallback.create(),PathManager.Event.UPDATED,PathManager.Event.REMOVED);
      }
      final FileSystemDeploymentService scanner=new FileSystemDeploymentService(relativeTo,new File(pathName),relativePath,scheduledExecutorValue.getValue());
      scanner.setScanInterval(unit.toMillis(interval));
      scanner.setAutoDeployExplodedContent(autoDeployExploded);
      scanner.setAutoDeployZippedContent(autoDeployZipped);
      scanner.setAutoDeployXMLContent(autoDeployXml);
      if (deploymentTimeout != null) {
        scanner.setDeploymentTimeout(deploymentTimeout);
      }
      this.scanner=scanner;
    }
    if (enabled) {
      scanner.startScanner(new DefaultDeploymentOperations(controllerValue.getValue().createClient(scheduledExecutorValue.getValue())));
    }
  }
 catch (  Exception e) {
    throw new StartException(e);
  }
}

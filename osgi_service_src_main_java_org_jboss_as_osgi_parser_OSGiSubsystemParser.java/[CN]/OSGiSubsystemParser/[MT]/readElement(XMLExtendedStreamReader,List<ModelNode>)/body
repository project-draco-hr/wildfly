{
  ModelNode address=new ModelNode();
  address.add(SUBSYSTEM,OSGiExtension.SUBSYSTEM_NAME);
  address.protect();
  ModelNode activation=parseActivationAttribute(reader,address);
  operations.add(activation);
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
switch (Namespace.forUri(reader.getNamespaceURI())) {
case OSGI_1_0:
{
        final Element element=Element.forName(reader.getLocalName());
switch (element) {
case CONFIGURATION:
{
            List<ModelNode> result=parseConfigurationElement(reader,address);
            operations.addAll(result);
            break;
          }
case PROPERTIES:
{
          List<ModelNode> result=parsePropertiesElement(reader,address,operations);
          operations.addAll(result);
          break;
        }
case CAPABILITIES:
{
        List<ModelNode> result=parseModulesElement(reader,address);
        operations.addAll(result);
        break;
      }
default :
    throw unexpectedElement(reader);
}
break;
}
default :
throw unexpectedElement(reader);
}
}
}

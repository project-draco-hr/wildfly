{
  ModelNode address=new ModelNode();
  address.add(SUBSYSTEM,OSGiExtension.SUBSYSTEM_NAME);
  address.protect();
  final ModelNode operation=new ModelNode();
  operation.get(OP).set(ADD);
  operation.get(OP_ADDR).set(address);
  parseActivationAttribute(reader,operation);
  operations.add(operation);
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
switch (Namespace.forUri(reader.getNamespaceURI())) {
case OSGI_1_0:
{
        final Element element=Element.forName(reader.getLocalName());
switch (element) {
case CONFIGURATION:
{
            ModelNode configurations=parseConfigurationElement(reader,address);
            if (configurations != null) {
              operations.add(configurations);
            }
            break;
          }
case PROPERTIES:
{
          operations.addAll(parsePropertiesElement(reader,address,operations));
          break;
        }
case MODULES:
{
        operations.addAll(parseModulesElement(reader,address));
        break;
      }
default :
    throw unexpectedElement(reader);
}
break;
}
default :
throw unexpectedElement(reader);
}
}
}

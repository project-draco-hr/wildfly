{
  context.startSubsystemElement(Namespace.CURRENT.getUriString(),false);
  ModelNode node=context.getModelNode();
  if (has(node,ACTIVATION)) {
    writeAttribute(writer,Attribute.ACTIVATION,node.get(ACTIVATION));
  }
  if (has(node,CONFIGURATION)) {
    ModelNode configuration=node.get(CONFIGURATION);
    for (    String pid : new TreeSet<String>(configuration.keys())) {
      writer.writeStartElement(Element.CONFIGURATION.getLocalName());
      writer.writeAttribute(Attribute.PID.getLocalName(),pid);
      ModelNode entries=configuration.get(pid).get(ENTRIES);
      if (entries.isDefined()) {
        for (        String propKey : entries.keys()) {
          String propValue=entries.get(propKey).asString();
          writer.writeStartElement(Element.PROPERTY.getLocalName());
          writer.writeAttribute(Attribute.NAME.getLocalName(),propKey);
          writer.writeAttribute(Attribute.VALUE.getLocalName(),propValue);
          writer.writeEndElement();
        }
      }
      writer.writeEndElement();
    }
  }
  if (has(node,FRAMEWORK_PROPERTY)) {
    writer.writeStartElement(Element.PROPERTIES.getLocalName());
    ModelNode properties=node.get(FRAMEWORK_PROPERTY);
    for (    String key : new TreeSet<String>(properties.keys())) {
      String val=properties.get(key).get(VALUE).asString();
      writer.writeStartElement(Element.PROPERTY.getLocalName());
      writer.writeAttribute(Attribute.NAME.getLocalName(),key);
      writer.writeCharacters(val);
      writer.writeEndElement();
    }
    writer.writeEndElement();
  }
  if (has(node,CAPABILITY)) {
    writer.writeStartElement(Element.CAPABILITIES.getLocalName());
    ModelNode modules=node.get(CAPABILITY);
    for (    String key : modules.keys()) {
      ModelNode moduleNode=modules.get(key);
      writer.writeEmptyElement(Element.CAPABILITY.getLocalName());
      writer.writeAttribute(Attribute.NAME.getLocalName(),key);
      if (moduleNode.has(STARTLEVEL)) {
        writeAttribute(writer,Attribute.STARTLEVEL,moduleNode.require(STARTLEVEL));
      }
    }
    writer.writeEndElement();
  }
  writer.writeEndElement();
}

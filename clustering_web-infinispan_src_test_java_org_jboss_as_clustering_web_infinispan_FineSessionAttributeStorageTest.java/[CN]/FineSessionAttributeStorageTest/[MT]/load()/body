{
  @SuppressWarnings("unchecked") Map<Object,Object> map=mock(Map.class);
  Object marshalledAttribute=new Object();
  Map.Entry<Object,Object> nonAttributeEntry=new AbstractMap.SimpleImmutableEntry<Object,Object>(new Object(),new Object());
  Map.Entry<Object,Object> attributeEntry=new AbstractMap.SimpleImmutableEntry<Object,Object>("key",marshalledAttribute);
  @SuppressWarnings("unchecked") List<Map.Entry<Object,Object>> entries=Arrays.asList(nonAttributeEntry,attributeEntry);
  when(map.entrySet()).thenReturn(new HashSet<Map.Entry<Object,Object>>(entries));
  when(this.marshaller.unmarshal(same(marshalledAttribute))).thenReturn("value");
  Map<String,Object> result=this.storage.load(map);
  assertNotNull(result);
  assertEquals(1,result.size());
  assertTrue(result.toString(),result.containsKey("key"));
  assertEquals("value",result.get("key"));
}

{
  serviceRefUMDM.setServiceRefName(serviceRefMD.getName());
  serviceRefUMDM.setServiceRefType(serviceRefMD.getServiceRefType());
  serviceRefUMDM.setServiceInterface(serviceRefMD.getServiceInterface());
  serviceRefUMDM.setWsdlFile(serviceRefMD.getWsdlFile());
  serviceRefUMDM.setMappingFile(serviceRefMD.getJaxrpcMappingFile());
  serviceRefUMDM.setServiceQName(serviceRefMD.getServiceQname());
  final Collection<? extends PortComponentRef> portComponentsMD=serviceRefMD.getPortComponentRef();
  if (portComponentsMD != null) {
    for (    final PortComponentRef portComponentMD : portComponentsMD) {
      final UnifiedPortComponentRefMetaData portComponentUMDM=getUnifiedPortComponentRefMetaData(serviceRefUMDM,portComponentMD);
      if (portComponentUMDM.getServiceEndpointInterface() != null || portComponentUMDM.getPortQName() != null) {
        serviceRefUMDM.addPortComponentRef(portComponentUMDM);
      }
 else {
        ROOT_LOGGER.ignoringPortComponentRef(portComponentUMDM);
      }
    }
  }
  final Collection<ServiceReferenceHandlerMetaData> handlersMD=serviceRefMD.getHandlers();
  if (handlersMD != null) {
    for (    final ServiceReferenceHandlerMetaData handlerMD : handlersMD) {
      final UnifiedHandlerMetaData handlerUMDM=getUnifiedHandlerMetaData(handlerMD);
      serviceRefUMDM.addHandler(handlerUMDM);
    }
  }
  ServiceReferenceHandlerChainsMetaData handlerChainsMD=serviceRefMD.getHandlerChains();
  if (handlerChainsMD != null) {
    final UnifiedHandlerChainsMetaData handlerChainsUMDM=getUnifiedHandlerChainsMetaData(handlerChainsMD);
    serviceRefUMDM.setHandlerChains(handlerChainsUMDM);
  }
  if (serviceRefMD instanceof JBossServiceReferenceMetaData) {
    processUnifiedJBossServiceRefMetaData(serviceRefUMDM,serviceRefMD);
  }
  serviceRefUMDM.setType(ServiceRefType.JAXWS);
  return serviceRefUMDM;
}

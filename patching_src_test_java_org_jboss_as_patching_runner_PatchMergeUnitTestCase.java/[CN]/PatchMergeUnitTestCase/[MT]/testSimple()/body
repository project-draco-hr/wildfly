{
  final RollbackInfo patch01=createRollbackInfo("patch01",two,one);
  final RollbackInfo patch02=createRollbackInfo("patch02",three,two);
  final Map<Location,PatchingTasks.ContentTaskDefinition> defs=process(patch02,patch01);
  Assert.assertEquals(1,defs.size());
  final PatchingTasks.ContentTaskDefinition def=defs.get(new Location(new MiscContentItem(name,path,one)));
  Assert.assertNotNull(def);
  Assert.assertFalse(def.hasConflicts());
  Assert.assertEquals(one,def.getTarget().getItem().getContentHash());
  Assert.assertEquals(two,def.getTarget().getTargetHash());
  Assert.assertEquals(three,def.getLatest().getTargetHash());
  Assert.assertEquals(two,def.getLatest().getItem().getContentHash());
  final ContentModification modification=PatchingTaskDescription.resolveDefinition(def);
  Assert.assertEquals(one,modification.getItem().getContentHash());
  Assert.assertEquals(three,modification.getTargetHash());
}

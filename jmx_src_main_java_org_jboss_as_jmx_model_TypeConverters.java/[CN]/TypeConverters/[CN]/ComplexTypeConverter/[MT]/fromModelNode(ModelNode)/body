{
  if (node == null || !node.isDefined()) {
    return null;
  }
  final OpenType<?> openType=getOpenType();
  if (openType instanceof CompositeType) {
    final CompositeType compositeType=(CompositeType)openType;
    final Map<String,Object> items=new HashMap<String,Object>();
    for (    String attrName : compositeType.keySet()) {
      TypeConverter converter=getConverter(typeNode.get(attrName,TYPE),typeNode.get(attrName,VALUE_TYPE));
      try {
        items.put(attrName,converter.fromModelNode(node.get(attrName)));
      }
 catch (      Exception e) {
        System.out.println("xxx");
      }
    }
    try {
      return new CompositeDataSupport(compositeType,items);
    }
 catch (    OpenDataException e) {
      throw new RuntimeException(e);
    }
  }
 else {
    return node.toJSONString(false);
  }
}

{
  final ModelNode compositeOp=new ModelNode();
  compositeOp.get(OP).set(COMPOSITE);
  compositeOp.get(OP_ADDR).setEmptyList();
  ModelNode steps=compositeOp.get(STEPS);
  ModelNode mappingAddOperation=Util.createAddOperation(PathAddress.pathAddress(parentNode.get(OP_ADDR)).append(LDAP_STORE_MAPPING.getName(),this.type));
  mappingAddOperation.get(COMMON_CODE.getName()).set(this.type);
  if (this.baseDn != null) {
    mappingAddOperation.get(LDAP_STORE_BASE_DN_SUFFIX.getName()).set(this.baseDn);
  }
  if (this.objectClass != null) {
    StringBuilder objectClassesBuilder=new StringBuilder();
    for (    String objectClass : this.objectClass) {
      if (objectClassesBuilder.length() > 0) {
        objectClassesBuilder.append(",");
      }
      objectClassesBuilder.append(objectClass);
    }
    mappingAddOperation.get(LDAP_STORE_MAPPING_OBJECT_CLASSES.getName()).set(objectClassesBuilder.toString());
  }
  if (this.relatesTo != null) {
    mappingAddOperation.get(LDAP_STORE_MAPPING_RELATES_TO.getName()).set(this.relatesTo);
  }
  steps.add(mappingAddOperation);
  for (  LdapAttributeMapping attribute : this.attributes) {
    steps.add(attribute.createAddOperation(mappingAddOperation));
  }
  return compositeOp;
}

{
  final ModelNode address=new ModelNode();
  address.add(SUBSYSTEM,SUBSYSTEM_NAME);
  address.protect();
  final ModelNode subsystem=Util.getEmptyOperation(ADD,address);
  list.add(subsystem);
  requireNoAttributes(reader);
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
    boolean doneWorkerThreadPool=false;
switch (Namespace.forUri(reader.getNamespaceURI())) {
case REMOTING_1_0:
{
        final Element element=Element.forName(reader.getLocalName());
switch (element) {
case WORKER_THREAD_POOL:
          if (doneWorkerThreadPool) {
            throw duplicateNamedElement(reader,Element.WORKER_THREAD_POOL.getLocalName());
          }
        doneWorkerThreadPool=true;
      parseWorkerThreadPool(reader,subsystem);
    break;
case CONNECTOR:
{
    parseConnector(reader,address,list);
    break;
  }
default :
{
  throw unexpectedElement(reader);
}
}
break;
}
default :
{
throw unexpectedElement(reader);
}
}
}
}

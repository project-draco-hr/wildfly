{
  final SubsystemRegistration registration=context.registerSubsystem(SUBSYSTEM_NAME,MANAGEMENT_API_MAJOR_VERSION,MANAGEMENT_API_MINOR_VERSION,MANAGEMENT_API_MICRO_VERSION);
  registration.registerXMLElementWriter(RemotingSubsystem11Parser.INSTANCE);
  final ManagementResourceRegistration subsystem=registration.registerSubsystemModel(new RemotingSubsystemRootResource(context.getProcessType()));
  subsystem.registerOperationHandler(GenericSubsystemDescribeHandler.DEFINITION,GenericSubsystemDescribeHandler.INSTANCE);
  final ManagementResourceRegistration connector=subsystem.registerSubModel(ConnectorResource.INSTANCE);
  connector.registerSubModel(PropertyResource.INSTANCE_CONNECTOR);
  final ManagementResourceRegistration sasl=connector.registerSubModel(SaslResource.INSTANCE);
  sasl.registerSubModel(SaslPolicyResource.INSTANCE);
  sasl.registerSubModel(PropertyResource.INSTANCE_CONNECTOR);
  subsystem.registerSubModel(RemoteOutboundConnectionResourceDefinition.INSTANCE);
  subsystem.registerSubModel(LocalOutboundConnectionResourceDefinition.INSTANCE);
  subsystem.registerSubModel(GenericOutboundConnectionResourceDefinition.INSTANCE);
  if (context.isRegisterTransformers()) {
    registerTransformers_1_1(registration);
  }
}

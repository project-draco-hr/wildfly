{
  ResourceTransformationDescriptionBuilder builder=ResourceTransformationDescriptionBuilder.Factory.createSubsystemInstance();
  builder.getAttributeBuilder().addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,RemotingSubsystemRootResource.ATTRIBUTES);
  builder.rejectChildResource(HttpConnectorResource.PATH);
  ResourceTransformationDescriptionBuilder connector=builder.addChildResource(ConnectorResource.PATH);
  connector.addChildResource(PropertyResource.PATH).getAttributeBuilder().addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,PropertyResource.VALUE);
  ResourceTransformationDescriptionBuilder sasl=connector.addChildResource(SaslResource.SASL_CONFIG_PATH);
  sasl.getAttributeBuilder().addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,SaslResource.ATTRIBUTES);
  sasl.addChildResource(SaslPolicyResource.INSTANCE).getAttributeBuilder().addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,SaslPolicyResource.ATTRIBUTES);
  sasl.addChildResource(PropertyResource.PATH).getAttributeBuilder().addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,PropertyResource.VALUE);
  protocolTransform(builder.addChildResource(RemoteOutboundConnectionResourceDefinition.ADDRESS).getAttributeBuilder()).addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,RemoteOutboundConnectionResourceDefinition.USERNAME).end().addChildResource(PropertyResource.PATH).getAttributeBuilder().addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,PropertyResource.VALUE).end();
  builder.addChildResource(LocalOutboundConnectionResourceDefinition.ADDRESS).addChildResource(PropertyResource.PATH).getAttributeBuilder().addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,PropertyResource.VALUE).end();
  builder.addChildResource(GenericOutboundConnectionResourceDefinition.ADDRESS).addChildResource(PropertyResource.PATH).getAttributeBuilder().addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,PropertyResource.VALUE).end();
  TransformationDescription.Tools.register(builder.build(),registration,VERSION_1_1);
}

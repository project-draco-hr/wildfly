{
  DefaultHttpClient client=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient();
  try {
    HttpResponse response=client.execute(new HttpGet(SessionOperationServlet.createSetURI(baseURL1,"a")));
    try {
      Assert.assertTrue(response.containsHeader(SessionOperationServlet.CREATED_SESSIONS));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.DESTROYED_SESSIONS));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.ADDED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.REPLACED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.REMOVED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.BOUND_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.UNBOUND_ATTRIBUTES));
      Assert.assertEquals(response.getFirstHeader(SessionOperationServlet.SESSION_ID).getValue(),response.getFirstHeader(SessionOperationServlet.CREATED_SESSIONS).getValue());
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    response=client.execute(new HttpGet(SessionOperationServlet.createSetURI(baseURL1,"a","1")));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertTrue(response.containsHeader(SessionOperationServlet.SESSION_ID));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.CREATED_SESSIONS));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.DESTROYED_SESSIONS));
      Assert.assertTrue(response.containsHeader(SessionOperationServlet.ADDED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.REPLACED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.REMOVED_ATTRIBUTES));
      Assert.assertTrue(response.containsHeader(SessionOperationServlet.BOUND_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.UNBOUND_ATTRIBUTES));
      Assert.assertEquals("a",response.getFirstHeader(SessionOperationServlet.ADDED_ATTRIBUTES).getValue());
      Assert.assertEquals("1",response.getFirstHeader(SessionOperationServlet.BOUND_ATTRIBUTES).getValue());
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    response=client.execute(new HttpGet(SessionOperationServlet.createGetURI(baseURL2,"a")));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertTrue(response.containsHeader(SessionOperationServlet.RESULT));
      Assert.assertEquals("1",response.getFirstHeader(SessionOperationServlet.RESULT).getValue());
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.CREATED_SESSIONS));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.DESTROYED_SESSIONS));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.ADDED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.REPLACED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.REMOVED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.BOUND_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.UNBOUND_ATTRIBUTES));
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    response=client.execute(new HttpGet(SessionOperationServlet.createRemoveURI(baseURL2,"b")));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.RESULT));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.CREATED_SESSIONS));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.DESTROYED_SESSIONS));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.ADDED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.REPLACED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.REMOVED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.BOUND_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.UNBOUND_ATTRIBUTES));
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    response=client.execute(new HttpGet(SessionOperationServlet.createSetURI(baseURL1,"a","2")));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.CREATED_SESSIONS));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.DESTROYED_SESSIONS));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.ADDED_ATTRIBUTES));
      Assert.assertTrue(response.containsHeader(SessionOperationServlet.REPLACED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.REMOVED_ATTRIBUTES));
      Assert.assertTrue(response.containsHeader(SessionOperationServlet.BOUND_ATTRIBUTES));
      Assert.assertTrue(response.containsHeader(SessionOperationServlet.UNBOUND_ATTRIBUTES));
      Assert.assertEquals("a",response.getFirstHeader(SessionOperationServlet.REPLACED_ATTRIBUTES).getValue());
      Assert.assertEquals("2",response.getFirstHeader(SessionOperationServlet.BOUND_ATTRIBUTES).getValue());
      Assert.assertEquals("1",response.getFirstHeader(SessionOperationServlet.UNBOUND_ATTRIBUTES).getValue());
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    response=client.execute(new HttpGet(SessionOperationServlet.createGetURI(baseURL2,"a")));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertTrue(response.containsHeader(SessionOperationServlet.RESULT));
      Assert.assertEquals("2",response.getFirstHeader(SessionOperationServlet.RESULT).getValue());
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.CREATED_SESSIONS));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.DESTROYED_SESSIONS));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.ADDED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.REPLACED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.REMOVED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.BOUND_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.UNBOUND_ATTRIBUTES));
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    response=client.execute(new HttpGet(SessionOperationServlet.createSetURI(baseURL1,"a")));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.CREATED_SESSIONS));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.DESTROYED_SESSIONS));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.ADDED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.REPLACED_ATTRIBUTES));
      Assert.assertTrue(response.containsHeader(SessionOperationServlet.REMOVED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.BOUND_ATTRIBUTES));
      Assert.assertTrue(response.containsHeader(SessionOperationServlet.UNBOUND_ATTRIBUTES));
      Assert.assertEquals("a",response.getFirstHeader(SessionOperationServlet.REMOVED_ATTRIBUTES).getValue());
      Assert.assertEquals("2",response.getFirstHeader(SessionOperationServlet.UNBOUND_ATTRIBUTES).getValue());
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    response=client.execute(new HttpGet(SessionOperationServlet.createGetURI(baseURL2,"a")));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.RESULT));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.CREATED_SESSIONS));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.DESTROYED_SESSIONS));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.ADDED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.REPLACED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.REMOVED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.BOUND_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.UNBOUND_ATTRIBUTES));
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    response=client.execute(new HttpGet(SessionOperationServlet.createSetURI(baseURL1,"a","3","4")));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.CREATED_SESSIONS));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.DESTROYED_SESSIONS));
      Assert.assertTrue(response.containsHeader(SessionOperationServlet.ADDED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.REPLACED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.REMOVED_ATTRIBUTES));
      Assert.assertTrue(response.containsHeader(SessionOperationServlet.BOUND_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.UNBOUND_ATTRIBUTES));
      Assert.assertEquals("a",response.getFirstHeader(SessionOperationServlet.ADDED_ATTRIBUTES).getValue());
      Assert.assertEquals("3",response.getFirstHeader(SessionOperationServlet.BOUND_ATTRIBUTES).getValue());
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    response=client.execute(new HttpGet(SessionOperationServlet.createGetURI(baseURL2,"a")));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertTrue(response.containsHeader(SessionOperationServlet.RESULT));
      Assert.assertEquals("4",response.getFirstHeader(SessionOperationServlet.RESULT).getValue());
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.CREATED_SESSIONS));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.DESTROYED_SESSIONS));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.ADDED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.REPLACED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.REMOVED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.BOUND_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.UNBOUND_ATTRIBUTES));
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    response=client.execute(new HttpGet(SessionOperationServlet.createRemoveURI(baseURL1,"a")));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.CREATED_SESSIONS));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.DESTROYED_SESSIONS));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.ADDED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.REPLACED_ATTRIBUTES));
      Assert.assertTrue(response.containsHeader(SessionOperationServlet.REMOVED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.BOUND_ATTRIBUTES));
      Assert.assertTrue(response.containsHeader(SessionOperationServlet.UNBOUND_ATTRIBUTES));
      Assert.assertEquals("a",response.getFirstHeader(SessionOperationServlet.REMOVED_ATTRIBUTES).getValue());
      Assert.assertEquals("4",response.getFirstHeader(SessionOperationServlet.UNBOUND_ATTRIBUTES).getValue());
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    response=client.execute(new HttpGet(SessionOperationServlet.createGetURI(baseURL2,"a")));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.RESULT));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.CREATED_SESSIONS));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.DESTROYED_SESSIONS));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.ADDED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.REPLACED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.REMOVED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.BOUND_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.UNBOUND_ATTRIBUTES));
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    response=client.execute(new HttpGet(SessionOperationServlet.createSetURI(baseURL2,"a","5")));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertTrue(response.containsHeader(SessionOperationServlet.SESSION_ID));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.CREATED_SESSIONS));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.DESTROYED_SESSIONS));
      Assert.assertTrue(response.containsHeader(SessionOperationServlet.ADDED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.REPLACED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.REMOVED_ATTRIBUTES));
      Assert.assertTrue(response.containsHeader(SessionOperationServlet.BOUND_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.UNBOUND_ATTRIBUTES));
      Assert.assertEquals("a",response.getFirstHeader(SessionOperationServlet.ADDED_ATTRIBUTES).getValue());
      Assert.assertEquals("5",response.getFirstHeader(SessionOperationServlet.BOUND_ATTRIBUTES).getValue());
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    response=client.execute(new HttpGet(SessionOperationServlet.createInvalidateURI(baseURL1)));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertTrue(response.containsHeader(SessionOperationServlet.SESSION_ID));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.CREATED_SESSIONS));
      Assert.assertTrue(response.containsHeader(SessionOperationServlet.DESTROYED_SESSIONS));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.ADDED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.REPLACED_ATTRIBUTES));
      Assert.assertTrue(response.containsHeader(SessionOperationServlet.REMOVED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.BOUND_ATTRIBUTES));
      Assert.assertTrue(response.containsHeader(SessionOperationServlet.UNBOUND_ATTRIBUTES));
      Assert.assertEquals(response.getFirstHeader(SessionOperationServlet.SESSION_ID).getValue(),response.getFirstHeader(SessionOperationServlet.DESTROYED_SESSIONS).getValue());
      Assert.assertEquals("a",response.getFirstHeader(SessionOperationServlet.REMOVED_ATTRIBUTES).getValue());
      Assert.assertEquals("5",response.getFirstHeader(SessionOperationServlet.UNBOUND_ATTRIBUTES).getValue());
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    response=client.execute(new HttpGet(SessionOperationServlet.createSetURI(baseURL2,"a","6")));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertTrue(response.containsHeader(SessionOperationServlet.SESSION_ID));
      Assert.assertTrue(response.containsHeader(SessionOperationServlet.CREATED_SESSIONS));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.DESTROYED_SESSIONS));
      Assert.assertTrue(response.containsHeader(SessionOperationServlet.ADDED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.REPLACED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.REMOVED_ATTRIBUTES));
      Assert.assertTrue(response.containsHeader(SessionOperationServlet.BOUND_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.UNBOUND_ATTRIBUTES));
      Assert.assertEquals(response.getFirstHeader(SessionOperationServlet.SESSION_ID).getValue(),response.getFirstHeader(SessionOperationServlet.CREATED_SESSIONS).getValue());
      Assert.assertEquals("a",response.getFirstHeader(SessionOperationServlet.ADDED_ATTRIBUTES).getValue());
      Assert.assertEquals("6",response.getFirstHeader(SessionOperationServlet.BOUND_ATTRIBUTES).getValue());
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    response=client.execute(new HttpGet(SessionOperationServlet.createGetURI(baseURL2,"a","7")));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertTrue(response.containsHeader(SessionOperationServlet.RESULT));
      Assert.assertEquals("6",response.getFirstHeader(SessionOperationServlet.RESULT).getValue());
      Assert.assertTrue(response.containsHeader(SessionOperationServlet.SESSION_ID));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.CREATED_SESSIONS));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.DESTROYED_SESSIONS));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.ADDED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.REPLACED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.REMOVED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.BOUND_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.UNBOUND_ATTRIBUTES));
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    response=client.execute(new HttpGet(SessionOperationServlet.createGetURI(baseURL2,"a")));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertTrue(response.containsHeader(SessionOperationServlet.RESULT));
      Assert.assertEquals("7",response.getFirstHeader(SessionOperationServlet.RESULT).getValue());
      Assert.assertTrue(response.containsHeader(SessionOperationServlet.SESSION_ID));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.CREATED_SESSIONS));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.DESTROYED_SESSIONS));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.ADDED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.REPLACED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.REMOVED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.BOUND_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.UNBOUND_ATTRIBUTES));
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    response=client.execute(new HttpGet(SessionOperationServlet.createTimeoutURI(baseURL1,1)));
    String sessionId=null;
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.RESULT));
      Assert.assertTrue(response.containsHeader(SessionOperationServlet.SESSION_ID));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.CREATED_SESSIONS));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.DESTROYED_SESSIONS));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.ADDED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.REPLACED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.REMOVED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.BOUND_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.UNBOUND_ATTRIBUTES));
      sessionId=response.getFirstHeader(SessionOperationServlet.SESSION_ID).getValue();
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    Thread.sleep(2000);
    response=client.execute(new HttpGet(SessionOperationServlet.createGetURI(baseURL2,"a")));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.RESULT));
      Assert.assertTrue(response.containsHeader(SessionOperationServlet.SESSION_ID));
      Assert.assertTrue(response.containsHeader(SessionOperationServlet.CREATED_SESSIONS));
      Assert.assertTrue(response.containsHeader(SessionOperationServlet.DESTROYED_SESSIONS));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.ADDED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.REPLACED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.REMOVED_ATTRIBUTES));
      Assert.assertFalse(response.containsHeader(SessionOperationServlet.BOUND_ATTRIBUTES));
      Assert.assertTrue(response.containsHeader(SessionOperationServlet.UNBOUND_ATTRIBUTES));
      Assert.assertEquals(sessionId,response.getFirstHeader(SessionOperationServlet.DESTROYED_SESSIONS).getValue());
      Assert.assertEquals(response.getFirstHeader(SessionOperationServlet.SESSION_ID).getValue(),response.getFirstHeader(SessionOperationServlet.CREATED_SESSIONS).getValue());
      Assert.assertEquals("7",response.getFirstHeader(SessionOperationServlet.UNBOUND_ATTRIBUTES).getValue());
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
  }
  finally {
    HttpClientUtils.closeQuietly(client);
  }
}

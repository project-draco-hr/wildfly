{
  final String jndiName=DatabaseDataStoreResourceDefinition.DATASOURCE_JNDI_NAME.resolveModelAttribute(context,model).asString();
  final ModelNode dataBaseValue=DatabaseDataStoreResourceDefinition.DATABASE.resolveModelAttribute(context,model);
  final String database;
  if (dataBaseValue.isDefined()) {
    database=dataBaseValue.asString();
  }
 else {
    database=null;
  }
  final String partition=DatabaseDataStoreResourceDefinition.PARTITION.resolveModelAttribute(context,model).asString();
  final String name=PathAddress.pathAddress(operation.get(OP_ADDR)).getLastElement().getValue();
  final DatabaseTimerPersistence databaseTimerPersistence=new DatabaseTimerPersistence(name,database,partition);
  final ServiceName serviceName=TimerPersistence.SERVICE_NAME.append(name);
  final ServiceBuilder<DatabaseTimerPersistence> builder=context.getServiceTarget().addService(serviceName,databaseTimerPersistence);
  if (verificationHandler != null) {
    builder.addListener(verificationHandler);
  }
  return builder.addDependency(Services.JBOSS_SERVICE_MODULE_LOADER,ModuleLoader.class,databaseTimerPersistence.getModuleLoader()).addDependency(ContextNames.bindInfoFor(jndiName).getBinderServiceName(),ManagedReferenceFactory.class,databaseTimerPersistence.getDataSourceInjectedValue()).install();
}

{
  final String attributeName=operation.require(ModelDescriptionConstants.NAME).asString();
  final AttributeTransformationDescription description=attributeTransformations.get(attributeName);
  if (description == null) {
    return new TransformedOperation(operation,OperationResultTransformer.ORIGINAL_RESULT);
  }
  final boolean reject=!description.checkAttributeValueIsValid(operation.get(ModelDescriptionConstants.VALUE),new TransformationRule.AbstractTransformationContext(context){
    @Override protected TransformationContext getContext(){
      return super.getContext();
    }
  }
);
  final OperationRejectionPolicy policy;
  if (reject) {
    policy=new OperationRejectionPolicy(){
      @Override public boolean rejectOperation(      ModelNode preparedResult){
        return true;
      }
      @Override public String getFailureDescription(){
        return "";
      }
    }
;
  }
 else {
    policy=DEFAULT_REJECTION_POLICY;
  }
  return new TransformedOperation(operation,policy,OperationResultTransformer.ORIGINAL_RESULT);
}

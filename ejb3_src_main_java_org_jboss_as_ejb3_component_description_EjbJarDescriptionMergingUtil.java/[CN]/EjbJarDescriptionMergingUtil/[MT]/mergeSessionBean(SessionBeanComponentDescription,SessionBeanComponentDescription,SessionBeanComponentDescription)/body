{
  if (override.getMappedName() != null) {
    mergedBean.setMappedName(override.getMappedName());
  }
 else {
    mergedBean.setMappedName(original.getMappedName());
  }
  if (override.getTransactionManagementType() != null) {
    mergedBean.setTransactionManagementType(override.getTransactionManagementType());
  }
 else {
    if (original.getTransactionManagementType() != null) {
      mergedBean.setTransactionManagementType(original.getTransactionManagementType());
    }
  }
  ConcurrencyManagementType overrideConcurrencyMgmtType=override.getConcurrencyManagementType();
  if (overrideConcurrencyMgmtType != null) {
    if (overrideConcurrencyMgmtType == ConcurrencyManagementType.BEAN) {
      mergedBean.beanManagedConcurrency();
    }
 else {
      mergedBean.containerManagedConcurrency();
    }
  }
 else {
    ConcurrencyManagementType originalConcurrencyManagemenType=original.getConcurrencyManagementType();
    if (originalConcurrencyManagemenType != null) {
      if (originalConcurrencyManagemenType == ConcurrencyManagementType.BEAN) {
        mergedBean.beanManagedConcurrency();
      }
 else {
        mergedBean.containerManagedConcurrency();
      }
    }
  }
  LockType overrideBeanLockType=override.getBeanLevelLockType();
  if (overrideBeanLockType != null) {
    mergedBean.setBeanLevelLockType(overrideBeanLockType);
  }
 else {
    LockType originalBeanLockType=original.getBeanLevelLockType();
    if (originalBeanLockType != null) {
      mergedBean.setBeanLevelLockType(originalBeanLockType);
    }
  }
  AccessTimeout overrideAccessTimeout=override.getBeanLevelAccessTimeout();
  if (overrideAccessTimeout != null) {
    mergedBean.setBeanLevelAccessTimeout(overrideAccessTimeout);
  }
 else {
    AccessTimeout originalAccessTimeout=original.getBeanLevelAccessTimeout();
    if (originalAccessTimeout != null) {
      mergedBean.setBeanLevelAccessTimeout(originalAccessTimeout);
    }
  }
  Collection<String> overrideViews=override.getViewClassNames();
  if (overrideViews != null && !overrideViews.isEmpty()) {
    for (    String view : overrideViews) {
      MethodIntf viewType=override.getMethodIntf(view);
      addView(mergedBean,view,viewType);
    }
  }
 else {
    Collection<String> originalViews=original.getViewClassNames();
    if (originalViews != null) {
      for (      String view : originalViews) {
        MethodIntf viewType=original.getMethodIntf(view);
        addView(mergedBean,view,viewType);
      }
    }
  }
}

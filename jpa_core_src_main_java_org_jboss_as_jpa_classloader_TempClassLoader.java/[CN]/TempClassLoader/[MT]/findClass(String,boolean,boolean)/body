{
  Class<?> loaded=findLoadedClass(name);
  if (loaded != null) {
    return loaded;
  }
  if (name.startsWith("javax.")) {
    return Class.forName(name,resolve,delegate);
  }
  InputStream resource=delegate.getResourceAsStream(name.replace('.','/') + ".class");
  if (resource == null) {
    throw new ClassNotFoundException(name);
  }
  ByteArrayOutputStream baos=new ByteArrayOutputStream();
  try {
    byte[] buffer=new byte[1024];
    for (int i=0; (i=resource.read(buffer,0,buffer.length)) != -1; ) {
      baos.write(buffer,0,i);
    }
    buffer=baos.toByteArray();
    return defineClass(name,buffer,0,buffer.length);
  }
 catch (  IOException e) {
    throw new ClassNotFoundException(name,e);
  }
 finally {
    try {
      resource.close();
    }
 catch (    IOException e) {
    }
  }
}

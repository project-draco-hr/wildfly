{
  if (!allowExecution) {
    return false;
  }
  String loadTimer=sql(UPDATE_RUNNING);
  Connection connection=null;
  PreparedStatement statement=null;
  try {
    try {
      connection=dataSource.getConnection();
      statement=connection.prepareStatement(loadTimer);
      statement.setString(1,TimerState.IN_TIMEOUT.name());
      setNodeName(TimerState.IN_TIMEOUT,statement,2);
      statement.setString(3,timer.getId());
      statement.setString(4,TimerState.IN_TIMEOUT.name());
      if (timer.getNextExpiration() == null) {
        statement.setTimestamp(5,null);
      }
 else {
        statement.setTimestamp(5,new Timestamp(timer.getNextExpiration().getTime()));
      }
    }
 catch (    SQLException e) {
      throw new RuntimeException(e);
    }
    tm.begin();
    int affected=statement.executeUpdate();
    tm.commit();
    return affected == 1;
  }
 catch (  SQLException e) {
    try {
      tm.rollback();
    }
 catch (    IllegalStateException|SecurityException|SystemException rbe) {
      EjbLogger.ROOT_LOGGER.timerUpdateFailedAndRollbackNotPossible(rbe);
    }
    throw new RuntimeException(e);
  }
catch (  SystemException|SecurityException|IllegalStateException|RollbackException|HeuristicMixedException|HeuristicRollbackException e) {
    try {
      tm.rollback();
    }
 catch (    IllegalStateException|SecurityException|SystemException rbe) {
      EjbLogger.ROOT_LOGGER.timerUpdateFailedAndRollbackNotPossible(rbe);
    }
    throw new RuntimeException(e);
  }
catch (  NotSupportedException e) {
    throw new RuntimeException(e);
  }
 finally {
    safeClose(statement);
    safeClose(connection);
  }
}

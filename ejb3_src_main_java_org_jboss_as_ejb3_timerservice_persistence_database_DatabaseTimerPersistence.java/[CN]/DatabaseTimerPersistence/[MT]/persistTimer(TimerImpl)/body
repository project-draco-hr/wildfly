{
  Connection connection=null;
  PreparedStatement statement=null;
  ResultSet resultSet=null;
  try {
    connection=dataSource.getConnection();
    if (timerEntity.getState() == TimerState.CANCELED || timerEntity.getState() == TimerState.EXPIRED) {
      String deleteTimer=sql(DELETE_TIMER);
      statement=connection.prepareStatement(deleteTimer);
      statement.setString(1,timerEntity.getTimedObjectId());
      statement.setString(2,timerEntity.getId());
      statement.setString(3,partition);
      statement.execute();
synchronized (this) {
        knownTimerIds.get(timerEntity.getTimedObjectId()).remove(timerEntity.getId());
      }
    }
 else {
synchronized (this) {
        knownTimerIds.get(timerEntity.getTimedObjectId()).add(timerEntity.getId());
      }
      String updateTimer=sql(UPDATE_TIMER);
      statement=connection.prepareStatement(updateTimer);
      statement.setTimestamp(1,timestamp(timerEntity.getNextExpiration()));
      statement.setTimestamp(2,timestamp(timerEntity.getPreviousRun()));
      statement.setString(3,timerEntity.getState().name());
      statement.setString(4,timerEntity.getTimedObjectId());
      statement.setString(5,timerEntity.getId());
      statement.setString(6,partition);
      statement.execute();
    }
  }
 catch (  SQLException e) {
    throw new RuntimeException(e);
  }
 finally {
    safeClose(resultSet);
    safeClose(statement);
    safeClose(connection);
  }
}

{
  statement.setString(1,timerEntity.getId());
  statement.setString(2,timerEntity.getTimedObjectId());
  statement.setTimestamp(3,timestamp(timerEntity.getInitialExpiration()));
  statement.setLong(4,timerEntity.getInterval());
  statement.setTimestamp(5,timestamp(timerEntity.getNextExpiration()));
  statement.setTimestamp(6,timestamp(timerEntity.getPreviousRun()));
  statement.setString(7,serialize((Serializable)timerEntity.getPrimaryKey()));
  statement.setString(8,serialize(timerEntity.getTimerInfo()));
  statement.setString(9,timerEntity.getState().name());
  if (timerEntity instanceof CalendarTimer) {
    final CalendarTimer c=(CalendarTimer)timerEntity;
    statement.setString(10,c.getScheduleExpression().getSecond());
    statement.setString(11,c.getScheduleExpression().getMinute());
    statement.setString(12,c.getScheduleExpression().getHour());
    statement.setString(13,c.getScheduleExpression().getDayOfWeek());
    statement.setString(14,c.getScheduleExpression().getDayOfMonth());
    statement.setString(15,c.getScheduleExpression().getMonth());
    statement.setString(16,c.getScheduleExpression().getYear());
    statement.setTimestamp(17,timestamp(c.getScheduleExpression().getStart()));
    statement.setTimestamp(18,timestamp(c.getScheduleExpression().getEnd()));
    statement.setString(19,c.getScheduleExpression().getTimezone());
    statement.setBoolean(20,c.isAutoTimer());
    if (c.isAutoTimer()) {
      statement.setString(21,c.getTimeoutMethod().getDeclaringClass().getName());
      statement.setString(22,c.getTimeoutMethod().getName());
      StringBuilder params=new StringBuilder();
      final Class<?>[] parameterTypes=c.getTimeoutMethod().getParameterTypes();
      for (int i=0; i < parameterTypes.length; ++i) {
        params.append(parameterTypes[i].getName());
        if (i != parameterTypes.length - 1) {
          params.append(";");
        }
      }
      statement.setString(23,params.toString());
    }
 else {
      statement.setString(21,null);
      statement.setString(22,null);
      statement.setString(23,null);
    }
    statement.setBoolean(24,true);
  }
 else {
    statement.setString(10,null);
    statement.setString(11,null);
    statement.setString(12,null);
    statement.setString(13,null);
    statement.setString(14,null);
    statement.setString(15,null);
    statement.setString(16,null);
    statement.setTimestamp(17,null);
    statement.setTimestamp(18,null);
    statement.setString(19,null);
    statement.setBoolean(20,false);
    statement.setString(21,null);
    statement.setString(22,null);
    statement.setString(23,null);
    statement.setBoolean(24,false);
  }
  statement.setString(25,partition);
  setNodeName(timerEntity.getState(),statement,26);
}

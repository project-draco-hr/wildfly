{
  final boolean restartRequired=requiresRestart();
  boolean setReload=false;
  if (requiresRuntime(context)) {
    if (restartRequired) {
      context.reloadRequired();
      setReload=true;
    }
 else {
      context.addStep(new OperationStepHandler(){
        public void execute(        OperationContext context,        ModelNode operation) throws OperationFailedException {
          final ModelNode resolvedValue=newValue.isDefined() ? newValue.resolve() : newValue;
          if (resolvedValueValidator != null) {
            resolvedValueValidator.validateResolvedParameter(VALUE,resolvedValue);
          }
          final PathAddress address=PathAddress.pathAddress(operation.get(OP_ADDR));
          final PathElement element=address.getLastElement();
          final String bindingName=element.getValue();
          final ModelNode bindingModel=context.readResource(PathAddress.EMPTY_ADDRESS).getModel();
          final ServiceController<?> controller=context.getServiceRegistry(true).getRequiredService(SOCKET_BINDING.append(bindingName));
          final SocketBinding binding=controller.getState() == ServiceController.State.UP ? SocketBinding.class.cast(controller.getValue()) : null;
          final boolean bound=binding != null && binding.isBound();
          if (binding == null) {
            handleBindingReinstall(context,bindingName,bindingModel);
          }
 else           if (bound) {
            context.reloadRequired();
          }
 else {
            handleRuntimeChange(operation,attributeName,resolvedValue,binding);
          }
          if (context.completeStep() != OperationContext.ResultAction.KEEP) {
            if (binding == null) {
              revertBindingReinstall(context,bindingName,bindingModel,attributeName,currentValue);
            }
 else             if (bound) {
              context.revertReloadRequired();
            }
 else {
              ModelNode resolvedPrevious=currentValue.isDefined() ? currentValue.resolve() : currentValue;
              handleRuntimeRollback(operation,attributeName,resolvedPrevious,binding);
            }
          }
        }
      }
,OperationContext.Stage.RUNTIME);
    }
  }
  if (context.completeStep() != OperationContext.ResultAction.KEEP && setReload) {
    context.revertReloadRequired();
  }
}

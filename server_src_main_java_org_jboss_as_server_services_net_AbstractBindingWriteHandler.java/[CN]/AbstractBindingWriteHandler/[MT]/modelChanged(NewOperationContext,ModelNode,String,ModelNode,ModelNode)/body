{
  final boolean restartRequired=requiresRestart();
  boolean setReload=false;
  if (context.getType() == NewOperationContext.Type.SERVER) {
    if (restartRequired) {
      context.reloadRequired();
      setReload=true;
    }
 else {
      context.addStep(new NewStepHandler(){
        public void execute(        NewOperationContext context,        ModelNode operation) throws OperationFailedException {
          validateResolvedValue(attributeName,newValue);
          final ModelNode resolvedValue=newValue.isDefined() ? newValue.resolve() : newValue;
          final PathAddress address=PathAddress.pathAddress(operation.get(OP_ADDR));
          final PathElement element=address.getLastElement();
          final ServiceController<?> controller=context.getServiceRegistry(true).getRequiredService(SOCKET_BINDING.append(element.getValue()));
          final SocketBinding binding=SocketBinding.class.cast(controller.getValue());
          boolean mustRestart=binding.isBound();
          if (mustRestart) {
            context.reloadRequired();
          }
 else {
            handleRuntimeChange(operation,attributeName,resolvedValue,binding);
          }
          if (context.completeStep() != NewOperationContext.ResultAction.KEEP) {
            if (mustRestart) {
              context.revertReloadRequired();
            }
 else {
              ModelNode resolvedPrevious=currentValue.isDefined() ? currentValue.resolve() : currentValue;
              handleRuntimeRollback(operation,attributeName,resolvedPrevious,binding);
            }
          }
        }
      }
,NewOperationContext.Stage.RUNTIME);
    }
  }
  if (context.completeStep() != NewOperationContext.ResultAction.KEEP && setReload) {
    context.revertReloadRequired();
  }
}

{
  try {
    Field typeField=option.getClass().getDeclaredField("type");
    typeField.setAccessible(true);
    optionType=(Class<?>)typeField.get(option);
    if (optionType.isAssignableFrom(Integer.class)) {
      type=ModelType.INT;
    }
 else     if (optionType.isAssignableFrom(Long.class)) {
      type=ModelType.LONG;
    }
 else     if (optionType.isAssignableFrom(BigInteger.class)) {
      type=ModelType.BIG_INTEGER;
    }
 else     if (optionType.isAssignableFrom(Double.class)) {
      type=ModelType.DOUBLE;
    }
 else     if (optionType.isAssignableFrom(BigDecimal.class)) {
      type=ModelType.BIG_DECIMAL;
    }
 else     if (optionType.isEnum() || optionType.isAssignableFrom(String.class)) {
      type=ModelType.STRING;
    }
 else     if (optionType.isAssignableFrom(Boolean.class)) {
      type=ModelType.BOOLEAN;
    }
 else {
      type=ModelType.UNDEFINED;
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
}

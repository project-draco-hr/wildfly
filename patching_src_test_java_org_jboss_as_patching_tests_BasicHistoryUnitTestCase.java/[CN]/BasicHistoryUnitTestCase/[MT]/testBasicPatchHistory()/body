{
  final PatchingTestBuilder builder=createDefaultBuilder();
  final byte[] standaloneHash=new byte[20];
  final byte[] moduleHash=new byte[20];
  final File existing=builder.getFile(FILE_EXISTING);
  touch(existing);
  dump(existing,randomString());
  final byte[] existingHash=hashFile(existing);
  final byte[] initialHash=Arrays.copyOf(existingHash,existingHash.length);
  final PatchingTestStepBuilder cp1=builder.createBuilder();
  cp1.setPatchId("CP1").cumulativePatchIdentity(PRODUCT_VERSION).cumulativePatchElement("base:CP1","base",false).addModuleWithRandomContent("org.jboss.test",moduleHash).getParent().addFileWithRandomContent(standaloneHash,FILE_ONE).updateFileWithRandomContent(initialHash,existingHash,FILE_EXISTING);
  ;
  apply(cp1);
  Assert.assertTrue(builder.hasFile(FILE_ONE));
  Assert.assertTrue(builder.hasFile(FILE_EXISTING));
  Assert.assertTrue(Arrays.equals(existingHash,hashFile(existing)));
  final PatchingTestStepBuilder oneOff1=builder.createBuilder();
  oneOff1.setPatchId("oneOff1").oneOffPatchIdentity(PRODUCT_VERSION,"CP1").oneOffPatchElement("base:oneOff1","base","base:CP1",false).updateModuleWithRandomContent("org.jboss.test",moduleHash,null).getParent().updateFileWithRandomContent(standaloneHash,null,FILE_ONE).updateFileWithRandomContent(Arrays.copyOf(existingHash,existingHash.length),existingHash,FILE_EXISTING);
  ;
  apply(oneOff1);
  Assert.assertTrue(builder.hasFile(FILE_ONE));
  Assert.assertTrue(builder.hasFile(FILE_EXISTING));
  Assert.assertTrue(Arrays.equals(existingHash,hashFile(existing)));
  final PatchingTestStepBuilder cp2=builder.createBuilder();
  cp2.setPatchId("CP2").cumulativePatchIdentity(PRODUCT_VERSION).cumulativePatchElement("base:CP2","base",false).addModuleWithRandomContent("org.jboss.test",moduleHash).getParent().addFileWithRandomContent(standaloneHash,FILE_TWO).updateFileWithRandomContent(Arrays.copyOf(existingHash,existingHash.length),existingHash,FILE_EXISTING);
  ;
  apply(cp2);
  Assert.assertTrue(builder.hasFile(FILE_TWO));
  Assert.assertFalse(builder.hasFile(FILE_ONE));
  Assert.assertTrue(builder.hasFile(FILE_EXISTING));
  Assert.assertTrue(Arrays.equals(existingHash,hashFile(existing)));
  final PatchingTestStepBuilder release=builder.createBuilder();
  release.setPatchId("CP3").cumulativePatchIdentity(PRODUCT_VERSION).cumulativePatchElement("base:CP3","base",false).addModuleWithRandomContent("org.jboss.test",moduleHash).getParent().addFileWithRandomContent(standaloneHash,FILE_THREE);
  apply(release);
  Assert.assertTrue(builder.hasFile(FILE_THREE));
  Assert.assertFalse(builder.hasFile(FILE_TWO));
  Assert.assertFalse(builder.hasFile(FILE_ONE));
  Assert.assertTrue(builder.hasFile(FILE_EXISTING));
}

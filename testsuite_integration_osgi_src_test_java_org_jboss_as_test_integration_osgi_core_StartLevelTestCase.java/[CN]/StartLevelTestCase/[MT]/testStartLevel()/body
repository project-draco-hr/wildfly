{
  int orglevel=FrameworkUtils.getFrameworkStartLevel(context);
  assertEquals("Framework start level",1,orglevel);
  Bundle sysbundle=context.getBundle();
  FrameworkStartLevel fwStartLevel=sysbundle.adapt(FrameworkStartLevel.class);
  int initialStartLevel=fwStartLevel.getInitialBundleStartLevel();
  assertEquals("Initial bundle start level",1,initialStartLevel);
  InputStream input=deployer.getDeployment(BUNDLE_A);
  Bundle bundle=context.installBundle(BUNDLE_A,input);
  try {
    assertEquals("Bundle INSTALLED",Bundle.INSTALLED,bundle.getState());
    BundleStartLevel bStartLevel=bundle.adapt(BundleStartLevel.class);
    bStartLevel.setStartLevel(3);
    assertEquals("Bundle start level",3,bStartLevel.getStartLevel());
    FrameworkUtils.setFrameworkStartLevel(context,2);
    assertEquals("Framework start level",2,fwStartLevel.getStartLevel());
    try {
      bundle.start(Bundle.START_TRANSIENT);
      fail("Bundle cannot be started due to the Framework's current start level");
    }
 catch (    BundleException ex) {
    }
    assertEquals("Bundle INSTALLED",Bundle.INSTALLED,bundle.getState());
    bundle.start();
    assertEquals("Bundle INSTALLED",Bundle.INSTALLED,bundle.getState());
    FrameworkUtils.setFrameworkStartLevel(context,3);
    assertEquals("Bundle ACTIVE",Bundle.ACTIVE,bundle.getState());
  }
  finally {
    bundle.uninstall();
    FrameworkUtils.setFrameworkStartLevel(context,orglevel);
  }
}

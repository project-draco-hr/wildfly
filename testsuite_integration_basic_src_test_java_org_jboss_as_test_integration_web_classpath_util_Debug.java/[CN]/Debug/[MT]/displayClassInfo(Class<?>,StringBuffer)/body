{
  ClassLoader cl=clazz.getClassLoader();
  results.append("\n" + clazz.getName() + ".ClassLoader="+ cl);
  ClassLoader parent=cl;
  while (parent != null) {
    results.append("\n.." + parent);
    URL[] urls=getClassLoaderURLs(parent);
    int length=urls != null ? urls.length : 0;
    for (int u=0; u < length; u++) {
      results.append("\n...." + urls[u]);
    }
    if (parent != null)     parent=parent.getParent();
  }
  CodeSource clazzCS=clazz.getProtectionDomain().getCodeSource();
  if (clazzCS != null)   results.append("\n++++CodeSource: " + clazzCS);
 else   results.append("\n++++Null CodeSource");
  results.append("\nImplemented Interfaces:");
  Class<?>[] ifaces=clazz.getInterfaces();
  for (int i=0; i < ifaces.length; i++) {
    results.append("\n++" + ifaces[i]);
    ClassLoader loader=ifaces[i].getClassLoader();
    results.append("\n++++ClassLoader: " + loader);
    ProtectionDomain pd=ifaces[i].getProtectionDomain();
    CodeSource cs=pd.getCodeSource();
    if (cs != null)     results.append("\n++++CodeSource: " + cs);
 else     results.append("\n++++Null CodeSource");
  }
}

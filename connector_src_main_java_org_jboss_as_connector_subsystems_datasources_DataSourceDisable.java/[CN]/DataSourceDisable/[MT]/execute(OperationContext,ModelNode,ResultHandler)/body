{
  final ModelNode opAddr=operation.require(OP_ADDR);
  final ModelNode compensatingOperation=new ModelNode();
  compensatingOperation.get(OP).set(ENABLE);
  compensatingOperation.get(OP_ADDR).set(opAddr);
  final String jndiName=PathAddress.pathAddress(opAddr).getLastElement().getValue();
  context.getSubModel().get(ENABLED).set(false);
  if (context.getRuntimeContext() != null) {
    context.getRuntimeContext().setRuntimeTask(new RuntimeTask(){
      public void execute(      final RuntimeTaskContext context) throws OperationFailedException {
        final ServiceRegistry registry=context.getServiceRegistry();
        final ServiceName dataSourceServiceName=AbstractDataSourceService.SERVICE_NAME_BASE.append(jndiName);
        final ServiceController<?> dataSourceController=registry.getService(dataSourceServiceName);
        if (dataSourceController != null) {
          if (ServiceController.State.UP.equals(dataSourceController.getState())) {
            dataSourceController.setMode(ServiceController.Mode.NEVER);
            dataSourceController.addListener(new AbstractServiceListener<Object>(){
              @Override public void transition(              final ServiceController<? extends Object> controller,              final ServiceController.Transition transition){
                if (transition == ServiceController.Transition.STOPPING_to_DOWN) {
                  resultHandler.handleResultComplete();
                  controller.removeListener(this);
                }
              }
            }
);
          }
 else {
            throw new OperationFailedException(new ModelNode().set("Data-source service [" + jndiName + "] is not enabled"));
          }
        }
 else {
          throw new OperationFailedException(new ModelNode().set("Data-source service [" + jndiName + "] is not available"));
        }
        final ServiceName referenceServiceName=DataSourceReferenceFactoryService.SERVICE_NAME_BASE.append(jndiName);
        final ServiceController<?> referenceController=registry.getService(referenceServiceName);
        if (referenceController != null && ServiceController.State.UP.equals(referenceController.getState())) {
          referenceController.setMode(ServiceController.Mode.NEVER);
        }
        final ServiceName binderServiceName=ContextNames.JAVA_CONTEXT_SERVICE_NAME.append(jndiName);
        final ServiceController<?> binderController=registry.getService(binderServiceName);
        if (binderController != null && ServiceController.State.UP.equals(binderController.getState())) {
          binderController.setMode(ServiceController.Mode.NEVER);
        }
      }
    }
);
  }
 else {
    resultHandler.handleResultComplete();
  }
  return new BasicOperationResult(compensatingOperation);
}

{
  final DeploymentChain deploymentChain=new DeploymentChainImpl("deployment.chain.service");
  deploymentChain.addProcessor(new AnnotationIndexProcessor(),AnnotationIndexProcessor.PRIORITY);
  deploymentChain.addProcessor(new ModuleDependencyProcessor(),ModuleDependencyProcessor.PRIORITY);
  deploymentChain.addProcessor(new ModuleConfigProcessor(),ModuleConfigProcessor.PRIORITY);
  deploymentChain.addProcessor(new DeploymentModuleLoaderProcessor(new DeploymentModuleLoaderImpl()),DeploymentModuleLoaderProcessor.PRIORITY);
  deploymentChain.addProcessor(new ModuleDeploymentProcessor(),ModuleDeploymentProcessor.PRIORITY);
  deploymentChain.addProcessor(new ServiceDeploymentParsingProcessor(),ServiceDeploymentParsingProcessor.PRIORITY);
  deploymentChain.addProcessor(new ParsedServiceDeploymentProcessor(),ParsedServiceDeploymentProcessor.PRIORITY);
  DeploymentChainProvider.INSTANCE.addDeploymentChain(deploymentChain,new DeploymentChainProvider.Selector(){
    public boolean supports(    VirtualFile root){
      return "serviceXmlDeployment.jar".equals(root.getName());
    }
  }
);
}

{
  Set<String> expectedMembers=new TreeSet<>(Arrays.asList(nodes));
  ServiceRegistry registry=CurrentServiceContainer.getServiceContainer();
  ServiceName name=ServiceName.JBOSS.append("infinispan",containerName);
  EmbeddedCacheManager cacheContainer=ServiceContainerHelper.findValue(registry,name);
  if (cacheContainer == null) {
    throw new IllegalStateException(String.format("Failed to locate %s",name));
  }
  Cache cache=cacheContainer.getCache(cacheName);
  if (cache == null) {
    throw new IllegalStateException(String.format("Cache %s not found",cacheName));
  }
  cache.addListener(this);
  try {
    long start=System.currentTimeMillis();
    long now=start;
    long endTime=start + timeout;
synchronized (this) {
      Set<String> members=getMembers(cache);
      while (!expectedMembers.equals(members)) {
        System.out.println(String.format("%s != %s, waiting for a topology change event...",expectedMembers,members));
        this.wait(endTime - now);
        now=System.currentTimeMillis();
        if (now >= endTime) {
          throw new InterruptedException(String.format("Cache %s/%s failed to establish view %s within %d ms.  Current view is: %s",containerName,cacheName,expectedMembers,timeout,members));
        }
        members=getMembers(cache);
      }
      System.out.println(String.format("Cache %s/%s successfully established view %s within %d ms.",containerName,cacheName,expectedMembers,now - start));
    }
  }
  finally {
    cache.removeListener(this);
  }
}

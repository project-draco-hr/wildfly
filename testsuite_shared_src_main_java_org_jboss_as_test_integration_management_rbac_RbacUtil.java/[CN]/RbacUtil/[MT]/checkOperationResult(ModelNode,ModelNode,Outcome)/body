{
  String outcome=result.get(OUTCOME).asString();
switch (expectedOutcome) {
case SUCCESS:
    if (!SUCCESS.equals(outcome)) {
      System.out.println("Failed: " + operation);
      System.out.print("Result: " + result);
      fail(result.get(FAILURE_DESCRIPTION).asString());
    }
  break;
case UNAUTHORIZED:
{
  if (!FAILED.equals(outcome)) {
    fail("Didn't fail: " + result.asString());
  }
  if (!result.get(FAILURE_DESCRIPTION).asString().contains("13456") && !result.asString().contains("11360") && !result.asString().contains("11361")&& !result.asString().contains("11362")&& !result.asString().contains("11363")) {
    fail("Incorrect failure type: " + result.asString());
  }
  break;
}
case HIDDEN:
{
if (!FAILED.equals(outcome)) {
  fail("Didn't fail: " + result.asString());
}
String failureDesc=result.get(FAILURE_DESCRIPTION).asString();
if (!failureDesc.contains("14807") && !failureDesc.contains("14883") && !failureDesc.contains("11340")) {
  fail("Incorrect failure type: " + result.asString());
}
break;
}
case FAILED:
{
if (!FAILED.equals(outcome)) {
fail("Didn't fail: " + result.asString());
}
String failureDesc=result.get(FAILURE_DESCRIPTION).asString();
if (failureDesc.contains("14807") || failureDesc.contains("14883") || failureDesc.contains("13456")|| failureDesc.contains("11340")) {
fail("Incorrect failure type: " + result.asString());
}
break;
}
default :
throw new IllegalStateException();
}
return result;
}

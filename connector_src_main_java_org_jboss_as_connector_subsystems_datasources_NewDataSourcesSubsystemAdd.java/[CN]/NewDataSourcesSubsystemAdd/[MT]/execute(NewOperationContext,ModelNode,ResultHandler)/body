{
  final ModelNode compensatingOperation=new ModelNode();
  compensatingOperation.get(OP).set(REMOVE);
  compensatingOperation.get(OP_ADDR).set(operation.require(OP_ADDR));
  if (context instanceof NewRuntimeOperationContext) {
    final NewRuntimeOperationContext updateContext=(NewRuntimeOperationContext)context;
    final ServiceTarget serviceTarget=updateContext.getServiceTarget();
    try {
      DataSources datasources=buildDataSourcesObject(operation);
      serviceTarget.addService(ConnectorServices.DATASOURCES_SERVICE,new DataSourcesService(datasources)).setInitialMode(Mode.ACTIVE).install();
    }
 catch (    Exception e) {
    }
  }
  final ModelNode subModel=context.getSubModel();
  subModel.setEmptyObject();
  boolean workaround=true;
  if (workaround) {
    if (operation.has(DATASOURCES)) {
      ModelNode datasources=operation.get(DATASOURCES);
      subModel.get(DATASOURCES).set(datasources);
    }
  }
 else {
    if (operation.has(DATASOURCES)) {
      for (      ModelNode dataSourceNode : operation.get(DATASOURCES).asList()) {
        if (dataSourceNode.has(CONNECTION_PROPERTIES)) {
          for (          ModelNode property : dataSourceNode.get(CONNECTION_PROPERTIES).asList()) {
            subModel.get(CONNECTION_PROPERTIES,property.asProperty().getName()).set(property.asString());
          }
        }
        for (        final String attribute : NewDataSourcesSubsystemProviders.DATASOURCE_ATTRIBUTE) {
          if (operation.get(attribute).isDefined()) {
            subModel.get(attribute).set(operation.get(attribute));
          }
        }
      }
    }
    if (operation.has(XA_DATASOURCES)) {
      for (      ModelNode dataSourceNode : operation.get(XA_DATASOURCES).asList()) {
        Map<String,String> connectionProperties;
        if (dataSourceNode.has(XADATASOURCEPROPERTIES)) {
          connectionProperties=new HashMap<String,String>(dataSourceNode.get(XADATASOURCEPROPERTIES).asList().size());
          for (          ModelNode property : dataSourceNode.get(XADATASOURCEPROPERTIES).asList()) {
            subModel.get(XADATASOURCEPROPERTIES,property.asProperty().getName()).set(property.asString());
          }
        }
 else {
          connectionProperties=Collections.emptyMap();
        }
        for (        final String attribute : NewDataSourcesSubsystemProviders.XA_DATASOURCE_ATTRIBUTE) {
          if (operation.get(attribute).isDefined()) {
            subModel.get(attribute).set(operation.get(attribute));
          }
        }
      }
    }
  }
  resultHandler.handleResultComplete(compensatingOperation);
  return Cancellable.NULL;
}

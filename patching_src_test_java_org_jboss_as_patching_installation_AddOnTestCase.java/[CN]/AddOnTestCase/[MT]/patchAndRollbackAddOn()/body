{
  ProductConfig productConfig=new ProductConfig("product","version","consoleSlot");
  String addOnName=randomString();
  installAddOn(env.getModuleRoot(),addOnName);
  InstalledIdentity installedIdentity=InstalledIdentity.load(env.getInstalledImage().getJbossHome(),productConfig,env.getInstalledImage().getModulesDir());
  PatchInfo originalPatchInfo=LocalPatchInfo.load(productConfig,env);
  assertEquals(BASE,originalPatchInfo.getCumulativeID());
  assertTrue(originalPatchInfo.getPatchIDs().isEmpty());
  System.out.println("installation =>>");
  tree(env.getInstalledImage().getJbossHome());
  String patchID=randomString();
  File patchDir=mkdir(tempDir,patchID);
  String addOnPatchID=randomString();
  String moduleName=randomString();
  File patchedAddOnModuleRoot=newFile(patchDir,addOnPatchID);
  File moduleDir=createModule(patchedAddOnModuleRoot,moduleName);
  byte[] newHash=hashFile(moduleDir);
  ContentModification moduleAdded=new ContentModification(new ModuleItem(moduleName,ModuleItem.MAIN_SLOT,newHash),NO_CONTENT,ADD);
  String fileName="my-new-standalone.sh";
  File newFile=touch(patchDir,addOnPatchID,"misc","bin",fileName);
  dump(newFile,"new file resource");
  byte[] newFileHash=hashFile(newFile);
  ContentModification fileAdded=new ContentModification(new MiscContentItem(fileName,new String[]{"bin"},newFileHash),NO_CONTENT,ADD);
  PatchElementImpl addOnPatch=new PatchElementImpl(addOnPatchID);
  addOnPatch.addContentModification(moduleAdded);
  addOnPatch.addContentModification(fileAdded);
  addOnPatch.setProvider(new PatchElementProviderImpl(addOnName,"1.0.1",true));
  addOnPatch.setNoUpgrade();
  Patch patch=PatchBuilder.create().setPatchId(patchID).setOneOffType(productConfig.getProductVersion()).setIdentity(new IdentityImpl(installedIdentity.getIdentity().getName(),installedIdentity.getIdentity().getVersion())).addElement(addOnPatch).build();
  createPatchXMLFile(patchDir,patch);
  System.out.println("patch =>>");
  File zippedPatch=createZippedPatchFile(patchDir,patchID);
  PatchingResult patchResult=executePatch(zippedPatch,installedIdentity,env.getInstalledImage());
  assertPatchHasBeenApplied(patchResult,patch);
  InstalledIdentity patchedInstalledIdentity=InstalledIdentity.load(env.getInstalledImage().getJbossHome(),productConfig,env.getInstalledImage().getModulesDir());
  assertInstallationIsPatched(patch,patchedInstalledIdentity.getIdentity().loadTargetInfo());
  assertFileExists(env.getInstalledImage().getJbossHome(),"bin",fileName);
  System.out.println("installation =>>");
  tree(env.getInstalledImage().getJbossHome());
  DirectoryStructure layerDirStructure=patchedInstalledIdentity.getAddOns().iterator().next().loadTargetInfo().getDirectoryStructure();
  File modulesPatchDir=layerDirStructure.getModulePatchDirectory(addOnPatchID);
  assertDirExists(modulesPatchDir);
  assertDefinedModule(modulesPatchDir,moduleName,newHash);
  PatchingResult rollbackResult=rollback(patchID,patchedInstalledIdentity,env.getInstalledImage());
  assertPatchHasBeenRolledBack(rollbackResult,patch,originalPatchInfo);
  assertFileDoesNotExist(env.getInstalledImage().getJbossHome(),"bin",fileName);
}

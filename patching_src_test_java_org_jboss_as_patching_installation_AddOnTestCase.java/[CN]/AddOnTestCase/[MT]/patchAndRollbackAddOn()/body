{
  String addOnName=randomString();
  installAddOn(env.getModuleRoot(),addOnName);
  InstalledIdentity installedIdentity=loadInstalledIdentity();
  PatchInfo originalPatchInfo=LocalPatchInfo.load(productConfig,env);
  assertEquals(BASE,originalPatchInfo.getCumulativeID());
  assertTrue(originalPatchInfo.getPatchIDs().isEmpty());
  System.out.println("installation =>>");
  tree(env.getInstalledImage().getJbossHome());
  String patchID=randomString();
  File patchDir=mkdir(tempDir,patchID);
  String addOnPatchID=randomString();
  String moduleName=randomString();
  ContentModification moduleAdded=ContentModificationUtils.addModule(patchDir,addOnPatchID,moduleName);
  ContentModification fileAdded=ContentModificationUtils.addMisc(patchDir,"new file resource","bin","my-new-standalone.sh");
  Patch patch=PatchBuilder.create().setPatchId(patchID).setOneOffType(productConfig.getProductVersion()).setIdentity(new IdentityImpl(installedIdentity.getIdentity().getName(),installedIdentity.getIdentity().getVersion())).addElement(new PatchElementImpl(addOnPatchID).setProvider(new PatchElementProviderImpl(addOnName,"1.0.1",true)).setNoUpgrade().addContentModification(moduleAdded)).addContentModification(fileAdded).build();
  createPatchXMLFile(patchDir,patch);
  System.out.println("patch =>>");
  File zippedPatch=createZippedPatchFile(patchDir,patchID);
  PatchingResult patchResult=executePatch(zippedPatch);
  assertPatchHasBeenApplied(patchResult,patch);
  InstalledIdentity patchedInstalledIdentity=InstalledIdentity.load(env.getInstalledImage().getJbossHome(),productConfig,env.getInstalledImage().getModulesDir());
  assertInstallationIsPatched(patch,patchedInstalledIdentity.getIdentity().loadTargetInfo());
  assertFileExists(env.getInstalledImage().getJbossHome(),"bin",fileAdded.getItem().getName());
  System.out.println("installation =>>");
  tree(env.getInstalledImage().getJbossHome());
  DirectoryStructure layerDirStructure=patchedInstalledIdentity.getAddOns().iterator().next().loadTargetInfo().getDirectoryStructure();
  File modulesPatchDir=layerDirStructure.getModulePatchDirectory(addOnPatchID);
  assertDirExists(modulesPatchDir);
  assertDefinedModule(modulesPatchDir,moduleName,moduleAdded.getItem().getContentHash());
  PatchingResult rollbackResult=rollback(patchID);
  assertPatchHasBeenRolledBack(rollbackResult,patch,originalPatchInfo);
  tree(env.getInstalledImage().getJbossHome());
}

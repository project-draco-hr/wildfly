{
  if (getXADataSourceClass() == null) {
    throw new ResourceException("No XADataSourceClass supplied!");
  }
  XADataSource xads=null;
  try {
    xads=(XADataSource)xaDataSourceClass.newInstance();
    final Class<?>[] noClasses=new Class<?>[]{};
    for (Iterator<?> i=xaProps.keySet().iterator(); i.hasNext(); ) {
      String name=(String)i.next();
      String value=xaProps.getProperty(name);
      char firstCharName=Character.toUpperCase(name.charAt(0));
      if (name.length() > 1) {
        name=firstCharName + name.substring(1);
      }
 else {
        name="" + firstCharName;
      }
      Class<?> type=null;
      try {
        Method getter=xaDataSourceClass.getMethod("get" + name,noClasses);
        type=getter.getReturnType();
      }
 catch (      NoSuchMethodException e) {
        try {
          Method isMethod=xaDataSourceClass.getMethod("is" + name,(Class[])null);
          type=isMethod.getReturnType();
        }
 catch (        NoSuchMethodException nsme) {
          type=String.class;
        }
      }
      Method setter=xaDataSourceClass.getMethod("set" + name,new Class<?>[]{type});
      PropertyEditor editor=PropertyEditorManager.findEditor(type);
      if (editor == null)       throw new ResourceException("No property editor found for type: " + type);
      editor.setAsText(value);
      setter.invoke(xads,new Object[]{editor.getValue()});
    }
  }
 catch (  InstantiationException ie) {
    throw new ResourceException("Could not create an XADataSource: ",ie);
  }
catch (  IllegalAccessException iae) {
    throw new ResourceException("Could not set a property: ",iae);
  }
catch (  IllegalArgumentException iae) {
    throw new ResourceException("Could not set a property: ",iae);
  }
catch (  InvocationTargetException ite) {
    throw new ResourceException("Could not invoke setter on XADataSource: ",ite);
  }
catch (  NoSuchMethodException nsme) {
    throw new ResourceException("Could not find accessor on XADataSource: ",nsme);
  }
  return xads;
}

{
  if (hostSystemProperties == null) {
    throw MESSAGES.nullVar("hostSystemProperties");
  }
  this.hostSystemProperties=Collections.unmodifiableMap(hostSystemProperties);
  if (stdin == null) {
    throw MESSAGES.nullVar("stdin");
  }
  this.stdin=stdin;
  if (stdout == null) {
    throw MESSAGES.nullVar("stdout");
  }
  this.stdout=stdout;
  if (stderr == null) {
    throw MESSAGES.nullVar("stderr");
  }
  this.stderr=stderr;
  if (processControllerAddress == null) {
    throw MESSAGES.nullVar("processControllerAddress");
  }
  if (processControllerPort == null) {
    throw MESSAGES.nullVar("processControllerPort");
  }
  if (hostControllerAddress == null) {
    throw MESSAGES.nullVar("hostControllerAddress");
  }
  if (hostControllerPort == null) {
    throw MESSAGES.nullVar("hostControllerPort");
  }
  this.processControllerPort=processControllerPort;
  this.processControllerAddress=processControllerAddress;
  this.hostControllerAddress=hostControllerAddress;
  this.hostControllerPort=hostControllerPort;
  this.isRestart=isRestart;
  File home=getFileFromProperty(HOME_DIR);
  if (home == null) {
    home=new File(System.getProperty("user.dir"));
  }
  this.homeDir=home;
  System.setProperty(HOME_DIR,homeDir.getAbsolutePath());
  File tmp=getFileFromProperty(MODULES_DIR);
  if (tmp == null) {
    tmp=new File(this.homeDir,"modules");
  }
  this.modulesDir=tmp;
  System.setProperty(MODULES_DIR,this.modulesDir.getAbsolutePath());
  tmp=getFileFromProperty(DOMAIN_BASE_DIR);
  if (tmp == null) {
    tmp=new File(this.homeDir,"domain");
  }
  this.domainBaseDir=tmp;
  System.setProperty(DOMAIN_BASE_DIR,this.domainBaseDir.getAbsolutePath());
  tmp=getFileFromProperty(DOMAIN_CONFIG_DIR);
  if (tmp == null) {
    tmp=new File(this.domainBaseDir,"configuration");
  }
  this.domainConfigurationDir=tmp;
  System.setProperty(DOMAIN_CONFIG_DIR,this.domainConfigurationDir.getAbsolutePath());
  hostConfigurationFile=new ConfigurationFile(domainConfigurationDir,"host.xml",hostConfig);
  domainConfigurationFile=new ConfigurationFile(domainConfigurationDir,"domain.xml",domainConfig);
  tmp=getFileFromProperty(DOMAIN_DEPLOYMENT_DIR);
  if (tmp == null) {
    tmp=new File(this.domainBaseDir,"content");
  }
  this.domainDeploymentDir=tmp;
  System.setProperty(DOMAIN_DEPLOYMENT_DIR,this.domainDeploymentDir.getAbsolutePath());
  tmp=getFileFromProperty(DOMAIN_DATA_DIR);
  if (tmp == null) {
    tmp=new File(this.domainBaseDir,"data");
  }
  this.domainDataDir=tmp;
  System.setProperty(DOMAIN_DATA_DIR,this.domainDataDir.getAbsolutePath());
  tmp=getFileFromProperty(DOMAIN_LOG_DIR);
  if (tmp == null) {
    tmp=new File(this.domainBaseDir,"log");
  }
  this.domainLogDir=tmp;
  System.setProperty(DOMAIN_LOG_DIR,this.domainLogDir.getAbsolutePath());
  tmp=getFileFromProperty(DOMAIN_SERVERS_DIR);
  if (tmp == null) {
    tmp=new File(this.domainBaseDir,"servers");
  }
  this.domainServersDir=tmp;
  System.setProperty(DOMAIN_SERVERS_DIR,this.domainServersDir.getAbsolutePath());
  tmp=getFileFromProperty(DOMAIN_TEMP_DIR);
  if (tmp == null) {
    tmp=new File(this.domainBaseDir,"tmp");
  }
  this.domainTempDir=tmp;
  System.setProperty(DOMAIN_TEMP_DIR,this.domainTempDir.getAbsolutePath());
  if (defaultJVM != null) {
    if (defaultJVM.equals("java")) {
      defaultJVM=DefaultJvmUtils.findJavaExecutable(DefaultJvmUtils.getCurrentJvmHome());
    }
    this.defaultJVM=new File(defaultJVM);
  }
 else {
    this.defaultJVM=null;
  }
  this.backupDomainFiles=backupDomainFiles;
  this.useCachedDc=useCachedDc;
  this.initialRunningMode=initialRunningMode;
  this.productConfig=productConfig;
}

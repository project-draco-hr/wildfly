{
  final PathAddress address=PathAddress.pathAddress(operation.get(OP_ADDR));
  final String name=address.getLastElement().getValue();
  final String path=operation.require(CommonAttributes.PATH).asString();
  final Boolean enabled=operation.hasDefined(CommonAttributes.SCAN_ENABLED) ? operation.get(CommonAttributes.SCAN_ENABLED).asBoolean() : true;
  final Integer interval=operation.hasDefined(CommonAttributes.SCAN_INTERVAL) ? operation.get(CommonAttributes.SCAN_INTERVAL).asInt() : 5000;
  final String relativeTo=operation.hasDefined(CommonAttributes.RELATIVE_TO) ? operation.get(CommonAttributes.RELATIVE_TO).asString() : null;
  final Boolean autoDeployZip=operation.hasDefined(CommonAttributes.AUTO_DEPLOY_ZIPPED) ? operation.get(CommonAttributes.AUTO_DEPLOY_ZIPPED).asBoolean() : true;
  final Boolean autoDeployExp=operation.hasDefined(CommonAttributes.AUTO_DEPLOY_EXPLODED) ? operation.get(CommonAttributes.AUTO_DEPLOY_EXPLODED).asBoolean() : false;
  final Long deploymentTimeout=operation.hasDefined(CommonAttributes.DEPLOYMENT_TIMEOUT) ? operation.get(CommonAttributes.DEPLOYMENT_TIMEOUT).asLong() : 60L;
  model.get(CommonAttributes.NAME).set(name);
  model.get(CommonAttributes.PATH).set(path);
  if (enabled != null)   model.get(CommonAttributes.SCAN_ENABLED).set(enabled);
  if (interval != null)   model.get(CommonAttributes.SCAN_INTERVAL).set(interval);
  if (autoDeployZip != null)   model.get(CommonAttributes.AUTO_DEPLOY_ZIPPED).set(autoDeployZip);
  if (autoDeployExp != null)   model.get(CommonAttributes.AUTO_DEPLOY_EXPLODED).set(autoDeployExp);
  if (relativeTo != null)   model.get(CommonAttributes.RELATIVE_TO).set(relativeTo);
  if (deploymentTimeout != null)   model.get(CommonAttributes.DEPLOYMENT_TIMEOUT).set(deploymentTimeout);
}

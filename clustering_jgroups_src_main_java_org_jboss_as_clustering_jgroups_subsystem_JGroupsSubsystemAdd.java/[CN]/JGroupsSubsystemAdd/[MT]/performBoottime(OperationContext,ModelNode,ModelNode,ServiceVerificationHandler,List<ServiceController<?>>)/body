{
  ROOT_LOGGER.activatingSubsystem();
  ServiceTarget target=context.getServiceTarget();
  OperationStepHandler step=new AbstractDeploymentChainStep(){
    @Override protected void execute(    DeploymentProcessorTarget processorTarget){
      processorTarget.addDeploymentProcessor(JGroupsExtension.SUBSYSTEM_NAME,Phase.DEPENDENCIES,Phase.DEPENDENCIES_CLUSTERING,new ClusteringDependencyProcessor());
    }
  }
;
  context.addStep(step,OperationContext.Stage.RUNTIME);
  ServiceController<ProtocolDefaults> pdsController=installProtocolDefaultsService(target,verificationHandler);
  if (newControllers != null) {
    newControllers.add(pdsController);
  }
  final String stack=JGroupsSubsystemRootResourceDefinition.DEFAULT_STACK.resolveModelAttribute(context,model).asString();
  ServiceController<ChannelFactory> dcfsController=installDefaultChannelFactoryService(target,stack,verificationHandler);
  if (newControllers != null) {
    newControllers.add(dcfsController);
  }
}

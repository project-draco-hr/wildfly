{
  if (!super.isAvailable(ctx)) {
    return false;
  }
  if (requiredAddress == null) {
    return ctx.getConfig().isAccessControl() ? accessRequirement.isSatisfied(ctx) : true;
  }
  if (dependsOnProfile && ctx.isDomainMode()) {
    return ctx.getConfig().isAccessControl() ? accessRequirement.isSatisfied(ctx) : true;
  }
  if (available != null) {
    return available.booleanValue();
  }
  final ModelControllerClient client=ctx.getModelControllerClient();
  if (client == null) {
    return false;
  }
  if (requiredType == null) {
    available=isAddressValid(ctx);
  }
 else {
    final ModelNode request=new ModelNode();
    final ModelNode address=request.get(Util.ADDRESS);
    for (    OperationRequestAddress.Node node : requiredAddress) {
      address.add(node.getType(),node.getName());
    }
    request.get(Util.OPERATION).set(Util.READ_CHILDREN_TYPES);
    ModelNode result;
    try {
      result=ctx.getModelControllerClient().execute(request);
    }
 catch (    IOException e) {
      return false;
    }
    available=Util.listContains(result,requiredType);
  }
  if (ctx.getConfig().isAccessControl()) {
    available=available && accessRequirement.isSatisfied(ctx);
  }
  return available;
}

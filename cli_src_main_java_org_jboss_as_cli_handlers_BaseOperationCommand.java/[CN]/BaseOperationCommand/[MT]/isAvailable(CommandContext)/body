{
  if (!super.isAvailable(ctx)) {
    return false;
  }
  if (requiredAddress == null) {
    return true;
  }
  if (dependsOnProfile && ctx.isDomainMode()) {
    return true;
  }
  if (addressAvailable != null) {
    return addressAvailable.booleanValue();
  }
  final ModelControllerClient client=ctx.getModelControllerClient();
  if (client == null) {
    return false;
  }
  final ModelNode request=new ModelNode();
  final ModelNode address=request.get(Util.ADDRESS);
  if (requiredType == null) {
    address.setEmptyList();
    request.get(Util.OPERATION).set(Util.VALIDATE_ADDRESS);
    final ModelNode addressValue=request.get(Util.VALUE);
    for (    OperationRequestAddress.Node node : requiredAddress) {
      addressValue.add(node.getType(),node.getName());
    }
    final ModelNode response;
    try {
      response=ctx.getModelControllerClient().execute(request);
    }
 catch (    IOException e) {
      return false;
    }
    final ModelNode result=response.get(Util.RESULT);
    if (!result.isDefined()) {
      return false;
    }
    final ModelNode valid=result.get(Util.VALID);
    if (!valid.isDefined()) {
      return false;
    }
    addressAvailable=valid.asBoolean();
  }
 else {
    for (    OperationRequestAddress.Node node : requiredAddress) {
      address.add(node.getType(),node.getName());
    }
    request.get(Util.OPERATION).set(Util.READ_CHILDREN_TYPES);
    ModelNode result;
    try {
      result=ctx.getModelControllerClient().execute(request);
    }
 catch (    IOException e) {
      return false;
    }
    addressAvailable=Util.listContains(result,requiredType);
  }
  return addressAvailable;
}

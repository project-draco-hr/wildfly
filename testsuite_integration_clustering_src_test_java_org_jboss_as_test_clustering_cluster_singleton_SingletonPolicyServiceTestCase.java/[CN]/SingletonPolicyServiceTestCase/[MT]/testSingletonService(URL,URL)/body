{
  stop(CONTAINER_2);
  try (CloseableHttpClient client=TestHttpClientUtils.promiscuousCookieHttpClient()){
    HttpResponse response=client.execute(new HttpGet(MyServiceServlet.createURI(baseURL1,MyServicePolicyActivator.SERVICE_NAME,NODE_1)));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertEquals(NODE_1,response.getFirstHeader("node").getValue());
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    start(CONTAINER_2);
    response=client.execute(new HttpGet(MyServiceServlet.createURI(baseURL1,MyServicePolicyActivator.SERVICE_NAME,NODE_1)));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertEquals(NODE_1,response.getFirstHeader("node").getValue());
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    response=client.execute(new HttpGet(MyServiceServlet.createURI(baseURL2,MyServicePolicyActivator.SERVICE_NAME,NODE_1)));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertEquals(NODE_1,response.getFirstHeader("node").getValue());
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    stop(CONTAINER_2);
    response=client.execute(new HttpGet(MyServiceServlet.createURI(baseURL1,MyServicePolicyActivator.SERVICE_NAME,NODE_1)));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertEquals(NODE_1,response.getFirstHeader("node").getValue());
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    start(CONTAINER_2);
    response=client.execute(new HttpGet(MyServiceServlet.createURI(baseURL1,MyServicePolicyActivator.SERVICE_NAME,NODE_1)));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertEquals(NODE_1,response.getFirstHeader("node").getValue());
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    response=client.execute(new HttpGet(MyServiceServlet.createURI(baseURL2,MyServicePolicyActivator.SERVICE_NAME,NODE_1)));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertEquals(NODE_1,response.getFirstHeader("node").getValue());
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    stop(CONTAINER_1);
    response=client.execute(new HttpGet(MyServiceServlet.createURI(baseURL2,MyServicePolicyActivator.SERVICE_NAME,NODE_2)));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertEquals(NODE_2,response.getFirstHeader("node").getValue());
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    start(CONTAINER_1);
    response=client.execute(new HttpGet(MyServiceServlet.createURI(baseURL1,MyServicePolicyActivator.SERVICE_NAME,NODE_2)));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertEquals(NODE_2,response.getFirstHeader("node").getValue());
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    response=client.execute(new HttpGet(MyServiceServlet.createURI(baseURL2,MyServicePolicyActivator.SERVICE_NAME,NODE_2)));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertEquals(NODE_2,response.getFirstHeader("node").getValue());
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
  }
 }

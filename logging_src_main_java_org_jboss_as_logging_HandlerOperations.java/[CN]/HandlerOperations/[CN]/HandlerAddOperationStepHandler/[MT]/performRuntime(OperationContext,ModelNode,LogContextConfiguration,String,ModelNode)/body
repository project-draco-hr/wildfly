{
  final String className;
  final String moduleName;
  if (type == null) {
    className=CLASS.resolveModelAttribute(context,model).asString();
    moduleName=MODULE.resolveModelAttribute(context,model).asString();
  }
 else {
    className=type.getName();
    moduleName=null;
  }
  HandlerConfiguration configuration=logContextConfiguration.getHandlerConfiguration(name);
  final boolean exists=configuration != null;
  if (!exists) {
    LoggingLogger.ROOT_LOGGER.tracef("Adding handler '%s' at '%s'",name,LoggingOperations.getAddress(operation));
    configuration=createHandlerConfiguration(className,moduleName,name,logContextConfiguration);
  }
 else   if (!className.equals(configuration.getClassName()) || (moduleName == null ? configuration.getModuleName() != null : !moduleName.equals(configuration.getModuleName()))) {
    LoggingLogger.ROOT_LOGGER.replacingNamedHandler(name);
    LoggingLogger.ROOT_LOGGER.debugf("Removing handler %s of type '%s' in module '%s' and replacing with type '%s' in module '%s'",name,configuration.getClassName(),configuration.getModuleName(),className,moduleName);
    logContextConfiguration.removeHandlerConfiguration(name);
    if (logContextConfiguration.getPojoNames().contains(name)) {
      logContextConfiguration.removePojoConfiguration(name);
    }
    configuration=createHandlerConfiguration(className,moduleName,name,logContextConfiguration);
  }
  for (  AttributeDefinition attribute : attributes) {
    final boolean skip;
    if ((attribute.equals(CLASS) || attribute.equals(MODULE)) || attribute.equals(FILTER)) {
      skip=true;
    }
 else {
      skip=(exists && equalValue(attribute,context,model,logContextConfiguration,configuration));
    }
    if (!skip)     handleProperty(attribute,context,model,logContextConfiguration,configuration);
  }
}

{
  boolean restartRequired=false;
  if (logContextConfiguration.getHandlerNames().contains(addressName)) {
    final HandlerConfiguration configuration=logContextConfiguration.getHandlerConfiguration(addressName);
    if (LEVEL.getName().equals(attributeName)) {
      handleProperty(LEVEL,context,value,logContextConfiguration,configuration,false);
      handleProperty(LEVEL,context,value,logContextConfiguration,configuration,false);
    }
 else     if (FILTER.getName().equals(attributeName)) {
      handleProperty(FILTER_SPEC,context,value,logContextConfiguration,configuration,false);
    }
 else     if (FILTER_SPEC.getName().equals(attributeName)) {
      handleProperty(FILTER_SPEC,context,value,logContextConfiguration,configuration,false);
    }
 else     if (FORMATTER.getName().equals(attributeName)) {
      handleProperty(FORMATTER,context,value,logContextConfiguration,configuration,false);
    }
 else     if (ENCODING.getName().equals(attributeName)) {
      handleProperty(ENCODING,context,value,logContextConfiguration,configuration,false);
    }
 else     if (SUBHANDLERS.getName().equals(attributeName)) {
      handleProperty(SUBHANDLERS,context,value,logContextConfiguration,configuration,false);
    }
 else     if (PROPERTIES.getName().equals(attributeName)) {
      final PropertyConfigurable propertyConfigurable;
      final PojoConfiguration pojoConfiguration=logContextConfiguration.getPojoConfiguration(configuration.getName());
      if (pojoConfiguration == null) {
        propertyConfigurable=configuration;
      }
 else {
        propertyConfigurable=pojoConfiguration;
      }
      if (value.isDefined()) {
        for (        Property property : value.asPropertyList()) {
          propertyConfigurable.setPropertyValueString(property.getName(),property.getValue().asString());
        }
      }
 else {
        final List<String> propertyNames=propertyConfigurable.getPropertyNames();
        for (        String propertyName : propertyNames) {
          if (propertyName.equals("enabled"))           continue;
          propertyConfigurable.removeProperty(propertyName);
          restartRequired=true;
        }
      }
    }
 else     if (QUEUE_LENGTH.getName().equals(attributeName)) {
      restartRequired=true;
    }
 else {
      for (      AttributeDefinition attribute : getAttributes()) {
        if (attribute.getName().equals(attributeName)) {
          handleProperty(attribute,context,value,logContextConfiguration,configuration,false);
          restartRequired=Logging.requiresReload(attribute.getFlags());
          break;
        }
      }
    }
    addOrderPropertiesStep(context,propertySorter,configuration);
  }
  return restartRequired;
}

{
  String newLevel=null;
  final EnumSet<Attribute> required=EnumSet.of(Attribute.NEW_LEVEL);
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    final String value=reader.getAttributeValue(i);
    if (reader.getAttributeNamespace(i) != null) {
      throw unexpectedAttribute(reader,i);
    }
 else {
      final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case NEW_LEVEL:
{
          newLevel=value;
          break;
        }
default :
      throw unexpectedAttribute(reader,i);
  }
  required.remove(attribute);
}
}
if (!required.isEmpty()) {
throw missingRequired(reader,required);
}
if (reader.nextTag() != END_ELEMENT) {
throw unexpectedElement(reader);
}
return new ChangeLevelFilterType(newLevel);
}

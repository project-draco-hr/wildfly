{
  final FilterType filterElement;
switch (Namespace.forUri(reader.getNamespaceURI())) {
case LOGGING_1_0:
{
      final Element element=Element.forName(reader.getLocalName());
switch (element) {
case ALL:
{
          filterElement=parseAllFilterElement(reader);
          break;
        }
case ANY:
{
        filterElement=parseAnyFilterElement(reader);
        break;
      }
case ACCEPT:
{
      filterElement=parseAcceptFilterElement(reader);
      break;
    }
case DENY:
{
    filterElement=parseDenyFilterElement(reader);
    break;
  }
case NOT:
{
  filterElement=parseNotFilterElement(reader);
  break;
}
case MATCH:
{
filterElement=parseMatchFilterElement(reader);
break;
}
case REPLACE:
{
filterElement=parseReplaceFilterElement(reader);
break;
}
case LEVEL:
{
filterElement=parseLevelFilterElement(reader);
break;
}
case LEVEL_RANGE:
{
filterElement=parseLevelRangeFilterElement(reader);
break;
}
case CHANGE_LEVEL:
{
filterElement=parseChangeLevelFilterElement(reader);
break;
}
default :
{
throw unexpectedElement(reader);
}
}
break;
}
default :
{
throw unexpectedElement(reader);
}
}
return filterElement;
}

{
  final EnumSet<Attribute> required=EnumSet.of(Attribute.PATTERN);
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    requireNoNamespaceAttribute(reader,i);
    final String value=reader.getAttributeValue(i);
    final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
    required.remove(attribute);
switch (attribute) {
case PATTERN:
{
        PatternFormatterResourceDefinition.PATTERN.parseAndSetParameter(value,operation,reader);
        break;
      }
case COLOR_MAP:
{
      PatternFormatterResourceDefinition.COLOR_MAP.parseAndSetParameter(value,operation,reader);
      break;
    }
default :
  throw unexpectedAttribute(reader,i);
}
}
if (!required.isEmpty()) {
throw missingRequired(reader,required);
}
requireNoContent(reader);
}

{
  String pattern=null;
  final EnumSet<Attribute> required=EnumSet.of(Attribute.PATTERN);
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    requireNoNamespaceAttribute(reader,i);
    final String value=reader.getAttributeValue(i);
    final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
    required.remove(attribute);
switch (attribute) {
case PATTERN:
{
        pattern=value;
        break;
      }
default :
    throw unexpectedAttribute(reader,i);
}
}
if (!required.isEmpty()) {
throw missingRequired(reader,required);
}
requireNoContent(reader);
return pattern;
}

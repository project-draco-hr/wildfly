{
  if (node.hasDefined(ASYNC_HANDLER)) {
    final ModelNode handlers=node.get(ASYNC_HANDLER);
    for (    Property handlerProp : handlers.asPropertyList()) {
      final String name=handlerProp.getName();
      final ModelNode handler=handlerProp.getValue();
      if (handler.isDefined()) {
        writeAsynchHandler(writer,handler,name);
      }
    }
  }
  if (node.hasDefined(CONSOLE_HANDLER)) {
    final ModelNode handlers=node.get(CONSOLE_HANDLER);
    for (    Property handlerProp : handlers.asPropertyList()) {
      final String name=handlerProp.getName();
      final ModelNode handler=handlerProp.getValue();
      if (handler.isDefined()) {
        writeConsoleHandler(writer,handler,name);
      }
    }
  }
  if (node.hasDefined(FILE_HANDLER)) {
    final ModelNode handlers=node.get(FILE_HANDLER);
    for (    Property handlerProp : handlers.asPropertyList()) {
      final String name=handlerProp.getName();
      final ModelNode handler=handlerProp.getValue();
      if (handler.isDefined()) {
        writeFileHandler(writer,handler,name);
      }
    }
  }
  if (node.hasDefined(CUSTOM_HANDLER)) {
    final ModelNode handlers=node.get(CUSTOM_HANDLER);
    for (    Property handlerProp : handlers.asPropertyList()) {
      final String name=handlerProp.getName();
      final ModelNode handler=handlerProp.getValue();
      if (handler.isDefined()) {
        writeCustomHandler(writer,handler,name);
      }
    }
  }
  if (node.hasDefined(PERIODIC_ROTATING_FILE_HANDLER)) {
    final ModelNode handlers=node.get(PERIODIC_ROTATING_FILE_HANDLER);
    for (    Property handlerProp : handlers.asPropertyList()) {
      final String name=handlerProp.getName();
      final ModelNode handler=handlerProp.getValue();
      if (handler.isDefined()) {
        writePeriodicRotatingFileHandler(writer,handler,name);
      }
    }
  }
  if (node.hasDefined(SIZE_ROTATING_FILE_HANDLER)) {
    final ModelNode handlers=node.get(SIZE_ROTATING_FILE_HANDLER);
    for (    Property handlerProp : handlers.asPropertyList()) {
      final String name=handlerProp.getName();
      final ModelNode handler=handlerProp.getValue();
      if (handler.isDefined()) {
        writeSizeRotatingFileHandler(writer,handler,name);
      }
    }
  }
  if (node.hasDefined(SYSLOG_HANDLER)) {
    final ModelNode handlers=node.get(SYSLOG_HANDLER);
    for (    Property handlerProp : handlers.asPropertyList()) {
      final String name=handlerProp.getName();
      final ModelNode handler=handlerProp.getValue();
      if (handler.isDefined()) {
        writeSyslogHandler(writer,handler,name);
      }
    }
  }
  if (node.hasDefined(LOGGER)) {
    for (    String name : node.get(LOGGER).keys()) {
      writeLogger(writer,name,node.get(LOGGER,name));
    }
  }
  if (node.hasDefined(ROOT_LOGGER_PATH_NAME)) {
    writeRootLogger(writer,node.get(ROOT_LOGGER_PATH_NAME,ROOT_LOGGER_ATTRIBUTE_NAME));
  }
}

{
  final EnumSet<Element> encountered=EnumSet.noneOf(Element.class);
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
switch (Namespace.forUri(reader.getNamespaceURI())) {
case LOGGING_1_0:
{
        final Element element=Element.forName(reader.getLocalName());
        if (encountered.contains(element)) {
          throw duplicateNamedElement(reader,reader.getLocalName());
        }
        encountered.add(element);
switch (element) {
case LEVEL:
{
            handlerElement.setLevel(parseLevelElement(reader));
            break;
          }
case FILTER:
{
          handlerElement.setFilter(parseFilterElement(reader));
          break;
        }
case FORMATTER:
{
        handlerElement.setFormatter(parseFormatterElement(reader));
        break;
      }
case SUBHANDLERS:
{
      handlerElement.setSubhandlers(parseHandlersElement(reader));
      break;
    }
case PROPERTIES:
{
    handlerElement.setProperties(parsePropertiesElement(reader));
    break;
  }
default :
throw unexpectedElement(reader);
}
}
default :
throw unexpectedElement(reader);
}
}
}

{
  SessionKey key=mock(SessionKey.class);
  String sessionId="abc";
  @SuppressWarnings("rawtypes") ArgumentCaptor<DistributedCacheManager.Operation> capturedOperation=ArgumentCaptor.forClass(DistributedCacheManager.Operation.class);
  when(this.keyFactory.createKey(sessionId)).thenReturn(key);
  when(this.invoker.invoke(same(this.sessionCache),capturedOperation.capture())).thenReturn(null);
  this.manager.removeSession(sessionId);
  DistributedCacheManager<OutgoingDistributableSessionData,SessionKey>.Operation<Map<Object,Object>> operation=capturedOperation.getValue();
  Map<Object,Object> expectedMap=mock(Map.class);
  when(this.sessionCache.getAdvancedCache()).thenReturn(this.sessionCache);
  when(this.sessionCache.withFlags(Flag.SKIP_CACHE_LOAD,Flag.SKIP_REMOTE_LOOKUP)).thenReturn(this.sessionCache);
  when(this.sessionCache.remove(key)).thenReturn(expectedMap);
  Map<Object,Object> resultMap=operation.invoke(this.sessionCache);
  assertSame(expectedMap,resultMap);
}

{
  @SuppressWarnings("unchecked") CacheEntryActivatedEvent<SessionKey,Map<Object,Object>> event=mock(CacheEntryActivatedEvent.class);
  when(event.isPre()).thenReturn(true);
  this.manager.activated(event);
  verifyZeroInteractions(this.sessionManager);
  SessionKey key=mock(SessionKey.class);
  when(event.isPre()).thenReturn(false);
  when(event.getCache()).thenReturn(this.sessionCache);
  when(this.sessionCache.getAdvancedCache()).thenReturn(this.sessionCache);
  when(this.sessionCache.getClassLoader()).thenReturn(Thread.currentThread().getContextClassLoader());
  when(event.getKey()).thenReturn(key);
  when(this.keyFactory.ours(key)).thenReturn(false);
  verifyZeroInteractions(this.sessionManager);
  when(event.isPre()).thenReturn(false);
  when(event.getCache()).thenReturn(this.sessionCache);
  when(this.sessionCache.getAdvancedCache()).thenReturn(this.sessionCache);
  when(this.sessionCache.getClassLoader()).thenReturn(Thread.currentThread().getContextClassLoader());
  when(event.getKey()).thenReturn(key);
  when(this.keyFactory.ours(key)).thenReturn(true);
  this.manager.activated(event);
  verify(this.sessionManager).sessionActivated();
}

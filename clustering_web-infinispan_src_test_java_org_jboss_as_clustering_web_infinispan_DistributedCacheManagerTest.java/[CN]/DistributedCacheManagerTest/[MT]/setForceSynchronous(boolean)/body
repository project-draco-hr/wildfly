{
  this.manager.setForceSynchronous(forceSynchronous);
  @SuppressWarnings("unused") AdvancedCache<SessionKey,Map<Object,Object>> syncCache=mock(AdvancedCache.class);
  SessionKey key=mock(SessionKey.class);
  String sessionId="abc";
  @SuppressWarnings("rawtypes") ArgumentCaptor<DistributedCacheManager.Operation> capturedOperation=ArgumentCaptor.forClass(DistributedCacheManager.Operation.class);
  when(this.keyFactory.createKey(sessionId)).thenReturn(key);
  when(this.sessionCache.getAdvancedCache()).thenReturn(this.sessionCache);
  when(this.sessionCache.withFlags(Flag.FORCE_SYNCHRONOUS)).thenReturn(syncCache);
  when(this.invoker.invoke(same(forceSynchronous ? syncCache : this.sessionCache),capturedOperation.capture())).thenReturn(null);
  this.manager.removeSession(sessionId);
}

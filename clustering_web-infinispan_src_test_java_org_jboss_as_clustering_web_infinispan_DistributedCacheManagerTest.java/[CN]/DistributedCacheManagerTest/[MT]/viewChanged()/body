{
  ViewChangedEvent event=mock(ViewChangedEvent.class);
  Address newMember=mock(Address.class);
  Address member=mock(Address.class);
  Address oldMember=mock(Address.class);
  @SuppressWarnings("unchecked") Cache<Address,String> jvmRouteCache=mock(Cache.class);
  String jvmRoute="node1";
  DistributedCacheManager.JvmRouteHandler handler=this.start(ComponentStatus.RUNNING,false);
  when(this.jvmRouteCacheSource.<Address,String>getCache(this.registry,this.sessionManager)).thenReturn(jvmRouteCache);
  when(jvmRouteCache.startBatch()).thenReturn(true);
  when(event.getOldMembers()).thenReturn(Arrays.asList(member,oldMember));
  when(event.getNewMembers()).thenReturn(Arrays.asList(member,newMember));
  when(event.getLocalAddress()).thenReturn(newMember);
  when(this.sessionManager.getJvmRoute()).thenReturn(jvmRoute);
  handler.viewChanged(event);
  verify(jvmRouteCache).remove(same(oldMember));
  verify(jvmRouteCache).put(same(newMember),same(jvmRoute));
  verify(jvmRouteCache).endBatch(true);
}

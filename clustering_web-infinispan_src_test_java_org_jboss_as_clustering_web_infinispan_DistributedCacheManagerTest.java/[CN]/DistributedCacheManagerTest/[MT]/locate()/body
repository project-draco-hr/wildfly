{
  String sessionId="ABC123";
  String expected="node1";
  when(this.sessionCache.getAdvancedCache()).thenReturn(this.sessionCache);
  when(this.sessionCache.getDistributionManager()).thenReturn(null);
  when(this.sessionManager.getJvmRoute()).thenReturn(expected);
  String result=this.manager.locate(sessionId);
  assertSame(expected,result);
  DistributionManager distManager=mock(DistributionManager.class);
  when(this.sessionCache.getAdvancedCache()).thenReturn(this.sessionCache);
  when(this.sessionCache.getDistributionManager()).thenReturn(distManager);
  when(distManager.isRehashInProgress()).thenReturn(true);
  when(this.sessionManager.getJvmRoute()).thenReturn(expected);
  result=this.manager.locate(sessionId);
  assertSame(expected,result);
  EmbeddedCacheManager container=mock(EmbeddedCacheManager.class);
  Address address1=mock(Address.class);
  Address address2=mock(Address.class);
  Address localAddress=mock(Address.class);
  List<Address> addresses=Arrays.asList(address1,address2,localAddress);
  when(this.sessionCache.getAdvancedCache()).thenReturn(this.sessionCache);
  when(this.sessionCache.getDistributionManager()).thenReturn(distManager);
  when(distManager.isRehashInProgress()).thenReturn(false);
  when(distManager.locate(same(sessionId))).thenReturn(addresses);
  when(this.sessionCache.getCacheManager()).thenReturn(container);
  when(container.getAddress()).thenReturn(address2);
  when(this.sessionManager.getJvmRoute()).thenReturn(expected);
  result=this.manager.locate(sessionId);
  assertSame(expected,result);
  addresses=Arrays.asList(address1,address2);
  ArgumentCaptor<Address> capturedAddress=ArgumentCaptor.forClass(Address.class);
  when(this.sessionCache.getAdvancedCache()).thenReturn(this.sessionCache);
  when(this.sessionCache.getDistributionManager()).thenReturn(distManager);
  when(distManager.isRehashInProgress()).thenReturn(false);
  when(distManager.locate(same(sessionId))).thenReturn(addresses);
  when(this.sessionCache.getCacheManager()).thenReturn(container);
  when(container.getAddress()).thenReturn(localAddress);
  when(this.jvmRouteCache.get(capturedAddress.capture())).thenReturn(expected);
  when(this.sessionCache.withFlags(Flag.FORCE_SYNCHRONOUS)).thenReturn(this.sessionCache);
  result=this.manager.locate(sessionId);
  assertSame(expected,result);
  assertTrue(addresses.contains(capturedAddress.getValue()));
}

{
  super(reader);
  String name=null;
  String group=null;
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    final String value=reader.getAttributeValue(i);
    if (reader.getAttributeNamespace(i) != null) {
      throw unexpectedAttribute(reader,i);
    }
 else {
      final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case NAME:
{
          name=value;
          break;
        }
default :
      throw unexpectedAttribute(reader,i);
  }
}
}
this.name=name == null ? DEFAULT_NAME : name;
this.serverGroup=group;
while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
switch (Namespace.forUri(reader.getNamespaceURI())) {
case DOMAIN_1_0:
{
    final Element element=Element.forName(reader.getLocalName());
switch (element) {
case INTERFACE_SPECS:
{
        parseInterfaces(reader);
        break;
      }
case JVM:
{
      if (jvm != null) {
        throw new XMLStreamException(element.getLocalName() + " already defined",reader.getLocation());
      }
      jvm=new JvmElement(reader);
      break;
    }
case SOCKET_BINDING_GROUP:
{
    if (bindingGroup != null) {
      throw new XMLStreamException(element.getLocalName() + " already defined",reader.getLocation());
    }
    bindingGroup=new SocketBindingGroupRefElement(reader);
    break;
  }
default :
throw unexpectedElement(reader);
}
break;
}
default :
throw unexpectedElement(reader);
}
}
}

{
  final ModelNode deployment=Resource.Tools.readModel(context.readResource(PathAddress.EMPTY_ADDRESS));
  final boolean isEnabled=ENABLED.resolveModelAttribute(context,deployment).asBoolean();
  final String runtimeName=RUNTIME_NAME.resolveModelAttribute(context,deployment).asString();
  context.addStep(new OperationStepHandler(){
    @Override public void execute(    final OperationContext context,    final ModelNode operation) throws OperationFailedException {
      final ModelNode result=context.getResult();
      if (!isEnabled) {
        result.set(AbstractDeploymentUnitService.DeploymentStatus.STOPPED.toString());
      }
 else {
        final ServiceController<?> controller=context.getServiceRegistry(false).getService(Services.deploymentUnitName(runtimeName));
        if (controller != null) {
          if (controller.getSubstate() == ServiceController.Substate.WONT_START && controller.getState() == ServiceController.State.DOWN) {
            result.set(AbstractDeploymentUnitService.DeploymentStatus.STOPPED.toString());
          }
 else {
            result.set(((AbstractDeploymentUnitService)controller.getService()).getStatus().toString());
          }
        }
 else {
          result.set(NO_METRICS);
        }
      }
      context.stepCompleted();
    }
  }
,OperationContext.Stage.RUNTIME);
  context.stepCompleted();
}

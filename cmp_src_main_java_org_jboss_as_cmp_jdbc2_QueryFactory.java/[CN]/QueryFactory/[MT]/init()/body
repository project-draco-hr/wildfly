{
  Method findByPkMethod;
  Class home=entity.getHomeClass();
  if (home != null) {
    try {
      findByPkMethod=home.getMethod("findByPrimaryKey",new Class[]{entity.getPrimaryKeyClass()});
    }
 catch (    NoSuchMethodException e) {
      throw new RuntimeException("Home interface " + home.getClass().getName() + " does not contain findByPrimaryKey("+ entity.getPrimaryKeyClass().getName()+ ")");
    }
    FindByPrimaryKeyCommand findByPk=new FindByPrimaryKeyCommand(entity);
    queriesByMethod.put(findByPkMethod,findByPk);
  }
  Class local=entity.getLocalHomeClass();
  if (local != null) {
    try {
      findByPkMethod=local.getMethod("findByPrimaryKey",new Class[]{entity.getPrimaryKeyClass()});
    }
 catch (    NoSuchMethodException e) {
      throw new RuntimeException("Local home interface " + local.getClass().getName() + " does not contain findByPrimaryKey("+ entity.getPrimaryKeyClass().getName()+ ")");
    }
    FindByPrimaryKeyCommand findByPk=new FindByPrimaryKeyCommand(entity);
    queriesByMethod.put(findByPkMethod,findByPk);
  }
  Iterator definedFinders=entity.getMetaData().getQueries().iterator();
  while (definedFinders.hasNext()) {
    JDBCQueryMetaData q=(JDBCQueryMetaData)definedFinders.next();
    if (!queriesByMethod.containsKey(q.getMethod())) {
      if (q instanceof JDBCJBossQLQueryMetaData) {
        QueryCommand queryCommand=new JBossQLQueryCommand(entity,(JDBCJBossQLQueryMetaData)q);
        queriesByMethod.put(q.getMethod(),queryCommand);
      }
 else       if (q instanceof JDBCQlQueryMetaData) {
        QueryCommand queryCommand=new EJBQLQueryCommand(entity,(JDBCQlQueryMetaData)q);
        queriesByMethod.put(q.getMethod(),queryCommand);
      }
 else       if (q instanceof JDBCDeclaredQueryMetaData) {
        QueryCommand queryCommand=new DeclaredSQLQueryCommand(entity,(JDBCDeclaredQueryMetaData)q);
        queriesByMethod.put(q.getMethod(),queryCommand);
      }
 else       if (q instanceof JDBCDynamicQLQueryMetaData) {
        QueryCommand queryCommand=new DynamicQueryCommand(entity,(JDBCDynamicQLQueryMetaData)q);
        queriesByMethod.put(q.getMethod(),queryCommand);
      }
 else {
        throw new RuntimeException("Unsupported query metadata: method=" + q.getMethod().getName() + ", metadata="+ q);
      }
    }
  }
}

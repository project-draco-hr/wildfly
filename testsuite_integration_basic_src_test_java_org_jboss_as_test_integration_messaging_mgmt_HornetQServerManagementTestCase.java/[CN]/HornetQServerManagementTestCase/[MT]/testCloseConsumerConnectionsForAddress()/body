{
  JMSOperations adminSupport=JMSOperationsProvider.getInstance(managementClient);
  adminSupport.createJmsQueue(getQueueName(),getQueueJndiName());
  Connection connection=connectionFactory.createConnection("guest","guest");
  HornetQQueue queue=HornetQDestination.createQueue(getQueueName());
  Session session=connection.createSession(false,Session.AUTO_ACKNOWLEDGE);
  MessageConsumer consumer=session.createConsumer(queue);
  connection.start();
  final CountDownLatch connectionClosed=new CountDownLatch(1);
  connection.setExceptionListener(new ExceptionListener(){
    @Override public void onException(    JMSException e){
      connectionClosed.countDown();
    }
  }
);
  ModelNode operation=getHornetQServerOperation("close-consumer-connections-for-address");
  operation.get("address-match").set("jms.#");
  ModelNode result=execute(operation,true);
  assertTrue(result.isDefined());
  assertEquals(true,result.asBoolean());
  assertTrue(connectionClosed.await(500,MILLISECONDS));
  try {
    consumer.receiveNoWait();
    connection.createSession(false,Session.AUTO_ACKNOWLEDGE);
    Assert.fail("consumer can no longer be used after it has been closed");
  }
 catch (  JMSException e) {
  }
  try {
    connection.createSession(false,Session.AUTO_ACKNOWLEDGE);
    Assert.fail("connection can no longer be used after it has been closed");
  }
 catch (  JMSException e) {
  }
}

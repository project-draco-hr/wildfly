{
  try {
    ProtocolLogger.ROOT_LOGGER.tracef("%s handling incoming data",this);
    lastMessageTime=System.currentTimeMillis();
    final DataInput input=new DataInputStream(message);
    final ManagementProtocolHeader header=ManagementProtocolHeader.parse(input);
    final byte type=header.getType();
    if (type == ManagementProtocol.TYPE_PING) {
      ProtocolLogger.ROOT_LOGGER.tracef("Received ping on %s",this);
      handlePing(channel,header);
    }
 else     if (type == ManagementProtocol.TYPE_PONG) {
      ProtocolLogger.ROOT_LOGGER.tracef("Received on on %s",this);
    }
 else     if (type == ManagementProtocol.TYPE_BYE_BYE) {
      ProtocolLogger.ROOT_LOGGER.tracef("Received bye bye on %s, closing",this);
      handleChannelReset(channel);
    }
 else {
      handleMessage(channel,input,header);
    }
    message.close();
  }
 catch (  IOException e) {
    handleError(channel,e);
  }
catch (  Exception e) {
    handleError(channel,new IOException(e));
  }
 finally {
    StreamUtils.safeClose(message);
    ProtocolLogger.ROOT_LOGGER.tracef("%s done handling incoming data",this);
  }
  final Channel.Receiver next=next();
  if (next != null) {
    channel.receiveMessage(next);
  }
}

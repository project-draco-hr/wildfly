{
  final DataInputStream dataInputStream=new DataInputStream(messageInputStream);
  try {
    final byte version=dataInputStream.readByte();
    final String clientMarshallingStrategy=dataInputStream.readUTF();
    log.debug("Client with protocol version " + version + " and marshalling strategy "+ clientMarshallingStrategy+ " will communicate on "+ channel);
switch (version) {
case 0x00:
      final VersionOneProtocolChannelReceiver receiver=new VersionOneProtocolChannelReceiver(channel,this.serviceContainer,clientMarshallingStrategy);
    receiver.startReceiving();
  break;
default :
throw new RuntimeException("Cannot handle client version " + version);
}
}
 catch (IOException e) {
log.errorf(e,"Exception on channel %s from message %s",channel,messageInputStream);
IoUtils.safeClose(channel);
}
 finally {
IoUtils.safeClose(messageInputStream);
}
}

{
  try {
    registration=endpointValue.getValue().registerService("ejb3",new OpenListener(){
      @Override public void channelOpened(      Channel channel){
        log.tracef("Welcome %s to the ejb3 channel",channel);
        channel.addCloseHandler(new CloseHandler<Channel>(){
          @Override public void handleClose(          Channel closed,          IOException exception){
            log.tracef("channel %s closed",closed);
          }
        }
);
        Channel.Receiver handler=new Channel.Receiver(){
          @Override public void handleError(          Channel channel,          IOException error){
            try {
              channel.close();
            }
 catch (            IOException e) {
              throw new RuntimeException(e);
            }
            throw new RuntimeException("NYI: .handleError");
          }
          @Override public void handleEnd(          Channel channel){
            try {
              channel.close();
            }
 catch (            IOException e) {
            }
          }
          @Override public void handleMessage(          Channel channel,          MessageInputStream message){
            channel.receiveMessage(this);
            final SimpleDataInput input=new SimpleDataInput(Marshalling.createByteInput(message));
            try {
              final String txt=input.readUTF();
              System.out.println(txt);
              input.close();
            }
 catch (            IOException e) {
              log.tracef(e,"Exception on channel %s from message %s",channel,message);
              try {
                channel.writeShutdown();
              }
 catch (              IOException e1) {
              }
            }
          }
        }
;
        channel.receiveMessage(handler);
      }
      @Override public void registrationTerminated(){
      }
    }
,OptionMap.EMPTY);
  }
 catch (  ServiceRegistrationException e) {
    throw new StartException(e);
  }
}

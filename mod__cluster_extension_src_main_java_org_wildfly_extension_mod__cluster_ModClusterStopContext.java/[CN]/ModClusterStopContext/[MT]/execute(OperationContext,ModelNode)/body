{
  if (context.isNormalServer() && context.getServiceRegistry(false).getService(ContainerEventHandlerService.SERVICE_NAME) != null) {
    context.addStep(new OperationStepHandler(){
      @Override public void execute(      OperationContext context,      ModelNode operation) throws OperationFailedException {
        ServiceController<?> controller=context.getServiceRegistry(false).getService(ContainerEventHandlerService.SERVICE_NAME);
        final ModClusterServiceMBean service=(ModClusterServiceMBean)controller.getValue();
        ROOT_LOGGER.debugf("stop-context: %s",operation);
        final ContextHost contexthost=new ContextHost(operation);
        try {
          service.stopContext(contexthost.webhost,contexthost.webcontext,contexthost.waittime,TimeUnit.SECONDS);
        }
 catch (        IllegalArgumentException e) {
          throw new OperationFailedException(new ModelNode().set(MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext)));
        }
        context.completeStep(new OperationContext.RollbackHandler(){
          @Override public void handleRollback(          OperationContext context,          ModelNode operation){
            service.enableContext(contexthost.webhost,contexthost.webcontext);
          }
        }
);
      }
    }
,OperationContext.Stage.RUNTIME);
  }
  context.stepCompleted();
}

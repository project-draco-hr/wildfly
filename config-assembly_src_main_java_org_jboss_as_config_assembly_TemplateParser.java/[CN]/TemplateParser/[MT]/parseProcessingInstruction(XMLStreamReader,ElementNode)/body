{
  ProcessingInstructionNode node=null;
  String pi=reader.getPITarget();
  Map<String,String> data=parseProcessingInstructionData(reader.getPIData());
  if (pi.equals(TemplateParser.EXTENSIONS_PI)) {
    if (!data.isEmpty()) {
      throw new IllegalStateException("<?" + TemplateParser.EXTENSIONS_PI + "?> should not take any data");
    }
    if (extensionPlaceholder != null) {
      throw new IllegalStateException("Can only have one occurance of <?" + TemplateParser.EXTENSIONS_PI + "?>");
    }
    node=new ProcessingInstructionNode(TemplateParser.EXTENSIONS_PI,null);
    extensionPlaceholder=node;
  }
 else   if (pi.equals(TemplateParser.SUBSYSTEMS_PI)) {
    if (!parent.getName().equals("profile")) {
      throw new IllegalStateException("<?" + TemplateParser.SUBSYSTEMS_PI + "?> must be a child of <profile> "+ reader.getLocation());
    }
    if (data.size() == 0 || !data.containsKey("socket-binding-group")) {
      throw new IllegalStateException("Must have 'socket-binding-group' as <?" + TemplateParser.SUBSYSTEMS_PI + "?> data");
    }
    if (data.size() > 1) {
      throw new IllegalStateException("Only 'socket-binding-group' is valid <?" + TemplateParser.SUBSYSTEMS_PI + "?> data");
    }
    String profileName=parent.getAttributeValue("name","");
    node=new ProcessingInstructionNode(profileName,data);
    subsystemPlaceHolders.put(profileName,node);
  }
 else   if (pi.equals(TemplateParser.SOCKET_BINDINGS_PI)) {
    if (!parent.getName().equals("socket-binding-group")) {
      throw new IllegalStateException("<?" + TemplateParser.SOCKET_BINDINGS_PI + "?> must be a child of <socket-binding-group> "+ reader.getLocation());
    }
    if (!data.isEmpty()) {
      throw new IllegalStateException("<?" + TemplateParser.SOCKET_BINDINGS_PI + "?> should not take any data");
    }
    String groupName=parent.getAttributeValue("name","");
    node=new ProcessingInstructionNode(TemplateParser.SOCKET_BINDINGS_PI,data);
    socketBindingsPlaceHolder.put(groupName,node);
  }
 else {
    throw new IllegalStateException("Unknown processing instruction <?" + reader.getPITarget() + "?>"+ reader.getLocation());
  }
  return node;
}

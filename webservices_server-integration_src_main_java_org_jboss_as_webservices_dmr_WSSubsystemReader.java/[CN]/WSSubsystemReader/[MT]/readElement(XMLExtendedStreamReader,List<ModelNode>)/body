{
  requireNoAttributes(reader);
  final ModelNode subsystem=new ModelNode();
  subsystem.get(OP).set(ADD);
  subsystem.get(OP_ADDR).add(SUBSYSTEM,WSExtension.SUBSYSTEM_NAME);
  final List<ModelNode> endpointConfigs=new ArrayList<ModelNode>();
  final List<ModelNode> clientConfigs=new ArrayList<ModelNode>();
  final EnumSet<Element> encountered=EnumSet.noneOf(Element.class);
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
switch (Namespace.forUri(reader.getNamespaceURI())) {
case WEBSERVICES_1_1:
{
        final Element element=Element.forName(reader.getLocalName());
        if (element != Element.ENDPOINT_CONFIG && !encountered.add(element)) {
          throw unexpectedElement(reader);
        }
switch (element) {
case MODIFY_WSDL_ADDRESS:
{
            boolean b=Boolean.parseBoolean(parseElementNoAttributes(reader));
            subsystem.get(MODIFY_WSDL_ADDRESS).set(b);
            break;
          }
case WSDL_HOST:
{
          subsystem.get(WSDL_HOST).set(parseElementNoAttributes(reader));
          break;
        }
case WSDL_PORT:
{
        int port=Integer.valueOf(parseElementNoAttributes(reader));
        subsystem.get(WSDL_PORT).set(port);
        break;
      }
case WSDL_SECURE_PORT:
{
      int port=Integer.valueOf(parseElementNoAttributes(reader));
      subsystem.get(WSDL_SECURE_PORT).set(port);
      break;
    }
case ENDPOINT_CONFIG:
{
    readConfig(reader,subsystem.get(OP_ADDR),endpointConfigs,false);
    break;
  }
default :
{
  throw unexpectedElement(reader);
}
}
break;
}
case WEBSERVICES_1_2:
{
final Element element=Element.forName(reader.getLocalName());
if (element != Element.ENDPOINT_CONFIG && element != Element.CLIENT_CONFIG && !encountered.add(element)) {
throw unexpectedElement(reader);
}
switch (element) {
case MODIFY_WSDL_ADDRESS:
{
boolean b=Boolean.parseBoolean(parseElementNoAttributes(reader));
subsystem.get(MODIFY_WSDL_ADDRESS).set(b);
break;
}
case WSDL_HOST:
{
subsystem.get(WSDL_HOST).set(parseElementNoAttributes(reader));
break;
}
case WSDL_PORT:
{
int port=Integer.valueOf(parseElementNoAttributes(reader));
subsystem.get(WSDL_PORT).set(port);
break;
}
case WSDL_SECURE_PORT:
{
int port=Integer.valueOf(parseElementNoAttributes(reader));
subsystem.get(WSDL_SECURE_PORT).set(port);
break;
}
case ENDPOINT_CONFIG:
{
readConfig(reader,subsystem.get(OP_ADDR),endpointConfigs,false);
break;
}
case CLIENT_CONFIG:
{
readConfig(reader,subsystem.get(OP_ADDR),clientConfigs,true);
break;
}
default :
{
throw unexpectedElement(reader);
}
}
break;
}
default :
{
throw unexpectedElement(reader);
}
}
}
list.add(subsystem);
list.addAll(endpointConfigs);
list.addAll(clientConfigs);
}

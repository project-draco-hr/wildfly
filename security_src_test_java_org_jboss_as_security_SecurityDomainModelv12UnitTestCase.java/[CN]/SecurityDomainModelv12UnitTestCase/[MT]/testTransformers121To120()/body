{
  ModelVersion modelVersion=ModelVersion.create(1,2,0);
  KernelServicesBuilder builder=createKernelServicesBuilder(AdditionalInitialization.MANAGEMENT);
  builder.createLegacyKernelServicesBuilder(null,ModelTestControllerVersion.MASTER,modelVersion).addMavenResourceURL("org.jboss.as:jboss-as-security:" + "7.2.0.Final").dontPersistXml();
  KernelServices mainServices=builder.build();
  Assert.assertTrue(mainServices.isSuccessfulBoot());
  Assert.assertTrue(mainServices.getLegacyServices(modelVersion).isSuccessfulBoot());
  ModelTestUtils.checkFailedTransformedBootOperations(mainServices,modelVersion,builder.parseXml(readResource("transformers.xml")),new FailedOperationTransformationConfig());
  ModelNode composite=Util.createEmptyOperation("composite",null);
  ModelNode steps=composite.get(STEPS);
  PathAddress secDomAddr=getSecurityDomainAddress("modules");
  steps.add(Util.createEmptyOperation("add",secDomAddr));
  steps.add(getSecurityDomainComponentAdd(secDomAddr.append(PathElement.pathElement(Constants.AUDIT,Constants.CLASSIC)),Constants.PROVIDER_MODULES));
  steps.add(getSecurityDomainComponentAdd(secDomAddr.append(PathElement.pathElement(Constants.AUTHENTICATION,Constants.CLASSIC)),Constants.LOGIN_MODULES));
  steps.add(getSecurityDomainComponentAdd(secDomAddr.append(PathElement.pathElement(Constants.AUTHENTICATION,Constants.JASPI)),Constants.AUTH_MODULES));
  steps.add(getSecurityDomainComponentAdd(secDomAddr.append(PathElement.pathElement(Constants.AUTHORIZATION,Constants.CLASSIC)),Constants.POLICY_MODULES));
  steps.add(getSecurityDomainComponentAdd(secDomAddr.append(PathElement.pathElement(Constants.IDENTITY_TRUST,Constants.CLASSIC)),Constants.TRUST_MODULES));
  steps.add(getSecurityDomainComponentAdd(secDomAddr.append(PathElement.pathElement(Constants.MAPPING,Constants.CLASSIC)),Constants.MAPPING_MODULES));
  ModelTestUtils.checkOutcome(mainServices.executeOperation(composite));
  ModelTestUtils.checkOutcome(mainServices.executeOperation(modelVersion,mainServices.transformOperation(modelVersion,composite)));
  checkSubsystemModelTransformation(mainServices,modelVersion);
}

{
  final DeploymentUnit deploymentUnit=phaseContext.getDeploymentUnit();
  final EEModuleDescription eeModuleDescription=deploymentUnit.getAttachment(Attachments.EE_MODULE_DESCRIPTION);
  final CompositeIndex index=deploymentUnit.getAttachment(org.jboss.as.server.deployment.Attachments.COMPOSITE_ANNOTATION_INDEX);
  final EEApplicationClasses applicationClasses=deploymentUnit.getAttachment(Attachments.EE_APPLICATION_CLASSES_DESCRIPTION);
  List<AnnotationInstance> adminObjectDefinitions=index.getAnnotations(ADMINISTERED_OBJECT_DEFINITIONS);
  if (adminObjectDefinitions != null) {
    for (    AnnotationInstance annotation : adminObjectDefinitions) {
      final AnnotationTarget target=annotation.target();
      if (target instanceof ClassInfo == false) {
        throw EeLogger.ROOT_LOGGER.classOnlyAnnotation("@AdministeredObjectDefinitions",target);
      }
      List<AnnotationInstance> adminObjects=this.getNestedAdministeredObjectAnnotations(annotation);
      for (      AnnotationInstance adminObject : adminObjects) {
        this.processAdministeredObjectDefinition(eeModuleDescription,adminObject,(ClassInfo)target,applicationClasses);
      }
    }
  }
  List<AnnotationInstance> adminObjects=index.getAnnotations(ADMINISTERED_OBJECT_DEFINITION);
  if (adminObjects != null) {
    for (    AnnotationInstance adminObject : adminObjects) {
      final AnnotationTarget target=adminObject.target();
      if (target instanceof ClassInfo == false) {
        throw EeLogger.ROOT_LOGGER.classOnlyAnnotation("@AdministeredObjectDefinition",target);
      }
      this.processAdministeredObjectDefinition(eeModuleDescription,adminObject,(ClassInfo)target,applicationClasses);
    }
  }
}

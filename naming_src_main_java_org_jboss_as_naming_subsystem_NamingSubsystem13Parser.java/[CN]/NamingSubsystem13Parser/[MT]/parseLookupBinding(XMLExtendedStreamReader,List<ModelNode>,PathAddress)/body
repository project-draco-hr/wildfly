{
  final int attCount=reader.getAttributeCount();
  String name=null;
  final ModelNode bindingAdd=Util.createAddOperation();
  bindingAdd.get(BINDING_TYPE).set(LOOKUP);
  final EnumSet<NamingSubsystemXMLAttribute> required=EnumSet.of(NamingSubsystemXMLAttribute.NAME,NamingSubsystemXMLAttribute.LOOKUP);
  for (int i=0; i < attCount; i++) {
    requireNoNamespaceAttribute(reader,i);
    final String value=reader.getAttributeValue(i);
    final NamingSubsystemXMLAttribute attribute=NamingSubsystemXMLAttribute.forName(reader.getAttributeLocalName(i));
    required.remove(attribute);
switch (attribute) {
case NAME:
      name=value.trim();
    break;
case LOOKUP:
  NamingBindingResourceDefinition.LOOKUP.parseAndSetParameter(value,bindingAdd,reader);
break;
default :
throw unexpectedAttribute(reader,i);
}
}
if (!required.isEmpty()) {
throw missingRequired(reader,required);
}
requireNoContent(reader);
bindingAdd.get(OP_ADDR).set(parentAddress.append(BINDING,name).toModelNode());
operations.add(bindingAdd);
}

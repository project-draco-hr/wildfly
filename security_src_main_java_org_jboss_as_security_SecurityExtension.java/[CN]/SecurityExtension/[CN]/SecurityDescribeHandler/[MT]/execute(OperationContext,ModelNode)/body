{
  final ModelNode model=context.readModel(PathAddress.EMPTY_ADDRESS);
  final ModelNode subsystem=new ModelNode();
  subsystem.get(OP).set(ADD);
  subsystem.get(OP_ADDR).add(SUBSYSTEM,SUBSYSTEM_NAME);
  if (model.hasDefined(AUTHENTICATION_MANAGER_CLASS_NAME)) {
    subsystem.get(AUTHENTICATION_MANAGER_CLASS_NAME).set(model.get(AUTHENTICATION_MANAGER_CLASS_NAME));
  }
  if (model.hasDefined(DEEP_COPY_SUBJECT_MODE)) {
    subsystem.get(DEEP_COPY_SUBJECT_MODE).set(model.get(DEEP_COPY_SUBJECT_MODE));
  }
  if (model.hasDefined(DEFAULT_CALLBACK_HANDLER_CLASS_NAME)) {
    subsystem.get(DEFAULT_CALLBACK_HANDLER_CLASS_NAME).set(model.get(DEFAULT_CALLBACK_HANDLER_CLASS_NAME));
  }
  if (model.hasDefined(SUBJECT_FACTORY_CLASS_NAME)) {
    subsystem.get(SUBJECT_FACTORY_CLASS_NAME).set(model.get(SUBJECT_FACTORY_CLASS_NAME));
  }
  if (model.hasDefined(AUTHORIZATION_MANAGER_CLASS_NAME)) {
    subsystem.get(AUTHORIZATION_MANAGER_CLASS_NAME).set(model.get(AUTHORIZATION_MANAGER_CLASS_NAME));
  }
  if (model.hasDefined(AUDIT_MANAGER_CLASS_NAME)) {
    subsystem.get(AUDIT_MANAGER_CLASS_NAME).set(model.get(AUDIT_MANAGER_CLASS_NAME));
  }
  if (model.hasDefined(IDENTITY_TRUST_MANAGER_CLASS_NAME)) {
    subsystem.get(IDENTITY_TRUST_MANAGER_CLASS_NAME).set(model.get(IDENTITY_TRUST_MANAGER_CLASS_NAME));
  }
  if (model.hasDefined(MAPPING_MANAGER_CLASS_NAME)) {
    subsystem.get(MAPPING_MANAGER_CLASS_NAME).set(model.get(MAPPING_MANAGER_CLASS_NAME));
  }
  if (model.hasDefined(SECURITY_PROPERTIES)) {
    subsystem.get(SECURITY_PROPERTIES).set(model.get(SECURITY_PROPERTIES));
  }
  ModelNode result=context.getResult();
  result.add(subsystem);
  if (model.hasDefined(SECURITY_DOMAIN)) {
    for (    Property prop : model.get(SECURITY_DOMAIN).asPropertyList()) {
      final ModelNode addr=subsystem.get(OP_ADDR).clone().add(SECURITY_DOMAIN,prop.getName());
      result.add(SecurityDomainAdd.getRecreateOperation(addr,prop.getValue()));
    }
  }
  context.completeStep();
}

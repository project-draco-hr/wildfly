{
  ResourceTransformationDescriptionBuilder builder=TransformationDescriptionBuilder.Factory.createSubsystemInstance();
  builder.getAttributeBuilder().addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,SecuritySubsystemRootResourceDefinition.DEEP_COPY_SUBJECT_MODE);
  ResourceTransformationDescriptionBuilder securityDomain=builder.addChildResource(SECURITY_DOMAIN_PATH);
  securityDomain.getAttributeBuilder().addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,SecurityDomainResourceDefinition.CACHE_TYPE).end();
  final ModulesToAttributeTransformer loginModule=new ModulesToAttributeTransformer(Constants.LOGIN_MODULE,Constants.LOGIN_MODULES);
  registerModuleTransformer(securityDomain,PATH_CLASSIC_AUTHENTICATION,loginModule);
  final ModulesToAttributeTransformer policyModule=new ModulesToAttributeTransformer(Constants.POLICY_MODULE,Constants.POLICY_MODULES);
  registerModuleTransformer(securityDomain,PATH_AUTHORIZATION_CLASSIC,policyModule);
  final ModulesToAttributeTransformer mappingModule=new ModulesToAttributeTransformer(Constants.MAPPING_MODULE,Constants.MAPPING_MODULES);
  registerModuleTransformer(securityDomain,PATH_MAPPING_CLASSIC,mappingModule);
  final ModulesToAttributeTransformer providerModule=new ModulesToAttributeTransformer(Constants.PROVIDER_MODULE,Constants.PROVIDER_MODULES);
  registerModuleTransformer(securityDomain,PATH_AUDIT_CLASSIC,providerModule);
  final ModulesToAttributeTransformer authModule=new ModulesToAttributeTransformer(Constants.AUTH_MODULE,Constants.AUTH_MODULES);
  ResourceTransformationDescriptionBuilder jaspiReg=registerModuleTransformer(securityDomain,PATH_JASPI_AUTH,authModule);
  registerModuleTransformer(jaspiReg,PATH_LOGIN_MODULE_STACK,loginModule);
  builder.addChildResource(VAULT_PATH).getAttributeBuilder().addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,VaultResourceDefinition.CODE,VaultResourceDefinition.OPTIONS).end();
  builder.addChildResource(JSSE_PATH).getAttributeBuilder().addRejectCheck(new RejectAttributeChecker.ObjectFieldsRejectAttributeChecker(Collections.singletonMap(JSSEResourceDefinition.ADDITIONAL_PROPERTIES.getName(),RejectAttributeChecker.SIMPLE_EXPRESSIONS)),JSSEResourceDefinition.ADDITIONAL_PROPERTIES).end();
  TransformationDescription.Tools.register(builder.build(),subsystemRegistration,ModelVersion.create(1,1,0));
}

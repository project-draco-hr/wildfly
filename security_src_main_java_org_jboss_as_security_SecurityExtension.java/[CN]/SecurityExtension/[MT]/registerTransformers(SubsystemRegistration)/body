{
  ResourceTransformationDescriptionBuilder builder=TransformationDescriptionBuilder.Factory.createSubsystemInstance();
  ResourceTransformationDescriptionBuilder securityDomain=builder.addChildResource(SECURITY_DOMAIN_PATH);
  final ModulesToAttributeTransformer loginModule=new ModulesToAttributeTransformer(Constants.LOGIN_MODULE,Constants.LOGIN_MODULES);
  ResourceTransformationDescriptionBuilder child=securityDomain.addChildResource(PATH_CLASSIC_AUTHENTICATION).setCustomResourceTransformer(loginModule).addOperationTransformationOverride(ModelDescriptionConstants.ADD).setCustomOperationTransformer(loginModule).inheritResourceAttributeDefinitions().end();
  child.discardChildResource(PathElement.pathElement(Constants.LOGIN_MODULE));
  final ModulesToAttributeTransformer policyModule=new ModulesToAttributeTransformer(Constants.POLICY_MODULE,Constants.POLICY_MODULES);
  child=securityDomain.addChildResource(PATH_AUTHORIZATION_CLASSIC).setCustomResourceTransformer(policyModule).addOperationTransformationOverride(ModelDescriptionConstants.ADD).setCustomOperationTransformer(policyModule).inheritResourceAttributeDefinitions().end();
  child.discardChildResource(PathElement.pathElement(Constants.POLICY_MODULE));
  final ModulesToAttributeTransformer mappingModule=new ModulesToAttributeTransformer(Constants.MAPPING_MODULE,Constants.MAPPING_MODULES);
  child=securityDomain.addChildResource(PATH_MAPPING_CLASSIC).setCustomResourceTransformer(mappingModule).addOperationTransformationOverride(ModelDescriptionConstants.ADD).setCustomOperationTransformer(mappingModule).inheritResourceAttributeDefinitions().end();
  child.discardChildResource(PathElement.pathElement(Constants.MAPPING_MODULE));
  final ModulesToAttributeTransformer providerModule=new ModulesToAttributeTransformer(Constants.PROVIDER_MODULE,Constants.PROVIDER_MODULES);
  child=securityDomain.addChildResource(PATH_AUDIT_CLASSIC).setCustomResourceTransformer(providerModule).addOperationTransformationOverride(ModelDescriptionConstants.ADD).setCustomOperationTransformer(providerModule).inheritResourceAttributeDefinitions().end();
  child.discardChildResource(PathElement.pathElement(Constants.PROVIDER_MODULE));
  final ModulesToAttributeTransformer authModule=new ModulesToAttributeTransformer(Constants.AUTH_MODULE,Constants.AUTH_MODULES);
  ResourceTransformationDescriptionBuilder jaspiReg=securityDomain.addChildResource(PATH_JASPI_AUTH);
  jaspiReg.setCustomResourceTransformer(authModule).addOperationTransformationOverride(ModelDescriptionConstants.ADD).setCustomOperationTransformer(authModule).inheritResourceAttributeDefinitions().end();
  jaspiReg.discardChildResource(PathElement.pathElement(Constants.AUTH_MODULE));
  child=jaspiReg.addChildResource(PATH_LOGIN_MODULE_STACK).setCustomResourceTransformer(loginModule).addOperationTransformationOverride(ModelDescriptionConstants.ADD).setCustomOperationTransformer(loginModule).inheritResourceAttributeDefinitions().end();
  child.discardChildResource(PathElement.pathElement(Constants.LOGIN_MODULE));
  securityDomain.getAttributeBuilder().addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,SecurityDomainResourceDefinition.CACHE_TYPE).end();
  builder.addChildResource(VAULT_PATH).getAttributeBuilder().addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,VaultResourceDefinition.CODE).addRejectCheck(RejectAttributeChecker.SIMPLE_LIST_EXPRESSIONS,VaultResourceDefinition.OPTIONS).end();
  builder.addChildResource(JSSE_PATH).getAttributeBuilder().addRejectCheck(new RejectAttributeChecker.ObjectFieldsRejectAttributeChecker(Collections.singletonMap(JSSEResourceDefinition.ADDITIONAL_PROPERTIES.getName(),RejectAttributeChecker.SIMPLE_EXPRESSIONS)),JSSEResourceDefinition.ADDITIONAL_PROPERTIES).end();
  TransformationDescription.Tools.register(builder.build(),subsystemRegistration,ModelVersion.create(1,1,0));
}

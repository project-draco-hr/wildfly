{
  TransformersSubRegistration subsystemTransformer=subsystemRegistration.registerModelTransformers(ModelVersion.create(1,1),null);
  TransformersSubRegistration securityDomain=subsystemTransformer.registerSubResource(SECURITY_DOMAIN_PATH);
  securityDomain.registerSubResource(PATH_CLASSIC_AUTHENTICATION,new ModulesToAttributeTransformer(Constants.LOGIN_MODULE,Constants.LOGIN_MODULES)).registerSubResource(PathElement.pathElement(Constants.LOGIN_MODULE),true);
  securityDomain.registerSubResource(PATH_AUTHORIZATION_CLASSIC,new ModulesToAttributeTransformer(Constants.POLICY_MODULE,Constants.POLICY_MODULES)).registerSubResource(PathElement.pathElement(Constants.POLICY_MODULE),true);
  securityDomain.registerSubResource(PATH_MAPPING_CLASSIC,new ModulesToAttributeTransformer(Constants.MAPPING_MODULE,Constants.MAPPING_MODULES)).registerSubResource(PathElement.pathElement(Constants.MAPPING_MODULE),true);
  securityDomain.registerSubResource(PATH_AUDIT_CLASSIC,new ModulesToAttributeTransformer(Constants.PROVIDER_MODULE,Constants.PROVIDER_MODULES)).registerSubResource(PathElement.pathElement(Constants.PROVIDER_MODULE),true);
  TransformersSubRegistration jaspiReg=securityDomain.registerSubResource(PATH_JASPI_AUTH,new ModulesToAttributeTransformer(Constants.AUTH_MODULE,Constants.AUTH_MODULES));
  jaspiReg.registerSubResource(PathElement.pathElement(Constants.AUTH_MODULE),true);
  jaspiReg.registerSubResource(PATH_LOGIN_MODULE_STACK,new ModulesToAttributeTransformer(Constants.LOGIN_MODULE,Constants.LOGIN_MODULES)).registerSubResource(PathElement.pathElement(Constants.LOGIN_MODULE),true);
}

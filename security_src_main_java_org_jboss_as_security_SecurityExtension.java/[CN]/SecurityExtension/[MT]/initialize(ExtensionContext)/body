{
  log.debug("Initializing Security Extension");
  final SubsystemRegistration subsystem=context.registerSubsystem(SUBSYSTEM_NAME);
  final ModelNodeRegistration registration=subsystem.registerSubsystemModel(new DescriptionProvider(){
    @Override public ModelNode getModelDescription(    Locale locale){
      return SecuritySubsystemDescriptions.getSubsystemRoot(locale);
    }
  }
);
  registration.registerOperationHandler(ADD,SecuritySubsystemAdd.INSTANCE,SecuritySubsystemAdd.INSTANCE,false);
  final ModelNodeRegistration jaas=registration.registerSubModel(PathElement.pathElement(CommonAttributes.JAAS_APPLICATION_POLICY),new DescriptionProvider(){
    @Override public ModelNode getModelDescription(    Locale locale){
      return SecuritySubsystemDescriptions.getJaasApplicationPolicy(locale);
    }
  }
);
  jaas.registerOperationHandler(JaasApplicationPolicyAdd.OPERATION_NAME,JaasApplicationPolicyAdd.INSTANCE,JaasApplicationPolicyAdd.INSTANCE,false);
  jaas.registerOperationHandler(JaasApplicationPolicyRemove.OPERATION_NAME,JaasApplicationPolicyRemove.INSTANCE,JaasApplicationPolicyRemove.INSTANCE,false);
  registration.registerOperationHandler(DESCRIBE,SecurityDescribeHandler.INSTANCE,SecurityDescribeHandler.INSTANCE,false);
  subsystem.registerXMLElementWriter(PARSER);
}

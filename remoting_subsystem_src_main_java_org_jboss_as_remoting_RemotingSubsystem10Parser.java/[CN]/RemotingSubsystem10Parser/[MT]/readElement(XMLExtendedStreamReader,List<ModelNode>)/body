{
  final PathAddress address=PathAddress.pathAddress(SUBSYSTEM,RemotingExtension.SUBSYSTEM_NAME);
  final ModelNode subsystem=Util.createAddOperation(address);
  list.add(subsystem);
  requireNoAttributes(reader);
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
switch (Namespace.forUri(reader.getNamespaceURI())) {
case REMOTING_1_0:
{
        final Element element=Element.forName(reader.getLocalName());
switch (element) {
case WORKER_THREAD_POOL:
          parseWorkerThreadPool(reader,subsystem);
        break;
case CONNECTOR:
{
        parseConnector(reader,address.toModelNode(),list);
        break;
      }
default :
{
      throw unexpectedElement(reader);
    }
}
break;
}
default :
{
throw unexpectedElement(reader);
}
}
}
list.add(Util.createAddOperation(address.append(RemotingEndpointResource.INSTANCE.getPathElement())));
}

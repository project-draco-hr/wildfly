{
  Long bundleId=OSGiManagementOperations.getBundleId(getControllerClient(),"test-config-admin",Version.parseVersion("1.0"));
  assertTrue(bundleId > 0);
  assertTrue(OSGiManagementOperations.bundleStart(getControllerClient(),bundleId));
  assertEquals("ACTIVE",OSGiManagementOperations.getBundleState(getControllerClient(),bundleId));
  File f=File.createTempFile("ConfigAdminManagementTest",".tmp");
  try {
    String configName=TestBundleActivator.class.getName();
    Map<String,String> entries=new HashMap<String,String>();
    entries.put("file",f.getAbsolutePath());
    entries.put("value","initial");
    assertTrue(ConfigAdminManagementOperations.addConfiguration(getControllerClient(),configName,entries));
    Map<String,String> config=ConfigAdminManagementOperations.readConfiguration(getControllerClient(),configName);
    assertEquals(entries,config);
    assertEquals("The managed service in the deployed bundle should have received the configuration and updated the file","initial",readTextFile(f));
    entries.put("value","updated");
    assertTrue(ConfigAdminManagementOperations.updateConfiguration(getControllerClient(),configName,entries));
    Map<String,String> config2=ConfigAdminManagementOperations.readConfiguration(getControllerClient(),configName);
    assertEquals(entries,config2);
    assertEquals("The managed service in the deployed bundle should have received the configuration and updated the file","updated",readTextFile(f));
    assertTrue(ConfigAdminManagementOperations.listConfigurations(getControllerClient()).contains(configName));
    assertTrue(ConfigAdminManagementOperations.removeConfiguration(getControllerClient(),configName));
    assertFalse(ConfigAdminManagementOperations.listConfigurations(getControllerClient()).contains(configName));
  }
  finally {
    f.delete();
  }
}

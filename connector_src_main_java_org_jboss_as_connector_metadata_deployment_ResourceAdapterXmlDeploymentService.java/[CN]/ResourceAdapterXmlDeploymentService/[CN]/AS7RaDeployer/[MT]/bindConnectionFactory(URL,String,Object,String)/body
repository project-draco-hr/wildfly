{
  mdr.getValue().registerJndiMapping(url.toExternalForm(),cf.getClass().getName(),jndi);
  log.debugf("Registered connection factory %s on mdr",jndi);
  final ConnectionFactoryService connectionFactoryService=new ConnectionFactoryService(cf);
  final ServiceName connectionFactoryServiceName=ConnectionFactoryService.SERVICE_NAME_BASE.append(jndi);
  serviceContainer.addService(connectionFactoryServiceName,connectionFactoryService).setInitialMode(ServiceController.Mode.ACTIVE).install();
  final ConnectionFactoryReferenceFactoryService referenceFactoryService=new ConnectionFactoryReferenceFactoryService();
  final ServiceName referenceFactoryServiceName=ConnectionFactoryReferenceFactoryService.SERVICE_NAME_BASE.append(jndi);
  serviceContainer.addService(referenceFactoryServiceName,referenceFactoryService).addDependency(connectionFactoryServiceName,Object.class,referenceFactoryService.getDataSourceInjector()).setInitialMode(ServiceController.Mode.ACTIVE).install();
  final BinderService binderService=new BinderService(jndi.substring(6));
  final ServiceName binderServiceName=ContextNames.JAVA_CONTEXT_SERVICE_NAME.append(jndi);
  serviceContainer.addService(binderServiceName,binderService).addDependency(referenceFactoryServiceName,ManagedReferenceFactory.class,binderService.getManagedObjectInjector()).addDependency(ContextNames.JAVA_CONTEXT_SERVICE_NAME,NamingStore.class,binderService.getNamingStoreInjector()).addListener(new AbstractServiceListener<Object>(){
    public void serviceStarted(    ServiceController<?> controller){
      log.infof("Bound JCA ConnectionFactory [%s]",jndi);
    }
    public void serviceStopped(    ServiceController<?> serviceController){
      log.infof("Unbound JCA ConnectionFactory [%s]",jndi);
    }
    public void serviceRemoved(    ServiceController<?> serviceController){
      log.infof("Removed JCA ConnectionFactory [%s]",jndi);
      serviceController.removeListener(this);
    }
  }
).setInitialMode(ServiceController.Mode.ACTIVE).install();
  return new String[]{jndi};
}

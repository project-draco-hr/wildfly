{
  JavaArchive alpha=ShrinkWrap.create(JavaArchive.class,ALPHA_JAR).addClasses(Alpha.class,AlphaLocal.class).addAsManifestResource(newBeans11Descriptor("all"),"beans.xml");
  JavaArchive bravo=ShrinkWrap.create(JavaArchive.class,BRAVO_JAR).addClasses(Bravo.class,BravoLocal.class).addAsManifestResource(new StringAsset(""),"beans.xml");
  JavaArchive charlie=ShrinkWrap.create(JavaArchive.class,CHARLIE_JAR).addClasses(Charlie.class,CharlieLocal.class).addAsManifestResource(EmptyAsset.INSTANCE,"beans.xml");
  JavaArchive delta=ShrinkWrap.create(JavaArchive.class,DELTA_JAR).addClasses(Delta.class,DeltaLocal.class);
  JavaArchive echo=ShrinkWrap.create(JavaArchive.class,ECHO_JAR).addClasses(Echo.class,EchoLocal.class).addAsManifestResource(newBeans11Descriptor("annotated"),"beans.xml");
  JavaArchive foxtrot=ShrinkWrap.create(JavaArchive.class,FOXTROT_JAR).addClasses(Foxtrot.class,FoxtrotLocal.class).addAsManifestResource(newBeans11Descriptor("none"),"beans.xml");
  JavaArchive legacy=ShrinkWrap.create(JavaArchive.class,LEGACY_JAR).addClasses(LegacyExtension.class,LegacyBean.class).addAsServiceProvider(Extension.class,LegacyExtension.class);
  StringBuilder manifestBuilder=new StringBuilder("Class-Path:");
  for (  String s : new String[]{ALPHA_JAR,BRAVO_JAR,CHARLIE_JAR,DELTA_JAR,ECHO_JAR,FOXTROT_JAR,LEGACY_JAR}) {
    manifestBuilder.append(" ");
    manifestBuilder.append(s);
  }
  WebArchive webArchive=ShrinkWrap.create(WebArchive.class).addClasses(EnterpriseBeanDiscoveryTest.class,VerifyingExtension.class).addAsServiceProvider(Extension.class,VerifyingExtension.class).setManifest(new StringAsset(manifestBuilder.toString()));
  return ShrinkWrap.create(EnterpriseArchive.class).addAsModules(webArchive,alpha,bravo,charlie,delta,echo,foxtrot,legacy).addAsLibrary(ShrinkWrap.create(JavaArchive.class).addClass(Ping.class));
}

{
  List<ModelNode> updates=new ArrayList<ModelNode>();
  ModelNode op=new ModelNode();
  op.get(OP).set(ADD);
  op.get(OP_ADDR).add(SUBSYSTEM,"security");
  op.get(OP_ADDR).add(SECURITY_DOMAIN,getSecurityDomainName());
  updates.add(op);
  op=new ModelNode();
  op.get(OP).set(ADD);
  op.get(OP_ADDR).add(SUBSYSTEM,"security");
  op.get(OP_ADDR).add(SECURITY_DOMAIN,getSecurityDomainName());
  op.get(OP_ADDR).add(Constants.AUTHENTICATION,Constants.CLASSIC);
  ModelNode loginModule=op.get(Constants.LOGIN_MODULES).add();
  loginModule.get(ModelDescriptionConstants.CODE).set(loginModuleClass.getName());
  loginModule.get(FLAG).set("required");
  op.get(OPERATION_HEADERS).get(ALLOW_RESOURCE_SERVICE_RESTART).set(true);
  ModelNode moduleOptions=loginModule.get("module-options");
  for (  Map.Entry<String,String> entry : moduleOptionsCache.entrySet()) {
    moduleOptions.get(entry.getKey()).set(entry.getValue());
  }
  updates.add(op);
  try {
    applyUpdates(client,updates);
  }
 catch (  Exception ex) {
    throw new RuntimeException(ex);
  }
}

{
  loadGroupMasks=new HashMap();
  JDBCOptimisticLockingMetaData olMD=metadata.getOptimisticLocking();
  if (olMD != null) {
    if (versionField != null) {
      defaultLockGroupMask=new boolean[tableFields.length];
      defaultLockGroupMask[versionField.getTableIndex()]=true;
      versionField.setLockingStrategy(LockingStrategy.VERSION);
    }
 else     if (olMD.getGroupName() != null) {
      defaultLockGroupMask=loadGroupMask(olMD.getGroupName(),null);
      for (int i=0; i < tableFields.length; ++i) {
        if (defaultLockGroupMask[i]) {
          JDBCCMPFieldBridge tableField=tableFields[i];
          tableField.setLockingStrategy(LockingStrategy.GROUP);
          tableField.addDefaultFlag(ADD_TO_WHERE_ON_UPDATE);
        }
      }
    }
 else {
      LockingStrategy strategy=(olMD.getLockingStrategy() == JDBCOptimisticLockingMetaData.LockingStrategy.READ_STRATEGY ? LockingStrategy.READ : LockingStrategy.MODIFIED);
      for (int i=0; i < tableFields.length; ++i) {
        JDBCCMPFieldBridge field=tableFields[i];
        if (!field.isPrimaryKeyMember())         field.setLockingStrategy(strategy);
      }
    }
  }
  boolean[] defaultLoadGroup=new boolean[tableFields.length];
  Arrays.fill(defaultLoadGroup,true);
  for (int i=0; i < primaryKeyFields.length; ++i) {
    int tableIndex=primaryKeyFields[i].getTableIndex();
    defaultLoadGroup[tableIndex]=false;
  }
  loadGroupMasks.put(DEFAULT_LOADGROUP_NAME,defaultLoadGroup);
  Iterator groupNames=metadata.getLoadGroups().keySet().iterator();
  while (groupNames.hasNext()) {
    String groupName=(String)groupNames.next();
    boolean[] loadGroup=loadGroupMask(groupName,defaultLockGroupMask);
    loadGroupMasks.put(groupName,loadGroup);
  }
  loadGroupMasks=Collections.unmodifiableMap(loadGroupMasks);
}

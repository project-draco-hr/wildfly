{
  return new Future<ModelNode>(){
    @Override public boolean cancel(    boolean mayInterruptIfRunning){
      return getFutureTask().cancel(mayInterruptIfRunning);
    }
    @Override public boolean isCancelled(){
      return getFutureTask().isCancelled();
    }
    @Override public boolean isDone(){
      return getFutureTask().isDone();
    }
    @Override public ModelNode get() throws InterruptedException, ExecutionException {
      return getFutureTask().get();
    }
    @Override public ModelNode get(    long timeout,    TimeUnit unit) throws InterruptedException, ExecutionException, TimeoutException {
      return getFutureTask().get(timeout,unit);
    }
  }
;
}

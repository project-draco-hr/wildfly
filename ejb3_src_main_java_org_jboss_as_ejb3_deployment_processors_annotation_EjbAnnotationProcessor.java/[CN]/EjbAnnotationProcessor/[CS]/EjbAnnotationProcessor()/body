{
  List<ClassAnnotationInformationFactory> factories=new ArrayList<ClassAnnotationInformationFactory>();
  factories.add(new LockAnnotationInformationFactory());
  factories.add(new ConcurrencyManagementAnnotationInformationFactory());
  factories.add(new AccessTimeoutAnnotationInformationFactory());
  factories.add(new TransactionAttributeAnnotationInformationFactory());
  factories.add(new TransactionManagementAnnotationInformationFactory());
  factories.add(new RemoveAnnotationInformationFactory());
  factories.add(new StartupAnnotationInformationFactory());
  factories.add(new StatefulTimeoutAnnotationInformationFactory());
  factories.add(new AsynchronousAnnotationInformationFactory());
  factories.add(new DependsOnAnnotationInformationFactory());
  factories.add(new ResourceAdaptorAnnotationInformationFactory());
  factories.add(new InitAnnotationInformationFactory());
  factories.add(new AfterBeginAnnotationInformationFactory());
  factories.add(new BeforeCompletionAnnotationInformationFactory());
  factories.add(new AfterCompletionAnnotationInformationFactory());
  factories.add(new RunAsAnnotationInformationFactory());
  factories.add(new SecurityDomainAnnotationInformationFactory());
  factories.add(new DeclareRolesAnnotationInformationFactory());
  factories.add(new RolesAllowedAnnotationInformationFactory());
  factories.add(new DenyAllAnnotationInformationFactory());
  factories.add(new PermitAllAnnotationInformationFactory());
  factories.add(new LocalHomeAnnotationInformationFactory());
  factories.add(new RemoteHomeAnnotationInformationFactory());
  this.factories=Collections.unmodifiableList(factories);
}

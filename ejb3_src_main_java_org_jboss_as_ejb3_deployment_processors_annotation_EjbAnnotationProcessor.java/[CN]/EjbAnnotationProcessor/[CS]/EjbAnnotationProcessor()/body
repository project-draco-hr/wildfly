{
  final List<ClassAnnotationInformationFactory> factories=new ArrayList<ClassAnnotationInformationFactory>();
  factories.add(new LockAnnotationInformationFactory());
  factories.add(new ConcurrencyManagementAnnotationInformationFactory());
  factories.add(new AccessTimeoutAnnotationInformationFactory());
  factories.add(new TransactionAttributeAnnotationInformationFactory());
  factories.add(new TransactionTimeoutAnnotationInformationFactory());
  factories.add(new TransactionManagementAnnotationInformationFactory());
  factories.add(new RemoveAnnotationInformationFactory());
  factories.add(new BooleanAnnotationInformationFactory<Startup>(Startup.class));
  factories.add(new StatefulTimeoutAnnotationInformationFactory());
  factories.add(new BooleanAnnotationInformationFactory<Asynchronous>(Asynchronous.class));
  factories.add(new DependsOnAnnotationInformationFactory());
  factories.add(new ResourceAdaptorAnnotationInformationFactory());
  factories.add(new DeliveryActiveAnnotationInformationFactory());
  factories.add(new DeliveryGroupAnnotationInformationFactory());
  factories.add(new InitAnnotationInformationFactory());
  factories.add(new PoolAnnotationInformationFactory());
  factories.add(new BooleanAnnotationInformationFactory<AfterBegin>(AfterBegin.class));
  factories.add(new BooleanAnnotationInformationFactory<BeforeCompletion>(BeforeCompletion.class));
  factories.add(new BooleanAnnotationInformationFactory<AfterCompletion>(AfterCompletion.class));
  factories.add(new RunAsAnnotationInformationFactory());
  factories.add(new RunAsPrincipalAnnotationInformationFactory());
  factories.add(new SecurityDomainAnnotationInformationFactory());
  factories.add(new DeclareRolesAnnotationInformationFactory());
  factories.add(new RolesAllowedAnnotationInformationFactory());
  factories.add(new BooleanAnnotationInformationFactory<DenyAll>(DenyAll.class));
  factories.add(new BooleanAnnotationInformationFactory<PermitAll>(PermitAll.class));
  factories.add(new LocalHomeAnnotationInformationFactory());
  factories.add(new RemoteHomeAnnotationInformationFactory());
  factories.add(new ClusteredAnnotationInformationFactory());
  factories.add(new CacheAnnotationInformationFactory());
  factories.add(new ClusteredSingletonAnnotationInformationFactory());
  this.factories=Collections.unmodifiableList(factories);
}

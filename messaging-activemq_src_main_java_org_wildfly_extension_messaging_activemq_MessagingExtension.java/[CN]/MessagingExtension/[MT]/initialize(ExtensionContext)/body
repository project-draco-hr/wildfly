{
  final SubsystemRegistration subsystemRegistration=context.registerSubsystem(SUBSYSTEM_NAME,CURRENT_MODEL_VERSION);
  subsystemRegistration.registerXMLElementWriter(MessagingSubsystemParser_1_0.INSTANCE);
  boolean registerRuntimeOnly=context.isRuntimeOnlyRegistrationValid();
  final ManagementResourceRegistration subsystem=subsystemRegistration.registerSubsystemModel(MessagingSubsystemRootResourceDefinition.INSTANCE);
  subsystem.registerOperationHandler(GenericSubsystemDescribeHandler.DEFINITION,GenericSubsystemDescribeHandler.INSTANCE);
  final ManagementResourceRegistration server=subsystem.registerSubModel(new ServerDefinition(registerRuntimeOnly));
  for (  PathDefinition path : new PathDefinition[]{PathDefinition.JOURNAL_INSTANCE,PathDefinition.BINDINGS_INSTANCE,PathDefinition.LARGE_MESSAGES_INSTANCE,PathDefinition.PAGING_INSTANCE}) {
    ManagementResourceRegistration pathRegistry=server.registerSubModel(path);
    PathDefinition.registerResolveOperationHandler(context,pathRegistry);
  }
  subsystem.registerSubModel(JMSBridgeDefinition.INSTANCE);
  if (registerRuntimeOnly) {
    final ManagementResourceRegistration deployment=subsystemRegistration.registerDeploymentModel(new SimpleResourceDefinition(SUBSYSTEM_PATH,getResourceDescriptionResolver("deployed")));
    final ManagementResourceRegistration deployedServer=deployment.registerSubModel(new SimpleResourceDefinition(SERVER_PATH,getResourceDescriptionResolver(SERVER)));
    deployedServer.registerSubModel(JMSQueueDefinition.DEPLOYMENT_INSTANCE);
    deployedServer.registerSubModel(JMSTopicDefinition.DEPLOYMENT_INSTANCE);
    deployedServer.registerSubModel(PooledConnectionFactoryDefinition.DEPLOYMENT_INSTANCE);
  }
}

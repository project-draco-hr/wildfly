{
  writer.writeStartElement(element.getLocalName());
  writer.writeAttribute(Attribute.TYPE.getLocalName(),protocol.get(ModelKeys.TYPE).asString());
  if (protocol.has(ModelKeys.SOCKET_BINDING)) {
    writer.writeAttribute(Attribute.SOCKET_BINDING.getLocalName(),protocol.get(ModelKeys.SOCKET_BINDING).asString());
  }
  if (protocol.has(ModelKeys.DIAGNOSTICS_SOCKET_BINDING)) {
    writer.writeAttribute(Attribute.DIAGNOSTICS_SOCKET_BINDING.getLocalName(),protocol.get(ModelKeys.DIAGNOSTICS_SOCKET_BINDING).asString());
  }
  if (protocol.has(ModelKeys.THREAD_POOL)) {
    writer.writeAttribute(Attribute.THREAD_POOL.getLocalName(),protocol.get(ModelKeys.THREAD_POOL).asString());
  }
  if (protocol.has(ModelKeys.OOB_THREAD_POOL)) {
    writer.writeAttribute(Attribute.OOB_THREAD_POOL.getLocalName(),protocol.get(ModelKeys.OOB_THREAD_POOL).asString());
  }
  if (protocol.has(ModelKeys.TIMER_THREAD_POOL)) {
    writer.writeAttribute(Attribute.TIMER_THREAD_POOL.getLocalName(),protocol.get(ModelKeys.TIMER_THREAD_POOL).asString());
  }
  if (protocol.has(ModelKeys.THREAD_FACTORY)) {
    writer.writeAttribute(Attribute.THREAD_FACTORY.getLocalName(),protocol.get(ModelKeys.THREAD_FACTORY).asString());
  }
  if (protocol.has(ModelKeys.PROPERTY)) {
    for (    Property property : protocol.get(ModelKeys.PROPERTY).asPropertyList()) {
      writer.writeStartElement(Element.PROPERTY.getLocalName());
      writer.writeAttribute(Attribute.NAME.getLocalName(),property.getName());
      writer.writeCharacters(property.getValue().asString());
      writer.writeEndElement();
    }
  }
  writer.writeEndElement();
}

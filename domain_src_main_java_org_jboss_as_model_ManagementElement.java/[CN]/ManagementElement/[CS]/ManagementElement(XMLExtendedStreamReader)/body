{
  super();
  String interfaceName=null;
  int port=-1;
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    final String value=reader.getAttributeValue(i);
    if (reader.getAttributeNamespace(i) != null) {
      throw unexpectedAttribute(reader,i);
    }
 else {
      final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case INTERFACE:
{
          interfaceName=value;
          break;
        }
case PORT:
{
        port=Integer.parseInt(value);
        break;
      }
case MAX_THREADS:
{
      maxThreads=Integer.parseInt(value);
      break;
    }
default :
  throw unexpectedAttribute(reader,i);
}
}
}
if (interfaceName == null) {
throw missingRequired(reader,Collections.singleton(Attribute.INTERFACE.getLocalName()));
}
this.interfaceName=interfaceName;
this.port=port;
reader.discardRemainder();
}

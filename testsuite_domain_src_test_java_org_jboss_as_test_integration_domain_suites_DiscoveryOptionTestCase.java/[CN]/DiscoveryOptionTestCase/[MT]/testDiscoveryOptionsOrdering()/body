{
  DomainClient slaveClient=domainSlaveLifecycleUtil.getDomainClient();
  ModelNode discoveryOptionsAddress=new ModelNode();
  discoveryOptionsAddress.add("host","slave");
  discoveryOptionsAddress.add("core-service","discovery-options");
  ModelNode readDiscoveryOptionsOrdering=Util.getReadAttributeOperation(PathAddress.pathAddress(discoveryOptionsAddress),DISCOVERY_OPTIONS);
  ModelNode expectedDiscoveryOptionsOrdering=new ModelNode();
  expectedDiscoveryOptionsOrdering.add("static-discovery","start-option");
  ModelNode originalOptionsOrdering=new ModelNode();
  originalOptionsOrdering.add("static-discovery","start-option");
  ModelNode discoveryOptionProperties=new ModelNode();
  discoveryOptionProperties.get(ACCESS_KEY).set("access_key");
  discoveryOptionProperties.get(SECRET_ACCESS_KEY).set("secret_access_key");
  discoveryOptionProperties.get(LOCATION).set("location");
  ModelNode addS3DiscoveryOption=getS3DiscoveryOptionAddOperation(discoveryOptionProperties);
  ModelNode addStaticDiscoveryOption=new ModelNode();
  addStaticDiscoveryOption.get(OP).set(ADD);
  addStaticDiscoveryOption.get(HOST).set("127.0.0.2");
  addStaticDiscoveryOption.get(PORT).set("9999");
  ModelNode result=slaveClient.execute(readDiscoveryOptionsOrdering);
  ModelNode returnVal=validateResponse(result);
  Assert.assertEquals(originalOptionsOrdering,returnVal);
  ModelNode discoveryOptionAddressOne=discoveryOptionsAddress.clone().add("discovery-option","option-one");
  addDiscoveryOptionTest(slaveClient,discoveryOptionAddressOne,addS3DiscoveryOption);
  expectedDiscoveryOptionsOrdering.add("discovery-option","option-one");
  ModelNode discoveryOptionAddressTwo=discoveryOptionsAddress.clone().add("static-discovery","option-two");
  addDiscoveryOptionTest(slaveClient,discoveryOptionAddressTwo,addStaticDiscoveryOption);
  expectedDiscoveryOptionsOrdering.add("static-discovery","option-two");
  ModelNode discoveryOptionAddressThree=discoveryOptionsAddress.clone().add("discovery-option","option-three");
  addDiscoveryOptionTest(slaveClient,discoveryOptionAddressThree,addS3DiscoveryOption);
  expectedDiscoveryOptionsOrdering.add("discovery-option","option-three");
  result=slaveClient.execute(readDiscoveryOptionsOrdering);
  returnVal=validateResponse(result);
  Assert.assertEquals(expectedDiscoveryOptionsOrdering,returnVal);
  removeDiscoveryOptionTest(slaveClient,discoveryOptionAddressOne);
  removeDiscoveryOptionTest(slaveClient,discoveryOptionAddressTwo);
  removeDiscoveryOptionTest(slaveClient,discoveryOptionAddressThree);
  result=slaveClient.execute(readDiscoveryOptionsOrdering);
  returnVal=validateResponse(result);
  Assert.assertEquals(originalOptionsOrdering,returnVal);
}

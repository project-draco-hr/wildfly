{
  Configuration mockConfiguration=Mockito.mock(Configuration.class);
  ConfigurationAdmin mockOSGiCAS=Mockito.mock(ConfigurationAdmin.class);
  Mockito.when(mockOSGiCAS.getConfiguration(pid,null)).thenReturn(mockConfiguration);
  Mockito.when(mockOSGiCAS.listConfigurations("(" + Constants.SERVICE_PID + "="+ pid+ ")")).thenReturn(new Configuration[]{mockConfiguration});
  ServiceReference mockCASSR=Mockito.mock(ServiceReference.class);
  ServiceReference mockSCSR=Mockito.mock(ServiceReference.class);
  ConfigAdminService mockJBCAS=Mockito.mock(ConfigAdminService.class);
  ServiceController mockJBCASController=Mockito.mock(ServiceController.class);
  Mockito.when(mockJBCASController.getValue()).thenReturn(mockJBCAS);
  ServiceContainer mockServiceContainer=Mockito.mock(ServiceContainer.class);
  Mockito.when(mockServiceContainer.getRequiredService(ConfigAdminService.SERVICE_NAME)).thenReturn(mockJBCASController);
  BundleContext mockBundleContext=Mockito.mock(BundleContext.class);
  Mockito.when(mockBundleContext.getServiceReferences(ConfigurationAdmin.class.getName(),null)).thenReturn(new ServiceReference[]{mockCASSR});
  Mockito.when(mockBundleContext.getServiceReference(ServiceContainer.class.getName())).thenReturn(mockSCSR);
  Mockito.when(mockBundleContext.getService(mockSCSR)).thenReturn(mockServiceContainer);
  Mockito.when(mockBundleContext.getService(mockCASSR)).thenReturn(mockOSGiCAS);
  dmpm.start(mockBundleContext);
  return mockConfiguration;
}

{
  final Resource resource=context.createResource(PathAddress.EMPTY_ADDRESS);
  ModelNode newModel=resource.getModel();
  ModelNode correctedOperation=operation.clone();
  for (  AttributeDefinition def : DOMAIN_ADD_ATTRIBUTES) {
    def.validateAndSet(correctedOperation,newModel);
    correctedOperation.get(def.getName()).set(newModel.get(def.getName()));
  }
  ModelNode content=newModel.require(CONTENT_ALL.getName());
  ModelNode contentItemNode=content.require(0);
  final ModelNode opAddr=correctedOperation.get(OP_ADDR);
  PathAddress address=PathAddress.pathAddress(opAddr);
  final String name=address.getLastElement().getValue();
  if (!newModel.hasDefined(RUNTIME_NAME.getName())) {
    newModel.get(RUNTIME_NAME.getName()).set(name);
  }
  byte[] hash=null;
  if (contentItemNode.hasDefined(CONTENT_HASH.getName())) {
    hash=contentItemNode.require(CONTENT_HASH.getName()).asBytes();
    if (contentRepository != null && !contentRepository.hasContent(hash)) {
      if (context.isBooting()) {
        if (context.getRunningMode() == RunningMode.ADMIN_ONLY) {
          DomainControllerLogger.HOST_CONTROLLER_LOGGER.reportAdminOnlyMissingDeploymentContent(HashUtil.bytesToHexString(hash),name);
        }
 else {
          throw createFailureException(DomainControllerLogger.ROOT_LOGGER.noDeploymentContentWithHashAtBoot(HashUtil.bytesToHexString(hash),name));
        }
      }
 else {
        throw createFailureException(DomainControllerLogger.ROOT_LOGGER.noDeploymentContentWithHash(HashUtil.bytesToHexString(hash)));
      }
    }
 else     if (fileRepository != null) {
      fileRepository.getDeploymentFiles(hash);
    }
  }
 else   if (DeploymentHandlerUtils.hasValidContentAdditionParameterDefined(contentItemNode)) {
    if (contentRepository == null) {
      throw createFailureException(DomainControllerLogger.ROOT_LOGGER.slaveCannotAcceptUploads());
    }
    try {
      hash=DeploymentUploadUtil.storeContentAndTransformOperation(context,correctedOperation,contentRepository);
    }
 catch (    IOException e) {
      throw createFailureException(e.toString());
    }
    contentItemNode=new ModelNode();
    contentItemNode.get(CONTENT_HASH.getName()).set(hash);
    content=new ModelNode();
    content.add(contentItemNode);
    newModel.get(CONTENT_ALL.getName()).set(content);
  }
  if (contentRepository != null && hash != null) {
    final byte[] contentHash=hash;
    context.completeStep(new OperationContext.ResultHandler(){
      public void handleResult(      ResultAction resultAction,      OperationContext context,      ModelNode operation){
        if (resultAction == ResultAction.KEEP) {
          contentRepository.addContentReference(contentHash,name);
        }
      }
    }
);
  }
 else {
    context.stepCompleted();
  }
}

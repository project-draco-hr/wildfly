{
  final WarMetaData warMetaData=new WarMetaData();
  warMetaData.setMergedJBossWebMetaData(new JBossWebMetaData());
  when(phaseContext.getDeploymentUnit()).thenReturn(deploymentUnit);
  final ServiceTarget serviceTarget=mock(ServiceTarget.class,RETURNS_DEEP_STUBS);
  when(phaseContext.getServiceTarget()).thenReturn(serviceTarget);
  when(deploymentUnit.getAttachment(WarMetaData.ATTACHMENT_KEY)).thenReturn(warMetaData);
  when(deploymentUnit.getAttachment(org.jboss.as.ee.component.Attachments.EE_APPLICATION_DESCRIPTION)).thenReturn(new EEApplicationDescription());
  when(deploymentUnit.getAttachment(org.jboss.as.ee.component.Attachments.COMPONENT_REGISTRY)).thenReturn(new ComponentRegistry(null));
  final ResourceRoot resourceRoot=mock(ResourceRoot.class);
  final VirtualFile deploymentRoot=mock(VirtualFile.class);
  when(deploymentRoot.getPhysicalFile()).thenReturn(new File("tmp"));
  when(resourceRoot.getRoot()).thenReturn(deploymentRoot);
  when(deploymentUnit.getAttachment(Attachments.DEPLOYMENT_ROOT)).thenReturn(resourceRoot);
  when(deploymentUnit.getAttachment(Attachments.MODULE)).thenReturn(mock(Module.class));
  when(deploymentUnit.getName()).thenReturn("webapp.war");
  when(deploymentUnit.getServiceName()).thenReturn(Services.deploymentUnitName("webapp.war"));
  when(deploymentUnit.getDeploymentSubsystemModel("web")).thenReturn(mock(ModelNode.class,RETURNS_DEEP_STUBS));
}

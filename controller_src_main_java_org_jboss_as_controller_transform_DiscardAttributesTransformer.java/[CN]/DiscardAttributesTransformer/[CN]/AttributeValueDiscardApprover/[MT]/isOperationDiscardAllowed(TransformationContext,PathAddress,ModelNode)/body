{
  String opName=operation.require(OP).asString();
  if (ADD.equals(opName)) {
    return isDiscardAllowed(operation);
  }
 else   if (WRITE_ATTRIBUTE_OPERATION.equals(opName)) {
    String attr=operation.require(NAME).asString();
    if (attr.equals(attributeName)) {
      ModelNode value=operation.hasDefined(VALUE) ? operation.get(VALUE) : new ModelNode();
      ModelNode mockModel=new ModelNode();
      mockModel.get(attributeName).set(value);
      return isDiscardAllowed(mockModel);
    }
 else {
      return isDiscardAllowed(context.readResource(PathAddress.EMPTY_ADDRESS).getModel());
    }
  }
 else   if (UNDEFINE_ATTRIBUTE_OPERATION.equals(opName)) {
    String attr=operation.require(NAME).asString();
    if (attr.equals(attributeName)) {
      ModelNode mockModel=new ModelNode();
      mockModel.get(attributeName);
      return isDiscardAllowed(mockModel);
    }
 else {
      return isDiscardAllowed(context.readResource(PathAddress.EMPTY_ADDRESS).getModel());
    }
  }
  throw new IllegalStateException();
}

{
  try {
    argumentRef[0]=null;
    Class[] javaTypes=jdbcType.getJavaTypes();
    JDBCResultSetReader[] rsReaders=jdbcType.getResultSetReaders();
    for (int i=0; i < javaTypes.length; i++) {
      Object columnValue=rsReaders[i].get(rs,parameterIndex++,javaTypes[i],log);
      if (nullColumnNullifiesResult && columnValue == null) {
        argumentRef[0]=null;
        parameterIndex+=javaTypes.length - i - 1;
        break;
      }
      argumentRef[0]=jdbcType.setColumnValue(i,argumentRef[0],columnValue);
    }
    return parameterIndex;
  }
 catch (  SQLException e) {
    throw new EJBException("Internal error getting results " + "for field member " + getFieldName(),e);
  }
}

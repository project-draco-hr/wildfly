{
  this.manager=manager;
  this.fieldName=metadata.getFieldName();
  this.fieldType=metadata.getFieldType();
  this.jdbcType=jdbcType;
  this.readOnly=metadata.isReadOnly();
  this.readTimeOut=metadata.getReadTimeOut();
  this.primaryKeyMember=metadata.isPrimaryKeyMember();
  this.primaryKeyClass=metadata.getEntity().getPrimaryKeyClass();
  this.primaryKeyField=metadata.getPrimaryKeyField();
  final JDBCEntityBridge entityBridge=(JDBCEntityBridge)manager.getEntityBridge();
  this.jdbcContextIndex=entityBridge.getNextJDBCContextIndex();
  if (!metadata.isRelationTableField())   tableIndex=entityBridge.addTableField(this);
 else   tableIndex=-1;
  final JDBCTypeFactory typeFactory=manager.getJDBCTypeFactory();
  stateFactory=JDBCTypeFactory.getCMPFieldStateFactory(typeFactory,metadata.getStateFactory(),fieldType);
  checkDirtyAfterGet=JDBCTypeFactory.checkDirtyAfterGet(typeFactory,metadata.getCheckDirtyAfterGet(),fieldType);
  this.log=createLogger(manager,fieldName);
}

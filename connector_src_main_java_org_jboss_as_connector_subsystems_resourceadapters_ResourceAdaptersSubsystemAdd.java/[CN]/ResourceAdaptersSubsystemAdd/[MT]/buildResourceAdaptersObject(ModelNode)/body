{
  List<ResourceAdapter> resourceAdapters=new ArrayList<ResourceAdapter>();
  if (operation.hasDefined(RESOURCEADAPTERS)) {
    for (    ModelNode raNode : operation.get(RESOURCEADAPTERS).asList()) {
      Map<String,String> configProperties=new HashMap<String,String>(raNode.get(CONFIG_PROPERTIES).asList().size());
      for (      ModelNode property : raNode.get(CONFIG_PROPERTIES).asList()) {
        configProperties.put(property.asProperty().getName(),property.asString());
      }
      String archive=getStringIfSetOrGetDefault(operation,ARCHIVE,null);
      TransactionSupportEnum transactionSupport=operation.hasDefined(TRANSACTIONSUPPORT) ? TransactionSupportEnum.valueOf(operation.get(TRANSACTIONSUPPORT).asString()) : null;
      String bootstrapContext=getStringIfSetOrGetDefault(operation,BOOTSTRAPCONTEXT,null);
      List<String> beanValidationGroups=new ArrayList<String>(operation.get(BEANVALIDATIONGROUPS).asList().size());
      for (      ModelNode beanValidtion : operation.get(BEANVALIDATIONGROUPS).asList()) {
        beanValidationGroups.add(beanValidtion.asString());
      }
      ResourceAdapter ra;
      try {
        ra=new ResourceAdapterImpl(archive,transactionSupport,buildConnectionDefinitionObject(operation),buildAdminObjects(operation),configProperties,beanValidationGroups,bootstrapContext);
      }
 catch (      ValidateException e) {
        throw new OperationFailedException(e,operation);
      }
      resourceAdapters.add(ra);
    }
  }
  return new ResourceAdaptersImpl(resourceAdapters);
}

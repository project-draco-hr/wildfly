{
  final DeploymentUnit deploymentUnit=phaseContext.getDeploymentUnit();
  final EEModuleDescription module=deploymentUnit.getAttachment(Attachments.EE_MODULE_DESCRIPTION);
  if (!DeploymentTypeMarker.isType(DeploymentType.WAR,deploymentUnit)) {
    return;
  }
  if (!WeldDeploymentMarker.isPartOfWeldDeployment(deploymentUnit)) {
    return;
  }
  WarMetaData warMetaData=deploymentUnit.getAttachment(WarMetaData.ATTACHMENT_KEY);
  if (warMetaData == null) {
    log.info("Not installing Weld web tier integration as no war metadata found");
    return;
  }
  final JBossWebMetaData webMetaData=warMetaData.getMergedJBossWebMetaData();
  if (webMetaData == null) {
    log.info("Not installing Weld web tier integration as no merged metadata found");
    return;
  }
  List<ListenerMetaData> listeners=webMetaData.getListeners();
  if (listeners == null) {
    listeners=new ArrayList<ListenerMetaData>();
    webMetaData.setListeners(listeners);
  }
  listeners.add(0,WBL);
  listeners.add(1,JIL);
  module.addComponent(new WebComponentDescription(JSP_LISTENER,JSP_LISTENER,module,deploymentUnit.getServiceName()));
  FiltersMetaData filters=webMetaData.getFilters();
  if (filters == null) {
    filters=new FiltersMetaData();
    webMetaData.setFilters(filters);
  }
  filters.add(CPF);
  List<FilterMappingMetaData> filterMappings=webMetaData.getFilterMappings();
  if (filterMappings == null) {
    filterMappings=new ArrayList<FilterMappingMetaData>();
    webMetaData.setFilterMappings(filterMappings);
  }
  filterMappings.add(CPFM);
}

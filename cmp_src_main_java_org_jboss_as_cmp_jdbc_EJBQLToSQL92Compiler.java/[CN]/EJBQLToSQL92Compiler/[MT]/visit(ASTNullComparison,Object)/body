{
  StringBuffer sql=(StringBuffer)data;
  final Node child0=node.jjtGetChild(0);
  if (child0 instanceof ASTPath) {
    ASTPath path=(ASTPath)child0;
    addLeftJoinPath(path);
    JDBCFieldBridge field=(JDBCFieldBridge)path.getField();
    if (field instanceof JDBCAbstractCMRFieldBridge) {
      JDBCAbstractCMRFieldBridge cmrField=(JDBCAbstractCMRFieldBridge)field;
      final String alias;
      final JDBCFieldBridge[] keyFields;
      if (cmrField.hasForeignKey()) {
        alias=aliasManager.getAlias(path.getPath(path.size() - 2));
        keyFields=cmrField.getForeignKeyFields();
      }
 else {
        alias=aliasManager.getAlias(path.getPath());
        if (cmrField.getMetaData().getRelationMetaData().isTableMappingStyle()) {
          keyFields=cmrField.getRelatedCMRField().getEntity().getPrimaryKeyFields();
        }
 else {
          keyFields=cmrField.getRelatedCMRField().getForeignKeyFields();
        }
      }
      SQLUtil.getIsNullClause(node.not,keyFields,alias,sql);
    }
 else {
      String alias=aliasManager.getAlias(path.getPath(path.size() - 2));
      SQLUtil.getIsNullClause(node.not,field,alias,sql);
    }
  }
 else   if (child0 instanceof ASTParameter) {
    ASTParameter param=(ASTParameter)child0;
    Class type=getParameterType(param.number);
    QueryParameter queryParam=new QueryParameter(param.number - 1,typeFactory.getJDBCType(type));
    inputParameters.add(queryParam);
    sql.append("? IS ");
    if (node.not) {
      sql.append(SQLUtil.NOT);
    }
    sql.append(SQLUtil.NULL);
  }
 else {
    throw CmpMessages.MESSAGES.unexpectedNodeInNull(node);
  }
  return data;
}

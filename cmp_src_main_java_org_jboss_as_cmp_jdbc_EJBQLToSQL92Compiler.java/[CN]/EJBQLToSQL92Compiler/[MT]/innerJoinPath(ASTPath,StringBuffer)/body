{
  if (path.size() < 2) {
    return;
  }
  String parentAlias=aliasManager.getAlias(path.getPath(0) + "_local");
  String leftAlias=parentAlias;
  for (int i=1; i < path.size(); ++i) {
    String curPath=path.getPath(i);
    final String joinAlias=aliasManager.getAlias(curPath + "_local");
    final JDBCAbstractCMRFieldBridge cmrField=(JDBCAbstractCMRFieldBridge)path.getCMRField(i);
    final JDBCAbstractEntityBridge joinEntity=(JDBCAbstractEntityBridge)cmrField.getRelatedEntity();
    JDBCRelationMetaData relation=cmrField.getMetaData().getRelationMetaData();
    String join=" INNER JOIN ";
    if (relation.isTableMappingStyle()) {
      String relTableAlias=aliasManager.getRelationTableAlias(curPath + "_local");
      sql.append(join).append(cmrField.getQualifiedTableName()).append(' ').append(relTableAlias).append(" ON ");
      SQLUtil.getRelationTableJoinClause(cmrField,leftAlias,relTableAlias,sql);
      sql.append(join).append(joinEntity.getQualifiedTableName()).append(' ').append(joinAlias).append(" ON ");
      SQLUtil.getRelationTableJoinClause(cmrField.getRelatedCMRField(),joinAlias,relTableAlias,sql);
    }
 else {
      sql.append(join).append(joinEntity.getQualifiedTableName()).append(' ').append(joinAlias).append(" ON ");
      SQLUtil.getJoinClause(cmrField,leftAlias,joinAlias,sql);
    }
    leftAlias=joinAlias;
  }
}

{
  if (org.apache.tomcat.util.Constants.ENABLE_MODELER) {
    final MBeanServer mbeanServer=this.mbeanServer.getOptionalValue();
    if (mbeanServer != null) {
      Registry.getRegistry(null,null).setMBeanServer(mbeanServer);
    }
  }
  final Catalina catalina=new Catalina();
  catalina.setCatalinaHome(pathInjector.getValue());
  final StandardServer server=new StandardServer();
  catalina.setServer(server);
  registerObject(mbeanServer,"jboss.web:type=Server",server,"org.apache.catalina.startup.StandardServer");
  final StandardService service=new StandardService();
  registerObject(mbeanServer,"jboss.web:service=WebServer",service,"org.apache.catalina.core.StandardService");
  service.setName(JBOSS_WEB);
  service.setServer(server);
  server.addService(service);
  final Engine engine=new StandardEngine();
  engine.setName(JBOSS_WEB);
  engine.setService(service);
  engine.setDefaultHost(defaultHost);
  service.setContainer(engine);
  if (useNative) {
    final AprLifecycleListener apr=new AprLifecycleListener();
    apr.setSSLEngine("on");
    server.addLifecycleListener(apr);
  }
  server.addLifecycleListener(new JasperListener());
  try {
    catalina.create();
    server.initialize();
    catalina.start();
  }
 catch (  Exception e) {
    throw new StartException(e);
  }
  this.catalina=catalina;
  this.service=service;
  this.engine=engine;
}

{
  final Resource resource=context.readResource(PathAddress.EMPTY_ADDRESS);
  final ActiveMQServer server=getActiveMQServer(context,operation);
  if (server != null) {
    final ModelNode model=resource.getModel();
    final PathAddress address=PathAddress.pathAddress(operation.require(ModelDescriptionConstants.OP_ADDR));
    final AddressSettings settings=AddressSettingAdd.createSettings(context,model);
    final HierarchicalRepository<AddressSettings> repository=server.getAddressSettingsRepository();
    final String match=address.getLastElement().getValue();
    final AddressSettings existingSettings=repository.getMatch(match);
    repository.addMatch(match,settings);
    if (existingSettings != null) {
      handbackHolder.setHandback(new RevertHandback(){
        @Override public void doRevertUpdateToRuntime(){
          repository.addMatch(address.getLastElement().getValue(),existingSettings);
        }
      }
);
    }
  }
  return false;
}

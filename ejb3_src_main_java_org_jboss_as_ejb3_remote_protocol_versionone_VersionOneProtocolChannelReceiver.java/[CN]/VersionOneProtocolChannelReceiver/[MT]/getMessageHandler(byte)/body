{
switch (header) {
case HEADER_INVOCATION_REQUEST:
    return new MethodInvocationMessageHandler(this.deploymentRepository,this.marshallerFactory,this.executorService,this.remoteAsyncInvocationCancelStatus);
case HEADER_INVOCATION_CANCELLATION_REQUEST:
  return new InvocationCancellationMessageHandler(this.remoteAsyncInvocationCancelStatus);
case HEADER_SESSION_OPEN_REQUEST:
return new SessionOpenRequestHandler(this.deploymentRepository,this.marshallerFactory,this.executorService);
case HEADER_TX_COMMIT_REQUEST:
return new TransactionRequestHandler(this.transactionsRepository,this.marshallerFactory,this.executorService,TransactionRequestHandler.TransactionRequestType.COMMIT);
case HEADER_TX_ROLLBACK_REQUEST:
return new TransactionRequestHandler(this.transactionsRepository,this.marshallerFactory,this.executorService,TransactionRequestHandler.TransactionRequestType.ROLLBACK);
case HEADER_TX_FORGET_REQUEST:
return new TransactionRequestHandler(this.transactionsRepository,this.marshallerFactory,this.executorService,TransactionRequestHandler.TransactionRequestType.FORGET);
case HEADER_TX_PREPARE_REQUEST:
return new TransactionRequestHandler(this.transactionsRepository,this.marshallerFactory,this.executorService,TransactionRequestHandler.TransactionRequestType.PREPARE);
case HEADER_TX_BEFORE_COMPLETION_REQUEST:
return new TransactionRequestHandler(this.transactionsRepository,this.marshallerFactory,this.executorService,TransactionRequestHandler.TransactionRequestType.BEFORE_COMPLETION);
default :
return null;
}
}

{
  final PathAddress address=PathAddress.pathAddress(operation.require(OP_ADDR));
  final String operationName=operation.require(OP).asString();
  final OperationTransformer transformer=target.resolveTransformer(address,operationName);
  if (transformer == null) {
    ControllerLogger.ROOT_LOGGER.tracef("operation %s does not need transformation",operation);
    return new OperationTransformer.TransformedOperation(operation,OperationResultTransformer.ORIGINAL_RESULT);
  }
  final List<PathTransformation> addresses=target.getPathTransformation(address);
  final Iterator<PathTransformation> transformations=addresses.iterator();
  final PathTransformation.BuilderImpl builder=new PathTransformation.BuilderImpl(transformations,address);
  final PathAddress transformed=builder.start();
  ResourceTransformationContext opCtx=ResourceTransformationContextImpl.createForOperation(context,operation);
  return transformer.transformOperation(opCtx,transformed,operation);
}

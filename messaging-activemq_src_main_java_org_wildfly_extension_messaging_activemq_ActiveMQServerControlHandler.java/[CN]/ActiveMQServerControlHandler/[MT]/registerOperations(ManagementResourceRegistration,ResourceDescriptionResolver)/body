{
  registry.registerOperationHandler(runtimeReadOnlyOperation(GET_CONNECTORS_AS_JSON,resolver).setReplyType(STRING).build(),this);
  registry.registerOperationHandler(runtimeOnlyOperation(RESET_ALL_MESSAGE_COUNTERS,resolver).build(),this);
  registry.registerOperationHandler(runtimeOnlyOperation(RESET_ALL_MESSAGE_COUNTER_HISTORIES,resolver).build(),this);
  registry.registerOperationHandler(runtimeReadOnlyOperation(LIST_PREPARED_TRANSACTIONS,resolver).setReplyType(LIST).setReplyValueType(STRING).build(),this);
  registry.registerOperationHandler(runtimeReadOnlyOperation(LIST_PREPARED_TRANSACTION_DETAILS_AS_JSON,resolver).setReplyType(STRING).build(),this);
  registry.registerOperationHandler(runtimeReadOnlyOperation(LIST_PREPARED_TRANSACTION_DETAILS_AS_HTML,resolver).setReplyType(STRING).build(),this);
  registry.registerOperationHandler(runtimeReadOnlyOperation(LIST_HEURISTIC_COMMITTED_TRANSACTIONS,resolver).setReplyType(LIST).setReplyValueType(STRING).build(),this);
  registry.registerOperationHandler(runtimeReadOnlyOperation(LIST_HEURISTIC_ROLLED_BACK_TRANSACTIONS,resolver).setReplyType(LIST).setReplyValueType(STRING).build(),this);
  registry.registerOperationHandler(runtimeOnlyOperation(COMMIT_PREPARED_TRANSACTION,resolver).setParameters(TRANSACTION_AS_BASE_64).setReplyType(BOOLEAN).build(),this);
  registry.registerOperationHandler(runtimeOnlyOperation(ROLLBACK_PREPARED_TRANSACTION,resolver).setParameters(TRANSACTION_AS_BASE_64).setReplyType(BOOLEAN).build(),this);
  registry.registerOperationHandler(runtimeReadOnlyOperation(LIST_REMOTE_ADDRESSES,resolver).setParameters(OPTIONAL_IP_ADDRESS).setReplyType(LIST).setReplyValueType(STRING).build(),this);
  registry.registerOperationHandler(runtimeOnlyOperation(CLOSE_CONNECTIONS_FOR_ADDRESS,resolver).setParameters(REQUIRED_IP_ADDRESS).setReplyType(BOOLEAN).build(),this);
  registry.registerOperationHandler(runtimeOnlyOperation(CLOSE_CONNECTIONS_FOR_USER,resolver).setParameters(USER).setReplyType(BOOLEAN).build(),this);
  registry.registerOperationHandler(runtimeOnlyOperation(CLOSE_CONSUMER_CONNECTIONS_FOR_ADDRESS,resolver).setParameters(ADDRESS_MATCH).setReplyType(BOOLEAN).build(),this);
  registry.registerOperationHandler(runtimeReadOnlyOperation(LIST_CONNECTION_IDS,resolver).setReplyType(LIST).setReplyValueType(STRING).build(),this);
  registry.registerOperationHandler(runtimeReadOnlyOperation(LIST_PRODUCERS_INFO_AS_JSON,resolver).setReplyType(STRING).build(),this);
  registry.registerOperationHandler(runtimeReadOnlyOperation(LIST_SESSIONS,resolver).setParameters(CONNECTION_ID).setReplyType(LIST).setReplyValueType(STRING).build(),this);
  registry.registerOperationHandler(runtimeReadOnlyOperation(GET_ROLES_AS_JSON,resolver).setParameters(ADDRESS_MATCH).setReplyType(STRING).build(),this);
  registry.registerOperationHandler(runtimeReadOnlyOperation(GET_ADDRESS_SETTINGS_AS_JSON,resolver).setParameters(ADDRESS_MATCH).setReplyType(STRING).build(),this);
  registry.registerOperationHandler(runtimeOnlyOperation(FORCE_FAILOVER,resolver).build(),this);
  registry.registerOperationHandler(runtimeReadOnlyOperation(GET_ROLES,resolver).setParameters(ADDRESS_MATCH).setReplyType(LIST).setReplyParameters(SecurityRoleDefinition.NAME,SecurityRoleDefinition.SEND,SecurityRoleDefinition.CONSUME,SecurityRoleDefinition.CREATE_DURABLE_QUEUE,SecurityRoleDefinition.DELETE_DURABLE_QUEUE,SecurityRoleDefinition.CREATE_NON_DURABLE_QUEUE,SecurityRoleDefinition.DELETE_NON_DURABLE_QUEUE,SecurityRoleDefinition.MANAGE).build(),this);
}

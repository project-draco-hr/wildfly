{
  final PathElement transportRelativePath=PathElement.pathElement(ModelKeys.TRANSPORT,ModelKeys.TRANSPORT_NAME);
  final Resource resource=context.createResource(PathAddress.EMPTY_ADDRESS);
  final ModelNode subModel=resource.getModel();
  for (  final AttributeDefinition attribute : attributes) {
    if (attribute.getName().equals(ModelKeys.PROPERTIES))     continue;
    attribute.validateAndSet(operation,subModel);
  }
  if (operation.hasDefined(ModelKeys.PROPERTIES)) {
    for (    Property property : operation.get(ModelKeys.PROPERTIES).asPropertyList()) {
      final Resource param=context.createResource(PathAddress.pathAddress(PathElement.pathElement(ModelKeys.PROPERTY,property.getName())));
      final ModelNode value=property.getValue();
      if (!value.isDefined()) {
        throw JGroupsLogger.ROOT_LOGGER.propertyNotDefined(property.getName(),transportRelativePath.toString());
      }
      PropertyResourceDefinition.VALUE.validateAndSet(value,param.getModel());
    }
  }
  reloadRequiredStep(context);
  context.stepCompleted();
}

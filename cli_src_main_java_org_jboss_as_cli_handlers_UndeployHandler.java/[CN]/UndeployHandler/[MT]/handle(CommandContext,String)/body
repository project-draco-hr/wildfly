{
  ModelControllerClient client=ctx.getModelControllerClient();
  if (client == null) {
    ctx.printLine("The controller client is not available. Make sure you are connected to the controller.");
    return;
  }
  if (args == null) {
    listDeployments(ctx,false);
    return;
  }
  boolean lSwitch=false;
  String deployment=null;
  String[] arr=args.split("\\s+");
  for (int i=0; i < arr.length; ++i) {
    String arg=arr[i];
    if ("-l".equals(arg)) {
      lSwitch=true;
    }
 else {
      deployment=arg;
    }
  }
  if (deployment == null) {
    listDeployments(ctx,lSwitch);
    return;
  }
  DefaultOperationRequestBuilder builder=new DefaultOperationRequestBuilder();
  builder=new DefaultOperationRequestBuilder();
  builder.setOperationName("undeploy");
  builder.addNode("deployment",args);
  ModelNode result;
  try {
    ModelNode request=builder.buildRequest();
    result=client.execute(request);
  }
 catch (  Exception e) {
    ctx.printLine("Failed to undeploy: " + e.getLocalizedMessage());
    return;
  }
  if (!Util.isSuccess(result)) {
    ctx.printLine("Undeploy failed: " + Util.getFailureDescription(result));
    return;
  }
  builder=new DefaultOperationRequestBuilder();
  builder.setOperationName("remove");
  builder.addNode("deployment",args);
  try {
    ModelNode request=builder.buildRequest();
    result=client.execute(request);
  }
 catch (  Exception e) {
    ctx.printLine("Failed to remove the deployment content from the repository: " + e.getLocalizedMessage());
    return;
  }
  if (!Util.isSuccess(result)) {
    ctx.printLine("Remove failed: " + Util.getFailureDescription(result));
    return;
  }
  ctx.printLine("'" + args + "' undeployed successfully.");
}

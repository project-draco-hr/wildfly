{
  ModelNode composite=new ModelNode();
  composite.get("operation").set("composite");
  composite.get("address").setEmptyList();
  ModelNode steps=composite.get("steps");
  final String name=this.name.getValue(ctx.getParsedArguments());
  if (name == null) {
    throw new OperationFormatException("Required argument name are missing.");
  }
  DefaultOperationRequestBuilder builder;
  if (ctx.isDomainMode()) {
    final String[] serverGroups;
    if (ctx.isDomainMode()) {
      try {
        String serverGroupsStr=this.serverGroups.getValue(ctx.getParsedArguments());
        serverGroups=serverGroupsStr.split(",");
      }
 catch (      IllegalArgumentException e) {
        throw new OperationFormatException("--server-groups is missing");
      }
    }
 else {
      serverGroups=null;
    }
    for (    String group : serverGroups) {
      ModelNode groupStep=Util.configureDeploymentOperation(DEPLOYMENT_UNDEPLOY_OPERATION,name,group);
      steps.add(groupStep);
    }
    for (    String group : serverGroups) {
      ModelNode groupStep=Util.configureDeploymentOperation(DEPLOYMENT_REMOVE_OPERATION,name,group);
      steps.add(groupStep);
    }
  }
 else {
    builder=new DefaultOperationRequestBuilder();
    builder.setOperationName("undeploy");
    builder.addNode("deployment",name);
    steps.add(builder.buildRequest());
  }
  builder=new DefaultOperationRequestBuilder();
  builder.setOperationName("remove");
  builder.addNode("deployment",name);
  steps.add(builder.buildRequest());
  return composite;
}

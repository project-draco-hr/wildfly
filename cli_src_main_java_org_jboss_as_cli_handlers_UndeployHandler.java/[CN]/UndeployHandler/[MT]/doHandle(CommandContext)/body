{
  final ModelControllerClient client=ctx.getModelControllerClient();
  final ParsedCommandLine args=ctx.getParsedCommandLine();
  final boolean l=this.l.isPresent(args);
  if (!args.hasProperties() || l) {
    this.listDeployments(ctx,l);
    return;
  }
  final String path=this.path.getValue(args);
  final File f;
  if (path != null) {
    f=new File(path);
    if (!f.exists()) {
      throw new CommandFormatException("Path '" + f.getAbsolutePath() + "' doesn't exist.");
    }
 else     if (!isCliArchive(f)) {
      throw new CommandFormatException("File '" + f.getAbsolutePath() + "' is not a valid CLI archive. CLI archives should have a '.cli' extension.");
    }
  }
 else {
    f=null;
  }
  if (isCliArchive(f)) {
    final ModelNode request=buildRequest(ctx);
    if (request == null) {
      throw new CommandFormatException("Operation request wasn't built.");
    }
    try {
      final ModelNode result=client.execute(request);
      if (Util.isSuccess(result)) {
        return;
      }
 else {
        throw new CommandFormatException("Failed to execute archive script: " + Util.getFailureDescription(result));
      }
    }
 catch (    IOException e) {
      throw new CommandFormatException("Failed to execute archive script: " + e.getLocalizedMessage(),e);
    }
  }
  final String name=this.name.getValue(ctx.getParsedCommandLine());
  if (name == null) {
    printList(ctx,Util.getDeployments(client),l);
    return;
  }
  final ModelNode request=buildRequestWOValidation(ctx);
  addHeaders(ctx,request);
  final ModelNode result;
  try {
    result=client.execute(request);
  }
 catch (  Exception e) {
    throw new CommandFormatException("Undeploy failed: " + e.getLocalizedMessage());
  }
  if (!Util.isSuccess(result)) {
    throw new CommandFormatException("Undeploy failed: " + Util.getFailureDescription(result));
  }
}

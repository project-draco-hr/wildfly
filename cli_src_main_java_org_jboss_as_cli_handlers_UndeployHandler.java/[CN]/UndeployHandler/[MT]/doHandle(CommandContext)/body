{
  ModelControllerClient client=ctx.getModelControllerClient();
  ParsedArguments args=ctx.getParsedArguments();
  boolean l=this.l.isPresent(args);
  if (!args.hasArguments() || l) {
    printList(ctx,Util.getDeployments(client),l);
    return;
  }
  final String name=this.name.getValue(ctx.getParsedArguments());
  if (name == null) {
    printList(ctx,Util.getDeployments(client),l);
    return;
  }
  DefaultOperationRequestBuilder builder;
  builder=new DefaultOperationRequestBuilder();
  builder.setOperationName("undeploy");
  builder.addNode("deployment",name);
  ModelNode result;
  try {
    ModelNode request=builder.buildRequest();
    result=client.execute(request);
  }
 catch (  Exception e) {
    ctx.printLine("Failed to undeploy: " + e.getLocalizedMessage());
    return;
  }
  if (!Util.isSuccess(result)) {
    ctx.printLine("Undeploy failed: " + Util.getFailureDescription(result));
    return;
  }
  builder=new DefaultOperationRequestBuilder();
  builder.setOperationName("remove");
  builder.addNode("deployment",name);
  try {
    ModelNode request=builder.buildRequest();
    result=client.execute(request);
  }
 catch (  Exception e) {
    ctx.printLine("Failed to remove the deployment content from the repository: " + e.getLocalizedMessage());
    return;
  }
  if (!Util.isSuccess(result)) {
    ctx.printLine("Remove failed: " + Util.getFailureDescription(result));
    return;
  }
  ctx.printLine("Successfully undeployed " + name + ".");
}

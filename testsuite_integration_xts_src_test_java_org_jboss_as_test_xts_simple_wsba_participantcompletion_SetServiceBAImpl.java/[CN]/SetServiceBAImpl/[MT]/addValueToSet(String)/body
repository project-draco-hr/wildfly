{
  log.info("[SERVICE] invoked addValueToSet('" + value + "')");
  BAParticipantManager participantManager;
  try {
    SetParticipantBA participant=new SetParticipantBA(value);
    BusinessActivityManager activityManager=BusinessActivityManagerFactory.businessActivityManager();
    log.info("[SERVICE] Enlisting a participant into the BA");
    participantManager=activityManager.enlistForBusinessAgreementWithParticipantCompletion(participant,"SetServiceBAImpl:" + new Uid().toString());
  }
 catch (  Exception e) {
    log.error("Participant enlistment failed");
    e.printStackTrace(System.err);
    throw new SetServiceException("Error enlisting participant",e);
  }
  log.info("[SERVICE] Invoking the back-end business logic");
  MockSetManager.add(value);
  log.info("[SERVICE] Prepare the backend resource and if successful notify the coordinator that we have completed our work");
  if (MockSetManager.prepare()) {
    try {
      log.info("[SERVICE] Prepare successful, notifying coordinator of completion");
      participantManager.completed();
    }
 catch (    Exception e) {
      MockSetManager.rollback(value);
      log.error("[SERVICE]  'completed' callback failed");
      throw new SetServiceException("Error when notifying the coordinator that the work is completed",e);
    }
  }
 else {
    try {
      log.info("[SERVICE] Prepare failed, notifying coordinator that we cannot complete");
      participantManager.cannotComplete();
    }
 catch (    Exception e) {
      log.error("'cannotComplete' callback failed");
      throw new SetServiceException("Error when notifying the coordinator that the work is cannot be completed",e);
    }
    throw new SetServiceException("Unable to prepare the back-end resource");
  }
}

{
  final UnboundedQueueThreadPoolService pool=(UnboundedQueueThreadPoolService)service;
  if (attributeName.equals(CommonAttributes.ACTIVE_COUNT)) {
    context.getResult().set(pool.getActiveCount());
  }
 else   if (attributeName.equals(CommonAttributes.COMPLETED_TASK_COUNT)) {
    context.getResult().set(pool.getCompletedTaskCount());
  }
 else   if (attributeName.equals(CommonAttributes.CURRENT_THREAD_COUNT)) {
    context.getResult().set(pool.getCurrentThreadCount());
  }
 else   if (attributeName.equals(CommonAttributes.LARGEST_THREAD_COUNT)) {
    context.getResult().set(pool.getLargestThreadCount());
  }
 else   if (attributeName.equals(CommonAttributes.REJECTED_COUNT)) {
    context.getResult().set(pool.getRejectedCount());
  }
 else   if (attributeName.equals(CommonAttributes.TASK_COUNT)) {
    context.getResult().set(pool.getTaskCount());
  }
 else   if (attributeName.equals(CommonAttributes.QUEUE_SIZE)) {
    context.getResult().set(pool.getQueueSize());
  }
 else {
    throw ThreadsLogger.ROOT_LOGGER.unsupportedUnboundedQueueThreadPoolMetric(attributeName);
  }
}

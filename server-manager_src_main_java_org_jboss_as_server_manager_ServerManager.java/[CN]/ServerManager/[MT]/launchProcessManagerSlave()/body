{
  final ProtocolClient.Configuration configuration=new ProtocolClient.Configuration();
  configuration.setReadExecutor(Executors.newCachedThreadPool());
  configuration.setServerAddress(new InetSocketAddress(environment.getProcessManagerAddress(),environment.getProcessManagerPort().intValue()));
  configuration.setThreadFactory(Executors.defaultThreadFactory());
  configuration.setSocketFactory(SocketFactory.getDefault());
  processManagerClient=ProcessManagerClient.connect(configuration,authCode,new ProcessMessageHandler(){
    public void handleProcessAdded(    final ProcessManagerClient client,    final String processName){
    }
    public void handleProcessStarted(    final ProcessManagerClient client,    final String processName){
    }
    public void handleProcessStopped(    final ProcessManagerClient client,    final String processName,    final long uptimeMillis){
    }
    public void handleProcessRemoved(    final ProcessManagerClient client,    final String processName){
    }
    public void handleProcessInventory(    final ProcessManagerClient client,    final Map<String,ProcessInfo> inventory){
    }
    public void handleConnectionShutdown(    final ProcessManagerClient client){
    }
    public void handleConnectionFailure(    final ProcessManagerClient client,    final IOException cause){
    }
    public void handleConnectionFinished(    final ProcessManagerClient client){
    }
  }
);
  processManagerClient.requestProcessInventory();
}

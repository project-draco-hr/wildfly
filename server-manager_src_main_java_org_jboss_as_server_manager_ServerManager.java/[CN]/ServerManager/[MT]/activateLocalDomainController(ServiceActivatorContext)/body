{
  try {
    final BatchBuilder batchBuilder=serviceActivatorContext.getBatchBuilder();
    final XMLMapper mapper=XMLMapper.Factory.create();
    extensionRegistrar.registerStandardDomainReaders(mapper);
    final DomainController domainController=new DomainController();
    batchBuilder.addService(DomainController.SERVICE_NAME,domainController).addInjection(domainController.getXmlMapperInjector(),mapper).addInjection(domainController.getDomainConfigDirInjector(),environment.getDomainConfigurationDir()).addDependency(SERVICE_NAME_BASE.append("executor"),ScheduledExecutorService.class,domainController.getScheduledExecutorServiceInjector());
    final DomainControllerOperationHandler domainControllerOperationHandler=new DomainControllerOperationHandler();
    batchBuilder.addService(DomainControllerOperationHandler.SERVICE_NAME,domainControllerOperationHandler).addDependency(DomainController.SERVICE_NAME,DomainController.class,domainControllerOperationHandler.getDomainControllerInjector()).addDependency(SERVICE_NAME_BASE.append("executor"),ScheduledExecutorService.class,domainControllerOperationHandler.getExecutorServiceInjector()).addInjection(domainControllerOperationHandler.getLocalFileRepositoryInjector(),fileRepository).addDependency(ManagementCommunicationService.SERVICE_NAME,ManagementCommunicationService.class,new ManagementCommunicationServiceInjector(domainControllerOperationHandler));
    batchBuilder.addService(SERVICE_NAME_BASE.append("local","dc","connection"),Service.NULL).addDependency(DomainController.SERVICE_NAME,DomainController.class,new Injector<DomainController>(){
      public void inject(      DomainController value) throws InjectionException {
        setDomainControllerConnection(new LocalDomainControllerConnection(ServerManager.this,domainController,fileRepository));
      }
      public void uninject(){
        setDomainControllerConnection(null);
      }
    }
);
  }
 catch (  Exception e) {
    throw new RuntimeException("Exception starting local domain controller",e);
  }
}

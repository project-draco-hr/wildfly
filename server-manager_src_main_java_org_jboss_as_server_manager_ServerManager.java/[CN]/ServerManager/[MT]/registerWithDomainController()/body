{
  final BatchBuilder batchBuilder=serviceContainer.batchBuilder();
  final ServiceActivatorContext activatorContext=new ServiceActivatorContextImpl(batchBuilder);
  final DomainControllerClientService domainControllerClientService=new DomainControllerClientService(this);
  final BatchServiceBuilder<Void> serviceBuilder=batchBuilder.addService(DomainControllerClientService.SERVICE_NAME,domainControllerClientService).addListener(new AbstractServiceListener<Void>(){
    @Override public void serviceFailed(    ServiceController<? extends Void> serviceController,    StartException reason){
      log.errorf("Failed to register with domain controller.",reason);
    }
  }
).setInitialMode(ServiceController.Mode.IMMEDIATE);
  final LocalDomainControllerElement localDomainControllerElement=hostConfig.getLocalDomainControllerElement();
  if (localDomainControllerElement != null) {
    final String interfaceName=localDomainControllerElement.getInterfaceName();
    ServerInterfaceElement interfaceElement=null;
    final Map<String,ServerInterfaceElement> dcInterfaces=localDomainControllerElement.getInterfaces();
    if (dcInterfaces != null) {
      interfaceElement=dcInterfaces.get(interfaceName);
    }
    final Set<ServerInterfaceElement> hostInterfaces=hostConfig.getInterfaces();
    if (interfaceElement == null && hostInterfaces != null) {
      for (      ServerInterfaceElement hostInterfaceElement : hostInterfaces) {
        if (interfaceName.equals(hostInterfaceElement.getName())) {
          interfaceElement=hostInterfaceElement;
          break;
        }
      }
    }
    if (interfaceElement != null) {
      interfaceElement.activate(activatorContext);
    }
    serviceBuilder.addDependency(NetworkInterfaceService.JBOSS_NETWORK_INTERFACE.append(interfaceName),NetworkInterfaceBinding.class,domainControllerClientService.getDomainControllerInterface());
    serviceBuilder.addInjection(domainControllerClientService.getDomainControllerPortInjector(),localDomainControllerElement.getPort());
  }
  try {
    batchBuilder.install();
  }
 catch (  ServiceRegistryException e) {
    throw new RuntimeException(e);
  }
}

{
  final TimerServiceFactory timerServiceFactory=timerServiceFactoryInjectedValue.getValue();
  final EJBComponent component=ejbComponentInjectedValue.getValue();
  final TimedObjectInvoker invoker=component.getTimedObjectInvoker();
  if (invoker == null) {
    throw new StartException("No timed object invoke for " + component);
  }
  final TimerServiceImpl timerService=(TimerServiceImpl)timerServiceFactory.createTimerService(invoker,component);
  final List<ScheduleTimer> timers=new ArrayList<ScheduleTimer>();
  for (  Map.Entry<Method,List<AutoTimer>> entry : autoTimers.entrySet()) {
    for (    AutoTimer timer : entry.getValue()) {
      timers.add(new ScheduleTimer(entry.getKey(),timer.getScheduleExpression(),timer.getTimerConfig()));
    }
  }
  timerServiceFactory.restoreTimerService(timerService,timers);
  this.timerService=timerService;
}

{
switch (name) {
case Constants.ORB_PERSISTENT_SERVER_ID:
    props.setProperty(ORBConstants.ORB_SERVER_ID_PROPERTY,value);
  break;
case JacORBSubsystemConstants.ORB_GIOP_MINOR_VERSION:
props.setProperty(ORBConstants.GIOP_VERSION,new StringBuilder().append("1.").append(value).toString());
break;
case JacORBSubsystemConstants.ORB_INIT_TRANSACTIONS:
if (value.equals(JacORBSubsystemConstants.ON)) {
props.setProperty(name,Constants.FULL);
}
 else if (value.equals(JacORBSubsystemConstants.OFF)) {
props.setProperty(name,Constants.NONE);
}
 else {
props.setProperty(name,value);
}
break;
case JacORBSubsystemConstants.SECURITY_SUPPORT_SSL:
if (value.equals(JacORBSubsystemConstants.ON)) {
props.setProperty(name,Boolean.TRUE.toString());
}
 else {
props.setProperty(name,Boolean.FALSE.toString());
}
break;
case JacORBSubsystemConstants.SECURITY_ADD_COMP_VIA_INTERCEPTOR:
if (value.equals(JacORBSubsystemConstants.ON)) {
props.setProperty(name,Boolean.TRUE.toString());
}
 else {
props.setProperty(name,Boolean.FALSE.toString());
}
break;
case JacORBSubsystemConstants.NAMING_EXPORT_CORBALOC:
if (value.equals(JacORBSubsystemConstants.ON)) {
props.setProperty(name,Boolean.TRUE.toString());
}
 else {
props.setProperty(name,Boolean.FALSE.toString());
}
break;
default :
props.setProperty(name,value);
}
}

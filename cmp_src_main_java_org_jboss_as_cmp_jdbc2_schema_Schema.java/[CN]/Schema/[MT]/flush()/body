{
  Views views=getViews();
  Table.View[] relationViews=views.relationViews;
  if (relationViews != null) {
    for (int i=0; i < relationViews.length; ++i) {
      final Table.View view=relationViews[i];
      if (view != null) {
        try {
          view.flushDeleted(views);
        }
 catch (        SQLException e) {
          throw MESSAGES.failedToDeleteManyToMany(e);
        }
      }
    }
  }
  final Table.View[] entityViews=views.entityViews;
  for (int i=0; i < entityViews.length; ++i) {
    Table.View view=entityViews[i];
    if (view != null) {
      try {
        view.flushDeleted(views);
      }
 catch (      SQLException e) {
        throw MESSAGES.failedToDeleteInstance(e);
      }
    }
  }
  for (int i=0; i < entityViews.length; ++i) {
    Table.View view=entityViews[i];
    if (view != null) {
      try {
        view.flushCreated(views);
      }
 catch (      SQLException e) {
        throw MESSAGES.failedToCreateInstance(e);
      }
    }
  }
  for (int i=0; i < entityViews.length; ++i) {
    Table.View view=entityViews[i];
    if (view != null) {
      try {
        view.flushUpdated();
      }
 catch (      SQLException e) {
        throw MESSAGES.failedToUpdateInstance(e);
      }
    }
  }
  if (relationViews != null) {
    for (int i=0; i < relationViews.length; ++i) {
      final Table.View view=relationViews[i];
      if (view != null) {
        try {
          view.flushCreated(views);
        }
 catch (        SQLException e) {
          throw MESSAGES.failedToCreateManyToMany(e);
        }
      }
    }
  }
}

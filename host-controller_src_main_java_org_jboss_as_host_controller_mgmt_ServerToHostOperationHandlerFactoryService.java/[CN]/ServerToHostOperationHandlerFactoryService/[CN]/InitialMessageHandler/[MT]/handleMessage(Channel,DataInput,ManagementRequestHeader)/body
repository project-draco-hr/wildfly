{
  final byte type=header.getOperationId();
  if (type == DomainServerProtocol.REGISTER_REQUEST) {
    expectHeader(input,DomainServerProtocol.PARAM_SERVER_NAME);
    final String serverName=input.readUTF();
    log.infof("Server [%s] registered using connection [%s]",serverName,channel);
    executorService.execute(new Runnable(){
      @Override public void run(){
        final Channel mgmtChannel=channel;
        ServerToHostOperationHandlerFactoryService.this.callback.getValue().serverRegistered(serverName,mgmtChannel,new ManagedServerLifecycleCallback.ProxyCreatedCallback(){
          @Override public void proxyOperationHandlerCreated(          final ManagementMessageHandler handler){
            channel.addCloseHandler(new CloseHandler<Channel>(){
              @Override public void handleClose(              Channel closed,              IOException exception){
                handler.shutdownNow();
              }
            }
);
            final Channel.Receiver receiver=ManagementChannelReceiver.createDelegating(handler);
            mgmtChannel.receiveMessage(receiver);
            safeWriteResponse(channel,header,null);
          }
        }
);
      }
    }
);
  }
 else {
    safeWriteResponse(channel,header,new IOException("unrecognized type " + type));
    channel.close();
  }
}

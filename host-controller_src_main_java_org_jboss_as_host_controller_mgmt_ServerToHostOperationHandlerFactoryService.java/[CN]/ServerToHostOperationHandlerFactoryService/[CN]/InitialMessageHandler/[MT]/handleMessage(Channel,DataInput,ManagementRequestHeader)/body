{
  final byte type=header.getOperationId();
  if (type == DomainServerProtocol.REGISTER_REQUEST) {
    expectHeader(input,DomainServerProtocol.PARAM_SERVER_NAME);
    final String serverName=input.readUTF();
    CONTROLLER_MANAGEMENT_LOGGER.serverRegistered(serverName,channel);
    executorService.execute(new Runnable(){
      @Override public void run(){
        final ManagementChannelHandler handler=new ManagementChannelHandler(channel,executorService,new ServerHandlerFactory(serverName));
        ServerToHostOperationHandlerFactoryService.this.callback.getValue().serverCommunicationRegistered(serverName,handler,new ServerInventory.ProxyCreatedCallback(){
          @Override public void proxyOperationHandlerCreated(          final ManagementRequestHandlerFactory handlerFactory){
            channel.addCloseHandler(new CloseHandler<Channel>(){
              @Override public void handleClose(              Channel closed,              IOException exception){
                handler.shutdownNow();
              }
            }
);
            safeWriteResponse(channel,header,null);
            handler.addHandlerFactory(handlerFactory);
            channel.receiveMessage(handler.getReceiver());
          }
        }
);
      }
    }
);
  }
 else {
    safeWriteResponse(channel,header,MESSAGES.unrecognizedType(type));
    channel.close();
  }
}

{
  final DeploymentUnit deploymentUnit=phaseContext.getDeploymentUnit();
  final EEModuleDescription moduleDescription=deploymentUnit.getAttachment(org.jboss.as.ee.component.Attachments.EE_MODULE_DESCRIPTION);
  final String applicationName=moduleDescription.getAppName();
  final CompositeIndex compositeIndex=deploymentUnit.getAttachment(Attachments.COMPOSITE_ANNOTATION_INDEX);
  if (compositeIndex == null) {
    if (logger.isTraceEnabled()) {
      logger.trace("Skipping EJB annotation processing since no composite annotation index found in unit: " + deploymentUnit);
    }
    return;
  }
  final List<AnnotationInstance> slsbAnnotations=compositeIndex.getAnnotations(DotName.createSimple(Stateless.class.getName()));
  if (slsbAnnotations != null && !slsbAnnotations.isEmpty()) {
    this.processSessionBeans(deploymentUnit,slsbAnnotations,EjbAnnotationProcessor.SessionBeanType.STATELESS);
    EjbDeploymentMarker.mark(deploymentUnit);
  }
  final List<AnnotationInstance> sfsbAnnotations=compositeIndex.getAnnotations(DotName.createSimple(Stateful.class.getName()));
  if (sfsbAnnotations != null && !sfsbAnnotations.isEmpty()) {
    this.processSessionBeans(deploymentUnit,sfsbAnnotations,EjbAnnotationProcessor.SessionBeanType.STATEFUL);
    EjbDeploymentMarker.mark(deploymentUnit);
  }
  final List<AnnotationInstance> singletonBeanAnnotations=compositeIndex.getAnnotations(DotName.createSimple(Singleton.class.getName()));
  if (singletonBeanAnnotations != null && !singletonBeanAnnotations.isEmpty()) {
    this.processSessionBeans(deploymentUnit,singletonBeanAnnotations,EjbAnnotationProcessor.SessionBeanType.SINGLETON);
    EjbDeploymentMarker.mark(deploymentUnit);
  }
}

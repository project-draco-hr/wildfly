{
  final byte responseType=input.readByte();
  final ModelNode response=new ModelNode();
  response.readExternal(input);
  final boolean prepared=responseType == ModelControllerProtocol.PARAM_OPERATION_PREPARED;
  context.executeAsync(new ManagementRequestContext.AsyncTask<ExecuteRequestContext>(){
    @Override public void execute(    ManagementRequestContext<ExecuteRequestContext> executeRequestContextManagementRequestContext) throws Exception {
      final ExecuteRequestContext executeRequestContext=context.getAttachment();
      if (prepared) {
        executeRequestContext.operationPrepared(new ModelController.OperationTransaction(){
          @Override public void rollback(){
            done(false);
          }
          @Override public void commit(){
            done(true);
          }
          private void done(          boolean commit){
            final byte status=commit ? ModelControllerProtocol.PARAM_COMMIT : ModelControllerProtocol.PARAM_ROLLBACK;
            try {
              final AsyncFuture<Void> result=channelAssociation.executeRequest(context.getOperationId(),new CompleteTxRequest(status));
              result.await();
            }
 catch (            InterruptedException e) {
              throw MESSAGES.transactionTimeout(commit ? "commit" : "rollback");
            }
catch (            Exception e) {
              resultHandler.failed(e);
            }
          }
        }
,response);
      }
 else {
        executeRequestContext.operationFailed(response);
        resultHandler.done(null);
      }
    }
  }
);
}

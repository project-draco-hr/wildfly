{
  ModelNode operation=createOpNode("subsystem=undertow/server=default-server/host=default-host","write-attribute");
  operation.get("name").set("default-response-code");
  operation.get("value").set(506);
  executeOperation(operation);
  operation=createOpNode("subsystem=undertow/server=default-server/host=default-host","remove");
  operation.get("address").add("location","/");
  executeOperation(operation);
  executeReloadAndWaitForCompletion(getModelControllerClient());
  try {
    HttpGet httpget=new HttpGet(url.toString() + URL_PATTERN);
    HttpResponse response=this.httpclient.execute(httpget);
    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
    String badUrl=url.toString();
    badUrl=badUrl.substring(0,badUrl.length() - 1);
    httpget=new HttpGet(badUrl + "xxx/xxx");
    response=this.httpclient.execute(httpget);
    Assert.assertEquals(506,response.getStatusLine().getStatusCode());
  }
  finally {
    operation=createOpNode("subsystem=undertow/server=default-server/host=default-host","undefine-attribute");
    operation.get("name").set("default-response-code");
    executeOperation(operation);
    operation=createOpNode("subsystem=undertow/server=default-server/host=default-host","add");
    operation.get("address").add("location","/");
    operation.get("handler").set("welcome-content");
    executeOperation(operation);
    executeReloadAndWaitForCompletion(getModelControllerClient());
  }
}

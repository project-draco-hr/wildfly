{
  ModelNode globalModules=new ModelNode();
  requireNoAttributes(reader);
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
switch (Element.forName(reader.getLocalName())) {
case MODULE:
{
        final int count=reader.getAttributeCount();
        String name=null;
        String slot=null;
        for (int i=0; i < count; i++) {
          requireNoNamespaceAttribute(reader,i);
          final String value=reader.getAttributeValue(i);
          final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case NAME:
            if (name != null) {
              throw unexpectedAttribute(reader,i);
            }
          name=value;
        break;
case SLOT:
      if (slot != null) {
        throw unexpectedAttribute(reader,i);
      }
    slot=value;
  break;
default :
unexpectedAttribute(reader,i);
}
}
if (name == null) {
missingRequired(reader,Collections.singleton(NAME));
}
if (slot == null) {
slot="main";
}
final ModelNode module=new ModelNode();
module.get(CommonAttributes.NAME).set(name);
module.get(CommonAttributes.SLOT).set(slot);
globalModules.add(module);
requireNoContent(reader);
break;
}
default :
{
unexpectedElement(reader);
}
}
}
return globalModules;
}

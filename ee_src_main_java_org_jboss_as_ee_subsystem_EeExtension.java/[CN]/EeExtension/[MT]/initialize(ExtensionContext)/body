{
  final SubsystemRegistration subsystem=context.registerSubsystem(SUBSYSTEM_NAME);
  final ResourceDescriptionResolver rootResolver=new StandardResourceDescriptionResolver(SUBSYSTEM_NAME,RESOURCE_NAME,getClass().getClassLoader(),true,false);
  final ManagementResourceRegistration rootResource=subsystem.registerSubsystemModel(DescriptionProviderFactory.DefaultFactory.create(rootResolver));
  final DefaultEarSubDeploymentsIsolationProcessor isolationProcessor=new DefaultEarSubDeploymentsIsolationProcessor();
  final GlobalModuleDependencyProcessor moduleDependencyProcessor=new GlobalModuleDependencyProcessor();
  EeWriteAttributeHandler writeHandler=new EeWriteAttributeHandler(isolationProcessor,moduleDependencyProcessor);
  writeHandler.registerAttributes(rootResource);
  final EeSubsystemAdd subsystemAdd=new EeSubsystemAdd(isolationProcessor,moduleDependencyProcessor);
  final DescriptionProvider subsystemAddDescription=new DefaultResourceAddDescriptionProvider(rootResource,rootResolver);
  rootResource.registerOperationHandler(ADD,subsystemAdd,subsystemAddDescription,EnumSet.of(OperationEntry.Flag.RESTART_ALL_SERVICES));
  final DescriptionProvider subsystemRemoveDescription=new DefaultResourceRemoveDescriptionProvider(rootResolver);
  rootResource.registerOperationHandler(REMOVE,EeSubsystemRemove.INSTANCE,subsystemRemoveDescription,EnumSet.of(OperationEntry.Flag.RESTART_ALL_SERVICES));
  rootResource.registerOperationHandler(DESCRIBE,EESubsystemDescribeHandler.INSTANCE,EESubsystemDescribeHandler.INSTANCE,false,OperationEntry.EntryType.PRIVATE);
  subsystem.registerXMLElementWriter(parser);
}

{
  ResourceTransformationDescriptionBuilder builder=TransformationDescriptionBuilder.Factory.createSubsystemInstance();
  builder.getAttributeBuilder().addRejectCheck(new RejectAttributeChecker.DefaultRejectAttributeChecker(){
    @Override public String getRejectionLogMessage(    Map<String,ModelNode> attributes){
      return EeMessages.MESSAGES.onlyTrueAllowedForJBossDescriptorPropertyReplacement_AS7_4892();
    }
    @Override protected boolean rejectAttribute(    PathAddress address,    String attributeName,    ModelNode attributeValue,    TransformationContext context){
      if (attributeValue.isDefined()) {
        ModelVersion version=context.getTarget().getVersion();
        if (version.getMajor() == 1 && version.getMinor() == 2) {
          if (attributeValue.getType() == ModelType.BOOLEAN) {
            return !attributeValue.asBoolean();
          }
 else {
            if (!Boolean.parseBoolean(attributeValue.asString())) {
              return true;
            }
          }
        }
      }
      return false;
    }
  }
,EeSubsystemRootResource.JBOSS_DESCRIPTOR_PROPERTY_REPLACEMENT);
  TransformationDescription.Tools.register(builder.build(),subsystem,ModelVersion.create(1,0,0));
}

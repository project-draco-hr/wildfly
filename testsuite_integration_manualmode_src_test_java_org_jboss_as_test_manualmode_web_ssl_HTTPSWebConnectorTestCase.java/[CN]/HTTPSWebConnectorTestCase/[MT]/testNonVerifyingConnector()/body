{
  Assume.assumeFalse(SystemUtils.IS_JAVA_1_6 && SystemUtils.JAVA_VENDOR.toUpperCase(Locale.ENGLISH).contains("IBM"));
  final URL printPrincipalUrl=getServletUrl(HTTPS_PORT_VERIFY_FALSE,PrincipalPrintingServlet.SERVLET_PATH);
  final URL securedUrl=getServletUrl(HTTPS_PORT_VERIFY_FALSE,SECURED_SERVLET_WITH_SESSION);
  final URL unsecuredUrl=getServletUrl(HTTPS_PORT_VERIFY_FALSE,SimpleServlet.SERVLET_PATH);
  final HttpClient httpClient=getHttpClient(CLIENT_KEYSTORE_FILE);
  final HttpClient httpClientUntrusted=getHttpClient(UNTRUSTED_KEYSTORE_FILE);
  try {
    makeCallWithHttpClient(printPrincipalUrl,httpClient,HttpServletResponse.SC_FORBIDDEN);
    String responseBody=makeCallWithHttpClient(securedUrl,httpClient,HttpServletResponse.SC_OK);
    assertEquals("Secured page was not reached",SimpleSecuredServlet.RESPONSE_BODY,responseBody);
    String principal=makeCallWithHttpClient(printPrincipalUrl,httpClient,HttpServletResponse.SC_OK);
    assertEquals("Unexpected principal","cn=client",principal.toLowerCase());
    responseBody=makeCallWithHttpClient(unsecuredUrl,httpClientUntrusted,HttpServletResponse.SC_OK);
    assertEquals("Secured page was not reached",SimpleServlet.RESPONSE_BODY,responseBody);
    try {
      makeCallWithHttpClient(securedUrl,httpClientUntrusted,HttpServletResponse.SC_FORBIDDEN);
    }
 catch (    SSLHandshakeException e) {
    }
catch (    java.net.SocketException se) {
    }
  }
  finally {
    httpClient.getConnectionManager().shutdown();
    httpClientUntrusted.getConnectionManager().shutdown();
  }
}

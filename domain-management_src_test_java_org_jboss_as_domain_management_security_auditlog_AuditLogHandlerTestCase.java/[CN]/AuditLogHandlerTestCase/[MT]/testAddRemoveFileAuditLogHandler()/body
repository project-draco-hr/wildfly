{
  File file1=new File(logDir,"test-file.log");
  File file2=new File(logDir,"test-file2.log");
  Assert.assertFalse(file2.exists());
  ModelNode op=createAddFileHandlerOperation("file2","test-formatter","test-file2.log");
  executeForResult(op);
  Assert.assertFalse(file2.exists());
  List<ModelNode> records1=readFile(file1,2);
  List<ModelNode> ops=checkBootRecordHeader(records1.get(1),1,"core",false,false,true);
  checkOpsEqual(op,ops.get(0));
  op=createAddHandlerReferenceOperation("file2");
  executeForResult(op);
  records1=readFile(file1,3);
  List<ModelNode> records2=readFile(file2,1);
  Assert.assertEquals(records1.get(2),records2.get(0));
  ops=checkBootRecordHeader(records1.get(2),1,"core",false,false,true);
  checkOpsEqual(op,ops.get(0));
  op=createRemoveHandlerReferenceOperation("test-file");
  executeForResult(op);
  records1=readFile(file1,4);
  records2=readFile(file2,2);
  Assert.assertEquals(records1.get(3),records2.get(1));
  ops=checkBootRecordHeader(records1.get(3),1,"core",false,false,true);
  checkOpsEqual(op,ops.get(0));
  op=createAddHandlerReferenceOperation("test-file");
  executeForResult(op);
  records1=readFile(file1,1);
  records2=readFile(file2,3);
  Assert.assertEquals(records1.get(0),records2.get(2));
  ops=checkBootRecordHeader(records1.get(0),1,"core",false,false,true);
  checkOpsEqual(op,ops.get(0));
  op=createRemoveHandlerReferenceOperation("test-file");
  executeForResult(op);
  records1=readFile(file1,2);
  records2=readFile(file2,4);
  Assert.assertEquals(records1.get(1),records2.get(3));
  ops=checkBootRecordHeader(records1.get(1),1,"core",false,false,true);
  checkOpsEqual(op,ops.get(0));
  op=createRemoveFileHandlerOperation("test-file");
  executeForResult(op);
  records1=readFile(file1,2);
  records2=readFile(file2,5);
  ops=checkBootRecordHeader(records2.get(4),1,"core",false,false,true);
  checkOpsEqual(op,ops.get(0));
}

{
  final PathAddress address=PathAddress.pathAddress(operation.get(OP_ADDR));
  final String name=address.getLastElement().getValue();
  final ModelNode level=LEVEL.resolveModelAttribute(context,model);
  final ModelNode useParentHandlers=USE_PARENT_HANDLERS.resolveModelAttribute(context,model);
  final ServiceTarget target=context.getServiceTarget();
  try {
    final LoggerService service=new LoggerService(name);
    if (level.isDefined())     service.setLevel(Level.parse(level.asString()));
    if (useParentHandlers.isDefined())     service.setUseParentHandlers(useParentHandlers.asBoolean());
    newControllers.add(target.addService(LogServices.loggerName(name),service).addListener(verificationHandler).setInitialMode(ServiceController.Mode.ACTIVE).install());
  }
 catch (  Throwable t) {
    throw new OperationFailedException(new ModelNode().set(t.getLocalizedMessage()));
  }
  try {
    final ModelNode handlers=HANDLERS.resolveModelAttribute(context,model);
    if (handlers.isDefined()) {
      newControllers.addAll(LogServices.installLoggerHandlers(target,name,handlers,verificationHandler));
    }
  }
 catch (  Throwable t) {
    throw new OperationFailedException(new ModelNode().set(t.getLocalizedMessage()));
  }
}

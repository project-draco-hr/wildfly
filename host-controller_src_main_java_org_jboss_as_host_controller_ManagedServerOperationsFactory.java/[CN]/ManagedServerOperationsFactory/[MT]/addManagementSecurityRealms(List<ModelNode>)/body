{
  if (hostModel.get(CORE_SERVICE,MANAGEMENT,SECURITY_REALM).isDefined()) {
    ModelNode securityRealms=hostModel.get(CORE_SERVICE,MANAGEMENT,SECURITY_REALM);
    Set<String> keys=securityRealms.keys();
    for (    String current : keys) {
      ModelNode addOp=new ModelNode();
      ModelNode realmAddress=new ModelNode();
      realmAddress.add(CORE_SERVICE,MANAGEMENT).add(SECURITY_REALM,current);
      addAddNameAndAddress(addOp,realmAddress);
      updates.add(addOp);
      ModelNode currentRealm=securityRealms.get(current);
      if (currentRealm.hasDefined(SERVER_IDENTITY)) {
        addManagementComponentComponent(currentRealm,realmAddress,SERVER_IDENTITY,updates);
      }
      if (currentRealm.hasDefined(AUTHENTICATION)) {
        addManagementComponentComponent(currentRealm,realmAddress,AUTHENTICATION,updates);
      }
      if (currentRealm.hasDefined(AUTHORIZATION)) {
        ModelNode authorization=currentRealm.require(AUTHORIZATION);
        if (authorization.hasDefined(PROPERTIES)) {
          addManagementComponentComponent(currentRealm,realmAddress,AUTHORIZATION,updates);
        }
 else         if (authorization.hasDefined(LDAP)) {
          ModelNode ldap=authorization.require(LDAP);
          ModelNode addLdap=new ModelNode();
          ModelNode ldapAddr=realmAddress.clone().add(AUTHORIZATION,LDAP);
          addAddNameAndAddress(addLdap,ldapAddr);
          addLdap.get(CONNECTION).set(ldap.get(CONNECTION));
          updates.add(addLdap);
          if (ldap.hasDefined(USERNAME_TO_DN)) {
            ModelNode usernameToDn=ldap.require(USERNAME_TO_DN);
            if (usernameToDn.hasDefined(USERNAME_IS_DN)) {
              addLdapChild(usernameToDn.require(USERNAME_IS_DN),ldapAddr,USERNAME_TO_DN,USERNAME_IS_DN,updates);
            }
 else             if (usernameToDn.hasDefined(USERNAME_FILTER)) {
              addLdapChild(usernameToDn.require(USERNAME_FILTER),ldapAddr,USERNAME_TO_DN,USERNAME_FILTER,updates);
            }
 else             if (usernameToDn.hasDefined(ADVANCED_FILTER)) {
              addLdapChild(usernameToDn.require(ADVANCED_FILTER),ldapAddr,USERNAME_TO_DN,ADVANCED_FILTER,updates);
            }
          }
          if (ldap.hasDefined(GROUP_SEARCH)) {
            ModelNode groupSearch=ldap.require(GROUP_SEARCH);
            if (groupSearch.hasDefined(GROUP_TO_PRINCIPAL)) {
              addLdapChild(groupSearch.require(GROUP_TO_PRINCIPAL),ldapAddr,GROUP_SEARCH,GROUP_TO_PRINCIPAL,updates);
            }
 else             if (groupSearch.hasDefined(PRINCIPAL_TO_GROUP)) {
              addLdapChild(groupSearch.require(PRINCIPAL_TO_GROUP),ldapAddr,GROUP_SEARCH,PRINCIPAL_TO_GROUP,updates);
            }
          }
        }
      }
    }
  }
}

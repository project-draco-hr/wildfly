{
  final ModelNode auditLogModel=hostModel.get(CORE_SERVICE,MANAGEMENT,ACCESS,AUDIT);
  if (auditLogModel.isDefined()) {
    final PathAddress auditLogAddr=PathAddress.pathAddress(PathElement.pathElement(CORE_SERVICE,MANAGEMENT),PathElement.pathElement(ACCESS,AUDIT));
    updates.add(Util.createAddOperation(auditLogAddr));
    if (auditLogModel.get(JSON_FORMATTER).isDefined()) {
      for (      Property formatterProp : auditLogModel.get(JSON_FORMATTER).asPropertyList()) {
        final PathAddress formatterAddress=auditLogAddr.append(PathElement.pathElement(JSON_FORMATTER,formatterProp.getName()));
        updates.add(JsonAuditLogFormatterResourceDefinition.createServerAddOperation(formatterAddress,formatterProp.getValue()));
      }
    }
    if (auditLogModel.get(FILE_HANDLER).isDefined()) {
      for (      Property fileProp : auditLogModel.get(FILE_HANDLER).asPropertyList()) {
        final PathAddress fileHandlerAddress=auditLogAddr.append(PathElement.pathElement(FILE_HANDLER,fileProp.getName()));
        updates.add(FileAuditLogHandlerResourceDefinition.createServerAddOperation(fileHandlerAddress,fileProp.getValue()));
      }
    }
    if (auditLogModel.get(SYSLOG_HANDLER).isDefined()) {
      for (      Property syslogProp : auditLogModel.get(SYSLOG_HANDLER).asPropertyList()) {
        final PathAddress syslogHandlerAddress=auditLogAddr.append(SYSLOG_HANDLER,syslogProp.getName());
        SyslogAuditLogHandlerResourceDefinition.createServerAddOperations(updates,syslogHandlerAddress,syslogProp.getValue());
      }
    }
    if (auditLogModel.get(SERVER_LOGGER,AUDIT_LOG).isDefined()) {
      final PathAddress loggerAddress=auditLogAddr.append(LOGGER,AUDIT_LOG);
      AuditLogLoggerResourceDefinition.createServerAddOperations(updates,loggerAddress,auditLogModel.get(SERVER_LOGGER,AUDIT_LOG));
    }
  }
}

{
  List<ModelNode> result=new ArrayList<ModelNode>();
  final ModelNode op=new ModelNode();
  op.get(OP).set(WRITE_ATTRIBUTE_OPERATION);
  op.get(OP_ADDR).add(SUBSYSTEM,JAXRConstants.SUBSYSTEM_NAME);
  int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    requireNoNamespaceAttribute(reader,i);
    final String attrValue=reader.getAttributeValue(i);
    final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case DROPONSTART:
{
        addop.get(ModelConstants.DROPONSTART).set(attrValue);
        op.get(NAME).set(ModelConstants.DROPONSTART);
        op.get(VALUE).set(attrValue);
        result.add(op);
        break;
      }
case CREATEONSTART:
{
      addop.get(ModelConstants.CREATEONSTART).set(attrValue);
      op.get(NAME).set(ModelConstants.CREATEONSTART);
      op.get(VALUE).set(attrValue);
      result.add(op);
      break;
    }
case DROPONSTOP:
{
    addop.get(ModelConstants.DROPONSTOP).set(attrValue);
    op.get(NAME).set(ModelConstants.DROPONSTOP);
    op.get(VALUE).set(attrValue);
    result.add(op);
    break;
  }
default :
throw unexpectedAttribute(reader,i);
}
}
requireNoContent(reader);
return result;
}

{
  LOGGER.debugf("Put configuration: %s => %s",pid,dictionary);
synchronized (configurations) {
    final Dictionary<String,String> previous=configurations.get(pid);
    String skipMgmnt=dictionary.get(TRANSIENT_PROPERTY_SKIP_MANAGEMENT_OPERATION);
    if (Boolean.parseBoolean(skipMgmnt)) {
      LOGGER.debugf("Put skip management operation: %s => %s",pid,dictionary);
      return previous;
    }
    Dictionary<String,String> modifiable=getModifiableDictionary(dictionary);
    configurations.put(pid,modifiable,false);
    ModelNode op;
    ModelNode address=getSubsystemAddress();
    address.add(new ModelNode().set(ModelConstants.CONFIGURATION,pid));
    if (previous != null) {
      op=Util.getEmptyOperation(ModelConstants.UPDATE,address);
    }
 else {
      op=Util.getEmptyOperation(ModelDescriptionConstants.ADD,address);
    }
    ModelNode entries=new ModelNode();
    Enumeration<String> keys=modifiable.keys();
    while (keys.hasMoreElements()) {
      String key=keys.nextElement();
      String value=modifiable.get(key);
      entries.get(key).set(value);
    }
    op.get(ModelConstants.ENTRIES).set(entries);
    Callable<Object> errorHandler=new Callable<Object>(){
      @Override public Object call() throws Exception {
        return configurations.put(pid,previous,true);
      }
    }
;
    new ConfigAdminOperationTask(pid,op,errorHandler).submit();
    return previous;
  }
}

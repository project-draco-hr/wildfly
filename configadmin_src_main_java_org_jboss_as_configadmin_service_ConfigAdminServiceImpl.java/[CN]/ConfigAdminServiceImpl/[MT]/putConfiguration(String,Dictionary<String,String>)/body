{
  ModelNode address=getSubsystemAddress();
  address.add(new ModelNode().set(ModelConstants.CONFIGURATION,pid));
  Dictionary<String,String> oldconfig=getConfiguration(pid);
  if (oldconfig != null) {
    ModelNode op=Util.getEmptyOperation(ModelDescriptionConstants.REMOVE,address);
    try {
      controllerClient.execute(op);
    }
 catch (    IOException ex) {
      ROOT_LOGGER.cannotRemoveConfiguration(ex,pid);
    }
  }
  ModelNode entries=new ModelNode();
  Enumeration<String> keys=newconfig.keys();
  while (keys.hasMoreElements()) {
    String key=keys.nextElement();
    entries.get(key).set(newconfig.get(key));
  }
  ModelNode op=Util.getEmptyOperation(ModelDescriptionConstants.ADD,address);
  op.get(ModelConstants.ENTRIES).set(entries);
  try {
    ModelNode node=controllerClient.execute(op);
    ModelNode outcome=node.get(ModelDescriptionConstants.OUTCOME);
    if (ModelDescriptionConstants.SUCCESS.equals(outcome.asString())) {
      executor.execute(new ConfigurationModifiedService(pid,newconfig));
    }
 else {
      ROOT_LOGGER.cannotAddConfiguration(pid,node);
    }
  }
 catch (  IOException ex) {
    ROOT_LOGGER.cannotAddConfiguration(ex,pid);
  }
  return oldconfig;
}

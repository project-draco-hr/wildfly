{
  if (key == null) {
    return null;
  }
  for (; ; ) {
    final Map<K,V> oldMap=updater.get(instance);
    final Map<K,V> newMap;
    final V oldValue;
    final int oldSize=oldMap.size();
    if (oldSize == 0) {
      return null;
    }
 else     if (oldSize == 1) {
      final Map.Entry<K,V> entry=oldMap.entrySet().iterator().next();
      if (entry.getKey().equals(key)) {
        newMap=Collections.emptyMap();
        oldValue=entry.getValue();
      }
 else {
        return null;
      }
    }
 else     if (oldSize == 2) {
      final Iterator<Map.Entry<K,V>> i=oldMap.entrySet().iterator();
      final Map.Entry<K,V> entry=i.next();
      final Map.Entry<K,V> next=i.next();
      if (entry.getKey().equals(key)) {
        newMap=Collections.singletonMap(next.getKey(),next.getValue());
        oldValue=entry.getValue();
      }
 else       if (next.getKey().equals(key)) {
        newMap=Collections.singletonMap(entry.getKey(),entry.getValue());
        oldValue=next.getValue();
      }
 else {
        return null;
      }
    }
 else {
      if (!oldMap.containsKey(key)) {
        return null;
      }
      newMap=new FastCopyHashMap<K,V>(oldMap);
      oldValue=newMap.remove(key);
    }
    if (updater.compareAndSet(instance,oldMap,newMap)) {
      return oldValue;
    }
  }
}

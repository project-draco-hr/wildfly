{
  int max=mBytes.length - pattern.length;
  if (start < 0) {
    start=0;
  }
 else   if (start >= mBytes.length) {
    return -1;
  }
  if (pattern.length == 0) {
    return -1;
  }
  byte first=pattern[0];
  int i=(int)start;
  while (true) {
    while (i <= max && mBytes[i] != first) {
      i++;
    }
    if (i > max) {
      return -1;
    }
    int j=i + 1;
    int end=j + pattern.length - 1;
    int k=1;
    boolean cont=true;
    while (cont && j < end) {
      if (mBytes[j++] != pattern[k++]) {
        i++;
        cont=false;
      }
    }
    if (cont) {
      return i;
    }
  }
}

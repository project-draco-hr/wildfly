{
  this.container.start(DEFAULT_JBOSSAS);
  this.deployer.deploy(DEFAULT_AS_DEPLOYMENT);
  this.container.start(JBOSSAS_WITH_REMOTE_OUTBOUND_CONNECTION);
  this.deployer.deploy(DEPLOYMENT_WITH_JBOSS_EJB_CLIENT_XML);
  boolean defaultContainerStarted=true;
  try {
    final RemoteEcho independentBean=(RemoteEcho)context.lookup("ejb:/" + SERVER_ONE_MODULE_NAME + "//"+ IndependentBean.class.getSimpleName()+ "!"+ RemoteEcho.class.getName());
    final String msg="Hellooooo!";
    final String echoFromIndependentBean=independentBean.echo(msg);
    Assert.assertEquals("Unexpected echo from independent bean",msg,echoFromIndependentBean);
    final RemoteEcho dependentBean=(RemoteEcho)context.lookup("ejb:/" + SERVER_ONE_MODULE_NAME + "//"+ EchoOnServerOne.class.getSimpleName()+ "!"+ RemoteEcho.class.getName());
    final String echoBeforeShuttingDownServer=dependentBean.echo(msg);
    Assert.assertEquals("Unexpected echo from bean",EchoOnServerTwo.ECHO_PREFIX + msg,echoBeforeShuttingDownServer);
    this.container.stop(DEFAULT_JBOSSAS);
    defaultContainerStarted=false;
    try {
      final String echoAfterServerShutdown=dependentBean.echo(msg);
      Assert.fail("Invocation on bean when was expected to fail due to other server being down");
    }
 catch (    Exception e) {
      logger.info("Got the expected exception on invoking a bean when other server was down",e);
    }
    this.container.start(DEFAULT_JBOSSAS);
    defaultContainerStarted=true;
    final String echoAfterServerRestart=dependentBean.echo(msg);
    Assert.assertEquals("Unexpected echo from bean after server restart",EchoOnServerTwo.ECHO_PREFIX + msg,echoAfterServerRestart);
  }
  finally {
    try {
      this.deployer.undeploy(DEPLOYMENT_WITH_JBOSS_EJB_CLIENT_XML);
      this.container.stop(JBOSSAS_WITH_REMOTE_OUTBOUND_CONNECTION);
    }
 catch (    Exception e) {
      logger.debug("Exception during container shutdown",e);
    }
    if (defaultContainerStarted) {
      try {
        this.deployer.undeploy(DEFAULT_AS_DEPLOYMENT);
        this.container.stop(DEFAULT_JBOSSAS);
      }
 catch (      Exception e) {
        logger.debug("Exception during container shutdown",e);
      }
    }
  }
}

{
  final DeploymentUnit deploymentUnit=phaseContext.getDeploymentUnit();
  final ResourceRoot resourceRoot=deploymentUnit.getAttachment(Attachments.DEPLOYMENT_ROOT);
  if (resourceRoot == null) {
    return;
  }
  final VirtualFile deploymentRoot=resourceRoot.getRoot();
  if (deploymentRoot == null || !deploymentRoot.exists()) {
    return;
  }
  final String deploymentRootName=deploymentRoot.getName().toLowerCase(Locale.ENGLISH);
  if (!deploymentRootName.endsWith(SAR_EXTENSION)) {
    return;
  }
  ModuleRootMarker.mark(resourceRoot,true);
  Map<String,MountedDeploymentOverlay> overlays=deploymentUnit.getAttachment(Attachments.DEPLOYMENT_OVERLAY_LOCATIONS);
  try {
    final List<VirtualFile> childArchives=deploymentRoot.getChildren(CHILD_ARCHIVE_FILTER);
    for (    final VirtualFile child : childArchives) {
      String relativeName=child.getPathNameRelativeTo(deploymentRoot);
      MountedDeploymentOverlay overlay=overlays.get(relativeName);
      Closeable closable=NO_OP_CLOSEABLE;
      if (overlay != null) {
        overlay.remountAsZip(false);
      }
 else       if (child.isFile()) {
        closable=VFS.mountZip(child,child,TempFileProviderService.provider());
      }
      final MountHandle mountHandle=new MountHandle(closable);
      final ResourceRoot childResource=new ResourceRoot(child,mountHandle);
      ModuleRootMarker.mark(childResource);
      deploymentUnit.addToAttachmentList(Attachments.RESOURCE_ROOTS,childResource);
      resourceRoot.addToAttachmentList(Attachments.INDEX_IGNORE_PATHS,child.getPathNameRelativeTo(deploymentRoot));
    }
  }
 catch (  IOException e) {
    SarMessages.MESSAGES.failedToProcessSarChild(e,deploymentRoot);
  }
}

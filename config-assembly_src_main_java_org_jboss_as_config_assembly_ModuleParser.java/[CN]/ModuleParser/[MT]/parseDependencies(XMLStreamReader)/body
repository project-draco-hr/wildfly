{
  while (reader.hasNext()) {
    int type=reader.next();
switch (type) {
case START_ELEMENT:
      if (reader.getLocalName().equals("module")) {
        String name="";
        String slot="main";
        boolean optional=false;
        for (int i=0; i < reader.getAttributeCount(); i++) {
          String localName=reader.getAttributeLocalName(i);
          if (localName.equals("name")) {
            name=reader.getAttributeValue(i);
          }
 else           if (localName.equals("slot")) {
            slot=reader.getAttributeValue(i);
          }
 else           if (localName.equals("optional")) {
            optional=Boolean.parseBoolean(reader.getAttributeValue(i));
          }
        }
        ModuleIdentifier moduleId=ModuleIdentifier.create(name,slot);
        dependencies.add(new ModuleDependency(moduleId,optional));
      }
    break;
case END_ELEMENT:
  if (reader.getLocalName().equals("dependencies")) {
    return;
  }
}
}
}

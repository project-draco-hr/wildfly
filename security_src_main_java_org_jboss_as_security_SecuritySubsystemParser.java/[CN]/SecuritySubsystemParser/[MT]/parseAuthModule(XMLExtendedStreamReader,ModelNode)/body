{
  EnumSet<Attribute> required=EnumSet.of(Attribute.CODE);
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    requireNoNamespaceAttribute(reader,i);
    final String value=reader.getAttributeValue(i);
    final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
    required.remove(attribute);
switch (attribute) {
case CODE:
{
        ModelNode code=JASPIAuthenticationModulesAttributeDefinition.parseField(CODE,value,reader);
        op.get(CODE).set(code);
        break;
      }
case LOGIN_MODULE_STACK_REF:
{
      ModelNode ref=JASPIAuthenticationModulesAttributeDefinition.parseField(LOGIN_MODULE_STACK_REF,value,reader);
      op.get(LOGIN_MODULE_STACK_REF).set(ref);
      break;
    }
default :
  throw unexpectedAttribute(reader,i);
}
}
if (required.size() > 0) {
throw missingRequired(reader,required);
}
parseProperties(Element.MODULE_OPTION.getLocalName(),reader,op.get(MODULE_OPTIONS));
}

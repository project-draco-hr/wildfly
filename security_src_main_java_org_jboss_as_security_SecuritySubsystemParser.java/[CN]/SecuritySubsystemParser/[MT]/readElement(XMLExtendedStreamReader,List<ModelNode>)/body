{
  final ModelNode subsystem=new ModelNode();
  subsystem.get(OP).set(ADD);
  ModelNode address=subsystem.get(OP_ADDR);
  address.add(SUBSYSTEM,SecurityExtension.SUBSYSTEM_NAME);
  requireNoAttributes(reader);
  List<ModelNode> securityDomainsUpdates=null;
  final EnumSet<Element> visited=EnumSet.noneOf(Element.class);
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
switch (Namespace.forUri(reader.getNamespaceURI())) {
case SECURITY_1_0:
{
        final Element element=Element.forName(reader.getLocalName());
        if (!visited.add(element)) {
          throw unexpectedElement(reader);
        }
switch (element) {
case SECURITY_MANAGEMENT:
{
            parseSecurityManagement(reader,subsystem);
            break;
          }
case SUBJECT_FACTORY:
{
          parseSubjectFactory(reader,subsystem);
          break;
        }
case SECURITY_DOMAINS:
{
        securityDomainsUpdates=parseSecurityDomains(reader,address);
        break;
      }
case SECURITY_PROPERTIES:
{
      parseSecurityProperties(reader,subsystem);
      break;
    }
default :
{
    throw unexpectedElement(reader);
  }
}
break;
}
default :
{
throw unexpectedElement(reader);
}
}
}
list.add(subsystem);
if (securityDomainsUpdates != null) {
list.addAll(securityDomainsUpdates);
}
}

{
  Properties props=new Properties();
  getResourceProperties(props,ORBDefinition.INSTANCE,context,model.get(ORBDefinition.INSTANCE.getPathElement().getKeyValuePair()));
  getResourceProperties(props,TCPDefinition.INSTANCE,context,model.get(ORBDefinition.INSTANCE.getPathElement().getKeyValuePair()).get(TCPDefinition.INSTANCE.getPathElement().getKeyValuePair()));
  getResourceProperties(props,InitializersDefinition.INSTANCE,context,model.get(ORBDefinition.INSTANCE.getPathElement().getKeyValuePair()).get(InitializersDefinition.INSTANCE.getPathElement().getKeyValuePair()));
  getResourceProperties(props,NamingDefinition.INSTANCE,context,model.get(NamingDefinition.INSTANCE.getPathElement().getKeyValuePair()));
  getResourceProperties(props,SecurityDefinition.INSTANCE,context,model.get(SecurityDefinition.INSTANCE.getPathElement().getKeyValuePair()));
  ModelNode configNode=model.get(Constants.CONFIGURATION);
  if (configNode.hasDefined(Constants.PROPERTIES)) {
    for (    Property property : configNode.get(Constants.PROPERTIES).get(Constants.PROPERTY).asPropertyList()) {
      String name=property.getName();
      String value=property.getValue().get(Constants.PROPERTY_VALUE).asString();
      props.setProperty(name,value);
    }
  }
  return props;
}

{
  Collection foreignKeys=metadata.getRelatedRole().getKeyFields();
  Map fkFieldsByRelatedPKFields=new HashMap();
  for (Iterator i=foreignKeys.iterator(); i.hasNext(); ) {
    JDBCCMPFieldMetaData fkFieldMetaData=(JDBCCMPFieldMetaData)i.next();
    JDBCCMP2xFieldBridge relatedPKField=(JDBCCMP2xFieldBridge)relatedEntity.getFieldByName(fkFieldMetaData.getFieldName());
    String fkColumnName=fkFieldMetaData.getColumnName();
    JDBCCMP2xFieldBridge fkField=null;
    JDBCFieldBridge[] tableFields=entity.getTableFields();
    for (int tableInd=0; tableInd < tableFields.length && fkField == null; ++tableInd) {
      JDBCCMP2xFieldBridge cmpField=(JDBCCMP2xFieldBridge)tableFields[tableInd];
      if (fkColumnName.equals(cmpField.getColumnName())) {
        hasFKFieldsMappedToCMPFields=true;
        fkField=new JDBCCMP2xFieldBridge((JDBCStoreManager)cmpField.getManager(),relatedPKField.getFieldName(),relatedPKField.getFieldType(),cmpField.getJDBCType(),relatedPKField.isReadOnly(),relatedPKField.getReadTimeOut(),relatedPKField.getPrimaryKeyClass(),relatedPKField.getPrimaryKeyField(),cmpField,this,fkColumnName);
        if (cmpField.isPrimaryKeyMember()) {
          relatedPKFieldsByMyPKFields.put(cmpField,relatedPKField);
        }
      }
    }
    if (fkField == null) {
      fkField=new JDBCCMP2xFieldBridge(manager,fkFieldMetaData,manager.getJDBCTypeFactory().getJDBCType(fkFieldMetaData));
    }
    fkFieldsByRelatedPKFields.put(relatedPKField,fkField);
    relatedPKFieldsByMyFKFields.put(fkField,relatedPKField);
  }
  if (fkFieldsByRelatedPKFields.size() > 0) {
    JDBCFieldBridge[] relatedPKFields=relatedEntity.getPrimaryKeyFields();
    List fkList=new ArrayList(relatedPKFields.length);
    for (int i=0; i < relatedPKFields.length; ++i) {
      JDBCCMPFieldBridge fkField=(JDBCCMPFieldBridge)fkFieldsByRelatedPKFields.remove(relatedPKFields[i]);
      fkList.add(fkField);
    }
    foreignKeyFields=(JDBCCMP2xFieldBridge[])fkList.toArray(new JDBCCMP2xFieldBridge[fkList.size()]);
  }
 else {
    foreignKeyFields=null;
  }
  allFKFieldsMappedToPKFields=relatedPKFieldsByMyPKFields.size() > 0 && relatedPKFieldsByMyPKFields.size() == foreignKeyFields.length;
  if (foreignKeyFields != null) {
    jdbcType=new CMRJDBCType(Arrays.asList(foreignKeyFields));
  }
}

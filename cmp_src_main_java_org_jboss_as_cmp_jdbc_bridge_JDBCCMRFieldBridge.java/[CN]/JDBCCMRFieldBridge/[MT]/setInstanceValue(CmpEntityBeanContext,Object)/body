{
  List newPks;
  if (newValue instanceof Collection) {
    Collection col=(Collection)newValue;
    if (!col.isEmpty()) {
      newPks=new ArrayList(col.size());
      for (Iterator iter=col.iterator(); iter.hasNext(); ) {
        Object localObject=iter.next();
        if (localObject != null) {
          Object relatedId;
          try {
            relatedId=getRelatedPrimaryKey(localObject);
          }
 catch (          TransactionRolledbackLocalException e) {
            throw new IllegalArgumentException(e);
          }
          if (relatedPKFieldsByMyPKFields.size() > 0) {
            checkSetForeignKey(myCtx,relatedId);
          }
          newPks.add(relatedId);
        }
      }
    }
 else {
      newPks=Collections.EMPTY_LIST;
    }
  }
 else {
    if (newValue != null) {
      try {
        newPks=Collections.singletonList(getRelatedPrimaryKey(newValue));
      }
 catch (      TransactionRolledbackLocalException e) {
        throw new IllegalArgumentException(e);
      }
    }
 else {
      newPks=Collections.EMPTY_LIST;
    }
  }
  load(myCtx);
  FieldState fieldState=getFieldState(myCtx);
  if (newValue == fieldState.getRelationSet()) {
    return;
  }
  try {
    List value=fieldState.getValue();
    if (!value.isEmpty()) {
      Object[] curPks=value.toArray(new Object[value.size()]);
      for (int i=0; i < curPks.length; ++i) {
        destroyRelationLinks(myCtx,curPks[i]);
      }
    }
    for (int i=0; i < newPks.size(); ++i) {
      createRelationLinks(myCtx,newPks.get(i));
    }
  }
 catch (  RuntimeException e) {
    throw e;
  }
catch (  Exception e) {
    throw new EJBException(e);
  }
}

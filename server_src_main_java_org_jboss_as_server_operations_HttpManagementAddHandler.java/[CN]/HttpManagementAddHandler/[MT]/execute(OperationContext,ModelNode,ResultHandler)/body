{
  final ModelNode compensatingOperation=new ModelNode();
  compensatingOperation.get(OP).set(ModelDescriptionConstants.REMOVE);
  compensatingOperation.get(OP_ADDR).set(operation.require(OP_ADDR));
  final String interfaceName=operation.require(ModelDescriptionConstants.INTERFACE).asString();
  final int port=operation.require(ModelDescriptionConstants.PORT).asInt();
  if (context instanceof RuntimeOperationContext) {
    final RuntimeOperationContext runtimeContext=(RuntimeOperationContext)context;
    final ServiceTarget serviceTarget=runtimeContext.getServiceTarget();
    Logger.getLogger("org.jboss.as").infof("creating http management service using network interface (%s) port (%s)",interfaceName,port);
    final HttpManagementService service=new HttpManagementService();
    serviceTarget.addService(HttpManagementService.SERVICE_NAME,service).addDependency(NetworkInterfaceService.JBOSS_NETWORK_INTERFACE.append(interfaceName),NetworkInterfaceBinding.class,service.getInterfaceInjector()).addDependency(Services.JBOSS_SERVER_CONTROLLER,ModelController.class,service.getModelControllerInjector()).addInjection(service.getPortInjector(),port).addInjection(service.getExecutorServiceInjector(),Executors.newCachedThreadPool()).setInitialMode(ServiceController.Mode.ACTIVE).install();
  }
  final ModelNode subModel=context.getSubModel();
  subModel.get(ModelDescriptionConstants.INTERFACE).set(interfaceName);
  subModel.get(ModelDescriptionConstants.PORT).set(port);
  resultHandler.handleResultComplete(compensatingOperation);
  return Cancellable.NULL;
}

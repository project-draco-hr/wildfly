{
  if (this.isLifecycleCallbackInvocation() && !this.isSingletonBeanInvocation()) {
    throw new IllegalStateException("getTimers() method invocation is not allowed during lifecycle callback of non-singleton EJBs");
  }
  Set<Timer> activeTimers=new HashSet<Timer>();
  for (  TimerImpl timer : this.nonPersistentTimers.values()) {
    if (timer != null && timer.isActive()) {
      activeTimers.add(timer);
    }
  }
  for (  TimerImpl timer : this.persistentWaitingOnTxCompletionTimers.values()) {
    if (timer != null && timer.isActive()) {
      activeTimers.add(timer);
    }
  }
  activeTimers.addAll(this.getActiveTimers());
  return activeTimers;
}

{
  if (!java.rmi.Remote.class.isAssignableFrom(type))   return false;
  Iterator methodIterator=Arrays.asList(type.getMethods()).iterator();
  while (methodIterator.hasNext()) {
    Method m=(Method)methodIterator.next();
    if (!throwsRemoteException(m)) {
      return false;
    }
    Iterator it=Arrays.asList(m.getExceptionTypes()).iterator();
    while (it.hasNext()) {
      Class exception=(Class)it.next();
      if (!isRMIIDLExceptionType(exception))       return false;
    }
  }
  Iterator fieldIterator=Arrays.asList(type.getFields()).iterator();
  while (fieldIterator.hasNext()) {
    Field f=(Field)fieldIterator.next();
    if (f.getType().isPrimitive())     continue;
    if (f.getType().equals(java.lang.String.class))     continue;
    return false;
  }
  return true;
}

{
  if (appArchive instanceof ManifestContainer<?> == false)   throw new IllegalArgumentException("ManifestContainer expected " + appArchive);
  final Manifest manifest=ManifestUtils.getOrCreateManifest(appArchive);
  if (BundleInfo.isValidBundleManifest(manifest)) {
    return;
  }
  Attributes attributes=manifest.getMainAttributes();
  if (attributes.getValue(Attributes.Name.MANIFEST_VERSION.toString()) == null) {
    attributes.putValue(Attributes.Name.MANIFEST_VERSION.toString(),"1.0");
  }
  String value=attributes.getValue("Dependencies");
  StringBuffer moduleDeps=new StringBuffer(value != null && value.trim().length() > 0 ? value : "org.jboss.modules");
  for (  String dep : defaultDependencies) {
    if (moduleDeps.indexOf(dep) < 0)     moduleDeps.append("," + dep);
  }
  log.debugf("Add dependencies: %s",moduleDeps);
  attributes.putValue("Dependencies",moduleDeps.toString());
  ArchivePath manifestPath=ArchivePaths.create(JarFile.MANIFEST_NAME);
  appArchive.delete(manifestPath);
  appArchive.add(new Asset(){
    public InputStream openStream(){
      try {
        ByteArrayOutputStream baos=new ByteArrayOutputStream();
        manifest.write(baos);
        return new ByteArrayInputStream(baos.toByteArray());
      }
 catch (      IOException ex) {
        throw new IllegalStateException("Cannot write manifest",ex);
      }
    }
  }
,manifestPath);
}

{
  ModelNode info=OSGiManagementOperations.getBundleInfo(getControllerClient(),BUNDLE_D_WAB);
  Assert.assertEquals("ACTIVE",info.get(ModelConstants.STATE).asString());
  Assert.assertEquals(BUNDLE_D_WAB,info.get(ModelConstants.SYMBOLIC_NAME).asString());
  String result=performCall("bundle-d","simple","Hello");
  Assert.assertEquals("Simple Servlet called with input=Hello",result);
  result=performCall("bundle-d","message.txt",null);
  Assert.assertEquals("Hello from Resource",result);
  Assert.assertTrue("Bundle stopped",OSGiManagementOperations.bundleStop(getControllerClient(),BUNDLE_D_WAB));
  Assert.assertEquals("RESOLVED",OSGiManagementOperations.getBundleState(getControllerClient(),BUNDLE_D_WAB));
  try {
    performCall("bundle-d","simple","Hello");
    Assert.fail("IOException expected");
  }
 catch (  IOException ex) {
  }
  try {
    performCall("bundle-d","message.txt",null);
    Assert.fail("IOException expected");
  }
 catch (  IOException ex) {
  }
  Assert.assertTrue("Bundle started",OSGiManagementOperations.bundleStart(getControllerClient(),BUNDLE_D_WAB));
  Assert.assertEquals("ACTIVE",OSGiManagementOperations.getBundleState(getControllerClient(),BUNDLE_D_WAB));
  result=performCall("bundle-d","simple","Hello");
  Assert.assertEquals("Simple Servlet called with input=Hello",result);
  result=performCall("bundle-d","message.txt",null);
  Assert.assertEquals("Hello from Resource",result);
}

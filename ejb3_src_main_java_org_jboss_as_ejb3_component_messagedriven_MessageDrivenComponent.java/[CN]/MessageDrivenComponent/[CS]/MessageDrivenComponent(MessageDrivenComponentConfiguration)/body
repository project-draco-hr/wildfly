{
  super(configuration);
  StatelessObjectFactory<MessageDrivenComponentInstance> factory=new StatelessObjectFactory<MessageDrivenComponentInstance>(){
    @Override public MessageDrivenComponentInstance create(){
      return (MessageDrivenComponentInstance)createInstance();
    }
    @Override public void destroy(    MessageDrivenComponentInstance obj){
      destroyInstance(obj);
    }
  }
;
  this.pool=new StrictMaxPool<MessageDrivenComponentInstance>(factory,20,5,TimeUnit.MINUTES);
  this.messageListenerInterface=configuration.getMessageListenerInterface();
  final MessageEndpointService<?> service=new MessageEndpointService<Object>(){
    @Override public Class<Object> getMessageListenerInterface(){
      return (Class<Object>)messageListenerInterface;
    }
    @Override public TransactionManager getTransactionManager(){
      return getTransactionManager();
    }
    @Override public boolean isDeliveryTransacted(    Method method) throws NoSuchMethodException {
      return getTransactionAttributeType(BEAN,method) == REQUIRED;
    }
    @Override public Object obtain(    long timeout,    TimeUnit unit){
      return getComponentView(messageListenerInterface).getViewForInstance(null);
    }
    @Override public void release(    Object obj){
    }
  }
;
  this.endpointFactory=new JBossMessageEndpointFactory(service);
}

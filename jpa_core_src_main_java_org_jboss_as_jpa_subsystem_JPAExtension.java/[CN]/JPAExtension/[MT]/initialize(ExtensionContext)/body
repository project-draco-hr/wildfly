{
  SubsystemRegistration registration=context.registerSubsystem(SUBSYSTEM_NAME,MANAGEMENT_API_MAJOR_VERSION,MANAGEMENT_API_MINOR_VERSION,MANAGEMENT_API_MICRO_VERSION);
  final ManagementResourceRegistration nodeRegistration=registration.registerSubsystemModel(JPADefinition.INSTANCE);
  nodeRegistration.registerOperationHandler(DESCRIBE,GenericSubsystemDescribeHandler.INSTANCE,GenericSubsystemDescribeHandler.INSTANCE,false,OperationEntry.EntryType.PRIVATE);
  registration.registerXMLElementWriter(parser);
  initializeTransformers_1_1_0(registration);
  try {
    PersistenceProviderLoader.loadDefaultProvider();
  }
 catch (  ModuleLoadException e) {
    JPA_LOGGER.errorPreloadingDefaultProvider(e);
  }
  try {
    PersistenceProviderAdaptor provider=PersistenceProviderAdaptorLoader.loadPersistenceAdapterModule(Configuration.ADAPTER_MODULE_DEFAULT);
    final ManagementAdaptor managementAdaptor=provider.getManagementAdaptor();
    if (managementAdaptor != null && context.isRuntimeOnlyRegistrationValid()) {
      final ManagementResourceRegistration jpaSubsystemDeployments=registration.registerDeploymentModel(JPADefinition.INSTANCE);
      managementAdaptor.register(jpaSubsystemDeployments,PersistenceUnitRegistryImpl.INSTANCE);
    }
  }
 catch (  ModuleLoadException e) {
    JPA_LOGGER.errorPreloadingDefaultProviderAdaptor(e);
  }
}

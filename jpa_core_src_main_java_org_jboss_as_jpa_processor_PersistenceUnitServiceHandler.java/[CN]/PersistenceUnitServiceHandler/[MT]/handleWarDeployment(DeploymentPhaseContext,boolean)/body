{
  final DeploymentUnit deploymentUnit=phaseContext.getDeploymentUnit();
  if (isWarDeployment(deploymentUnit) && JPADeploymentMarker.isJPADeployment(deploymentUnit)) {
    final ResourceRoot deploymentRoot=deploymentUnit.getAttachment(Attachments.DEPLOYMENT_ROOT);
    PersistenceUnitMetadataHolder holder;
    ArrayList<PersistenceUnitMetadataHolder> puList=new ArrayList<PersistenceUnitMetadataHolder>(1);
    if (deploymentRoot != null && (holder=deploymentRoot.getAttachment(PersistenceUnitMetadataHolder.PERSISTENCE_UNITS)) != null && holder.getPersistenceUnits().size() > 0) {
      puList.add(holder);
    }
    List<ResourceRoot> resourceRoots=deploymentUnit.getAttachmentList(Attachments.RESOURCE_ROOTS);
    for (    ResourceRoot resourceRoot : resourceRoots) {
      if (resourceRoot.getRoot().getName().toLowerCase(Locale.ENGLISH).endsWith(".jar")) {
        if ((holder=resourceRoot.getAttachment(PersistenceUnitMetadataHolder.PERSISTENCE_UNITS)) != null && holder.getPersistenceUnits().size() > 0) {
          puList.add(holder);
        }
      }
    }
    final WarMetaData warMetaData=deploymentUnit.getAttachment(WarMetaData.ATTACHMENT_KEY);
    if (warMetaData != null && warMetaData.getMergedJBossWebMetaData() != null) {
      List<ValveMetaData> valves=warMetaData.getMergedJBossWebMetaData().getValves();
      if (valves == null) {
        valves=new ArrayList<ValveMetaData>();
        warMetaData.getMergedJBossWebMetaData().setValves(valves);
      }
      ValveMetaData valve=new ValveMetaData();
      valve.setModule("org.jboss.as.jpa");
      valve.setValveClass("org.jboss.as.jpa.interceptor.WebNonTxEmCloserValve");
      valves.add(valve);
    }
    JPA_LOGGER.tracef("install persistence unit definitions for war %s",deploymentRoot.getRootName());
    addPuService(phaseContext,puList,startEarly);
  }
}

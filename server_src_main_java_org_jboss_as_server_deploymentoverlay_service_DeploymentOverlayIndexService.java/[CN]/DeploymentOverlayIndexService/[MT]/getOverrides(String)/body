{
  final List<DeploymentOverlayLinkService> matched=new ArrayList<DeploymentOverlayLinkService>();
  for (  final DeploymentOverlayLinkService service : services) {
    if (service.isWildcard()) {
      if (service.getPattern().matcher(deploymentName).matches()) {
        matched.add(service);
      }
    }
 else     if (service.getDeployment().equals(deploymentName)) {
      matched.add(service);
    }
  }
  Collections.sort(matched,new Comparator<DeploymentOverlayLinkService>(){
    @Override public int compare(    final DeploymentOverlayLinkService o1,    final DeploymentOverlayLinkService o2){
      int res=o1.getPriority().ordinal() - o2.getPriority().ordinal();
      if (res != 0) {
        return res;
      }
      if (o2.isWildcard() && !o1.isWildcard()) {
        return -1;
      }
 else       if (o1.isWildcard() && !o2.isWildcard()) {
        return 1;
      }
      return 0;
    }
  }
);
  final List<DeploymentOverlayService> ret=new ArrayList<DeploymentOverlayService>();
  for (  final DeploymentOverlayLinkService i : matched) {
    ret.add(i.getDeploymentOverlayServiceInjectedValue().getValue());
  }
  return ret;
}

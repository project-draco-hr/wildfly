{
  final Map<String,String> map=new HashMap<String,String>();
  final String cannonicalHost=getCannonicalHost(managementClient);
  final String cannonicalIp=getFullCannonicalIp(managementClient);
  map.put("hostname",cannonicalHost);
  map.put("hostaddr",cannonicalIp);
  map.put("realm",KERBEROS_PRIMARY_REALM);
  directoryService1=DSAnnotationProcessor.getDirectoryService();
  final String ldifContent=StrSubstitutor.replace(IOUtils.toString(KerberosServerSetupTask.class.getResourceAsStream(KerberosServerSetupTask.class.getSimpleName() + ".ldif"),"UTF-8"),map);
  LOGGER.debug(ldifContent);
  final SchemaManager schemaManager=directoryService1.getSchemaManager();
  try {
    for (    LdifEntry ldifEntry : new LdifReader(IOUtils.toInputStream(ldifContent))) {
      directoryService1.getAdminSession().add(new DefaultEntry(schemaManager,ldifEntry.getEntry()));
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
    throw e;
  }
  final ManagedCreateLdapServer createLdapServer=new ManagedCreateLdapServer((CreateLdapServer)AnnotationUtils.getInstance(CreateLdapServer.class));
  fixTransportAddress(createLdapServer,cannonicalHost);
  ldapServer1=ServerAnnotationProcessor.instantiateLdapServer(createLdapServer,directoryService1);
  krbServer1=ServerAnnotationProcessor.getKdcServer(directoryService1,KERBEROS_PORT);
  ldapServer1.start();
  createKrb5Conf(cannonicalHost,KRB5_CONF_FILE,KERBEROS_PORT);
}

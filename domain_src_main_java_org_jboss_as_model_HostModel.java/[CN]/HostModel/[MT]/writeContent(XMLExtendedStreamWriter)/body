{
synchronized (namespaces) {
    for (    NamespaceAttribute namespace : namespaces.values()) {
      if (namespace.isDefaultNamespaceDeclaration()) {
        continue;
      }
      streamWriter.setPrefix(namespace.getPrefix(),namespace.getNamespaceURI());
    }
  }
  if (schemaLocation != null) {
    NamespaceAttribute ns=namespaces.get("http://www.w3.org/2001/XMLSchema-instance");
    streamWriter.writeAttribute(ns.getPrefix(),ns.getNamespaceURI(),"schemaLocation",schemaLocation);
  }
synchronized (extensions) {
    if (!extensions.isEmpty()) {
      streamWriter.writeStartElement(Element.EXTENSIONS.getLocalName());
      for (      ExtensionElement element : extensions.values()) {
        streamWriter.writeStartElement(Element.EXTENSIONS.getLocalName());
        element.writeContent(streamWriter);
      }
      streamWriter.writeEndElement();
    }
  }
  if (systemProperties != null) {
    streamWriter.writeStartElement(Element.SYSTEM_PROPERTIES.getLocalName());
    systemProperties.writeContent(streamWriter);
    streamWriter.writeEndElement();
  }
  streamWriter.writeStartElement(Element.DOMAIN_CONTROLLER.getLocalName());
  if (localDomainController != null) {
    streamWriter.writeStartElement(Element.LOCAL.getLocalName());
    localDomainController.writeContent(streamWriter);
  }
 else   if (remoteDomainController != null) {
    streamWriter.writeStartElement(Element.REMOTE.getLocalName());
    remoteDomainController.writeContent(streamWriter);
  }
  streamWriter.writeEndElement();
synchronized (interfaces) {
    if (!interfaces.isEmpty()) {
      streamWriter.writeStartElement(Element.INTERFACES.getLocalName());
      for (      ServerInterfaceElement element : interfaces.values()) {
        streamWriter.writeStartElement(Element.INTERFACE.getLocalName());
        element.writeContent(streamWriter);
      }
      streamWriter.writeEndElement();
    }
  }
synchronized (jvms) {
    if (!jvms.isEmpty()) {
      streamWriter.writeStartElement(Element.JVMS.getLocalName());
      for (      JvmElement element : jvms.values()) {
        streamWriter.writeStartElement(Element.JVM.getLocalName());
        element.writeContent(streamWriter);
      }
      streamWriter.writeEndElement();
    }
  }
synchronized (servers) {
    if (!servers.isEmpty()) {
      streamWriter.writeStartElement(Element.SERVERS.getLocalName());
      for (      ServerElement server : servers.values()) {
        streamWriter.writeStartElement(Element.SERVER.getLocalName());
        server.writeContent(streamWriter);
        streamWriter.writeEndElement();
      }
      streamWriter.writeEndElement();
    }
  }
  streamWriter.writeEndElement();
}

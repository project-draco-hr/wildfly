{
  writeNamespaces(streamWriter);
  if (!extensions.isEmpty()) {
    streamWriter.writeStartElement(Element.EXTENSIONS.getLocalName());
    for (    String extension : extensions) {
      streamWriter.writeEmptyElement(Element.EXTENSION.getLocalName());
      streamWriter.writeAttribute(Attribute.MODULE.getLocalName(),extension);
    }
    streamWriter.writeEndElement();
  }
synchronized (paths) {
    if (!paths.isEmpty()) {
      streamWriter.writeStartElement(Element.PATHS.getLocalName());
      for (      final PathElement path : paths.values()) {
        streamWriter.writeStartElement(Element.PATH.getLocalName());
        path.writeContent(streamWriter);
      }
      streamWriter.writeEndElement();
    }
  }
  if (systemProperties != null && systemProperties.size() > 0) {
    streamWriter.writeStartElement(Element.SYSTEM_PROPERTIES.getLocalName());
    systemProperties.writeContent(streamWriter);
  }
  streamWriter.writeStartElement(Element.DOMAIN_CONTROLLER.getLocalName());
  if (localDomainController != null) {
    streamWriter.writeStartElement(Element.LOCAL.getLocalName());
    localDomainController.writeContent(streamWriter);
  }
 else   if (remoteDomainController != null) {
    streamWriter.writeStartElement(Element.REMOTE.getLocalName());
    remoteDomainController.writeContent(streamWriter);
  }
  streamWriter.writeEndElement();
  if (!interfaces.isEmpty()) {
    streamWriter.writeStartElement(Element.INTERFACES.getLocalName());
    for (    InterfaceElement element : interfaces.values()) {
      streamWriter.writeStartElement(Element.INTERFACE.getLocalName());
      element.writeContent(streamWriter);
    }
    streamWriter.writeEndElement();
  }
  if (!jvms.isEmpty()) {
    streamWriter.writeStartElement(Element.JVMS.getLocalName());
    for (    JvmElement element : jvms.values()) {
      streamWriter.writeStartElement(Element.JVM.getLocalName());
      element.writeContent(streamWriter);
    }
    streamWriter.writeEndElement();
  }
  if (!servers.isEmpty()) {
    streamWriter.writeStartElement(Element.SERVERS.getLocalName());
    for (    ServerElement server : servers.values()) {
      streamWriter.writeStartElement(Element.SERVER.getLocalName());
      server.writeContent(streamWriter);
    }
    streamWriter.writeEndElement();
  }
  streamWriter.writeEndElement();
}

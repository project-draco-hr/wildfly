{
  ModelNode op=new ModelNode();
  op.get(ModelDescriptionConstants.OP).set("suspend");
  managementClient.getControllerClient().execute(op);
  Thread.currentThread().setContextClassLoader(Remote.class.getClassLoader());
  final InitialContext ctx=getRemoteContext();
  final ClassLoader current=Thread.currentThread().getContextClassLoader();
  try {
    try {
      Remote remote=(Remote)ctx.lookup(ARCHIVE_NAME + "/" + Bean.class.getSimpleName()+ "!"+ Remote.class.getName());
      Assert.fail();
    }
 catch (    NamingException expected) {
    }
    try {
      Remote remote=(Remote)ctx.lookup(ARCHIVE_NAME + "/" + Singleton.class.getSimpleName()+ "!"+ BinderRemote.class.getName());
      Assert.fail();
    }
 catch (    NamingException expected) {
    }
    try {
      Remote remote=(Remote)ctx.lookup(ARCHIVE_NAME + "/" + StatefulBean.class.getSimpleName()+ "!"+ Remote.class.getName());
      Assert.fail();
    }
 catch (    NamingException expected) {
    }
  }
  finally {
    op=new ModelNode();
    op.get(ModelDescriptionConstants.OP).set("resume");
    managementClient.getControllerClient().execute(op);
    ctx.close();
    Thread.currentThread().setContextClassLoader(current);
  }
}

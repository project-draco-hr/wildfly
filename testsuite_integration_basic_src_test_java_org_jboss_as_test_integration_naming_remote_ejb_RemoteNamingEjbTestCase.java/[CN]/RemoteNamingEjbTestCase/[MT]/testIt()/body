{
  final InitialContext ctx=getRemoteContext();
  final ClassLoader current=Thread.currentThread().getContextClassLoader();
  try {
    Thread.currentThread().setContextClassLoader(Remote.class.getClassLoader());
    Remote remote=(Remote)ctx.lookup(ARCHIVE_NAME + "/" + Bean.class.getSimpleName()+ "!"+ Remote.class.getName());
    assertNotNull(remote);
    assertEquals("Echo: test",remote.echo("test"));
    remote=(Remote)ctx.lookup(ARCHIVE_NAME + "/" + Singleton.class.getSimpleName()+ "!"+ Remote.class.getName());
    assertNotNull(remote);
    assertEquals("Echo: test",remote.echo("test"));
    remote=(Remote)ctx.lookup(ARCHIVE_NAME + "/" + StatefulBean.class.getSimpleName()+ "!"+ Remote.class.getName());
    assertNotNull(remote);
    assertEquals("Echo: test",remote.echo("test"));
    final Set<String> expected=new HashSet<String>();
    expected.add(Bean.class.getSimpleName() + "!" + Remote.class.getName());
    expected.add(Singleton.class.getSimpleName() + "!" + Remote.class.getName());
    expected.add(StatefulBean.class.getSimpleName() + "!" + Remote.class.getName());
    NamingEnumeration<NameClassPair> e=ctx.list("test");
    while (e.hasMore()) {
      NameClassPair binding=e.next();
      if (!expected.remove(binding.getName())) {
        Assert.fail("unknown binding " + binding.getName());
      }
    }
    if (!expected.isEmpty()) {
      Assert.fail("bindings not found " + expected);
    }
  }
  finally {
    ctx.close();
    Thread.currentThread().setContextClassLoader(current);
  }
}

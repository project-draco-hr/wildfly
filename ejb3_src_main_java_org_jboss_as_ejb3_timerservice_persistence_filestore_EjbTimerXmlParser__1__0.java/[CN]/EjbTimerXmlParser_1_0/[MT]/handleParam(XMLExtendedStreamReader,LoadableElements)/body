{
  final Set<String> required=new HashSet<>(Arrays.asList(new String[]{TYPE}));
  for (int i=0; i < reader.getAttributeCount(); ++i) {
    String attr=reader.getAttributeValue(i);
    String attrName=reader.getAttributeLocalName(i);
    required.remove(attrName);
switch (attrName) {
case TYPE:
      loadableElements.params.add(attr);
    break;
default :
  throw ParseUtils.unexpectedAttribute(reader,i);
}
}
if (!required.isEmpty()) {
throw ParseUtils.missingRequired(reader,required);
}
while (reader.hasNext()) {
switch (reader.nextTag()) {
case END_ELEMENT:
{
  return;
}
case START_ELEMENT:
{
throw ParseUtils.unexpectedElement(reader);
}
}
}
}

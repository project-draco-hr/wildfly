{
  while (reader.hasNext()) {
switch (reader.nextTag()) {
case END_ELEMENT:
{
        return;
      }
case START_ELEMENT:
{
switch (reader.getName().getLocalPart()) {
case TIMER:
        this.parseTimer(reader,timers);
      break;
case CALENDAR_TIMER:
    this.parseCalendarTimer(reader,timers);
  break;
default :
throw ParseUtils.unexpectedElement(reader);
}
break;
}
}
}
}

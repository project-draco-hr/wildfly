{
  final ModelNode address=operation.get(OP_ADDR);
  final String name=address.get(address.asInt() - 1).asProperty().getValue().asString();
  final ModelNode subModel=context.getSubModel();
  final ModelNode compensatingOperation=new ModelNode();
  compensatingOperation.get(OP_ADDR).set(operation.require(OP_ADDR));
  compensatingOperation.get(OP).set(ADD);
  compensatingOperation.get(CommonAttributes.LEVEL).set(subModel.get(CommonAttributes.LEVEL));
  compensatingOperation.get(CommonAttributes.HANDLERS).set(subModel.get(CommonAttributes.HANDLERS));
  if (context.getRuntimeContext() != null) {
    context.getRuntimeContext().setRuntimeTask(new RuntimeTask(){
      public void execute(      RuntimeTaskContext context) throws OperationFailedException {
        final ServiceRegistry registry=context.getServiceRegistry();
        final ServiceController<?> controller=registry.getService(LogServices.loggerName(name));
        if (controller != null) {
          controller.setMode(ServiceController.Mode.REMOVE);
        }
        if (subModel.has(CommonAttributes.HANDLERS)) {
          LogServices.uninstallLoggerHandlers(registry,name,subModel.get(CommonAttributes.HANDLERS));
        }
        resultHandler.handleResultComplete();
      }
    }
);
  }
 else {
    resultHandler.handleResultComplete();
  }
  return new BasicOperationResult(compensatingOperation);
}

{
  String namespace=req.getNamespace();
  List<Capability> result=new ArrayList<Capability>();
  if (MODULE_IDENTITY_NAMESPACE.equals(namespace)) {
    String strval=(String)req.getAttributes().get(MODULE_IDENTITY_NAMESPACE);
    ModuleIdentifier moduleIdentifier=ModuleIdentifier.fromString(strval);
    try {
      File contentFile=getRepositoryEntry(bundlesDir,moduleIdentifier);
      if (contentFile != null) {
        URL baseURL=bundlesDir.toURI().toURL();
        String contentPath=contentFile.getAbsolutePath();
        contentPath=contentPath.substring(baseURL.getPath().length());
        XResource resource=RepositoryResourceBuilder.create(baseURL,contentPath).getResource();
        result.add(resource.getIdentityCapability());
      }
 else {
        contentFile=getRepositoryEntry(modulesDir,moduleIdentifier);
        if (contentFile != null) {
          URL baseURL=modulesDir.toURI().toURL();
          String contentPath=contentFile.getAbsolutePath();
          contentPath=contentPath.substring(baseURL.getPath().length());
          XResource resource=RepositoryResourceBuilder.create(baseURL,contentPath).getResource();
          result.add(resource.getIdentityCapability());
        }
      }
    }
 catch (    RepositoryResolutionException ex) {
      throw ex;
    }
catch (    Exception ex) {
      throw new RepositoryResolutionException(ex);
    }
  }
  return Collections.unmodifiableList(result);
}

{
  Map<UUID,ServerDeploymentActionResult> planResults=new HashMap<UUID,ServerDeploymentActionResult>();
  for (  Map.Entry<UUID,ServerDeploymentActionResult> entry : updateResults.entrySet()) {
    if (entry.getValue().getResult() != Result.NOT_EXECUTED) {
      ServerDeploymentActionResult rollbackResult=null;
      if (successfulRollbacks.contains(entry.getKey())) {
        rollbackResult=new SimpleServerDeploymentActionResult(entry.getKey(),Result.EXECUTED);
      }
 else       if (failedRollbacks.containsKey(entry.getKey())) {
        Throwable cause=failedRollbacks.get(entry.getKey());
        rollbackResult=new SimpleServerDeploymentActionResult(entry.getKey(),cause);
      }
      if (rollbackResult != null) {
        AbstractServerUpdateActionResult.installRollbackResult((AbstractServerUpdateActionResult<ServerDeploymentActionResult>)entry.getValue(),rollbackResult);
      }
    }
    planResults.put(entry.getKey(),entry.getValue());
  }
  DeploymentPlanResultImpl result=new DeploymentPlanResultImpl(plan.getId(),planResults);
  future.set(result);
}

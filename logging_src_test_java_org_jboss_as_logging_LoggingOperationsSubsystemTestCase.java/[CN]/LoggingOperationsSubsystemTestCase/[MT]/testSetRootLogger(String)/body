{
  final KernelServices kernelServices=boot();
  final String fileHandlerName="test-file-handler";
  final File logFile=createLogFile();
  addFileHandler(kernelServices,loggingProfile,fileHandlerName,org.jboss.logmanager.Level.INFO,logFile,false);
  final ModelNode rootLoggerAddress=createRootLoggerAddress(loggingProfile).toModelNode();
  ModelNode op=SubsystemOperations.createOperation(ClientConstants.READ_RESOURCE_OPERATION,rootLoggerAddress);
  final ModelNode rootLoggerResult=executeOperation(kernelServices,op);
  final List<String> handlers=modelNodeAsStringList(rootLoggerResult.get(CommonAttributes.HANDLERS.getName()));
  op=SubsystemOperations.createRemoveOperation(rootLoggerAddress);
  executeOperation(kernelServices,op);
  op=SubsystemOperations.createOperation(ModelDescriptionConstants.ADD,rootLoggerAddress);
  op.get(CommonAttributes.LEVEL.getName()).set(rootLoggerResult.get(CommonAttributes.LEVEL.getName()));
  for (  String handler : handlers)   op.get(CommonAttributes.HANDLERS.getName()).add(handler);
  op.get(CommonAttributes.HANDLERS.getName()).add(fileHandlerName);
  executeOperation(kernelServices,op);
  doLog(loggingProfile,LEVELS,"Test123");
  op=SubsystemOperations.createRemoveOperation(rootLoggerAddress);
  executeOperation(kernelServices,op);
  op=SubsystemOperations.createOperation(ModelDescriptionConstants.ADD,rootLoggerAddress);
  op.get(CommonAttributes.LEVEL.getName()).set(rootLoggerResult.get(CommonAttributes.LEVEL.getName()));
  op.get(CommonAttributes.HANDLERS.getName()).set(rootLoggerResult.get(CommonAttributes.HANDLERS.getName()));
  executeOperation(kernelServices,op);
  removeFileHandler(kernelServices,loggingProfile,fileHandlerName,false);
  String log=FileUtils.readFileToString(logFile);
  assertTrue(log.contains("Test123"));
}

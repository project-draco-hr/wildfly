{
  KernelServices kernelServices=installInController(LoggingTestEnvironment.get(),readResource("/operations.xml"));
  File logFile=createLogFile();
  if (logFile.exists())   assertTrue(logFile.delete());
  ModelNode op=createOpNode("subsystem=logging/file-handler=test-fh","add");
  op.get("name").set("test-fh");
  op.get("level").set("INFO");
  op.get("file").get("path").set(logFile.getAbsolutePath());
  kernelServices.executeOperation(op);
  op=createOpNode("subsystem=logging/root-logger=ROOT","root-logger-assign-handler");
  op.get("name").set("test-fh");
  kernelServices.executeOperation(op);
  op=createOpNode("subsystem=logging/root-logger=ROOT","read-attribute");
  op.get("name").set("handlers");
  ModelNode handlers=kernelServices.executeOperation(op).require(RESULT);
  List<String> loggers=modelNodeAsStringList(handlers);
  assertTrue(loggers.contains("test-fh"));
  for (  Logger.Level level : Logger.Level.values()) {
    log.log(level,"Test123");
  }
  op=createOpNode("subsystem=logging/root-logger=ROOT","root-logger-unassign-handler");
  op.get("name").set("test-fh");
  kernelServices.executeOperation(op);
  op=createOpNode("subsystem=logging/root-logger=ROOT","read-attribute");
  op.get("name").set("handlers");
  handlers=kernelServices.executeOperation(op);
  loggers=modelNodeAsStringList(handlers);
  assertFalse(loggers.contains("test-fh"));
  op=createOpNode("subsystem=logging/file-handler=test-fh","remove");
  kernelServices.executeOperation(op);
  assertTrue(FileUtils.readFileToString(logFile).contains("Test123"));
  long checksum=FileUtils.checksumCRC32(logFile);
  for (  Logger.Level level : Logger.Level.values()) {
    log.log(level,"Test123");
  }
  assertEquals(checksum,FileUtils.checksumCRC32(logFile));
  assertTrue(logFile.delete());
}

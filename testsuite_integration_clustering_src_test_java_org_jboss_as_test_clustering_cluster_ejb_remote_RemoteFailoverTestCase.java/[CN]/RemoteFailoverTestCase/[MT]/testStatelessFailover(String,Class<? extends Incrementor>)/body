{
  ContextSelector<EJBClientContext> selector=EJBClientContextSelector.setup(properties);
  try (EJBDirectory context=new RemoteEJBDirectory(MODULE_NAME)){
    Incrementor bean=context.lookupStateless(beanClass,Incrementor.class);
    Thread.sleep(CLIENT_TOPOLOGY_UPDATE_WAIT);
    List<String> results=new ArrayList<>(COUNT);
    for (int i=0; i < COUNT; ++i) {
      Result<Integer> result=bean.increment();
      results.add(result.getNode());
      Thread.sleep(INVOCATION_WAIT);
    }
    for (    String node : NODES) {
      int frequency=Collections.frequency(results,node);
      assertTrue(String.valueOf(frequency) + " invocations were routed to " + node,frequency > 0);
    }
    undeploy(DEPLOYMENT_1);
    for (int i=0; i < COUNT; ++i) {
      Result<Integer> result=bean.increment();
      results.set(i,result.getNode());
      Thread.sleep(INVOCATION_WAIT);
    }
    Assert.assertEquals(0,Collections.frequency(results,NODE_1));
    Assert.assertEquals(COUNT,Collections.frequency(results,NODE_2));
    deploy(DEPLOYMENT_1);
    Thread.sleep(CLIENT_TOPOLOGY_UPDATE_WAIT);
    for (int i=0; i < COUNT; ++i) {
      Result<Integer> result=bean.increment();
      results.set(i,result.getNode());
      Thread.sleep(INVOCATION_WAIT);
    }
    for (    String node : NODES) {
      int frequency=Collections.frequency(results,node);
      assertTrue(String.valueOf(frequency) + " invocations were routed to " + node,frequency > 0);
    }
    stop(CONTAINER_2);
    for (int i=0; i < COUNT; ++i) {
      Result<Integer> result=bean.increment();
      results.set(i,result.getNode());
      Thread.sleep(INVOCATION_WAIT);
    }
    Assert.assertEquals(COUNT,Collections.frequency(results,NODE_1));
    Assert.assertEquals(0,Collections.frequency(results,NODE_2));
    start(CONTAINER_2);
    Thread.sleep(CLIENT_TOPOLOGY_UPDATE_WAIT);
    for (int i=0; i < COUNT; ++i) {
      Result<Integer> result=bean.increment();
      results.set(i,result.getNode());
      Thread.sleep(INVOCATION_WAIT);
    }
    for (    String node : NODES) {
      int frequency=Collections.frequency(results,node);
      assertTrue(String.valueOf(frequency) + " invocations were routed to " + node,frequency > 0);
    }
  }
  finally {
    EJBClientContext.setSelector(selector);
  }
}

{
  ContextSelector<EJBClientContext> selector=EJBClientContextSelector.setup(CLIENT_PROPERTIES);
  try (EJBDirectory directory=new RemoteEJBDirectory(MODULE_NAME)){
    Incrementor bean=directory.lookupStateful(SlowToDestroyStatefulIncrementorBean.class,Incrementor.class);
    AtomicInteger count=new AtomicInteger();
    Thread.sleep(CLIENT_TOPOLOGY_UPDATE_WAIT);
    String target=bean.increment().getNode();
    count.incrementAndGet();
    ScheduledExecutorService executor=Executors.newSingleThreadScheduledExecutor();
    try {
      CountDownLatch latch=new CountDownLatch(1);
      Future<?> future=executor.scheduleWithFixedDelay(new IncrementTask(bean,count,latch),0,INVOCATION_WAIT,TimeUnit.MILLISECONDS);
      latch.await();
      lifecycle.stop(target);
      future.cancel(false);
      try {
        future.get();
      }
 catch (      CancellationException e) {
      }
      lifecycle.start(target);
      latch=new CountDownLatch(1);
      future=executor.scheduleWithFixedDelay(new LookupTask(directory,SlowToDestroyStatefulIncrementorBean.class,latch),0,INVOCATION_WAIT,TimeUnit.MILLISECONDS);
      latch.await();
      lifecycle.stop(target);
      future.cancel(false);
      try {
        future.get();
      }
 catch (      CancellationException e) {
      }
      lifecycle.start(target);
    }
  finally {
      executor.shutdownNow();
    }
  }
  finally {
    EJBClientContext.setSelector(selector);
  }
}

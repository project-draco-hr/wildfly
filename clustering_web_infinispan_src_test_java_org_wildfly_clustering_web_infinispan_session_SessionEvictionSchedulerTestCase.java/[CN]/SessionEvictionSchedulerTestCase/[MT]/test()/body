{
  String evictedSessionId="evicted";
  String activeSessionId="active";
  ImmutableSession evictedSession=mock(ImmutableSession.class);
  ImmutableSession activeSession=mock(ImmutableSession.class);
  Batcher batcher=mock(Batcher.class);
  Batch batch=mock(Batch.class);
  Evictor<String> evictor=mock(Evictor.class);
  ExecutorService executor=mock(ExecutorService.class);
  ArgumentCaptor<Runnable> capturedTask=ArgumentCaptor.forClass(Runnable.class);
  try (Scheduler<ImmutableSession> scheduler=new SessionEvictionScheduler(batcher,evictor,1,executor)){
    when(evictedSession.getId()).thenReturn(evictedSessionId);
    when(activeSession.getId()).thenReturn(activeSessionId);
    scheduler.schedule(evictedSession);
    verifyZeroInteractions(executor);
    scheduler.schedule(activeSession);
    verify(executor).submit(capturedTask.capture());
    when(batcher.startBatch()).thenReturn(batch);
    capturedTask.getValue().run();
    verify(evictor).evict(evictedSessionId);
    verify(evictor,never()).evict(activeSessionId);
    verify(batch).close();
  }
 }

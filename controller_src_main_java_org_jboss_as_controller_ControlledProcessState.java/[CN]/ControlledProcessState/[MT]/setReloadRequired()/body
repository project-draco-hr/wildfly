{
  if (!reloadSupported) {
    return setRestartRequired();
  }
  AtomicStampedReference<State> stateRef=state;
  int newStamp=stamp.incrementAndGet();
  int[] receiver=new int[1];
  for (; ; ) {
    State was=stateRef.get(receiver);
    if (was == State.STARTING || was == State.STOPPING || was == State.RESTART_REQUIRED) {
      break;
    }
synchronized (service) {
      if (stateRef.compareAndSet(was,State.RELOAD_REQUIRED,receiver[0],newStamp)) {
        service.stateChanged(State.RELOAD_REQUIRED);
        break;
      }
    }
  }
  return Integer.valueOf(newStamp);
}

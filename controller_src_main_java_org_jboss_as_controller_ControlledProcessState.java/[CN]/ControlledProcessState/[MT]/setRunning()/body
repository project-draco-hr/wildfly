{
  AtomicStampedReference<State> stateRef=state;
  int newStamp=stamp.incrementAndGet();
  int[] receiver=new int[1];
  for (; ; ) {
    State was=stateRef.get(receiver);
    if (was != State.STARTING) {
      break;
    }
synchronized (service) {
      State newState=restartRequiredFlag ? State.RESTART_REQUIRED : State.RUNNING;
      if (state.compareAndSet(was,newState,receiver[0],newStamp)) {
        service.stateChanged(newState);
        break;
      }
    }
  }
}

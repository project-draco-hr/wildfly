{
  if (PlatformMBeanUtil.JVM_MAJOR_VERSION > 6 && PlatformMBeanConstants.OBJECT_NAME.equals(name)) {
    final String objName=PlatformMBeanUtil.getObjectNameStringWithNameKey(ManagementFactory.MEMORY_POOL_MXBEAN_DOMAIN_TYPE,memPoolName);
    store.set(objName);
  }
 else   if (ModelDescriptionConstants.NAME.equals(name)) {
    store.set(escapeMBeanName(memoryPoolMXBean.getName()));
  }
 else   if (PlatformMBeanConstants.TYPE.equals(name)) {
    store.set(memoryPoolMXBean.getType().name());
  }
 else   if (PlatformMBeanConstants.USAGE.equals(name)) {
    final ModelNode usage=PlatformMBeanUtil.getDetypedMemoryUsage(memoryPoolMXBean.getUsage());
    store.set(usage);
  }
 else   if (PlatformMBeanConstants.PEAK_USAGE.equals(name)) {
    final ModelNode usage=PlatformMBeanUtil.getDetypedMemoryUsage(memoryPoolMXBean.getPeakUsage());
    store.set(usage);
  }
 else   if (PlatformMBeanConstants.VALID.equals(name)) {
    store.set(memoryPoolMXBean.isValid());
  }
 else   if (PlatformMBeanConstants.MEMORY_MANAGER_NAMES.equals(name)) {
    store.setEmptyList();
    for (    String mgr : memoryPoolMXBean.getMemoryManagerNames()) {
      store.add(escapeMBeanName(mgr));
    }
  }
 else   if (PlatformMBeanConstants.USAGE_THRESHOLD.equals(name)) {
    store.set(memoryPoolMXBean.getUsageThreshold());
  }
 else   if (PlatformMBeanConstants.USAGE_THRESHOLD_EXCEEDED.equals(name)) {
    store.set(memoryPoolMXBean.isUsageThresholdExceeded());
  }
 else   if (PlatformMBeanConstants.USAGE_THRESHOLD_COUNT.equals(name)) {
    store.set(memoryPoolMXBean.getUsageThresholdCount());
  }
 else   if (PlatformMBeanConstants.USAGE_THRESHOLD_SUPPORTED.equals(name)) {
    store.set(memoryPoolMXBean.isUsageThresholdSupported());
  }
 else   if (PlatformMBeanConstants.COLLECTION_USAGE_THRESHOLD.equals(name)) {
    store.set(memoryPoolMXBean.getCollectionUsageThreshold());
  }
 else   if (PlatformMBeanConstants.COLLECTION_USAGE_THRESHOLD_EXCEEDED.equals(name)) {
    store.set(memoryPoolMXBean.isCollectionUsageThresholdExceeded());
  }
 else   if (PlatformMBeanConstants.COLLECTION_USAGE_THRESHOLD_COUNT.equals(name)) {
    store.set(memoryPoolMXBean.getCollectionUsageThresholdCount());
  }
 else   if (PlatformMBeanConstants.COLLECTION_USAGE_THRESHOLD_SUPPORTED.equals(name)) {
    store.set(memoryPoolMXBean.isCollectionUsageThresholdSupported());
  }
 else   if (PlatformMBeanConstants.COLLECTION_USAGE.equals(name)) {
    final ModelNode usage=PlatformMBeanUtil.getDetypedMemoryUsage(memoryPoolMXBean.getCollectionUsage());
    store.set(usage);
  }
 else   if (PlatformMBeanConstants.MEMORY_POOL_READ_ATTRIBUTES.contains(name) || PlatformMBeanConstants.MEMORY_POOL_READ_WRITE_ATTRIBUTES.contains(name) || PlatformMBeanConstants.MEMORY_POOL_METRICS.contains(name)) {
    throw PlatformMBeanMessages.MESSAGES.badReadAttributeImpl7(name);
  }
}

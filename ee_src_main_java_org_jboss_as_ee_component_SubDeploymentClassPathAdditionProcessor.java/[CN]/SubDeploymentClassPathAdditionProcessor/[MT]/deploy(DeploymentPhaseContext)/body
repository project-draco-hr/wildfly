{
  final DeploymentUnit deploymentUnit=phaseContext.getDeploymentUnit();
  if (DeploymentTypeMarker.isType(DeploymentType.EAR,deploymentUnit)) {
    return;
  }
  final DeploymentUnit parentEar=deploymentUnit.getParent();
  if (parentEar == null) {
    return;
  }
  final List<ResourceRoot> allResourceRootsOfEar=DeploymentUtils.allResourceRoots(parentEar);
  if (allResourceRootsOfEar == null || allResourceRootsOfEar.isEmpty()) {
    return;
  }
  final ResourceRoot deploymentRoot=deploymentUnit.getAttachment(Attachments.DEPLOYMENT_ROOT);
  final ResourceRoot parentEarResourceRoot=parentEar.getAttachment(Attachments.DEPLOYMENT_ROOT);
  for (  ResourceRoot resourceRoot : allResourceRootsOfEar) {
    if (!SubDeploymentMarker.isSubDeployment(resourceRoot)) {
      continue;
    }
    if (resourceRoot.equals(deploymentRoot)) {
      continue;
    }
    if (DeploymentTypeMarker.isType(DeploymentType.WAR,resourceRoot)) {
      continue;
    }
    final VirtualFile subDeploymentResourceRoot=resourceRoot.getRoot();
    final String relativePath=subDeploymentResourceRoot.getPathNameRelativeTo(parentEarResourceRoot.getRoot());
    final ModuleIdentifier moduleIdentifier=ModuleIdentifier.create(ServiceModuleLoader.MODULE_PREFIX + parentEar.getName() + '.'+ relativePath.replace('/','.'));
    logger.debug("Subdeployment " + subDeploymentResourceRoot + " with module identifier "+ moduleIdentifier+ " will be added to the classpath entries of deployment unit "+ deploymentUnit);
    deploymentUnit.addToAttachmentList(Attachments.CLASS_PATH_ENTRIES,moduleIdentifier);
  }
}

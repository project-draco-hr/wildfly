{
  try {
    PatchConfig patchConfig=parsePatchConfig();
    Set<String> required=new TreeSet<String>();
    if (newRoot == null) {
      required.add("--updated-dist");
    }
    if (oldRoot == null) {
      required.add("--applies-to-dist");
    }
    if (patchFile == null) {
      if (newRoot != null) {
        patchFile=new File(newRoot,"patch-" + System.currentTimeMillis() + ".par");
      }
 else {
        required.add("--output-file");
      }
    }
    if (!required.isEmpty()) {
      System.err.printf(PatchMessages.MESSAGES.missingRequiredArgs(required));
      usage();
      return;
    }
    createTempStructure(patchConfig.getPatchId());
    final Distribution base=Distribution.create(oldRoot);
    final Distribution updated=Distribution.create(newRoot);
    if (!base.getName().equals(updated.getName())) {
      throw new RuntimeException("distribution names don't match");
    }
    if (patchConfig.getAppliesToProduct() != null && !patchConfig.getAppliesToProduct().equals(base.getName())) {
      throw new RuntimeException("patch target does not match: " + patchConfig.getAppliesToProduct());
    }
    if (patchConfig.getAppliesToVersion() != null && !patchConfig.getAppliesToVersion().equals(base.getVersion())) {
      throw new RuntimeException("patch target version does not match: " + patchConfig.getAppliesToProduct());
    }
    final PatchBuilderWrapper builder=patchConfig.toPatchBuilder();
    builder.setPatchId(patchConfig.getPatchId());
    builder.setDescription(patchConfig.getDescription());
    if (patchConfig.getPatchType() == Patch.PatchType.CUMULATIVE) {
      builder.upgradeIdentity(base.getName(),base.getVersion(),updated.getVersion());
    }
 else {
      builder.oneOffPatchIdentity(base.getName(),base.getVersion());
    }
    final Patch patch=builder.compare(base,updated);
    PatchContentWriter.process(tmp,newRoot,patch);
    ZipUtils.zip(tmp,patchFile);
  }
  finally {
    IoUtils.recursiveDelete(tmp);
  }
}

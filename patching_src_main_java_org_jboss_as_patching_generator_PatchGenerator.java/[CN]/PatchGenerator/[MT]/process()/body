{
  try {
    PatchConfig patchConfig=parsePatchConfig();
    this.oldStructure=patchConfig.getOriginalDistributionStructure();
    this.newStructure=patchConfig.getUpdatedDistributionStructure();
    Set<String> required=new TreeSet<String>();
    if (newRoot == null) {
      newRoot=findDefaultNewRoot();
      if (newRoot == null) {
        required.add("--updated-dist");
      }
    }
    if (oldRoot == null) {
      oldRoot=findDefaultOldRoot(patchConfig);
      if (oldRoot == null) {
        required.add("--applies-to-dist");
      }
    }
    if (patchFile == null) {
      if (newRoot != null) {
        patchFile=new File(newRoot,patchConfig.getPatchId() + ".par");
      }
 else {
        required.add("--output-file");
      }
    }
    if (!required.isEmpty()) {
      System.err.printf(PatchMessages.MESSAGES.missingRequiredArgs(required));
      usage();
    }
    createTempStructure(patchConfig);
    if (patchConfig.isGenerateByDiff()) {
      analyzeDifferences(patchConfig);
    }
 else {
      prepareDifferences(patchConfig);
    }
    try {
      preparePatchXml(patchConfig);
    }
 catch (    IOException e) {
      throw new RuntimeException("Failed creating patch.xml file",e);
    }
    copyContent();
    ZipUtils.zip(tmp,patchFile);
  }
  finally {
    IoUtils.recursiveDelete(tmp);
  }
}

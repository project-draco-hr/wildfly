{
  validator.validate(operation);
  String name=operation.require(NAME).asString();
  String toReplace=operation.require(TO_REPLACE).asString();
  if (name.equals(toReplace)) {
    throw operationFailed(String.format("Cannot use %s with the same value for parameters %s and %s. " + "Use %s to redeploy the same content or %s to replace content with a new version with the same name.",OPERATION_NAME,NAME,TO_REPLACE,ServerGroupDeploymentRedeployHandler.OPERATION_NAME,DeploymentFullReplaceHandler.OPERATION_NAME));
  }
  final PathElement deploymentPath=PathElement.pathElement(DEPLOYMENT,name);
  final PathElement replacePath=PathElement.pathElement(DEPLOYMENT,toReplace);
  Resource domainDeployment;
  try {
    domainDeployment=context.getRootResource().requireChild(deploymentPath);
  }
 catch (  NoSuchElementException e) {
    throw operationFailed(String.format("No deployment with name %s found",name));
  }
  final ModelNode deployment=domainDeployment.getModel();
  for (  ModelNode content : deployment.require(CONTENT).asList()) {
    if ((content.hasDefined(HASH))) {
      byte[] hash=content.require(HASH).asBytes();
      fileRepository.getDeploymentFiles(hash);
    }
  }
  final Resource serverGroup=context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS);
  if (!serverGroup.hasChild(replacePath)) {
    throw operationFailed(String.format("No deployment with name %s found",toReplace));
  }
  final Resource replaceResource=context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS.append(replacePath));
  final Resource deploymentResource;
  if (!serverGroup.hasChild(deploymentPath)) {
    final Resource resource=context.createResource(PathAddress.EMPTY_ADDRESS.append(deploymentPath));
    final ModelNode deployNode=resource.getModel();
    deployNode.set(deployment);
    deployNode.remove("content");
    deployNode.get(ENABLED).set(true);
  }
 else {
    deploymentResource=context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS.append(deploymentPath));
    if (deploymentResource.getModel().get(ENABLED).asBoolean()) {
      throw operationFailed(String.format("Deployment %s is already started",toReplace));
    }
  }
  replaceResource.getModel().get(ENABLED).set(false);
  context.completeStep();
}

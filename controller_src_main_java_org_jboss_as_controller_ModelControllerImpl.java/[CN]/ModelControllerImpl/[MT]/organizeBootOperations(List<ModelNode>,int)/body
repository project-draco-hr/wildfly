{
  final List<ParsedBootOp> initialOps=new ArrayList<ParsedBootOp>();
  List<ParsedBootOp> postExtensionOps=null;
  boolean invalid=false;
  boolean sawExtensionAdd=false;
  ParallelExtensionAddHandler parallelExtensionAddHandler=executorService == null ? null : new ParallelExtensionAddHandler(executorService);
  ParallelBootOperationStepHandler parallelSubsystemHandler=(executorService != null && processType.isServer() && runningModeControl.getRunningMode() == RunningMode.NORMAL) ? new ParallelBootOperationStepHandler(executorService,rootRegistration,processState,this,lockPermit) : null;
  boolean registeredParallelSubsystemHandler=false;
  int subsystemIndex=0;
  for (  ModelNode bootOp : bootList) {
    final ParsedBootOp parsedOp=new ParsedBootOp(bootOp);
    if (postExtensionOps != null) {
      if (parsedOp.isExtensionAdd()) {
        final ExtensionAddHandler stepHandler=(ExtensionAddHandler)rootRegistration.getOperationHandler(parsedOp.address,parsedOp.operationName);
        if (parallelExtensionAddHandler != null) {
          parallelExtensionAddHandler.addParsedOp(parsedOp,stepHandler);
        }
 else {
          initialOps.add(new ParsedBootOp(parsedOp,stepHandler));
        }
      }
 else {
        if (parallelSubsystemHandler == null || !parallelSubsystemHandler.addSubsystemOperation(parsedOp)) {
          if (registeredParallelSubsystemHandler && (parsedOp.isInterfaceOperation() || parsedOp.isSocketOperation())) {
            postExtensionOps.add(subsystemIndex++,parsedOp);
          }
 else {
            postExtensionOps.add(parsedOp);
          }
        }
 else         if (!registeredParallelSubsystemHandler) {
          postExtensionOps.add(parallelSubsystemHandler.getParsedBootOp());
          subsystemIndex=postExtensionOps.size() - 1;
          registeredParallelSubsystemHandler=true;
        }
      }
    }
 else {
      final OperationStepHandler stepHandler=rootRegistration.getOperationHandler(parsedOp.address,parsedOp.operationName);
      if (!sawExtensionAdd && stepHandler == null) {
        logNoHandler(parsedOp);
        invalid=true;
        break;
      }
 else       if (stepHandler instanceof ExtensionAddHandler) {
        if (parallelExtensionAddHandler != null) {
          parallelExtensionAddHandler.addParsedOp(parsedOp,(ExtensionAddHandler)stepHandler);
          if (!sawExtensionAdd) {
            initialOps.add(parallelExtensionAddHandler.getParsedBootOp());
          }
        }
 else {
          initialOps.add(new ParsedBootOp(parsedOp,stepHandler));
        }
        sawExtensionAdd=true;
      }
 else       if (!sawExtensionAdd) {
        initialOps.add(new ParsedBootOp(parsedOp,stepHandler));
      }
 else {
        postExtensionOps=new ArrayList<ParsedBootOp>(32);
        if (parallelSubsystemHandler == null || !parallelSubsystemHandler.addSubsystemOperation(parsedOp)) {
          postExtensionOps.add(parsedOp);
        }
 else {
          postExtensionOps.add(parallelSubsystemHandler.getParsedBootOp());
          registeredParallelSubsystemHandler=true;
        }
      }
    }
  }
  return new BootOperations(initialOps,postExtensionOps,invalid);
}

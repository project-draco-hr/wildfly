{
  final Integer operationID=new Random(new SecureRandom().nextLong()).nextInt();
  EnumSet<OperationContextImpl.ContextFlag> contextFlags=rollbackOnRuntimeFailure ? EnumSet.of(OperationContextImpl.ContextFlag.ROLLBACK_ON_FAIL) : EnumSet.noneOf(OperationContextImpl.ContextFlag.class);
  final OperationContextImpl context=new OperationContextImpl(this,processType,runningModeControl.getRunningMode(),contextFlags,handler,null,model,control,processState,auditLogger,bootingFlag.get(),operationID,hostServerGroupTracker);
  BootOperations bootOperations=organizeBootOperations(bootList,operationID);
  for (  ParsedBootOp initialOp : bootOperations.initialOps) {
    context.addBootStep(initialOp);
  }
  if (bootOperations.invalid) {
    context.setRollbackOnly();
  }
  OperationContext.ResultAction resultAction=context.executeOperation();
  if (resultAction == OperationContext.ResultAction.KEEP && bootOperations.postExtensionOps != null) {
    final OperationContextImpl postExtContext=new OperationContextImpl(this,processType,runningModeControl.getRunningMode(),contextFlags,handler,null,model,control,processState,auditLogger,bootingFlag.get(),operationID,hostServerGroupTracker);
    for (    ParsedBootOp parsedOp : bootOperations.postExtensionOps) {
      if (parsedOp.handler == null) {
        parsedOp=new ParsedBootOp(parsedOp,rootRegistration.getOperationHandler(parsedOp.address,parsedOp.operationName));
      }
      if (parsedOp.handler == null) {
        logNoHandler(parsedOp);
        postExtContext.setRollbackOnly();
        break;
      }
 else {
        postExtContext.addBootStep(parsedOp);
      }
    }
    resultAction=postExtContext.executeOperation();
  }
  return resultAction == OperationContext.ResultAction.KEEP;
}

{
  ConfigurationBuilder builder=this.dependencies.getConfigurationBuilder();
  ModuleIdentifier moduleId=this.dependencies.getModuleIdentifier();
  if (moduleId != null) {
    try {
      Module module=this.dependencies.getModuleLoader().loadModule(moduleId);
      ClassLoader loader=module.getClassLoader();
      builder.classLoader(loader);
      GroupsConfigurationBuilder groupsBuilder=builder.clustering().hash().groups();
      for (      Grouper<?> grouper : ServiceLoader.load(Grouper.class,loader)) {
        groupsBuilder.addGrouper(grouper);
      }
    }
 catch (    ModuleLoadException e) {
      throw new IllegalArgumentException(e);
    }
  }
  TransactionManager tm=this.dependencies.getTransactionManager();
  if (tm != null) {
    builder.transaction().transactionManagerLookup(new TransactionManagerProvider(tm));
  }
  TransactionSynchronizationRegistry tsr=this.dependencies.getTransactionSynchronizationRegistry();
  if (tsr != null) {
    builder.transaction().transactionSynchronizationRegistryLookup(new TransactionSynchronizationRegistryProvider(tsr));
  }
  boolean topologyAware=this.dependencies.getCacheContainer().getCacheManagerConfiguration().transport().hasTopologyInfo();
  this.dependencies.getConsistentHashStrategy().buildHashConfiguration(builder.clustering().hash(),this.dependencies.getCacheMode(),topologyAware);
  return builder;
}

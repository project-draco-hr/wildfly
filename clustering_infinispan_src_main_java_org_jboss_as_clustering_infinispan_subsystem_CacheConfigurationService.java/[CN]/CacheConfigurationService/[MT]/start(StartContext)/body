{
  EmbeddedCacheManager container=this.dependencies.getCacheContainer();
  if (this.moduleId != null) {
    try {
      this.builder.classLoader(this.dependencies.getModuleLoader().loadModule(this.moduleId).getClassLoader());
    }
 catch (    ModuleLoadException e) {
      throw new StartException(e);
    }
  }
  this.builder.jmxStatistics().enabled(container.getCacheManagerConfiguration().globalJmxStatistics().enabled());
  TransactionManager tm=this.dependencies.getTransactionManager();
  if (tm != null) {
    this.builder.transaction().transactionManagerLookup(new TransactionManagerProvider(tm));
  }
  TransactionSynchronizationRegistry tsr=this.dependencies.getTransactionSynchronizationRegistry();
  if (tsr != null) {
    this.builder.transaction().transactionSynchronizationRegistryLookup(new TransactionSynchronizationRegistryProvider(tsr));
  }
  this.config=this.builder.build();
  CacheMode mode=this.config.clustering().cacheMode();
  if (mode.isClustered() && (container.getTransport() == null)) {
    throw InfinispanMessages.MESSAGES.transportRequired(mode,this.name,container.getCacheManagerConfiguration().globalJmxStatistics().cacheManagerName());
  }
  container.defineConfiguration(this.name,this.config);
  log.debugf("%s cache configuration started",this.name);
}

{
  ROOT_LOGGER.debug("Initializing Transactions Extension");
  final SubsystemRegistration subsystem=context.registerSubsystem(SUBSYSTEM_NAME);
  final ManagementResourceRegistration registration=subsystem.registerSubsystemModel(TransactionSubsystemProviders.SUBSYSTEM);
  registration.registerOperationHandler(ADD,TransactionSubsystemAdd.INSTANCE,TransactionSubsystemProviders.SUBSYSTEM_ADD,false);
  registration.registerOperationHandler(DESCRIBE,TransactionDescribeHandler.INSTANCE,TransactionDescribeHandler.INSTANCE,false,OperationEntry.EntryType.PRIVATE);
  final ManagementResourceRegistration recoveryEnv=registration.registerSubModel(PathElement.pathElement(RECOVERY_ENVIRONMENT),TransactionSubsystemProviders.RECOVERY_ENVIRONMENT_DESC);
  recoveryEnv.registerOperationHandler(ADD,RecoveryEnvironmentAdd.INSTANCE,TransactionSubsystemProviders.ADD_RECOVERY_ENVIRONMENT_DESC,false);
  recoveryEnv.registerOperationHandler(REMOVE,RecoveryEnvironmentRemove.INSTANCE,TransactionSubsystemProviders.REMOVE_RECOVERY_ENVIRONMENT_DESC,false);
  final ManagementResourceRegistration coreEnv=registration.registerSubModel(PathElement.pathElement(CORE_ENVIRONMENT),TransactionSubsystemProviders.CORE_ENVIRONMENT_DESC);
  coreEnv.registerOperationHandler(ADD,CoreEnvironmentAdd.INSTANCE,TransactionSubsystemProviders.ADD_CORE_ENVIRONMENT_DESC,false);
  coreEnv.registerOperationHandler(REMOVE,CoreEnvironmentRemove.INSTANCE,TransactionSubsystemProviders.REMOVE_CORE_ENVIRONMENT_DESC,false);
  final ManagementResourceRegistration coordinatorEnv=registration.registerSubModel(PathElement.pathElement(COORDINATOR_ENVIRONMENT),TransactionSubsystemProviders.COORDINATOR_ENVIRONMENT_DESC);
  coordinatorEnv.registerOperationHandler(ADD,CoordinatorEnvironmentAdd.INSTANCE,TransactionSubsystemProviders.ADD_COORDINATOR_ENVIRONMENT_DESC,false);
  coordinatorEnv.registerOperationHandler(REMOVE,CoordinatorEnvironmentRemove.INSTANCE,TransactionSubsystemProviders.REMOVE_COORDINATOR_ENVIRONMENT_DESC,false);
  final ManagementResourceRegistration objectStore=registration.registerSubModel(PathElement.pathElement(OBJECT_STORE),TransactionSubsystemProviders.OBJECT_STORE_DESC);
  objectStore.registerOperationHandler(ADD,ObjectStoreAdd.INSTANCE,TransactionSubsystemProviders.ADD_OBJECT_STORE_DESC,false);
  objectStore.registerOperationHandler(REMOVE,ObjectStoreRemove.INSTANCE,TransactionSubsystemProviders.REMOVE_OBJECT_STORE_DESC,false);
  for (  TxStatsHandler.TxStat stat : EnumSet.allOf(TxStatsHandler.TxStat.class)) {
    registration.registerMetric(stat.toString(),TxStatsHandler.INSTANCE);
  }
  subsystem.registerXMLElementWriter(parser);
}

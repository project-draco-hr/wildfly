{
  final ModelNode processId=new ModelNode();
  final EnumSet<Element> encountered=EnumSet.noneOf(Element.class);
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
    final Element element=Element.forName(reader.getLocalName());
switch (element) {
case UUID:
      if (!encountered.add(element)) {
        throw duplicateNamedElement(reader,reader.getLocalName());
      }
    processId.get(CommonAttributes.UUID).set(element.getLocalName());
  requireNoContent(reader);
break;
case SOCKET:
{
if (!encountered.add(element)) {
  throw duplicateNamedElement(reader,reader.getLocalName());
}
ModelNode socketId=parseSocketProcessIdElement(reader);
processId.get(CommonAttributes.SOCKET).set(socketId);
break;
}
default :
throw unexpectedElement(reader);
}
}
return processId;
}

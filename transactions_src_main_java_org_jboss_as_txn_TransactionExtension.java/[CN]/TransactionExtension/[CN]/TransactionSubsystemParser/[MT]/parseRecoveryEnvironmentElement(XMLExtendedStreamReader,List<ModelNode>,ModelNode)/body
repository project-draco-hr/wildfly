{
  final ModelNode recoveryEnvAddress=parentAddress.clone();
  final ModelNode operation=new ModelNode();
  operation.get(OP).set(ADD);
  recoveryEnvAddress.add(CONFIGURATION,RECOVERY_ENVIRONMENT);
  recoveryEnvAddress.protect();
  operation.get(OP_ADDR).set(recoveryEnvAddress);
  Set<Attribute> required=EnumSet.of(Attribute.BINDING,Attribute.STATUS_BINDING);
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    requireNoNamespaceAttribute(reader,i);
    final String value=reader.getAttributeValue(i);
    final Location location=reader.getLocation();
    final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
    required.remove(attribute);
switch (attribute) {
case BINDING:
      RecoveryEnvironmentAdd.BINDING.parseAndSetParameter(value,operation,location);
    break;
case STATUS_BINDING:
  RecoveryEnvironmentAdd.STATUS_BINDING.parseAndSetParameter(value,operation,location);
break;
case RECOVERY_LISTENER:
RecoveryEnvironmentAdd.RECOVERY_LISTENER.parseAndSetParameter(value,operation,location);
break;
default :
unexpectedAttribute(reader,i);
}
}
if (!required.isEmpty()) {
throw missingRequired(reader,required);
}
requireNoContent(reader);
list.add(operation);
}

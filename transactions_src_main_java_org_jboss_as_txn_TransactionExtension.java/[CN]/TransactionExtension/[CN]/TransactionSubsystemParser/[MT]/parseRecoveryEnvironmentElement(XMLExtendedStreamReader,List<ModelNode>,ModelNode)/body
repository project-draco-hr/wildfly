{
  final ModelNode recoveryEnvAddress=parentAddress.clone();
  final ModelNode operation=new ModelNode();
  operation.get(OP).set(ADD);
  recoveryEnvAddress.add(RECOVERY_ENVIRONMENT,RECOVERY_ENVIRONMENT);
  recoveryEnvAddress.protect();
  operation.get(OP_ADDR).set(recoveryEnvAddress);
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    requireNoNamespaceAttribute(reader,i);
    final String value=reader.getAttributeValue(i);
    final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case BINDING:
      operation.get(BINDING).set(value);
    break;
case STATUS_BINDING:
  operation.get(STATUS_BINDING).set(value);
break;
case RECOVERY_LISTENER:
operation.get(RECOVERY_LISTENER).set(value);
break;
default :
unexpectedAttribute(reader,i);
}
}
if (!operation.hasDefined(BINDING)) {
throw missingRequired(reader,Collections.singleton(Attribute.BINDING));
}
requireNoContent(reader);
list.add(operation);
}

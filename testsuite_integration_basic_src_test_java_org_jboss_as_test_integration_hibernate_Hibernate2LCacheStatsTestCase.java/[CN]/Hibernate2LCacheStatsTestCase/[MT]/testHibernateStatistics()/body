{
  SFSBHibernate2LcacheStats sfsb=lookup("SFSBHibernate2LcacheStats",SFSBHibernate2LcacheStats.class);
  sfsb.setupConfig();
  Set<Satellite> satellites1=new HashSet<Satellite>();
  Satellite sat=new Satellite();
  sat.setId(new Integer(1));
  sat.setName("MOON");
  satellites1.add(sat);
  Planet s1=sfsb.prepareData("EARTH","MILKY WAY","SUN",satellites1,new Integer(1));
  Planet s2=sfsb.getPlanet(s1.getPlanetId());
  DataSource ds=rawLookup("java:jboss/datasources/ExampleDS",DataSource.class);
  Connection conn=ds.getConnection();
  int updated=conn.prepareStatement("update PLANET set galaxy_name='ANDROMEDA' where planetId=1").executeUpdate();
  assertTrue("was able to update added Planet.  update count=" + updated,updated > 0);
  conn.close();
  s2=sfsb.getPlanet(s2.getPlanetId());
  System.out.println("get sfsb.getPlanet() returned planet with galaxy=" + s2.getGalaxy());
  assertTrue("was able to read updated Planet entity",s2 != null);
  assertEquals("Galaxy for Planet " + s2.getPlanetName() + " was read from second level cache = "+ s2.getGalaxy(),"MILKY WAY",s2.getGalaxy());
  assertEquals(s2.getSatellites().size(),1);
  Statistics stats=sfsb.getStatistics();
  assertEquals(stats.getCollectionLoadCount(),1);
  assertEquals(stats.getEntityLoadCount(),2);
  assertEquals(stats.getSecondLevelCacheHitCount(),1);
  assertTrue(sfsb.isSatellitesPresentInCache(1));
  Statistics statsAfterEviction=sfsb.getStatisticsAfterEviction();
  assertFalse(sfsb.isSatellitesPresentInCache(1));
}

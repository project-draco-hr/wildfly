{
  if (context.getRunningMode() != RunningMode.ADMIN_ONLY) {
    throw new OperationFailedException("the iiop migration can be performed when the server is in admin-only mode");
  }
  final PathAddress subsystemsAddress=context.getCurrentAddress().getParent();
  if (context.readResourceFromRoot(subsystemsAddress).hasChild(OPENJDK_SUBSYSTEM_ELEMENT)) {
    throw new OperationFailedException("can not migrate: the new iiop-openjdk subsystem is already defined");
  }
  if (!context.readResourceFromRoot(PathAddress.EMPTY_ADDRESS).hasChild(OPENJDK_EXTENSION_ELEMENT)) {
    addOpenjdkExtension(context);
  }
  final Resource jacorbResource=context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS);
  final ModelNode jacorbModel=Resource.Tools.readModel(jacorbResource).clone();
  TransformUtils.checkLegacyModel(jacorbModel,true);
  final ModelNode openjdkModel=TransformUtils.transformModel(jacorbModel);
  final PathAddress openjdkAddress=subsystemsAddress.append(OPENJDK_SUBSYSTEM_ELEMENT);
  addOpenjdkSubsystem(context,openjdkAddress,openjdkModel);
  final PathAddress jacorbAddress=subsystemsAddress.append(JACORB_SUBSYSTEM_ELEMENT);
  removeJacorbSubsystem(context,jacorbAddress);
}

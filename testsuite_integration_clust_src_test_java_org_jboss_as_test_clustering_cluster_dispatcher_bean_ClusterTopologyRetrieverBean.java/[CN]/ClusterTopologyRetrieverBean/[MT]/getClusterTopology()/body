{
  try {
    System.out.println("Executing command on cluster");
    Collection<CommandResponse<String>> responses=this.dispatcher.executeOnCluster(new TestCommand()).values();
    List<String> nodes=new ArrayList<>(responses.size());
    for (    CommandResponse<String> response : responses) {
      nodes.add(response.get());
    }
    Node localNode=this.factory.getLocalNode();
    System.out.println("Executing command on node: " + localNode);
    String local=this.dispatcher.executeOnNode(new TestCommand(),localNode).get();
    System.out.println("Executing command on cluster excluding node: " + localNode);
    responses=this.dispatcher.executeOnCluster(new TestCommand(),localNode).values();
    List<String> remote=new ArrayList<>(responses.size());
    for (    CommandResponse<String> response : responses) {
      remote.add(response.get());
    }
    return new ClusterTopology(nodes,local,remote);
  }
 catch (  ExecutionException e) {
    throw new IllegalStateException(e.getCause());
  }
}

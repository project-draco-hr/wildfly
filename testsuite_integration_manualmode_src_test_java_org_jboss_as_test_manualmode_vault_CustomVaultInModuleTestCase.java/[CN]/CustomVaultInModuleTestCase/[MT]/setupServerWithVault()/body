{
  ModelControllerClient client=null;
  ManagementClient managementClient=null;
  containerController.start(CONTAINER);
  try {
    client=TestSuiteEnvironment.getModelControllerClient();
    managementClient=new ManagementClient(client,TestSuiteEnvironment.getServerAddress(),TestSuiteEnvironment.getServerPort(),"http-remoting");
    final ModelNode addVault=Util.createAddOperation(PathAddress.pathAddress(VaultResourceDefinition.PATH));
    addVault.get(ModelDescriptionConstants.MODULE).set(MODULE_NAME);
    addVault.get(ModelDescriptionConstants.CODE).set(CustomSecurityVault.class.getName());
    final ModelNode options=new ModelNode();
    options.get("Testing").set("123");
    options.get("Another").set("Hello");
    addVault.get(ModelDescriptionConstants.VAULT_OPTIONS).set(options);
    ModelTestUtils.checkOutcome(client.execute(addVault));
    final ModelNode addExtension=Util.createAddOperation(PathAddress.pathAddress(ModelDescriptionConstants.EXTENSION,MODULE_NAME));
    ModelTestUtils.checkOutcome(client.execute(addExtension));
    final ModelNode addSubsystem=Util.createAddOperation(PathAddress.pathAddress(TestVaultSubsystemResourceDescription.PATH));
    ModelTestUtils.checkOutcome(client.execute(addSubsystem));
  }
  finally {
    containerController.stop(CONTAINER);
    long end=System.currentTimeMillis() + TimeoutUtil.adjust(3000);
    do {
      Thread.sleep(50);
    }
 while (managementClient.isServerInRunningState() && System.currentTimeMillis() < end);
    IoUtils.safeClose(client);
    IoUtils.safeClose(managementClient);
  }
}

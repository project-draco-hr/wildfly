{
  final ModelControllerClient client=ModelControllerClient.Factory.create(InetAddress.getByName("localhost"),9999);
  List<ModelNode> updates=new ArrayList<ModelNode>();
  ModelNode op=new ModelNode();
  String securityDomain="database-login-module";
  op.get(OP).set(ADD);
  op.get(OP_ADDR).add(SUBSYSTEM,"security");
  op.get(OP_ADDR).add(SECURITY_DOMAIN,securityDomain);
  updates.add(op);
  op=new ModelNode();
  op.get(OP).set(ADD);
  op.get(OP_ADDR).add(SUBSYSTEM,"security");
  op.get(OP_ADDR).add(SECURITY_DOMAIN,securityDomain);
  op.get(OP_ADDR).add(Constants.AUTHENTICATION,Constants.CLASSIC);
  ModelNode loginModule=op.get(Constants.LOGIN_MODULES).add();
  loginModule.get(ModelDescriptionConstants.CODE).set(DatabaseServerLoginModule.class.getName());
  loginModule.get(FLAG).set("required");
  op.get(OPERATION_HEADERS).get(ALLOW_RESOURCE_SERVICE_RESTART).set(true);
  ModelNode moduleOptions=loginModule.get("module-options");
  Map<String,String> optionsMap=classModuleOptionsMap.get(caller);
  assertNotNull(optionsMap);
  for (  Map.Entry<String,String> entry : optionsMap.entrySet()) {
    moduleOptions.get(entry.getKey()).set(entry.getValue());
  }
  updates.add(op);
  applyUpdates(updates,client);
}

{
  final Component component=context.getPrivateData(Component.class);
  final ComponentView view=context.getPrivateData(ComponentView.class);
  if (view != null) {
    Ejb2xViewType viewType=view.getPrivateData(Ejb2xViewType.class);
    if (viewType != null) {
      final StatefulTransactionMarker marker=context.getPrivateData(StatefulTransactionMarker.class);
      if (marker != null && !marker.isFirstInvocation()) {
        throw EjbMessages.MESSAGES.cannotRemoveWhileParticipatingInTransaction();
      }
    }
  }
  if (component instanceof StatefulSessionComponent == false) {
    throw MESSAGES.unexpectedComponent(component,StatefulSessionComponent.class);
  }
  final StatefulSessionComponent statefulComponent=(StatefulSessionComponent)component;
  Object invocationResult=null;
  try {
    invocationResult=context.proceed();
  }
 catch (  Exception e) {
    if (this.isApplicationException(statefulComponent,e.getClass(),context.getMethod()) && this.retainIfException) {
      throw e;
    }
    final StatefulSessionComponentInstance statefulComponentInstance=(StatefulSessionComponentInstance)context.getPrivateData(ComponentInstance.class);
    final SessionID sessionId=statefulComponentInstance.getId();
    statefulComponent.removeSession(sessionId);
    throw e;
  }
  final StatefulSessionComponentInstance statefulComponentInstance=(StatefulSessionComponentInstance)context.getPrivateData(ComponentInstance.class);
  final SessionID sessionId=statefulComponentInstance.getId();
  statefulComponent.removeSession(sessionId);
  return invocationResult;
}

{
  final Component component=context.getPrivateData(Component.class);
  if (component instanceof StatefulSessionComponent == false) {
    throw new RuntimeException("Unexpected component: " + component + " in interceptor context: "+ context+ " Expected an instance of "+ StatefulSessionComponent.class);
  }
  final StatefulSessionComponent statefulComponent=(StatefulSessionComponent)component;
  Object invocationResult=null;
  try {
    invocationResult=context.proceed();
  }
 catch (  Exception e) {
    if (this.isApplicationException(statefulComponent,e.getClass(),context.getMethod()) && this.retainIfException) {
      throw e;
    }
    final StatefulSessionComponentInstance statefulComponentInstance=(StatefulSessionComponentInstance)context.getPrivateData(ComponentInstance.class);
    final SessionID sessionId=statefulComponentInstance.getId();
    statefulComponent.removeSession(sessionId);
    throw e;
  }
  final StatefulSessionComponentInstance statefulComponentInstance=(StatefulSessionComponentInstance)context.getPrivateData(ComponentInstance.class);
  final SessionID sessionId=statefulComponentInstance.getId();
  statefulComponent.removeSession(sessionId);
  return invocationResult;
}

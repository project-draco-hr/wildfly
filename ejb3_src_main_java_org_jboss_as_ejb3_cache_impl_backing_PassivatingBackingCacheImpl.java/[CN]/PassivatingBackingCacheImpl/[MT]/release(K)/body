{
  this.trace("release(%s)",key);
  E entry=store.get(key,false);
  if (entry == null) {
    log.debug("SFSB instance with session ID " + key + " not available in cache");
    return null;
  }
  entry.lock();
  try {
    entry.decreaseUsageCount();
    boolean modified=entry.isModified();
    if (modified) {
      if (isClustered()) {
        passivationManager.preReplicate(entry);
      }
    }
    store.update(entry,modified);
    if (!entry.isInUse()) {
      this.scheduleExpirationPassivation(key);
    }
    return entry;
  }
  finally {
    entry.unlock();
  }
}

{
  final boolean registerRuntimeOnly=context.isRuntimeOnlyRegistrationValid();
  final SubsystemRegistration subsystem=context.registerSubsystem(SUBSYSTEM_NAME,1,0);
  subsystem.registerXMLElementWriter(WebservicesSubsystemParser.getInstance());
  final ManagementResourceRegistration registration=subsystem.registerSubsystemModel(WSSubsystemProviders.SUBSYSTEM);
  registration.registerOperationHandler(ADD,WSSubsystemAdd.INSTANCE,WSSubsystemProviders.SUBSYSTEM_ADD,false);
  registration.registerOperationHandler(DESCRIBE,WSSubsystemDescribe.INSTANCE,WSSubsystemProviders.SUBSYSTEM_DESCRIBE,false,PRIVATE);
  registration.registerOperationHandler(REMOVE,WSSubsystemRemove.INSTANCE,WSSubsystemProviders.SUBSYSTEM_REMOVE,false);
  registration.registerReadWriteAttribute(WSDL_HOST,null,new WSSubsystemAttributeChangeHandler(new StringLengthValidator(1,Integer.MAX_VALUE,true,true)),Storage.CONFIGURATION);
  registration.registerReadWriteAttribute(WSDL_PORT,null,new WSSubsystemAttributeChangeHandler(new IntRangeValidator(1,Integer.MAX_VALUE,true,true)),Storage.CONFIGURATION);
  registration.registerReadWriteAttribute(WSDL_SECURE_PORT,null,new WSSubsystemAttributeChangeHandler(new IntRangeValidator(1,Integer.MAX_VALUE,true,true)),Storage.CONFIGURATION);
  registration.registerReadWriteAttribute(MODIFY_WSDL_ADDRESS,null,new WSSubsystemAttributeChangeHandler(new ModelTypeValidator(ModelType.BOOLEAN,true)),Storage.CONFIGURATION);
  final ManagementResourceRegistration endpointConfig=registration.registerSubModel(endpointConfigPath,WSSubsystemProviders.ENDPOINT_CONFIG_DESCRIPTION);
  endpointConfig.registerOperationHandler(ADD,EndpointConfigAdd.INSTANCE,WSSubsystemProviders.ENDPOINT_CONFIG_ADD_DESCRIPTION,false);
  endpointConfig.registerOperationHandler(REMOVE,EndpointConfigRemove.INSTANCE,WSSubsystemProviders.ENDPOINT_CONFIG_REMOVE_DESCRIPTION,false);
  final ManagementResourceRegistration feature=endpointConfig.registerSubModel(featurePath,WSSubsystemProviders.FEATURE_DESCRIPTION);
  feature.registerOperationHandler(ADD,FeatureAdd.INSTANCE,WSSubsystemProviders.FEATURE_ADD_DESCRIPTION,false);
  feature.registerOperationHandler(REMOVE,FeatureRemove.INSTANCE,WSSubsystemProviders.FEATURE_REMOVE_DESCRIPTION,false);
  final ManagementResourceRegistration property=endpointConfig.registerSubModel(propertyPath,WSSubsystemProviders.PROPERTY_DESCRIPTION);
  property.registerOperationHandler(ADD,PropertyAdd.INSTANCE,WSSubsystemProviders.PROPERTY_ADD_DESCRIPTION,false);
  property.registerOperationHandler(REMOVE,PropertyRemove.INSTANCE,WSSubsystemProviders.PROPERTY_REMOVE_DESCRIPTION,false);
  property.registerReadOnlyAttribute(VALUE,null,Storage.CONFIGURATION);
  final ManagementResourceRegistration preHandlerChain=endpointConfig.registerSubModel(preHandlerChainPath,WSSubsystemProviders.PRE_HANDLER_CHAIN_DESCRIPTION);
  preHandlerChain.registerOperationHandler(ADD,HandlerChainAdd.INSTANCE,WSSubsystemProviders.PRE_HANDLER_CHAIN_ADD_DESCRIPTION,false);
  preHandlerChain.registerOperationHandler(REMOVE,HandlerChainRemove.INSTANCE,WSSubsystemProviders.PRE_HANDLER_CHAIN_REMOVE_DESCRIPTION,false);
  preHandlerChain.registerReadOnlyAttribute(PROTOCOL_BINDINGS,null,Storage.CONFIGURATION);
  preHandlerChain.registerReadOnlyAttribute(PORT_NAME_PATTERN,null,Storage.CONFIGURATION);
  preHandlerChain.registerReadOnlyAttribute(SERVICE_NAME_PATTERN,null,Storage.CONFIGURATION);
  final ManagementResourceRegistration preHandler=preHandlerChain.registerSubModel(handlerPath,WSSubsystemProviders.HANDLER_DESCRIPTION);
  preHandler.registerOperationHandler(ADD,HandlerAdd.INSTANCE,WSSubsystemProviders.HANDLER_ADD_DESCRIPTION,false);
  preHandler.registerOperationHandler(REMOVE,HandlerRemove.INSTANCE,WSSubsystemProviders.HANDLER_REMOVE_DESCRIPTION,false);
  preHandler.registerReadOnlyAttribute(HANDLER_CLASS,null,Storage.CONFIGURATION);
  final ManagementResourceRegistration postHandlerChain=endpointConfig.registerSubModel(postHandlerChainPath,WSSubsystemProviders.POST_HANDLER_CHAIN_DESCRIPTION);
  postHandlerChain.registerOperationHandler(ADD,HandlerChainAdd.INSTANCE,WSSubsystemProviders.POST_HANDLER_CHAIN_ADD_DESCRIPTION,false);
  postHandlerChain.registerOperationHandler(REMOVE,HandlerChainRemove.INSTANCE,WSSubsystemProviders.POST_HANDLER_CHAIN_REMOVE_DESCRIPTION,false);
  postHandlerChain.registerReadOnlyAttribute(PROTOCOL_BINDINGS,null,Storage.CONFIGURATION);
  postHandlerChain.registerReadOnlyAttribute(PORT_NAME_PATTERN,null,Storage.CONFIGURATION);
  postHandlerChain.registerReadOnlyAttribute(SERVICE_NAME_PATTERN,null,Storage.CONFIGURATION);
  final ManagementResourceRegistration postHandler=postHandlerChain.registerSubModel(handlerPath,WSSubsystemProviders.HANDLER_DESCRIPTION);
  postHandler.registerOperationHandler(ADD,HandlerAdd.INSTANCE,WSSubsystemProviders.HANDLER_ADD_DESCRIPTION,false);
  postHandler.registerOperationHandler(REMOVE,HandlerRemove.INSTANCE,WSSubsystemProviders.HANDLER_REMOVE_DESCRIPTION,false);
  postHandler.registerReadOnlyAttribute(HANDLER_CLASS,null,Storage.CONFIGURATION);
  if (registerRuntimeOnly) {
    final ManagementResourceRegistration deployments=subsystem.registerDeploymentModel(WSSubsystemProviders.DEPLOYMENT_DESCRIPTION);
    final ManagementResourceRegistration endpoints=deployments.registerSubModel(endpointPath,WSSubsystemProviders.ENDPOINT_DESCRIPTION);
    for (    final String attributeName : WSEndpointMetrics.ATTRIBUTES) {
      endpoints.registerMetric(attributeName,WSEndpointMetrics.INSTANCE);
    }
  }
}

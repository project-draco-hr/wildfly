{
  final boolean registerRuntimeOnly=context.isRuntimeOnlyRegistrationValid();
  final SubsystemRegistration subsystem=context.registerSubsystem(SUBSYSTEM_NAME,MANAGEMENT_API_MAJOR_VERSION,MANAGEMENT_API_MINOR_VERSION,MANAGEMENT_API_MICRO_VERSION);
  subsystem.registerXMLElementWriter(WSSubsystemWriter.getInstance());
  final ManagementResourceRegistration registration=subsystem.registerSubsystemModel(WSSubsystemProviders.SUBSYSTEM);
  registration.registerOperationHandler(ADD,WSSubsystemAdd.INSTANCE,WSSubsystemProviders.SUBSYSTEM_ADD,false);
  registration.registerOperationHandler(DESCRIBE,WSSubsystemDescribe.INSTANCE,WSSubsystemProviders.SUBSYSTEM_DESCRIBE,false,PRIVATE);
  registration.registerOperationHandler(REMOVE,WSSubsystemRemove.INSTANCE,WSSubsystemProviders.SUBSYSTEM_REMOVE,false);
  registration.registerReadWriteAttribute(WSDL_HOST,null,new WSSubsystemAttributeChangeHandler(new StringLengthValidator(1,Integer.MAX_VALUE,true,true)),Storage.CONFIGURATION);
  registration.registerReadWriteAttribute(WSDL_PORT,null,new WSSubsystemAttributeChangeHandler(new IntRangeValidator(1,Integer.MAX_VALUE,true,true)),Storage.CONFIGURATION);
  registration.registerReadWriteAttribute(WSDL_SECURE_PORT,null,new WSSubsystemAttributeChangeHandler(new IntRangeValidator(1,Integer.MAX_VALUE,true,true)),Storage.CONFIGURATION);
  registration.registerReadWriteAttribute(MODIFY_WSDL_ADDRESS,null,new WSSubsystemAttributeChangeHandler(new ModelTypeValidator(ModelType.BOOLEAN,true)),Storage.CONFIGURATION);
  final ManagementResourceRegistration endpointConfig=registration.registerSubModel(endpointConfigPath,WSSubsystemProviders.ENDPOINT_CONFIG_DESCRIPTION);
  endpointConfig.registerOperationHandler(ADD,EndpointConfigAdd.INSTANCE,WSSubsystemProviders.ENDPOINT_CONFIG_ADD_DESCRIPTION,false);
  endpointConfig.registerOperationHandler(REMOVE,EndpointConfigRemove.INSTANCE,WSSubsystemProviders.ENDPOINT_CONFIG_REMOVE_DESCRIPTION,false);
  registerProperty(endpointConfig,false);
  registerPreHandlerChain(endpointConfig,false);
  registerPostHandlerChain(endpointConfig,false);
  final ManagementResourceRegistration clientConfig=registration.registerSubModel(clientConfigPath,WSSubsystemProviders.CLIENT_CONFIG_DESCRIPTION);
  clientConfig.registerOperationHandler(ADD,ClientConfigAdd.INSTANCE,WSSubsystemProviders.CLIENT_CONFIG_ADD_DESCRIPTION,false);
  clientConfig.registerOperationHandler(REMOVE,ClientConfigRemove.INSTANCE,WSSubsystemProviders.CLIENT_CONFIG_REMOVE_DESCRIPTION,false);
  registerProperty(clientConfig,true);
  registerPreHandlerChain(clientConfig,true);
  registerPostHandlerChain(clientConfig,true);
  if (registerRuntimeOnly) {
    final ManagementResourceRegistration deployments=subsystem.registerDeploymentModel(WSSubsystemProviders.DEPLOYMENT_DESCRIPTION);
    final ManagementResourceRegistration endpoints=deployments.registerSubModel(endpointPath,WSSubsystemProviders.ENDPOINT_DESCRIPTION);
    for (    final String attributeName : WSEndpointMetrics.ATTRIBUTES) {
      endpoints.registerMetric(attributeName,WSEndpointMetrics.INSTANCE);
    }
  }
}

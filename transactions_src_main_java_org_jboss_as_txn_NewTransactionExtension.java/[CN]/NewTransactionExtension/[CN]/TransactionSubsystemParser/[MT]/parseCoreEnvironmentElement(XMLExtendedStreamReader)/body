{
  final ModelNode env=new ModelNode();
  final int count=reader.getAttributeCount();
  final EnumSet<Attribute> required=EnumSet.of(Attribute.BINDING);
  for (int i=0; i < count; i++) {
    requireNoNamespaceAttribute(reader,i);
    final String value=reader.getAttributeValue(i);
    final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
    required.remove(attribute);
switch (attribute) {
case BINDING:
      env.get(BINDING).set(value);
    break;
case NODE_IDENTIFIER:
  env.get(NODE_IDENTIFIER).set(value);
break;
case SOCKET_PROCESS_ID_MAX_PORTS:
env.get(SOCKET_PROCESS_ID_MAX_PORTS).set(value);
break;
default :
unexpectedAttribute(reader,i);
}
}
if (!required.isEmpty()) {
missingRequired(reader,required);
}
requireNoContent(reader);
return env;
}

{
  return new AdditionalInitialization(){
    @Override protected RunningMode getRunningMode(){
      return RunningMode.ADMIN_ONLY;
    }
    @Override protected void initializeExtraSubystemsAndModel(    ExtensionRegistry extensionRegistry,    Resource rootResource,    ManagementResourceRegistration rootRegistration,    RuntimeCapabilityRegistry capabilityRegistry){
      if (!extensionAdded) {
        final OperationDefinition removeExtension=new SimpleOperationDefinitionBuilder("remove",NonResolvingResourceDescriptionResolver.INSTANCE).build();
        final OperationDefinition addExtension=new SimpleOperationDefinitionBuilder("add",NonResolvingResourceDescriptionResolver.INSTANCE).addParameter(new SimpleAttributeDefinition("module",ModelType.STRING,false)).build();
        PathElement bvExtension=PathElement.pathElement(EXTENSION,"org.wildfly.extension.bean-validation");
        ManagementResourceRegistration extensionRegistration=rootRegistration.registerSubModel(new SimpleResourceDefinition(bvExtension,NonResolvingResourceDescriptionResolver.INSTANCE));
        extensionRegistration.registerReadOnlyAttribute(new SimpleAttributeDefinition("module",ModelType.STRING,false),new ReloadRequiredWriteAttributeHandler());
        extensionRegistration.registerOperationHandler(removeExtension,new ReloadRequiredRemoveStepHandler());
        extensionRegistration.registerOperationHandler(addExtension,new ReloadRequiredAddStepHandler(new SimpleAttributeDefinition("module",ModelType.STRING,false)));
        final OperationDefinition removeSubsystem=new SimpleOperationDefinitionBuilder("remove",NonResolvingResourceDescriptionResolver.INSTANCE).build();
        final OperationDefinition addSubsystem=new SimpleOperationDefinitionBuilder("add",NonResolvingResourceDescriptionResolver.INSTANCE).build();
        PathElement bvSubsystem=PathElement.pathElement(SUBSYSTEM,"bean-validation");
        ManagementResourceRegistration subsystemRegistration=rootRegistration.registerSubModel(new SimpleResourceDefinition(bvSubsystem,NonResolvingResourceDescriptionResolver.INSTANCE));
        subsystemRegistration.registerOperationHandler(removeSubsystem,new ReloadRequiredRemoveStepHandler());
        subsystemRegistration.registerOperationHandler(addSubsystem,new ReloadRequiredAddStepHandler());
      }
    }
  }
;
}

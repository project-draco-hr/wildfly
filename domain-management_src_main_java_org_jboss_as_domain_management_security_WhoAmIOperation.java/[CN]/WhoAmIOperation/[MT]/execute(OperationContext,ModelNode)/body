{
  boolean verbose=VERBOSE.resolveModelAttribute(context,operation).asBoolean();
  Caller caller=context.getCaller();
  if (caller == null) {
    throw new OperationFailedException(new ModelNode().set(DomainManagementLogger.ROOT_LOGGER.noSecurityContextEstablished()));
  }
  ModelNode result=context.getResult();
  ModelNode identity=result.get(IDENTITY);
  identity.get(USERNAME).set(caller.getName());
  String realm=caller.getRealm();
  if (realm != null) {
    identity.get(REALM).set(realm);
  }
  if (verbose) {
    Set<String> groupSet=caller.getAssociatedGroups();
    if (groupSet.size() > 0) {
      ModelNode groups=result.get(GROUPS);
      for (      String current : groupSet) {
        groups.add(current);
      }
    }
    Set<String> roleSet=caller.getAssociatedRoles();
    if (roleSet.size() > 0) {
      ModelNode roles=result.get(ROLES);
      for (      String current : roleSet) {
        roles.add(current);
      }
    }
    Set<String> mappedRoles=authorizer == null ? null : authorizer.getCallerRoles(context.getCaller(),context.getCallEnvironment(),RunAsRoleMapper.getOperationHeaderRoles(operation));
    if (mappedRoles != null) {
      ModelNode roles=result.get(MAPPED_ROLES);
      for (      String current : mappedRoles) {
        roles.add(current);
      }
    }
  }
  context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);
}

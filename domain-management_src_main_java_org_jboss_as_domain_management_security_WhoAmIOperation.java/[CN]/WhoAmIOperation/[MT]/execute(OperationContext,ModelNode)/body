{
  boolean verbose=VERBOSE.resolveModelAttribute(context,operation).asBoolean();
  Subject subject=SecurityActions.getSecurityContextSubject();
  if (subject == null) {
    throw new OperationFailedException(new ModelNode().set(MESSAGES.noSecurityContextEstablished()));
  }
  Set<RealmUser> realmUsers=subject.getPrincipals(RealmUser.class);
  if (realmUsers.size() != 1) {
    throw new OperationFailedException(new ModelNode().set(MESSAGES.unexpectedNumberOfRealmUsers(realmUsers.size())));
  }
  RealmUser user=realmUsers.iterator().next();
  ModelNode result=context.getResult();
  ModelNode identity=result.get(IDENTITY);
  identity.get(USERNAME).set(user.getName());
  String realm=user.getRealm();
  if (realm != null) {
    identity.get(REALM).set(realm);
  }
  if (verbose) {
    Set<RealmGroup> groupSet=subject.getPrincipals(RealmGroup.class);
    if (groupSet.size() > 0) {
      ModelNode groups=result.get(GROUPS);
      for (      RealmGroup current : groupSet) {
        groups.add(current.getName());
      }
    }
    Set<RealmRole> roleSet=subject.getPrincipals(RealmRole.class);
    if (roleSet.size() > 0) {
      ModelNode roles=result.get(ROLES);
      for (      RealmRole current : roleSet) {
        roles.add(current.getName());
      }
    }
  }
  context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);
}

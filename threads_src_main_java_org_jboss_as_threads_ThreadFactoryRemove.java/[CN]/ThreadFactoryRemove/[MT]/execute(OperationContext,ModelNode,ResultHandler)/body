{
  final ModelNode opAddr=operation.require(OP_ADDR);
  final PathAddress address=PathAddress.pathAddress(opAddr);
  final String name=address.getLastElement().getValue();
  final ModelNode threadFactory=context.getSubModel();
  final ModelNode compensating=Util.getEmptyOperation(ADD,opAddr);
  compensating.get(GROUP_NAME).set(threadFactory.get(GROUP_NAME));
  compensating.get(THREAD_NAME_PATTERN).set(threadFactory.get(THREAD_NAME_PATTERN));
  compensating.get(PRIORITY).set(threadFactory.get(PRIORITY));
  compensating.get(PROPERTIES).set(threadFactory.get(PROPERTIES).clone());
  threadFactory.clear();
  if (context.getRuntimeContext() != null) {
    final ServiceController<?> controller=context.getRuntimeContext().getServiceRegistry().getService(ThreadsServices.threadFactoryName(name));
    if (controller != null) {
      controller.addListener(new ResultHandler.ServiceRemoveListener(resultHandler));
    }
 else {
      resultHandler.handleResultComplete();
    }
  }
 else {
    resultHandler.handleResultComplete();
  }
  return new BasicOperationResult(compensating);
}

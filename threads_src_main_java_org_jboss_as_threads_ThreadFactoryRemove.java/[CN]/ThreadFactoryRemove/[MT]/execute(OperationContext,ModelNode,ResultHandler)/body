{
  final ModelNode opAddr=operation.require(OP_ADDR);
  final PathAddress address=PathAddress.pathAddress(opAddr);
  final String name=address.getLastElement().getValue();
  if (context instanceof RuntimeOperationContext) {
    final RuntimeOperationContext runtimeContext=(RuntimeOperationContext)context;
    final ServiceController<?> controller=runtimeContext.getServiceRegistry().getService(ThreadsServices.threadFactoryName(name));
    if (controller == null) {
      resultHandler.handleResultComplete(null);
      return Cancellable.NULL;
    }
 else {
      controller.setMode(Mode.REMOVE);
    }
  }
  final ModelNode threadFactory=context.getSubModel();
  final ModelNode compensating=Util.getEmptyOperation(ADD,opAddr);
  compensating.get(GROUP_NAME).set(threadFactory.get(GROUP_NAME));
  compensating.get(THREAD_NAME_PATTERN).set(threadFactory.get(THREAD_NAME_PATTERN));
  compensating.get(PRIORITY).set(threadFactory.get(PRIORITY));
  compensating.get(PROPERTIES).set(threadFactory.get(PROPERTIES).clone());
  threadFactory.clear();
  resultHandler.handleResultComplete(compensating);
  return Cancellable.NULL;
}

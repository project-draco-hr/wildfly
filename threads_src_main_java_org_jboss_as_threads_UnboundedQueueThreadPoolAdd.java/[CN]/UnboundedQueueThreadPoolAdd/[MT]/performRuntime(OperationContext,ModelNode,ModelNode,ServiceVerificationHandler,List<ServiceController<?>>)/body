{
  for (  final AttributeDefinition attribute : ATTRIBUTES) {
    attribute.validateResolvedOperation(model);
  }
  final BaseOperationParameters params=ThreadsSubsystemThreadPoolOperationUtils.parseUnboundedQueueThreadPoolOperationParameters(operation);
  ServiceTarget target=context.getServiceTarget();
  final ServiceName serviceName=ThreadsServices.executorName(params.getName());
  final UnboundedQueueThreadPoolService service=new UnboundedQueueThreadPoolService(params.getMaxThreads().getScaledCount(),params.getKeepAliveTime());
  final ServiceBuilder<ExecutorService> serviceBuilder=target.addService(serviceName,service);
  ThreadsSubsystemThreadPoolOperationUtils.addThreadFactoryDependency(params.getThreadFactory(),serviceName,serviceBuilder,service.getThreadFactoryInjector(),target,params.getName() + "-threads");
  serviceBuilder.addListener(verificationHandler);
  serviceBuilder.install();
}

{
  KernelServicesBuilder builder=createKernelServicesBuilder(new MailSubsystem10TestCase.Initializer()).setSubsystemXml(getSubsystemXml());
  KernelServices mainServices=builder.build();
  if (!mainServices.isSuccessfulBoot()) {
    Assert.fail(mainServices.getBootError().toString());
  }
  final ModelNode writeOp=Util.getWriteAttributeOperation(PathAddress.pathAddress(MailExtension.SUBSYSTEM_PATH,PathElement.pathElement(MailExtension.MAIL_SESSION_PATH.getKey(),"java:/Mail")),"debug",false);
  ModelNode result=mainServices.executeOperation(writeOp);
  Assert.assertEquals(result.get(ModelDescriptionConstants.FAILURE_DESCRIPTION).asString(),"success",result.get(ModelDescriptionConstants.OUTCOME).asString());
  ModelNode responseHeaders=result.get(ModelDescriptionConstants.RESPONSE_HEADERS);
  if (responseHeaders.isDefined()) {
    boolean reload=responseHeaders.get(ModelDescriptionConstants.OPERATION_REQUIRES_RELOAD).asBoolean(false);
    Assert.assertFalse("Operation should not return requires reload",reload);
  }
}

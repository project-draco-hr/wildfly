{
  ModuleIdentifier id=(ModuleIdentifier)readObject();
  if (id == null) {
    return super.resolveProxyClass(interfaces);
  }
 else {
    try {
      final ModuleClassLoader classLoader=ModuleClassLoader.forModule(id);
      final Class<?>[] actualInterfaces=new Class<?>[interfaces.length];
      for (int i=0; i < interfaces.length; i++) {
        String name=interfaces[i];
        actualInterfaces[i]=Class.forName(name,false,classLoader);
      }
      return Proxy.getProxyClass(classLoader,actualInterfaces);
    }
 catch (    ModuleLoadException e) {
      throw new ClassNotFoundException("Failed to load module with ID " + id,e);
    }
  }
}

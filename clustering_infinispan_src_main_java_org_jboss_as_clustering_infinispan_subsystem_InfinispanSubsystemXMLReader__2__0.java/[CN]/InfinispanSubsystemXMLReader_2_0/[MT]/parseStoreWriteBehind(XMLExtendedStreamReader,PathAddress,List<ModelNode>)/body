{
  PathAddress writeBehindAddress=storeAddress.append(StoreWriteBehindResourceDefinition.PATH);
  ModelNode writeBehind=Util.createAddOperation(writeBehindAddress);
  operations.add(writeBehind);
  for (int i=0; i < reader.getAttributeCount(); i++) {
    String value=reader.getAttributeValue(i);
    Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case FLUSH_LOCK_TIMEOUT:
{
        StoreWriteBehindResourceDefinition.FLUSH_LOCK_TIMEOUT.parseAndSetParameter(value,writeBehind,reader);
        break;
      }
case MODIFICATION_QUEUE_SIZE:
{
      StoreWriteBehindResourceDefinition.MODIFICATION_QUEUE_SIZE.parseAndSetParameter(value,writeBehind,reader);
      break;
    }
case SHUTDOWN_TIMEOUT:
{
    StoreWriteBehindResourceDefinition.SHUTDOWN_TIMEOUT.parseAndSetParameter(value,writeBehind,reader);
    break;
  }
case THREAD_POOL_SIZE:
{
  StoreWriteBehindResourceDefinition.THREAD_POOL_SIZE.parseAndSetParameter(value,writeBehind,reader);
  break;
}
default :
throw ParseUtils.unexpectedAttribute(reader,i);
}
}
ParseUtils.requireNoContent(reader);
}

{
  final StepHandlerContext stepHandlerContext=new StepHandlerContext(steps.size());
  for (int i=0; i < steps.size(); i++) {
    final ModelNode step=steps.get(i);
    if (stepHandlerContext.hasFailures()) {
      stepHandlerContext.recordCancellation(Integer.valueOf(i));
    }
 else {
      final PathAddress address=PathAddress.pathAddress(step.require(OP_ADDR));
      final String operationName=step.require(OP).asString();
      final OperationHandler stepHandler=context.getRegistry().getOperationHandler(address,operationName);
      final Integer id=Integer.valueOf(i);
      final OperationContext stepContext=context.getStepOperationContext(id,address,stepHandler);
      final boolean remove=(stepHandler instanceof ModelRemoveOperationHandler);
      final ResultHandler stepResultHandler=new StepResultHandler(id,stepHandlerContext,address,context.getSubModel(),stepContext.getSubModel(),remove);
      stepHandler.execute(stepContext,step,stepResultHandler);
    }
  }
  final ModelNode results=stepHandlerContext.getResults();
  if (stepHandlerContext.hasFailures()) {
    context.handleFailures(stepHandlerContext,results);
  }
 else {
    context.handleSuccess(stepHandlerContext,results);
  }
}

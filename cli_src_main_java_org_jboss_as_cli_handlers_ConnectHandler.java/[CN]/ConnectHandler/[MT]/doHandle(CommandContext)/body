{
  int port=-1;
  String host=null;
  final ParsedCommandLine parsedCmd=ctx.getParsedCommandLine();
  final List<String> args=parsedCmd.getOtherProperties();
  if (!args.isEmpty()) {
    if (args.size() != 1) {
      ctx.error("The command expects only one argument but got " + args);
      return;
    }
    final String arg=args.get(0);
    String portStr=null;
    int colonIndex=arg.lastIndexOf(':');
    if (colonIndex < 0) {
      host=arg;
    }
 else     if (colonIndex == 0) {
      portStr=arg.substring(1).trim();
    }
 else {
      final boolean hasPort;
      int closeBracket=arg.lastIndexOf(']');
      if (closeBracket != -1) {
        if (closeBracket > colonIndex) {
          hasPort=false;
        }
 else {
          hasPort=true;
        }
      }
 else {
        hasPort=true;
      }
      if (hasPort) {
        host=arg.substring(0,colonIndex).trim();
        portStr=arg.substring(colonIndex + 1).trim();
      }
 else {
        host=arg;
      }
    }
    if (portStr != null) {
      try {
        port=Integer.parseInt(portStr);
      }
 catch (      NumberFormatException e) {
        ctx.error("The port must be a valid non-negative integer: '" + args + "'");
        return;
      }
      if (port < 0) {
        ctx.error("The port must be a valid non-negative integer: '" + args + "'");
        return;
      }
    }
  }
  ctx.connectController(host,port);
}

{
  Map<Attribute,String> rolesByType=new HashMap<Attribute,String>();
  for (  Role role : roles) {
    String name=role.getName();
    if (role.isConsume()) {
      storeRoleToType(Attribute.CONSUME_NAME,name,rolesByType);
    }
    if (role.isCreateDurableQueue()) {
      storeRoleToType(Attribute.CREATEDURABLEQUEUE_NAME,name,rolesByType);
    }
    if (role.isCreateNonDurableQueue()) {
      storeRoleToType(Attribute.CREATE_NON_DURABLE_QUEUE_NAME,name,rolesByType);
    }
    if (role.isDeleteDurableQueue()) {
      storeRoleToType(Attribute.DELETEDURABLEQUEUE_NAME,name,rolesByType);
    }
    if (role.isDeleteNonDurableQueue()) {
      storeRoleToType(Attribute.DELETE_NON_DURABLE_QUEUE_NAME,name,rolesByType);
    }
    if (role.isManage()) {
      storeRoleToType(Attribute.MANAGE_NAME,name,rolesByType);
    }
    if (role.isSend()) {
      storeRoleToType(Attribute.SEND_NAME,name,rolesByType);
    }
  }
  for (  Map.Entry<Attribute,String> entry : rolesByType.entrySet()) {
    streamWriter.writeStartElement(Element.PERMISSION_ELEMENT_NAME.getLocalName());
    streamWriter.writeAttribute(Attribute.TYPE_ATTR_NAME.getLocalName(),entry.getKey().getLocalName());
    streamWriter.writeAttribute(Attribute.ROLES_ATTR_NAME.getLocalName(),entry.getValue());
    streamWriter.writeEndElement();
  }
}

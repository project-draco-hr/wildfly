{
  LocalHostControllerInfoImpl lch=new MockLocalHostControllerInfo(new ControlledProcessState(true),"test");
  ProductConfig productConfig=new ProductConfig(null,null,"main");
  IgnoredDomainResourceRegistry ignoredRegistry=new IgnoredDomainResourceRegistry(lch);
  Resource parent=ignoredRegistry.getRootResource();
  PathElement wildcardPE=PathElement.pathElement(ModelDescriptionConstants.IGNORED_RESOURCE_TYPE,"wildcard");
  parent.registerChild(wildcardPE,new IgnoreDomainResourceTypeResource("wildcard",new ModelNode(),Boolean.TRUE));
  PathElement listPE=PathElement.pathElement(ModelDescriptionConstants.IGNORED_RESOURCE_TYPE,"list");
  parent.registerChild(listPE,new IgnoreDomainResourceTypeResource("list",new ModelNode().add("ignored"),Boolean.FALSE));
  PathElement nullWildcardPE=PathElement.pathElement(ModelDescriptionConstants.IGNORED_RESOURCE_TYPE,"nullWildcard");
  parent.registerChild(nullWildcardPE,new IgnoreDomainResourceTypeResource("nullWildcard",new ModelNode().add("ignored"),null));
  PathElement emptyPE=PathElement.pathElement(ModelDescriptionConstants.IGNORED_RESOURCE_TYPE,"empty");
  parent.registerChild(emptyPE,new IgnoreDomainResourceTypeResource("empty",new ModelNode(),null));
  Assert.assertTrue(ignoredRegistry.isResourceExcluded(PathAddress.pathAddress(PathElement.pathElement("wildcard","ignored"))));
  Assert.assertTrue(ignoredRegistry.isResourceExcluded(PathAddress.pathAddress(PathElement.pathElement("list","ignored"))));
  Assert.assertFalse(ignoredRegistry.isResourceExcluded(PathAddress.pathAddress(PathElement.pathElement("list","used"))));
  Assert.assertTrue(ignoredRegistry.isResourceExcluded(PathAddress.pathAddress(PathElement.pathElement("nullWildcard","ignored"))));
  Assert.assertFalse(ignoredRegistry.isResourceExcluded(PathAddress.pathAddress(PathElement.pathElement("nullWildcard","used"))));
  Assert.assertFalse(ignoredRegistry.isResourceExcluded(PathAddress.pathAddress(PathElement.pathElement("empty","ignored"))));
  Assert.assertFalse(ignoredRegistry.isResourceExcluded(PathAddress.pathAddress(PathElement.pathElement("empty","used"))));
  Assert.assertFalse(ignoredRegistry.isResourceExcluded(PathAddress.pathAddress(PathElement.pathElement("random","ignored"))));
  ModelNode model=HostInfo.createLocalHostHostInfo(lch,productConfig,ignoredRegistry);
  HostInfo testee=HostInfo.fromModelNode(model);
  Assert.assertTrue(testee.isResourceTransformationIgnored(PathAddress.pathAddress(PathElement.pathElement("wildcard","ignored"))));
  Assert.assertTrue(testee.isResourceTransformationIgnored(PathAddress.pathAddress(PathElement.pathElement("list","ignored"))));
  Assert.assertFalse(testee.isResourceTransformationIgnored(PathAddress.pathAddress(PathElement.pathElement("list","used"))));
  Assert.assertTrue(testee.isResourceTransformationIgnored(PathAddress.pathAddress(PathElement.pathElement("nullWildcard","ignored"))));
  Assert.assertFalse(testee.isResourceTransformationIgnored(PathAddress.pathAddress(PathElement.pathElement("nullWildcard","used"))));
  Assert.assertFalse(testee.isResourceTransformationIgnored(PathAddress.pathAddress(PathElement.pathElement("empty","ignored"))));
  Assert.assertFalse(testee.isResourceTransformationIgnored(PathAddress.pathAddress(PathElement.pathElement("empty","used"))));
  Assert.assertFalse(testee.isResourceTransformationIgnored(PathAddress.pathAddress(PathElement.pathElement("random","ignored"))));
  Assert.assertFalse(testee.isOperationTransformationIgnored(PathAddress.pathAddress(PathElement.pathElement("wildcard","ignored"))));
  Assert.assertFalse(testee.isOperationTransformationIgnored(PathAddress.pathAddress(PathElement.pathElement("list","ignored"))));
  Assert.assertFalse(testee.isOperationTransformationIgnored(PathAddress.pathAddress(PathElement.pathElement("list","used"))));
  Assert.assertFalse(testee.isOperationTransformationIgnored(PathAddress.pathAddress(PathElement.pathElement("nullWildcard","ignored"))));
  Assert.assertFalse(testee.isOperationTransformationIgnored(PathAddress.pathAddress(PathElement.pathElement("nullWildcard","used"))));
  Assert.assertFalse(testee.isOperationTransformationIgnored(PathAddress.pathAddress(PathElement.pathElement("empty","ignored"))));
  Assert.assertFalse(testee.isOperationTransformationIgnored(PathAddress.pathAddress(PathElement.pathElement("empty","used"))));
  Assert.assertFalse(testee.isOperationTransformationIgnored(PathAddress.pathAddress(PathElement.pathElement("random","ignored"))));
}

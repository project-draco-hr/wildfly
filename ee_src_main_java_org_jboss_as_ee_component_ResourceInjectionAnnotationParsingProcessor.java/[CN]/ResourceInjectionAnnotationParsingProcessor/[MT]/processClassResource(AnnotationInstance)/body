{
  final AnnotationValue nameValue=annotation.value("name");
  if (nameValue == null || nameValue.asString().isEmpty()) {
    throw new IllegalArgumentException("Class level @Resource annotations must provide a name.");
  }
  final String name=nameValue.asString();
  final AnnotationValue typeValue=annotation.value("type");
  if (typeValue == null || typeValue.asClass().name().toString().equals(Object.class.getName())) {
    throw new IllegalArgumentException("Class level @Resource annotations must provide a type.");
  }
  final String type=typeValue.asClass().name().toString();
  final BindingDescription bindingDescription=new BindingDescription();
  bindingDescription.setBindingName(name);
  bindingDescription.setBindingType(type);
  final AnnotationValue description=annotation.value("description");
  if (description != null)   bindingDescription.setDescription(description.asString());
  final AnnotationValue lookupValue=annotation.value("lookup");
  if (lookupValue != null) {
    bindingDescription.setReferenceSourceDescription(new LookupBindingSourceDescription(lookupValue.asString()));
  }
  return bindingDescription;
}

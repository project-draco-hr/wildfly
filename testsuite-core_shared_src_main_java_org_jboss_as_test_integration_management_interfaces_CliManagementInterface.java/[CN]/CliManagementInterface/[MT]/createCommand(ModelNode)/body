{
  StringBuilder command=new StringBuilder();
  if (operation.has(ClientConstants.OP_ADDR)) {
    ModelNode address=operation.get(ClientConstants.OP_ADDR);
    for (    ModelNode key : address.asList()) {
      Property segment=key.asProperty();
      command.append("/").append(segment.getName()).append("=").append(segment.getValue());
    }
    operation.remove(ClientConstants.OP_ADDR);
  }
  if (operation.has(ClientConstants.OP)) {
    ModelNode op=operation.get(ClientConstants.OP);
    command.append(":").append(op.asString());
    operation.remove(ClientConstants.OP);
  }
  if (operation.has(ClientConstants.OPERATION_HEADERS)) {
    throw new UnsupportedOperationException(ClientConstants.OPERATION_HEADERS + " are not supported");
  }
  StringBuilder attrs=new StringBuilder();
  Iterator<String> keys=operation.keys().iterator();
  while (keys.hasNext()) {
    String key=keys.next();
    ModelNode value=operation.get(key);
    if (value.getType() != ModelType.OBJECT) {
      attrs.append(key).append("=").append(value.asString());
    }
    if (keys.hasNext()) {
      attrs.append(",");
    }
  }
  command.append("(").append(attrs).append(")");
  return command.toString();
}

{
  return new DomainController(){
    @Override public void unregisterRunningServer(    String serverName){
    }
    @Override public void unregisterRemoteHost(    String id,    Long remoteConnectionId){
    }
    @Override public void stopLocalHost(    int exitCode){
    }
    @Override public void stopLocalHost(){
    }
    @Override public void registerRunningServer(    ProxyController serverControllerClient){
    }
    @Override public void registerRemoteHost(    String hostName,    ManagementChannelHandler handler,    Transformers transformers,    Long remoteConnectionId,    DomainControllerRuntimeIgnoreTransformationEntry runtimeIgnoreTransformation,    boolean registerProxyController) throws SlaveRegistrationException {
    }
    @Override public void pingRemoteHost(    String hostName){
    }
    @Override public boolean isHostRegistered(    String id){
      return false;
    }
    @Override public HostFileRepository getRemoteFileRepository(){
      return null;
    }
    @Override public ModelNode getProfileOperations(    String profileName){
      return null;
    }
    @Override public LocalHostControllerInfo getLocalHostInfo(){
      return info;
    }
    @Override public HostFileRepository getLocalFileRepository(){
      return null;
    }
    @Override public ExtensionRegistry getExtensionRegistry(){
      return null;
    }
    @Override public RunningMode getCurrentRunningMode(){
      return null;
    }
    @Override public ExpressionResolver getExpressionResolver(){
      return null;
    }
    @Override public void initializeMasterDomainRegistry(    ManagementResourceRegistration root,    ExtensibleConfigurationPersister configurationPersister,    ContentRepository contentRepository,    HostFileRepository fileRepository,    ExtensionRegistry extensionRegistry,    PathManagerService pathManager){
    }
    @Override public void initializeSlaveDomainRegistry(    ManagementResourceRegistration root,    ExtensibleConfigurationPersister configurationPersister,    ContentRepository contentRepository,    HostFileRepository fileRepository,    LocalHostControllerInfo hostControllerInfo,    ExtensionRegistry extensionRegistry,    IgnoredDomainResourceRegistry ignoredDomainResourceRegistry,    PathManagerService pathManager){
    }
  }
;
}

{
  final JMSConnectionFactoryDefinitionInjectionSource directJMSConnectionFactoryInjectionSource=new JMSConnectionFactoryDefinitionInjectionSource(AnnotationElement.asRequiredString(annotationInstance,AnnotationElement.NAME));
  directJMSConnectionFactoryInjectionSource.setResourceAdapter(AnnotationElement.asOptionalString(annotationInstance,"resourceAdapter"));
  directJMSConnectionFactoryInjectionSource.setInterfaceName(AnnotationElement.asOptionalString(annotationInstance,"interfaceName","javax.jms.ConnectionFactory",propertyReplacer));
  directJMSConnectionFactoryInjectionSource.setUser(AnnotationElement.asOptionalString(annotationInstance,"user",propertyReplacer));
  directJMSConnectionFactoryInjectionSource.setPassword(AnnotationElement.asOptionalString(annotationInstance,"password",propertyReplacer));
  directJMSConnectionFactoryInjectionSource.setClientId(AnnotationElement.asOptionalString(annotationInstance,"clientId",propertyReplacer));
  directJMSConnectionFactoryInjectionSource.setTransactional(AnnotationElement.asOptionalBoolean(annotationInstance,"transactional"));
  directJMSConnectionFactoryInjectionSource.setMaxPoolSize(AnnotationElement.asOptionalInt(annotationInstance,"maxPoolSize",MAX_POOL_SIZE.getDefaultValue().asInt()));
  directJMSConnectionFactoryInjectionSource.setMinPoolSize(AnnotationElement.asOptionalInt(annotationInstance,"minPoolSize",MIN_POOL_SIZE.getDefaultValue().asInt()));
  directJMSConnectionFactoryInjectionSource.addProperties(AnnotationElement.asOptionalStringArray(annotationInstance,AnnotationElement.PROPERTIES),propertyReplacer);
  return directJMSConnectionFactoryInjectionSource;
}

{
  String securityDomain=configuration.getAttribute(ORBSubsystemConstants.SECURITY_SECURITY_DOMAIN);
  if (securityDomain == null)   throw ORBMessages.MESSAGES.errorConfiguringDomainSF();
  try {
    InitialContext context=new InitialContext();
    this.jsseSecurityDomain=(JSSESecurityDomain)context.lookup(SecurityConstants.JAAS_CONTEXT_ROOT + securityDomain + "/jsse");
    ORBLogger.ROOT_LOGGER.debugJSSEDomainRetrieval(securityDomain);
  }
 catch (  NamingException ne) {
    ORBLogger.ROOT_LOGGER.failedToObtainJSSEDomain(securityDomain);
  }
  if (this.jsseSecurityDomain == null)   throw ORBMessages.MESSAGES.failedToLookupJSSEDomain();
  String optionName=PropertiesMap.JACORB_PROPS_MAP.get(ORBSubsystemConstants.SECURITY_SERVER_SUPPORTS);
  short serverSupportedOptions=Short.parseShort(configuration.getAttribute(optionName),16);
  optionName=PropertiesMap.JACORB_PROPS_MAP.get(ORBSubsystemConstants.SECURITY_SERVER_REQUIRES);
  short serverRequiredOptions=Short.parseShort(configuration.getAttribute(optionName),16);
  if ((serverSupportedOptions & 0x40) != 0) {
    this.request_mutual_auth=true;
  }
  if ((serverRequiredOptions & 0x40) != 0) {
    this.require_mutual_auth=true;
  }
}

{
  try {
    Class<?> clazz=legacyChildFirstClassLoader.loadClass(ChildFirstClassLoaderKernelServicesFactory.class.getName());
    Method m=clazz.getMethod("create",List.class,legacyChildFirstClassLoader.loadClass(ModelTestOperationValidatorFilter.class.getName()),legacyChildFirstClassLoader.loadClass(ModelVersion.class.getName()),List.class);
    List<Object> convertedBootOps=new ArrayList<Object>();
    for (int i=0; i < bootOperations.size(); i++) {
      ModelNode node=bootOperations.get(i);
      if (node != null) {
        convertedBootOps.add(objectConverter.convertModelNodeToChildCl(node));
      }
    }
    List<Object> convertedModelInitializerEntries=null;
    if (modelInitializerEntries != null) {
      convertedModelInitializerEntries=new ArrayList<Object>();
      for (      LegacyModelInitializerEntry entry : modelInitializerEntries) {
        convertedModelInitializerEntries.add(objectConverter.convertLegacyModelInitializerEntryToChildCl(entry));
      }
    }
    return m.invoke(null,convertedBootOps,objectConverter.convertValidateOperationsFilterToChildCl(validateOpsFilter),objectConverter.convertModelVersionToChildCl(legacyModelVersion),convertedModelInitializerEntries);
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
}

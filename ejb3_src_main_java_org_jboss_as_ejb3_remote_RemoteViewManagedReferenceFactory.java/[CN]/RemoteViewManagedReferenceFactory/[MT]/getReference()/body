{
  Class<?> viewClass;
  try {
    viewClass=Class.forName(this.viewClass,false,WildFlySecurityManager.getCurrentContextClassLoaderPrivileged());
  }
 catch (  ClassNotFoundException e) {
    if (viewClassLoader == null || viewClassLoader.getValue() == null) {
      throw EjbLogger.ROOT_LOGGER.failToLoadViewClassEjb(beanName,e);
    }
    try {
      viewClass=Class.forName(this.viewClass,false,viewClassLoader.getValue());
    }
 catch (    ClassNotFoundException ce) {
      throw EjbLogger.ROOT_LOGGER.failToLoadViewClassEjb(beanName,ce);
    }
  }
  EJBLocator<?> ejbLocator=null;
  if (EJBHome.class.isAssignableFrom(viewClass) || EJBLocalHome.class.isAssignableFrom(viewClass)) {
    ejbLocator=new EJBHomeLocator(viewClass,appName,moduleName,beanName,distinctName);
  }
 else   if (stateful) {
    try {
      ejbLocator=EJBClient.createSession(viewClass,appName,moduleName,beanName,distinctName);
    }
 catch (    Exception e) {
      throw EjbLogger.ROOT_LOGGER.failedToCreateSessionForStatefulBean(e,beanName);
    }
  }
 else {
    ejbLocator=new StatelessEJBLocator(viewClass,appName,moduleName,beanName,distinctName);
  }
  final Object proxy=EJBClient.createProxy(ejbLocator);
  return new ValueManagedReference(new ImmediateValue<Object>(proxy));
}

{
  final DeploymentUnit deploymentUnit=phaseContext.getDeploymentUnit();
  final ModuleLoader moduleLoader=deploymentUnit.getAttachment(Attachments.SERVICE_MODULE_LOADER);
  final ServiceController<?> controller=phaseContext.getServiceRegistry().getRequiredService(Services.JBOSS_DEPLOYMENT_EXTENSION_INDEX);
  final ExtensionIndex index=(ExtensionIndex)controller.getValue();
  final List<ResourceRoot> allResourceRoots=DeploymentUtils.allResourceRoots(deploymentUnit);
  final Set<ServiceName> nextPhaseDeps=new HashSet<ServiceName>();
  for (  ResourceRoot resourceRoot : allResourceRoots) {
    if (!ModuleRootMarker.isModuleRoot(resourceRoot))     continue;
    final AttachmentList<ExtensionListEntry> entries=resourceRoot.getAttachment(Attachments.EXTENSION_LIST_ENTRIES);
    if (entries != null) {
      for (      ExtensionListEntry entry : entries) {
        final ModuleIdentifier extension=index.findExtension(entry.getName(),entry.getSpecificationVersion(),entry.getImplementationVersion(),entry.getImplementationVendorId());
        if (extension != null) {
          deploymentUnit.addToAttachmentList(Attachments.MODULE_DEPENDENCIES,new ModuleDependency(moduleLoader,extension,false,false,true));
          nextPhaseDeps.add(ServiceModuleLoader.moduleSpecServiceName(extension));
          nextPhaseDeps.add(ServiceModuleLoader.moduleSpecServiceName(extension));
        }
 else {
          log.warnf("Could not find Extension-List entry " + entry + " referenced from "+ resourceRoot);
        }
      }
    }
  }
  final List<AdditionalModule> additionalModules=deploymentUnit.getAttachment(Attachments.ADDITIONAL_MODULES);
  if (additionalModules != null) {
    for (    AdditionalModule additionalModule : additionalModules) {
      final AttachmentList<ExtensionListEntry> entries=additionalModule.getResourceRoot().getAttachment(Attachments.EXTENSION_LIST_ENTRIES);
      if (entries != null) {
        for (        ExtensionListEntry entry : entries) {
          final ModuleIdentifier extension=index.findExtension(entry.getName(),entry.getSpecificationVersion(),entry.getImplementationVersion(),entry.getImplementationVendorId());
          if (extension != null) {
            deploymentUnit.addToAttachmentList(Attachments.MODULE_DEPENDENCIES,new ModuleDependency(moduleLoader,extension,false,false,true));
            nextPhaseDeps.add(ServiceModuleLoader.moduleSpecServiceName(extension));
          }
 else {
            log.warnf("Could not find Extension-List entry " + entry + " referenced from "+ additionalModule.getResourceRoot());
          }
        }
      }
    }
  }
  for (  ServiceName dep : nextPhaseDeps) {
    phaseContext.addToAttachmentList(Attachments.NEXT_PHASE_DEPS,dep);
  }
}

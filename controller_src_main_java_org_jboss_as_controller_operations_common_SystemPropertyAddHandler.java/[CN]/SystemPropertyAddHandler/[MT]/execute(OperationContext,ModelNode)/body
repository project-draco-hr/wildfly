{
  validator.validate(operation);
  final String name=PathAddress.pathAddress(operation.get(OP_ADDR)).getLastElement().getValue();
  final String value=operation.hasDefined(VALUE) ? operation.get(VALUE).asString() : null;
  final boolean applyToRuntime=processEnvironment != null && processEnvironment.isRuntimeSystemPropertyUpdateAllowed(name,value,context.isBooting());
  final boolean reload=!applyToRuntime && context.getProcessType().isServer();
  final ModelNode model=context.createResource(PathAddress.EMPTY_ADDRESS).getModel();
  if (value == null) {
    model.get(VALUE).set(new ModelNode());
  }
 else {
    model.get(VALUE).set(value);
  }
  if (useBoottime) {
    boolean boottime=!operation.hasDefined(BOOT_TIME) || operation.get(BOOT_TIME).asBoolean();
    model.get(BOOT_TIME).set(boottime);
  }
  if (applyToRuntime) {
    final String setValue=value != null ? context.resolveExpressions(operation.require(VALUE)).asString() : null;
    SecurityActions.setSystemProperty(name,setValue);
    if (processEnvironment != null) {
      processEnvironment.systemPropertyUpdated(name,setValue);
    }
  }
 else   if (reload) {
    context.reloadRequired();
  }
  context.completeStep(new OperationContext.RollbackHandler(){
    @Override public void handleRollback(    OperationContext context,    ModelNode operation){
      if (reload) {
        context.revertReloadRequired();
      }
      if (processEnvironment != null) {
        SecurityActions.clearSystemProperty(name);
        if (processEnvironment != null) {
          processEnvironment.systemPropertyUpdated(name,null);
        }
      }
    }
  }
);
}

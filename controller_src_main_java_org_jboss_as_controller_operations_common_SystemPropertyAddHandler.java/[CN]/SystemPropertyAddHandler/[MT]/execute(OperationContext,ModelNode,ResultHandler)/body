{
  validator.validate(operation);
  ModelNode opAddr=operation.require(OP_ADDR);
  final String name=PathAddress.pathAddress(opAddr).getLastElement().getValue();
  final String value=operation.get(VALUE).isDefined() ? operation.get(VALUE).asString() : null;
  ModelNode node=context.getSubModel();
  if (value == null) {
    node.get(VALUE).set(new ModelNode());
  }
 else {
    node.get(VALUE).set(value);
  }
  if (useBoottime) {
    boolean boottime=operation.get(BOOT_TIME).isDefined() ? operation.get(BOOT_TIME).asBoolean() : true;
    node.get(BOOT_TIME).set(boottime);
  }
  ModelNode compensating=Util.getResourceRemoveOperation(opAddr);
  if (context.getRuntimeContext() != null) {
    context.getRuntimeContext().setRuntimeTask(new RuntimeTask(){
      public void execute(      RuntimeTaskContext context) throws OperationFailedException {
        SecurityActions.setSystemProperty(name,value);
        resultHandler.handleResultComplete();
      }
    }
);
  }
 else {
    resultHandler.handleResultComplete();
  }
  return new BasicOperationResult(compensating);
}

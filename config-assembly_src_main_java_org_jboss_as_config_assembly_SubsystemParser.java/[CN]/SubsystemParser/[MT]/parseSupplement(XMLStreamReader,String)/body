{
  String name=null;
  String[] includes=null;
  for (int i=0; i < reader.getAttributeCount(); i++) {
    String attr=reader.getAttributeLocalName(i);
    if (attr.equals("name")) {
      name=reader.getAttributeValue(i);
    }
 else     if (attr.equals("includes")) {
      String tmp=reader.getAttributeValue(i);
      includes=tmp.split(" ");
    }
 else {
      throw new XMLStreamException("Invalid attribute " + attr,reader.getLocation());
    }
  }
  if (name == null) {
    throw new XMLStreamException("Missing required attribute 'name'",reader.getLocation());
  }
  if (name.length() == 0) {
    throw new XMLStreamException("Empty name attribute for <supplement>",reader.getLocation());
  }
  Supplement supplement=new Supplement(includes);
  if (supplementReplacements.put(name,supplement) != null) {
    throw new XMLStreamException("Already have a supplement called " + name,reader.getLocation());
  }
  while (reader.hasNext()) {
    reader.next();
    int type=reader.getEventType();
switch (type) {
case START_ELEMENT:
      if (reader.getLocalName().equals("replacement")) {
        parseSupplementReplacement(reader,subsystemNs,supplement);
      }
 else {
        throw new XMLStreamException("Unknown element " + reader.getLocalName(),reader.getLocation());
      }
    break;
case END_ELEMENT:
  if (reader.getLocalName().equals("supplement")) {
    return;
  }
 else {
    throw new XMLStreamException("Unknown element " + reader.getLocalName(),reader.getLocation());
  }
}
}
}

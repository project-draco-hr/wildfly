{
  if ((jdbmPartitionBean == null) || jdbmPartitionBean.isDisabled()) {
    return null;
  }
  JdbmPartition jdbmPartition=new JdbmPartition(directoryService.getSchemaManager());
  jdbmPartition.setCacheSize(jdbmPartitionBean.getPartitionCacheSize());
  jdbmPartition.setId(jdbmPartitionBean.getPartitionId());
  jdbmPartition.setOptimizerEnabled(jdbmPartitionBean.isJdbmPartitionOptimizerEnabled());
  File partitionPath=new File(directoryService.getInstanceLayout().getPartitionsDirectory(),jdbmPartitionBean.getPartitionId());
  jdbmPartition.setPartitionPath(partitionPath.toURI());
  try {
    jdbmPartition.setSuffixDn(jdbmPartitionBean.getPartitionSuffix());
  }
 catch (  LdapInvalidDnException lide) {
    String message="Cannot set the Dn " + jdbmPartitionBean.getPartitionSuffix() + ", "+ lide.getMessage();
    LOG.error(message);
    throw new ConfigurationException(message);
  }
  jdbmPartition.setSyncOnWrite(jdbmPartitionBean.isPartitionSyncOnWrite());
  jdbmPartition.setIndexedAttributes(createJdbmIndexes(jdbmPartition,jdbmPartitionBean.getIndexes(),directoryService));
  String contextEntry=jdbmPartitionBean.getContextEntry();
  if (contextEntry != null) {
    try {
      String entryStr=contextEntry.replaceAll("\\\\n","\n");
      LdifReader ldifReader=new LdifReader();
      List<LdifEntry> entries=ldifReader.parseLdif(entryStr);
      if ((entries != null) && (entries.size() > 0)) {
        entries.get(0);
      }
    }
 catch (    LdapLdifException lle) {
      String message="Cannot parse the context entry : " + contextEntry + ", "+ lle.getMessage();
      LOG.error(message);
      throw new ConfigurationException(message);
    }
  }
  return jdbmPartition;
}

{
  if (address.size() == 0) {
    throw new IllegalStateException("Resource at address " + address + " already exists");
  }
  ModelNode node=this.model;
  List<PathElement> elements=new ArrayList<PathElement>();
  for (  PathElement element : address.subAddress(0,address.size() - 1)) {
    try {
      elements.add(element);
      node=node.require(element.getKey()).require(element.getValue());
    }
 catch (    NoSuchElementException nsee) {
      PathAddress ancestor=PathAddress.pathAddress(elements);
      throw new IllegalStateException("Cannot add resource at address " + address + " because ancestor resource "+ ancestor+ " does not exist");
    }
  }
  PathElement last=address.getLastElement();
  if (!node.has(last.getKey())) {
    throw new IllegalStateException("Cannot add resource at address " + address + " because parent resource does not have child "+ last.getKey());
  }
 else   if (node.get(last.getKey()).has(last.getValue()) && node.get(last.getKey()).get(last.getValue()).isDefined()) {
    throw new IllegalStateException("Resource at address " + address + " already exists");
  }
}

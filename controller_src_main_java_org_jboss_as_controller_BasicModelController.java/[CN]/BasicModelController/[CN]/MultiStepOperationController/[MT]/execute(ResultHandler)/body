{
  for (int i=0; i < steps.size(); i++) {
    currentOperation=i;
    final ModelNode step=steps.get(i).clone();
    step.get(ROLLBACK_ON_RUNTIME_FAILURE).set(false);
    if (hasFailures()) {
      recordCancellation(Integer.valueOf(i));
    }
 else {
      final Integer id=Integer.valueOf(i);
      final ResultHandler stepResultHandler=getStepResultHandler(id);
      final OperationResult result=executeStep(step,stepResultHandler);
      recordRollbackOp(id,result.getCompensatingOperation());
    }
  }
  if (hasFailures()) {
    handleFailures();
    return new BasicOperationResult();
  }
 else {
    ModelNode compensatingOp=getOverallCompensatingOperation();
    recordModelComplete();
    return new BasicOperationResult(compensatingOp);
  }
}

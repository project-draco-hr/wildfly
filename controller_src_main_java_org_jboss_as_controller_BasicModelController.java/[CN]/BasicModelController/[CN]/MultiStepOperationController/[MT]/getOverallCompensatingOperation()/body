{
  final ModelNode compensatingOp=new ModelNode();
  compensatingOp.get(OP).set(COMPOSITE);
  compensatingOp.get(OP_ADDR).setEmptyList();
  final ModelNode compSteps=compensatingOp.get(STEPS);
  compSteps.setEmptyList();
  int rollbackIndex=0;
  for (int i=steps.size() - 1; i >= 0; i--) {
    Integer id=Integer.valueOf(i);
    final ModelNode compStep=rollbackOps.get(id);
    if (compStep != null && compStep.isDefined()) {
      compSteps.add(compStep);
      rollbackStepNames.put(id,getStepKey(rollbackIndex));
      rollbackIndex++;
    }
  }
  if (rollbackIndex > 0) {
    compensatingOp.get(OPERATION_HEADERS,ROLLBACK_ON_RUNTIME_FAILURE).set(false);
    return compensatingOp;
  }
 else {
    return new ModelNode();
  }
}

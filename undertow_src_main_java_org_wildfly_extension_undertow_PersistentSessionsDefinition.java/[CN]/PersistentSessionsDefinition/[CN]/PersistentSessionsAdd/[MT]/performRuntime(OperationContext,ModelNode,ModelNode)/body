{
  if (isEnabled(context,model)) {
    ModelNode pathValue=PATH.resolveModelAttribute(context,model);
    ServiceBuilder<SessionPersistenceManager> builder;
    if (pathValue.isDefined()) {
      String path=pathValue.asString();
      ModelNode relativeToValue=RELATIVE_TO.resolveModelAttribute(context,model);
      String relativeTo=relativeToValue.isDefined() ? relativeToValue.asString() : null;
      final DiskBasedModularPersistentSessionManager service=new DiskBasedModularPersistentSessionManager(path,relativeTo);
      builder=context.getServiceTarget().addService(AbstractPersistentSessionManager.SERVICE_NAME,service).addDependency(Services.JBOSS_SERVICE_MODULE_LOADER,ModuleLoader.class,service.getModuleLoaderInjectedValue()).addDependency(PathManagerService.SERVICE_NAME,PathManager.class,service.getPathManager());
    }
 else {
      final InMemoryModularPersistentSessionManager service=new InMemoryModularPersistentSessionManager();
      builder=context.getServiceTarget().addService(AbstractPersistentSessionManager.SERVICE_NAME,service).addDependency(Services.JBOSS_SERVICE_MODULE_LOADER,ModuleLoader.class,service.getModuleLoaderInjectedValue());
    }
    builder.install();
  }
}

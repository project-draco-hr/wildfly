{
  final JDBCEntityCommandMetaData metaData=new JDBCEntityCommandMetaData();
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case NAME:
{
        metaData.setName(reader.getAttributeValue(i));
        break;
      }
case CLASS:
{
      final String command=reader.getAttributeValue(i);
      try {
        metaData.setClass(classLoader.loadClass(command));
      }
 catch (      ClassNotFoundException e) {
        throw MESSAGES.failedToLoadEntityCommand(command,e);
      }
      break;
    }
default :
{
    throw unexpectedAttribute(reader,i);
  }
}
}
for (Element element : children(reader)) {
switch (element) {
case ATTRIBUTE:
{
  parseAttribute(reader,metaData);
  break;
}
default :
{
throw unexpectedElement(reader);
}
}
}
return metaData;
}

{
  DomainClient masterClient=domainMasterLifecycleUtil.getDomainClient();
  DomainClient slaveClient=domainSlaveLifecycleUtil.getDomainClient();
  ModelNode request=getSystemPropertyAddOperation(ROOT_PROP_ADDRESS,"domain",Boolean.FALSE);
  ModelNode response=masterClient.execute(request);
  validateResponse(response);
  response=masterClient.execute(getReadChildrenNamesOperation(MAIN_RUNNING_SERVER_ADDRESS,SYSTEM_PROPERTY));
  ModelNode returnVal=validateResponse(response);
  Assert.assertEquals(2,returnVal.asList().size());
  response=masterClient.execute(getReadChildrenNamesOperation(OTHER_RUNNING_SERVER_ADDRESS,SYSTEM_PROPERTY));
  returnVal=validateResponse(response);
  Assert.assertEquals(2,returnVal.asList().size());
  response=masterClient.execute(getReadAttributeOperation(MAIN_RUNNING_SERVER_PROP_ADDRESS,VALUE));
  returnVal=validateResponse(response);
  Assert.assertEquals("domain",returnVal.asString());
  response=masterClient.execute(getReadAttributeOperation(OTHER_RUNNING_SERVER_PROP_ADDRESS,VALUE));
  returnVal=validateResponse(response);
  Assert.assertEquals("domain",returnVal.asString());
  request=getSystemPropertyAddOperation(SERVER_GROUP_PROP_ADDRESS,"group",Boolean.FALSE);
  response=masterClient.execute(request);
  validateResponse(response);
  response=masterClient.execute(getReadAttributeOperation(MAIN_RUNNING_SERVER_PROP_ADDRESS,VALUE));
  returnVal=validateResponse(response);
  Assert.assertEquals("domain",returnVal.asString());
  response=masterClient.execute(getReadAttributeOperation(OTHER_RUNNING_SERVER_PROP_ADDRESS,VALUE));
  returnVal=validateResponse(response);
  Assert.assertEquals("group",returnVal.asString());
  request=getWriteAttributeOperation(ROOT_PROP_ADDRESS,"domain2");
  response=masterClient.execute(request);
  validateResponse(response);
  response=masterClient.execute(getReadAttributeOperation(MAIN_RUNNING_SERVER_PROP_ADDRESS,VALUE));
  returnVal=validateResponse(response);
  Assert.assertEquals("domain2",returnVal.asString());
  response=masterClient.execute(getReadAttributeOperation(OTHER_RUNNING_SERVER_PROP_ADDRESS,VALUE));
  returnVal=validateResponse(response);
  Assert.assertEquals("group",returnVal.asString());
  request=getSystemPropertyAddOperation(HOST_PROP_ADDRESS,"host",Boolean.FALSE);
  response=masterClient.execute(request);
  validateResponse(response);
  response=masterClient.execute(getReadAttributeOperation(MAIN_RUNNING_SERVER_PROP_ADDRESS,VALUE));
  returnVal=validateResponse(response);
  Assert.assertEquals("domain2",returnVal.asString());
  response=masterClient.execute(getReadAttributeOperation(OTHER_RUNNING_SERVER_PROP_ADDRESS,VALUE));
  returnVal=validateResponse(response);
  Assert.assertEquals("host",returnVal.asString());
  request=getWriteAttributeOperation(ROOT_PROP_ADDRESS,"domain3");
  response=masterClient.execute(request);
  validateResponse(response);
  response=masterClient.execute(getReadAttributeOperation(MAIN_RUNNING_SERVER_PROP_ADDRESS,VALUE));
  returnVal=validateResponse(response);
  Assert.assertEquals("domain3",returnVal.asString());
  response=masterClient.execute(getReadAttributeOperation(OTHER_RUNNING_SERVER_PROP_ADDRESS,VALUE));
  returnVal=validateResponse(response);
  Assert.assertEquals("host",returnVal.asString());
  request=getWriteAttributeOperation(SERVER_GROUP_PROP_ADDRESS,"group2");
  response=masterClient.execute(request);
  validateResponse(response);
  response=masterClient.execute(getReadAttributeOperation(MAIN_RUNNING_SERVER_PROP_ADDRESS,VALUE));
  returnVal=validateResponse(response);
  Assert.assertEquals("domain3",returnVal.asString());
  response=masterClient.execute(getReadAttributeOperation(OTHER_RUNNING_SERVER_PROP_ADDRESS,VALUE));
  returnVal=validateResponse(response);
  Assert.assertEquals("host",returnVal.asString());
  request=getSystemPropertyAddOperation(SERVER_PROP_ADDRESS,"server",Boolean.FALSE);
  response=masterClient.execute(request);
  validateResponse(response);
  response=masterClient.execute(getReadAttributeOperation(MAIN_RUNNING_SERVER_PROP_ADDRESS,VALUE));
  returnVal=validateResponse(response);
  Assert.assertEquals("domain3",returnVal.asString());
  response=masterClient.execute(getReadAttributeOperation(OTHER_RUNNING_SERVER_PROP_ADDRESS,VALUE));
  returnVal=validateResponse(response);
  Assert.assertEquals("server",returnVal.asString());
  request=getWriteAttributeOperation(HOST_PROP_ADDRESS,"host2");
  response=masterClient.execute(request);
  validateResponse(response);
  response=masterClient.execute(getReadAttributeOperation(MAIN_RUNNING_SERVER_PROP_ADDRESS,VALUE));
  returnVal=validateResponse(response);
  Assert.assertEquals("domain3",returnVal.asString());
  response=masterClient.execute(getReadAttributeOperation(OTHER_RUNNING_SERVER_PROP_ADDRESS,VALUE));
  returnVal=validateResponse(response);
  Assert.assertEquals("server",returnVal.asString());
  request=getWriteAttributeOperation(SERVER_PROP_ADDRESS,"server1");
  response=slaveClient.execute(request);
  validateResponse(response);
  response=masterClient.execute(getReadAttributeOperation(MAIN_RUNNING_SERVER_PROP_ADDRESS,VALUE));
  returnVal=validateResponse(response);
  Assert.assertEquals("domain3",returnVal.asString());
  response=slaveClient.execute(getReadAttributeOperation(OTHER_RUNNING_SERVER_PROP_ADDRESS,VALUE));
  returnVal=validateResponse(response);
  Assert.assertEquals("server1",returnVal.asString());
  request=Util.getResourceRemoveOperation(ROOT_PROP_ADDRESS);
  response=masterClient.execute(request);
  validateResponse(response);
  response=masterClient.execute(getReadChildrenNamesOperation(MAIN_RUNNING_SERVER_ADDRESS,SYSTEM_PROPERTY));
  returnVal=validateResponse(response);
  Assert.assertEquals(1,returnVal.asList().size());
  response=slaveClient.execute(getReadAttributeOperation(OTHER_RUNNING_SERVER_PROP_ADDRESS,VALUE));
  returnVal=validateResponse(response);
  Assert.assertEquals("server1",returnVal.asString());
  request=Util.getResourceRemoveOperation(SERVER_GROUP_PROP_ADDRESS);
  response=masterClient.execute(request);
  validateResponse(response);
  response=masterClient.execute(getReadChildrenNamesOperation(MAIN_RUNNING_SERVER_ADDRESS,SYSTEM_PROPERTY));
  returnVal=validateResponse(response);
  Assert.assertEquals(1,returnVal.asList().size());
  response=slaveClient.execute(getReadAttributeOperation(OTHER_RUNNING_SERVER_PROP_ADDRESS,VALUE));
  returnVal=validateResponse(response);
  Assert.assertEquals("server1",returnVal.asString());
  request=Util.getResourceRemoveOperation(HOST_PROP_ADDRESS);
  response=masterClient.execute(request);
  validateResponse(response);
  response=masterClient.execute(getReadChildrenNamesOperation(MAIN_RUNNING_SERVER_ADDRESS,SYSTEM_PROPERTY));
  returnVal=validateResponse(response);
  Assert.assertEquals(1,returnVal.asList().size());
  response=slaveClient.execute(getReadAttributeOperation(OTHER_RUNNING_SERVER_PROP_ADDRESS,VALUE));
  returnVal=validateResponse(response);
  Assert.assertEquals("server1",returnVal.asString());
  request=Util.getResourceRemoveOperation(SERVER_PROP_ADDRESS);
  response=masterClient.execute(request);
  validateResponse(response);
  response=masterClient.execute(getReadChildrenNamesOperation(MAIN_RUNNING_SERVER_ADDRESS,SYSTEM_PROPERTY));
  returnVal=validateResponse(response);
  Assert.assertEquals(1,returnVal.asList().size());
  response=slaveClient.execute(getReadChildrenNamesOperation(OTHER_RUNNING_SERVER_ADDRESS,SYSTEM_PROPERTY));
  returnVal=validateResponse(response);
  Assert.assertEquals(1,returnVal.asList().size());
}

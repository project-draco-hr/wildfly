{
  List<OpenListener> listeners=new ArrayList<>();
  OptionMap undertowOptions=OptionMap.builder().addAll(commonOptions).addAll(listenerOptions).set(UndertowOptions.ENABLE_CONNECTOR_STATISTICS,getUndertowService().isStatisticsEnabled()).getMap();
  Pool bufferPool=getBufferPool().getValue();
  HttpOpenListener http=new HttpOpenListener(bufferPool,undertowOptions);
  listeners.add(http);
  AlpnOpenListener alpn=new AlpnOpenListener(bufferPool,http);
  if (listenerOptions.get(UndertowOptions.ENABLE_HTTP2,false)) {
    Http2OpenListener http2=new Http2OpenListener(bufferPool,undertowOptions,"h2");
    alpn.addProtocol("h2",http2,10);
    Http2OpenListener http2_14=new Http2OpenListener(bufferPool,undertowOptions,"h2-14");
    alpn.addProtocol("h2-14",http2_14,9);
    listeners.add(http2);
    listeners.add(http2_14);
  }
  if (listenerOptions.get(UndertowOptions.ENABLE_SPDY,false)) {
    SpdyOpenListener spdyOpenListener=new SpdyOpenListener(bufferPool,bufferPool,undertowOptions);
    alpn.addProtocol(SpdyOpenListener.SPDY_3_1,spdyOpenListener,5);
    listeners.add(spdyOpenListener);
  }
  return new TempAlpnOpenListener(alpn,bufferPool,listeners);
}

{
  if (cls.isArray() || cls.isPrimitive())   throw JdkORBMessages.MESSAGES.notAnClassOrInterface(cls.getName());
  if (cls.isInterface() && org.omg.CORBA.Object.class.isAssignableFrom(cls) && org.omg.CORBA.portable.IDLEntity.class.isAssignableFrom(cls)) {
    StringBuffer b=new StringBuffer("IDL:");
    b.append(cls.getPackage().getName().replace('.','/'));
    b.append('/');
    String base=cls.getName();
    base=base.substring(base.lastIndexOf('.') + 1);
    b.append(base).append(":1.0");
    repositoryId=b.toString();
  }
 else {
    StringBuffer b=new StringBuffer("RMI:");
    b.append(escapeIRName(cls.getName()));
    memberPrefix=b.toString() + ".";
    String hashStr=toHexString(classHashCode);
    b.append(':').append(hashStr);
    ObjectStreamClass osClass=ObjectStreamClass.lookup(cls);
    if (osClass != null) {
      long serialVersionUID=osClass.getSerialVersionUID();
      String SVUID=toHexString(serialVersionUID);
      if (classHashCode != serialVersionUID)       b.append(':').append(SVUID);
      memberPostfix=":" + hashStr + ":"+ SVUID;
    }
 else     memberPostfix=":" + hashStr;
    repositoryId=b.toString();
  }
}

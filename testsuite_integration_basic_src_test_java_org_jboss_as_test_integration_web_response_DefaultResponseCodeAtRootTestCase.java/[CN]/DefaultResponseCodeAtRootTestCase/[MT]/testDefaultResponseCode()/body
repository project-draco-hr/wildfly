{
  CompositeOperationBuilder cob=CompositeOperationBuilder.create();
  ModelNode operation=createOpNode("subsystem=undertow/server=default-server/host=default-host","write-attribute");
  operation.get("name").set("default-response-code");
  operation.get("value").set(506);
  cob.addStep(operation);
  operation=createOpNode("subsystem=undertow/server=default-server/host=default-host","remove");
  operation.get("address").add("location","/");
  cob.addStep(operation);
  executeOperation(cob.build().getOperation());
  executeReloadAndWaitForCompletion(getModelControllerClient());
  deployer.deploy("test");
  try {
    HttpGet httpget=null;
    HttpResponse response=null;
    httpget=new HttpGet(url.toString() + URL_PATTERN + "xxx/xxxxx");
    response=this.httpclient.execute(httpget);
    Assert.assertEquals(404,response.getStatusLine().getStatusCode());
    deployer.undeploy("test");
    httpget=new HttpGet(url.toString() + URL_PATTERN);
    response=this.httpclient.execute(httpget);
    Assert.assertEquals("" + httpget,506,response.getStatusLine().getStatusCode());
  }
  finally {
    cob=CompositeOperationBuilder.create();
    operation=createOpNode("subsystem=undertow/server=default-server/host=default-host","undefine-attribute");
    operation.get("name").set("default-response-code");
    cob.addStep(operation);
    operation=createOpNode("subsystem=undertow/server=default-server/host=default-host","add");
    operation.get("address").add("location","/");
    operation.get("handler").set("welcome-content");
    cob.addStep(operation);
    executeOperation(cob.build().getOperation());
    executeReloadAndWaitForCompletion(getModelControllerClient());
  }
}

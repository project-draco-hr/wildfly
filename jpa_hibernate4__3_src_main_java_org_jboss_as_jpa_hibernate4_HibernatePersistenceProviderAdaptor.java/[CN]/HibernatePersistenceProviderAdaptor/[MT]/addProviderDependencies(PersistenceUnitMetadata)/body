{
  final Properties properties=pu.getProperties();
  final String sharedCacheMode=properties.getProperty(SHARED_CACHE_MODE);
  if (Classification.NONE.equals(platform.defaultCacheClassification())) {
    if (!SharedCacheMode.NONE.equals(pu.getSharedCacheMode())) {
      JPA_LOGGER.tracef("second level cache is not supported in platform, ignoring shared cache mode");
    }
    pu.setSharedCacheMode(SharedCacheMode.NONE);
  }
  boolean sharedCacheDisabled=SharedCacheMode.NONE.equals(pu.getSharedCacheMode()) || NONE.equals(sharedCacheMode);
  if (!sharedCacheDisabled && Boolean.parseBoolean(properties.getProperty(AvailableSettings.USE_SECOND_LEVEL_CACHE)) || (sharedCacheMode != null && (!NONE.equals(sharedCacheMode))) || (!SharedCacheMode.NONE.equals(pu.getSharedCacheMode()) && (!SharedCacheMode.UNSPECIFIED.equals(pu.getSharedCacheMode())))) {
    HibernateSecondLevelCache.addSecondLevelCacheDependencies(pu.getProperties(),pu.getScopedPersistenceUnitName());
    JPA_LOGGER.tracef("second level cache enabled for %s",pu.getScopedPersistenceUnitName());
  }
 else {
    JPA_LOGGER.tracef("second level cache disabled for %s, pu %s property = %s, pu.getSharedCacheMode = %s",pu.getScopedPersistenceUnitName(),SHARED_CACHE_MODE,sharedCacheMode,pu.getSharedCacheMode().toString());
  }
}

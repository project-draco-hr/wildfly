{
  if (JGroupsModel.VERSION_4_1_0.requiresTransformation(version)) {
    builder.getAttributeBuilder().addRejectCheck(RejectAttributeChecker.DEFINED,Attribute.DATA_SOURCE.getDefinition()).end();
  }
  if (JGroupsModel.VERSION_3_0_0.requiresTransformation(version)) {
    AttributeConverter typeConverter=new AttributeConverter.DefaultAttributeConverter(){
      @Override protected void convertAttribute(      PathAddress address,      String name,      ModelNode value,      TransformationContext context){
        if (!value.isDefined()) {
          value.set(address.getLastElement().getValue());
        }
      }
    }
;
    builder.getAttributeBuilder().setDiscard(new DiscardAttributeChecker.DiscardAttributeValueChecker(Attribute.MODULE.getDefinition().getDefaultValue()),Attribute.MODULE.getDefinition()).addRejectCheck(RejectAttributeChecker.DEFINED,Attribute.MODULE.getDefinition()).setValueConverter(typeConverter,DeprecatedAttribute.TYPE.getDefinition()).end();
    builder.addRawOperationTransformationOverride(MapOperations.MAP_GET_DEFINITION.getName(),new SimpleOperationTransformer(new LegacyPropertyMapGetOperationTransformer()));
    for (    String opName : Operations.getAllWriteAttributeOperationNames()) {
      builder.addOperationTransformationOverride(opName).inheritResourceAttributeDefinitions().setCustomOperationTransformer(new LegacyPropertyWriteOperationTransformer());
    }
  }
  PropertyResourceDefinition.buildTransformation(version,builder);
}

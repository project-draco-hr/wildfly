{
  controller.start(CONTAINER1);
  deployer.deploy(DEPLOYMENT1);
  DefaultHttpClient client=new DefaultHttpClient();
  String url1="http://127.0.0.1:8080/singleton/service";
  String url2="http://127.0.0.1:8180/singleton/service";
  try {
    HttpResponse response=client.execute(new HttpGet(url1));
    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
    Assert.assertEquals("node-udp-0",response.getFirstHeader("node").getValue());
    response.getEntity().getContent().close();
    controller.start(CONTAINER2);
    deployer.deploy(DEPLOYMENT2);
    response=client.execute(new HttpGet(url1));
    long startTime=System.currentTimeMillis();
    while (response.getStatusLine().getStatusCode() != HttpServletResponse.SC_OK && startTime + GRACE_TIME_TO_MEMBERSHIP_CHANGE > System.currentTimeMillis()) {
      response=client.execute(new HttpGet(url1));
    }
    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
    Assert.assertEquals(MyServiceContextListener.PREFERRED_NODE,response.getFirstHeader("node").getValue());
    response.getEntity().getContent().close();
    response=tryGet(client,url2);
    ;
    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
    Assert.assertEquals(MyServiceContextListener.PREFERRED_NODE,response.getFirstHeader("node").getValue());
    response.getEntity().getContent().close();
    controller.stop(CONTAINER2);
    response=tryGet(client,url1);
    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
    Assert.assertEquals("node-udp-0",response.getFirstHeader("node").getValue());
    response.getEntity().getContent().close();
    controller.start(CONTAINER2);
    response=tryGet(client,url1);
    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
    Assert.assertEquals(MyServiceContextListener.PREFERRED_NODE,response.getFirstHeader("node").getValue());
    response.getEntity().getContent().close();
    response=tryGet(client,url2);
    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
    Assert.assertEquals(MyServiceContextListener.PREFERRED_NODE,response.getFirstHeader("node").getValue());
    response.getEntity().getContent().close();
    controller.stop(CONTAINER1);
    response=tryGet(client,url2);
    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
    Assert.assertEquals("node-udp-1",response.getFirstHeader("node").getValue());
    response.getEntity().getContent().close();
    controller.start(CONTAINER1);
    response=tryGet(client,url1);
    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
    Assert.assertEquals(MyServiceContextListener.PREFERRED_NODE,response.getFirstHeader("node").getValue());
    response.getEntity().getContent().close();
    response=tryGet(client,url2);
    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
    Assert.assertEquals(MyServiceContextListener.PREFERRED_NODE,response.getFirstHeader("node").getValue());
    response.getEntity().getContent().close();
  }
  finally {
    client.getConnectionManager().shutdown();
    deployer.undeploy(DEPLOYMENT1);
    controller.stop(CONTAINER1);
    deployer.undeploy(DEPLOYMENT2);
    controller.stop(CONTAINER2);
  }
}

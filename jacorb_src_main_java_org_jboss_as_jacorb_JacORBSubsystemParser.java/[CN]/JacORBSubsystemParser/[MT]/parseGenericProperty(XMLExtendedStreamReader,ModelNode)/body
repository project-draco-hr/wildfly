{
  String name=null;
  ModelNode val=null;
  EnumSet<Attribute> required=EnumSet.of(Attribute.NAME,Attribute.PROP_VALUE);
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    requireNoNamespaceAttribute(reader,i);
    final String value=reader.getAttributeValue(i);
    final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
    required.remove(attribute);
switch (attribute) {
case NAME:
{
        name=value;
        break;
      }
case PROP_VALUE:
{
      val=JacORBSubsystemDefinitions.PROPERTIES.parse(value,reader.getLocation());
      break;
    }
default :
  throw unexpectedAttribute(reader,i);
}
}
if (!required.isEmpty()) {
throw missingRequired(reader,required);
}
node.add(name,val);
requireNoContent(reader);
}

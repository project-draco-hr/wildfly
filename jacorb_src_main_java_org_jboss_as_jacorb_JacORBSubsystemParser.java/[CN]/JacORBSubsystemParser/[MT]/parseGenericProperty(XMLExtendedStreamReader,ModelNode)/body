{
  String key=null;
  String val=null;
  EnumSet<JacORBAttribute> required=EnumSet.of(JacORBAttribute.PROP_KEY,JacORBAttribute.PROP_VALUE);
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    requireNoNamespaceAttribute(reader,i);
    final String value=reader.getAttributeValue(i);
    final JacORBAttribute attribute=JacORBAttribute.forName(reader.getAttributeLocalName(i));
    required.remove(attribute);
switch (attribute) {
case PROP_KEY:
{
        key=value;
        break;
      }
case PROP_VALUE:
{
      val=value;
      break;
    }
default :
  throw unexpectedAttribute(reader,i);
}
}
if (!required.isEmpty()) {
throw missingRequired(reader,required);
}
orbProperties.add(key,val);
requireNoContent(reader);
}

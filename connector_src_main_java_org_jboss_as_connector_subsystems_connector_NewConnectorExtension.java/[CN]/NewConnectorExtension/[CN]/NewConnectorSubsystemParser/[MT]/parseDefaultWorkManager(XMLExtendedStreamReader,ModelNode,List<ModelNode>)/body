{
  final ModelNode op=new ModelNode();
  list.add(op);
  op.get(OP).set(ADD);
  final EnumSet<Attribute> required=EnumSet.of(Attribute.SHORT_RUNNING_THREAD_POOL,Attribute.LONG_RUNNING_THREAD_POOL);
  final int cnt=reader.getAttributeCount();
  for (int i=0; i < cnt; i++) {
    final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case SHORT_RUNNING_THREAD_POOL:
{
        op.get(SHORT_RUNNING_THREAD_POOL).set(reader.getAttributeValue(i));
        required.remove(Attribute.SHORT_RUNNING_THREAD_POOL);
        break;
      }
case LONG_RUNNING_THREAD_POOL:
{
      op.get(LONG_RUNNING_THREAD_POOL).set(reader.getAttributeValue(i));
      required.remove(Attribute.LONG_RUNNING_THREAD_POOL);
      break;
    }
}
}
if (!required.isEmpty()) {
missingRequired(reader,required);
}
final ModelNode address=parentNode.clone();
address.add(DEFAULT_WORKMANAGER);
address.protect();
op.get(ADDRESS).set(address);
}

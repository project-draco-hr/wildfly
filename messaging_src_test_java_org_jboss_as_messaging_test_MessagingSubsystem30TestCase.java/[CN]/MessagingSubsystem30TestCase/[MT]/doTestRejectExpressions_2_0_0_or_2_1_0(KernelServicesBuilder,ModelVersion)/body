{
  KernelServices mainServices=builder.build();
  assertTrue(mainServices.isSuccessfulBoot());
  KernelServices legacyServices=mainServices.getLegacyServices(version);
  assertNotNull(legacyServices);
  assertTrue(legacyServices.isSuccessfulBoot());
  PathAddress subsystemAddress=PathAddress.pathAddress(pathElement(SUBSYSTEM,MessagingExtension.SUBSYSTEM_NAME));
  List<ModelNode> modelNodes=builder.parseXmlResource("subsystem_3_0_expressions.xml");
  modelNodes.remove(0);
  checkFailedTransformedBootOperations(mainServices,version,modelNodes,new FailedOperationTransformationConfig().addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH),createChainedConfig(new AttributeDefinition[]{},new AttributeDefinition[]{OVERRIDE_IN_VM_SECURITY})).addFailedAttribute(subsystemAddress.append(HORNETQ_SERVER_PATH).append(AddressSettingDefinition.PATH),createChainedConfig(new AttributeDefinition[]{},new AttributeDefinition[]{AddressSettingDefinition.MAX_REDELIVERY_DELAY,AddressSettingDefinition.REDELIVERY_MULTIPLIER})));
}

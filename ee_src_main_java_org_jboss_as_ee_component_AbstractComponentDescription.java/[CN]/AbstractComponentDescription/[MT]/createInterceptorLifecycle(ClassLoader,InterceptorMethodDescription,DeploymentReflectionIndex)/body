{
  final Class<?> declaringClass=classLoader.loadClass(lifecycleConfiguration.getDeclaringClass());
  final Class<?> instanceClass=classLoader.loadClass(lifecycleConfiguration.getInstanceClass());
  final Method lifecycleMethod=deploymentReflectionIndex.getClassIndex(declaringClass).getMethod(void.class,lifecycleConfiguration.getIdentifier().getName(),InvocationContext.class);
  final MethodInterceptorFactory delegate=new MethodInterceptorFactory(new SimpleInterceptorInstanceFactory(instanceClass),lifecycleMethod);
  return new MethodAwareInterceptorFactory(delegate,lifecycleMethod);
}

{
  if (interceptorFactories.containsKey(interceptor.getInterceptorClassName())) {
    return interceptorFactories.get(interceptor.getInterceptorClassName());
  }
  try {
    final Class<?> interceptorClass=module.getClassLoader().loadClass(interceptor.getInterceptorClassName());
    final List<InterceptorFactory> postConstruct=createLifecycleInterceptors(interceptor.getInterceptorPostConstructs(),module,index);
    final List<InterceptorFactory> preDestroy=createLifecycleInterceptors(interceptor.getInterceptorPreDestroys(),module,index);
    postConstructInterceptors.addAll(postConstruct);
    preDestroyInterceptors.addAll(preDestroy);
    final InjectingInterceptorInstanceFactory instanceFactory=new InjectingInterceptorInstanceFactory(new SimpleInterceptorInstanceFactory(interceptorClass),interceptorClass,configuration);
    interceptorFactories.put(interceptor.getInterceptorClassName(),instanceFactory);
    return instanceFactory;
  }
 catch (  ClassNotFoundException e) {
    throw new DeploymentUnitProcessingException("Failed to load interceptor class " + interceptor.getInterceptorClassName());
  }
}

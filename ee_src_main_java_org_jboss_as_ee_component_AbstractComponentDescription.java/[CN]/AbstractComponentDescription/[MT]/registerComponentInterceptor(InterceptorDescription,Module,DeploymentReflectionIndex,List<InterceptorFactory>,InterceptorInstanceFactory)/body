{
  try {
    for (    InterceptorMethodDescription aroundInvoke : interceptor.getAroundInvokeMethods()) {
      final Class<?> methodDeclaringClass=module.getClassLoader().loadClass(aroundInvoke.getDeclaringClass());
      final ClassReflectionIndex<?> methodDeclaringClassIndex=index.getClassIndex(methodDeclaringClass);
      final Method aroundInvokeMethod=methodDeclaringClassIndex.getMethod(Object.class,aroundInvoke.getIdentifier().getName(),InvocationContext.class);
      theInterceptorFactories.add(new MethodInterceptorFactory(instanceFactory,aroundInvokeMethod));
    }
  }
 catch (  ClassNotFoundException e) {
    throw new DeploymentUnitProcessingException("Could not load interceptor class ",e);
  }
}

{
  final ComponentConfigurator componentConfigurator=new ComponentConfigurator(){
    @Override public void configure(    DeploymentPhaseContext context,    ComponentDescription description,    final ComponentConfiguration configuration) throws DeploymentUnitProcessingException {
      final ConcurrentContext concurrentContext=configuration.getConcurrentContext();
      setupConcurrentContext(concurrentContext,configuration.getModuleClassLoader(),configuration.getNamespaceContextSelector(),deploymentUnit,context.getServiceTarget());
      final ConcurrentContextInterceptor interceptor=new ConcurrentContextInterceptor(concurrentContext);
      final InterceptorFactory interceptorFactory=new ImmediateInterceptorFactory(interceptor);
      configuration.addPostConstructInterceptor(interceptorFactory,InterceptorOrder.ComponentPostConstruct.CONCURRENT_CONTEXT);
      configuration.addPreDestroyInterceptor(interceptorFactory,InterceptorOrder.ComponentPreDestroy.CONCURRENT_CONTEXT);
      if (description.isPassivationApplicable()) {
        configuration.addPrePassivateInterceptor(interceptorFactory,InterceptorOrder.ComponentPassivation.CONCURRENT_CONTEXT);
        configuration.addPostActivateInterceptor(interceptorFactory,InterceptorOrder.ComponentPassivation.CONCURRENT_CONTEXT);
      }
      configuration.addComponentInterceptor(interceptorFactory,InterceptorOrder.Component.CONCURRENT_CONTEXT,false);
    }
  }
;
  componentDescription.getConfigurators().add(componentConfigurator);
}

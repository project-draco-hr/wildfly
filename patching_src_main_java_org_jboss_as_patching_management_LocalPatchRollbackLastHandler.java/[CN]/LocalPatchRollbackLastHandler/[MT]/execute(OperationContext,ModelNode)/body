{
  final boolean resetConfiguration=PatchResourceDefinition.RESET_CONFIGURATION.resolveModelAttribute(context,operation).asBoolean();
  context.acquireControllerLock();
  final InstallationManager installationManager=(InstallationManager)context.getServiceRegistry(false).getRequiredService(InstallationManagerService.NAME).getValue();
  if (installationManager.requiresRestart()) {
    throw MESSAGES.serverRequiresRestart();
  }
  final PatchTool runner=PatchTool.Factory.create(installationManager);
  final ContentVerificationPolicy policy=PatchTool.Factory.create(operation);
  try {
    final PatchingResult result=runner.rollbackLast(policy,resetConfiguration);
    installationManager.restartRequired();
    context.restartRequired();
    context.completeStep(new OperationContext.ResultHandler(){
      @Override public void handleResult(      OperationContext.ResultAction resultAction,      OperationContext context,      ModelNode operation){
        if (resultAction == OperationContext.ResultAction.KEEP) {
          result.commit();
        }
 else {
          installationManager.clearRestartRequired();
          context.revertRestartRequired();
          result.rollback();
        }
      }
    }
);
  }
 catch (  PatchingException e) {
    final ModelNode failureDescription=context.getFailureDescription();
    PatchOperationTarget.formatFailedResponse(e,failureDescription);
    installationManager.clearRestartRequired();
    context.stepCompleted();
  }
 finally {
  }
}

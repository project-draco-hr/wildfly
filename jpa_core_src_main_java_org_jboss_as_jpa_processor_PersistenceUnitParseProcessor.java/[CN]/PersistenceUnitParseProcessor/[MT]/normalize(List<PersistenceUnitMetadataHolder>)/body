{
  Map<String,PersistenceUnitMetadata> flattened=new HashMap<String,PersistenceUnitMetadata>();
  for (  PersistenceUnitMetadataHolder puHolder : listPUHolders) {
    for (    PersistenceUnitMetadata pu : puHolder.getPersistenceUnits()) {
      if (!flattened.containsKey(pu.getPersistenceUnitName())) {
        flattened.put(pu.getPersistenceUnitName(),pu);
      }
 else {
        PersistenceUnitMetadata first=flattened.get(pu.getPersistenceUnitName());
        PersistenceUnitMetadata duplicate=pu;
        JPA_LOGGER.duplicatePersistenceUnitDefinition(duplicate.getPersistenceUnitName(),first.getScopedPersistenceUnitName(),duplicate.getScopedPersistenceUnitName());
      }
    }
  }
  PersistenceUnitMetadataHolder holder=new PersistenceUnitMetadataHolder();
  holder.setPersistenceUnits(new ArrayList<PersistenceUnitMetadata>(flattened.values()));
  return holder;
}

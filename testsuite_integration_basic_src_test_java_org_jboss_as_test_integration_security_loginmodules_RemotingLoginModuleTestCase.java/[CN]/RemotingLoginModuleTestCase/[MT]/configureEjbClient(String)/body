{
  KeyManagerFactory keyManagerFactory=KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm());
  keyManagerFactory.init(KeyStoreUtil.getKeyStore(getClientKeystoreFile(clientName),KEYSTORE_PASSWORD.toCharArray()),KEYSTORE_PASSWORD.toCharArray());
  TrustManagerFactory trustManagerFactory=TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());
  trustManagerFactory.init(KeyStoreUtil.getKeyStore(CLIENTS_TRUSTSTORE_FILE,KEYSTORE_PASSWORD.toCharArray()));
  SSLContext sslContext=SSLContext.getInstance("TLS");
  sslContext.init(keyManagerFactory.getKeyManagers(),trustManagerFactory.getTrustManagers(),null);
  SSLContext.setDefault(sslContext);
  final Properties env=new Properties();
  env.put("java.naming.factory.initial","org.jboss.naming.remote.client.InitialContextFactory");
  env.put("java.naming.provider.url","remote://" + mgmtClient.getMgmtAddress() + ":"+ REMOTING_PORT_TEST);
  env.put("jboss.naming.client.ejb.context","true");
  env.put("jboss.naming.client.connect.options.org.xnio.Options.SASL_POLICY_NOPLAINTEXT","false");
  env.put(Context.SECURITY_PRINCIPAL,"admin");
  env.put(Context.SECURITY_CREDENTIALS,"testing");
  env.put("jboss.naming.client.remote.connectionprovider.create.options.org.xnio.Options.SSL_ENABLED","true");
  env.put("jboss.naming.client.connect.options.org.xnio.Options.SSL_STARTTLS","true");
  return env;
}

{
  ModelNode description=createDescription(ModelType.PROPERTY);
  TypeConverter converter=getConverter(description);
  CompositeType type=assertCast(CompositeType.class,converter.getOpenType());
  Set<String> keys=type.keySet();
  Assert.assertEquals(2,keys.size());
  assertCompositeType(type,"name",String.class.getName(),"The property name");
  assertCompositeType(type,"value",String.class.getName(),"The property value");
  CompositeData data=assertCast(CompositeData.class,converter.fromModelNode(new ModelNode().setExpression("one","${this.should.not.exist.!!!!!:uno}")));
  Assert.assertEquals(type,data.getCompositeType());
  Assert.assertEquals("one",data.get("name"));
  Assert.assertEquals("${this.should.not.exist.!!!!!:uno}",data.get("value"));
  data=new CompositeDataSupport(type,new String[]{"name","value"},new String[]{"two","${this.should.not.exist.!!!!!:dos}"});
  ModelNode newNode=converter.toModelNode(data);
  Assert.assertEquals(ModelType.PROPERTY,newNode.getType());
  Assert.assertEquals(new ModelNode().setExpression("two","${this.should.not.exist.!!!!!:dos}"),newNode);
  assertToArray(converter,data);
}

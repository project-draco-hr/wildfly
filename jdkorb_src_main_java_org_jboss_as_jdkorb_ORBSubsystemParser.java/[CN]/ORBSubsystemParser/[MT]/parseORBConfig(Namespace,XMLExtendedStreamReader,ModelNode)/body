{
  EnumSet<Attribute> expectedAttributes=EnumSet.of(Attribute.NAME,Attribute.ORB_PRINT_VERSION,Attribute.ORB_GIOP_MINOR_VERSION,Attribute.ORB_USE_BOM,Attribute.ORB_USE_IMR,Attribute.ORB_CACHE_POA_NAMES,Attribute.ORB_CACHE_TYPECODES);
  expectedAttributes.add(Attribute.ORB_SOCKET_BINDING);
  expectedAttributes.add(Attribute.ORB_SSL_SOCKET_BINDING);
  this.parseAttributes(reader,node,expectedAttributes,null);
  EnumSet<Element> encountered=EnumSet.noneOf(Element.class);
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
    if (namespace != Namespace.forUri(reader.getNamespaceURI()))     throw unexpectedElement(reader);
    final Element element=Element.forName(reader.getLocalName());
    if (!encountered.add(element)) {
      throw duplicateNamedElement(reader,element.getLocalName());
    }
switch (element) {
case ORB_CONNECTION:
{
        this.parseORBConnectionConfig(reader,node);
        break;
      }
case ORB_INITIALIZERS:
{
      this.parseORBInitializersConfig(reader,node);
      break;
    }
default :
{
    throw unexpectedElement(reader);
  }
}
}
}

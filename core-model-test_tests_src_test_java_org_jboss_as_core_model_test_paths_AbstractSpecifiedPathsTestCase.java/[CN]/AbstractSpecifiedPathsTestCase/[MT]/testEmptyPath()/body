{
  KernelServices kernelServices=createKernelServicesBuilder().setModelInitializer(createEmptyModelInitalizer(),null).build();
  Assert.assertTrue(kernelServices.isSuccessfulBoot());
  ModelNode op=new ModelNode();
  op.get(OP).set(ADD);
  addOperationAddress(op,"ok");
  op.get(PATH).set("relative");
  ModelTestUtils.checkOutcome(kernelServices.executeOperation(op));
  op=new ModelNode();
  op.get(OP).set(ADD);
  addOperationAddress(op,"bad");
  kernelServices.executeForFailure(op);
  op=new ModelNode();
  op.get(OP).set(ADD);
  op.get(RELATIVE_TO).set("ok");
  addOperationAddress(op,"bad2");
  kernelServices.executeForFailure(op);
  ModelNode model=kernelServices.readWholeModel();
  model=getPathsParentModel(model);
  Assert.assertTrue(model.hasDefined(PATH));
  model=model.get(PATH);
  Assert.assertEquals(1,model.keys().size());
  model=model.get("ok");
  for (  String key : model.keys()) {
    if (!model.hasDefined(key)) {
      model.remove(key);
    }
  }
  Assert.assertEquals("relative",model.get(PATH).asString());
}

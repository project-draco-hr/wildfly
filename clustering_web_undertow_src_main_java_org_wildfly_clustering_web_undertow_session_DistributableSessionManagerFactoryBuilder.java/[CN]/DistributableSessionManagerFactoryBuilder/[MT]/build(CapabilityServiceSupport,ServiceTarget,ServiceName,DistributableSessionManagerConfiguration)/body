{
  SessionManagerFactoryConfiguration configuration=new SessionManagerFactoryConfiguration(){
    @Override public int getMaxActiveSessions(){
      return config.getMaxActiveSessions();
    }
    @Override public SessionAttributePersistenceStrategy getAttributePersistenceStrategy(){
      return strategies.get(config.getGranularity());
    }
    @Override public String getDeploymentName(){
      return config.getDeploymentName();
    }
    @Override public Module getModule(){
      return config.getModule();
    }
    @Override public String getCacheName(){
      return config.getCacheName();
    }
  }
;
  Builder<org.wildfly.clustering.web.session.SessionManagerFactory<Batch>> builder=this.provider.getBuilder(support,configuration);
  builder.build(target).install();
  return target.addService(name,new ValueService<>(this)).addDependency(builder.getServiceName(),org.wildfly.clustering.web.session.SessionManagerFactory.class,this.factory).setInitialMode(ServiceController.Mode.ON_DEMAND);
}

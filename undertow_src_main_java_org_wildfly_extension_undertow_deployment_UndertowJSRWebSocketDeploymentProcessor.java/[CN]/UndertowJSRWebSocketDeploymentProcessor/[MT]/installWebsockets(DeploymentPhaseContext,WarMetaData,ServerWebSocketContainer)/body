{
  DeploymentUnit deploymentUnit=phaseContext.getDeploymentUnit();
  final EEModuleDescription moduleDescription=deploymentUnit.getAttachment(org.jboss.as.ee.component.Attachments.EE_MODULE_DESCRIPTION);
  FiltersMetaData filters=metaData.getMergedJBossWebMetaData().getFilters();
  if (filters == null) {
    metaData.getMergedJBossWebMetaData().setFilters(filters=new FiltersMetaData());
  }
  FilterMetaData filterMetaData=new FilterMetaData();
  filterMetaData.setAsyncSupported(true);
  filterMetaData.setFilterClass(JsrWebSocketFilter.class.getName());
  filterMetaData.setName(FILTER_NAME);
  filters.add(filterMetaData);
  List<FilterMappingMetaData> mappings=metaData.getMergedJBossWebMetaData().getFilterMappings();
  if (mappings == null) {
    metaData.getMergedJBossWebMetaData().setFilterMappings(mappings=new ArrayList<>());
  }
  FilterMappingMetaData mapping=new FilterMappingMetaData();
  mapping.setFilterName(FILTER_NAME);
  mapping.setDispatchers(Collections.singletonList(org.jboss.metadata.web.spec.DispatcherType.REQUEST));
  mapping.setUrlPatterns(Collections.singletonList("/*"));
  mappings.add(mapping);
  deploymentUnit.addToAttachmentList(ServletContextAttribute.ATTACHMENT_KEY,new ServletContextAttribute(ServerContainer.class.getName(),container));
  final ServiceName serviceName=deploymentUnit.getServiceName().append(WebSocketContainerService.SERVICE_NAME);
  WebSocketContainerService service=new WebSocketContainerService(container);
  phaseContext.getServiceTarget().addService(serviceName,service).addDependency(IOServices.WORKER.append("default"),XnioWorker.class,service.getXnioWorker()).addDependency(IOServices.BUFFER_POOL.append("default"),Pool.class,service.getInjectedBuffer()).install();
  final ServiceName moduleContextServiceName=ContextNames.contextServiceNameOfModule(moduleDescription.getApplicationName(),moduleDescription.getModuleName());
  bindJndiServices(deploymentUnit,phaseContext.getServiceTarget(),moduleContextServiceName,serviceName);
  deploymentUnit.addToAttachmentList(Attachments.WEB_DEPENDENCIES,serviceName);
}

{
  ROOT_LOGGER.activatingSubsystem();
  NamingContext.initializeNamingManager();
  final ServiceTarget target=context.getServiceTarget();
  newControllers.add(target.addService(ContextNames.JAVA_CONTEXT_SERVICE_NAME,new NamingStoreService()).setInitialMode(ServiceController.Mode.ACTIVE).addListener(verificationHandler).install());
  final NamingService namingService=new NamingService();
  newControllers.add(target.addService(NamingService.SERVICE_NAME,namingService).addDependency(ContextNames.JAVA_CONTEXT_SERVICE_NAME,NamingStore.class,namingService.getNamingStore()).setInitialMode(ServiceController.Mode.ACTIVE).addListener(verificationHandler).install());
  newControllers.add(target.addService(ContextNames.GLOBAL_CONTEXT_SERVICE_NAME,new NamingStoreService()).setInitialMode(ServiceController.Mode.ACTIVE).addListener(verificationHandler).install());
  newControllers.add(target.addService(ContextNames.JBOSS_CONTEXT_SERVICE_NAME,new NamingStoreService()).setInitialMode(ServiceController.Mode.ACTIVE).addListener(verificationHandler).install());
  newControllers.add(target.addService(ContextNames.EXPORTED_CONTEXT_SERVICE_NAME,new NamingStoreService()).setInitialMode(ServiceController.Mode.ACTIVE).addListener(verificationHandler).install());
  DefaultNamespaceContextSelectorService defaultNamespaceContextSelectorService=new DefaultNamespaceContextSelectorService();
  newControllers.add(target.addService(DefaultNamespaceContextSelectorService.SERVICE_NAME,defaultNamespaceContextSelectorService).addDependency(ContextNames.GLOBAL_CONTEXT_SERVICE_NAME,NamingStore.class,defaultNamespaceContextSelectorService.getGlobalNamingStore()).addDependency(ContextNames.JBOSS_CONTEXT_SERVICE_NAME,NamingStore.class,defaultNamespaceContextSelectorService.getJbossNamingStore()).addDependency(ContextNames.EXPORTED_CONTEXT_SERVICE_NAME,NamingStore.class,defaultNamespaceContextSelectorService.getRemoteExposedNamingStore()).setInitialMode(ServiceController.Mode.ACTIVE).addListener(verificationHandler).install());
  newControllers.add(target.addService(JndiViewExtensionRegistry.SERVICE_NAME,new JndiViewExtensionRegistry()).install());
  final ExternalContexts externalContexts=new ExternalContextsNavigableSet();
  newControllers.add(target.addService(ExternalContextsService.SERVICE_NAME,new ExternalContextsService(externalContexts)).install());
  context.addStep(new AbstractDeploymentChainStep(){
    protected void execute(    DeploymentProcessorTarget processorTarget){
      processorTarget.addDeploymentProcessor(NamingExtension.SUBSYSTEM_NAME,Phase.STRUCTURE,Phase.STRUCTURE_NAMING_EXTERNAL_CONTEXTS,new ExternalContextsProcessor(externalContexts));
      processorTarget.addDeploymentProcessor(NamingExtension.SUBSYSTEM_NAME,Phase.INSTALL,Phase.INSTALL_JNDI_DEPENDENCIES,new JndiNamingDependencyProcessor());
    }
  }
,OperationContext.Stage.RUNTIME);
}

{
  if (InfinispanModel.VERSION_4_0_0.requiresTransformation(version)) {
    Converter converter=new Converter(){
      @Override public void convert(      PathAddress address,      String name,      ModelNode value,      ModelNode model,      TransformationContext context){
        if (!value.isDefined()) {
          PathAddress rootAddress=address.subAddress(0,address.size() - 4);
          PathAddress subsystemAddress=rootAddress.append(PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,"datasources"));
          Resource subsystem=context.readResourceFromRoot(subsystemAddress);
          String poolName=value.asString();
          for (          String type : Arrays.asList("data-source","xa-data-source")) {
            if (subsystem.hasChildren(type)) {
              for (              Resource.ResourceEntry entry : subsystem.getChildren(type)) {
                if (entry.getName().equals(poolName)) {
                  value.set(entry.getModel().get("jndi-name"));
                  return;
                }
              }
            }
          }
        }
      }
    }
;
    builder.getAttributeBuilder().addRename(Attribute.DATA_SOURCE.getDefinition().getName(),DeprecatedAttribute.DATASOURCE.getDefinition().getName()).setValueConverter(new SimpleAttributeConverter(converter),Attribute.DATA_SOURCE.getDefinition());
  }
  if (InfinispanModel.VERSION_2_0_0.requiresTransformation(version)) {
    builder.getAttributeBuilder().setDiscard(DiscardAttributeChecker.UNDEFINED,Attribute.DIALECT.getDefinition()).addRejectCheck(RejectAttributeChecker.DEFINED,Attribute.DIALECT.getDefinition()).end();
  }
  StoreResourceDefinition.buildTransformation(version,builder);
}

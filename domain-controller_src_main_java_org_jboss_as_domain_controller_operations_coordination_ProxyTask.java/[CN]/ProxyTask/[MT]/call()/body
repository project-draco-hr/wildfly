{
  System.out.println("Sending " + operation + " to "+ host);
  OperationMessageHandler messageHandler=new DelegatingMessageHandler(context);
  final AtomicReference<NewModelController.OperationTransaction> txRef=new AtomicReference<NewModelController.OperationTransaction>();
  final AtomicReference<ModelNode> preparedResultRef=new AtomicReference<ModelNode>();
  final AtomicReference<ModelNode> finalResultRef=new AtomicReference<ModelNode>();
  final NewProxyController.ProxyOperationControl proxyControl=new NewProxyController.ProxyOperationControl(){
    @Override public void operationPrepared(    NewModelController.OperationTransaction transaction,    ModelNode result){
      txRef.set(transaction);
      preparedResultRef.set(result);
    }
    @Override public void operationFailed(    ModelNode response){
      finalResultRef.set(response);
    }
    @Override public void operationCompleted(    ModelNode response){
      finalResultRef.set(response);
    }
  }
;
  proxyController.execute(operation,messageHandler,proxyControl,new DelegatingOperationAttachments(context));
  ModelNode result=finalResultRef.get();
  if (result != null) {
  }
 else {
    result=preparedResultRef.get();
    remoteTransaction=txRef.get();
  }
  return result;
}

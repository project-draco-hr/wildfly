{
  PathAddress address=context.getCurrentAddress();
  this.protocols.clear();
  if (model.hasDefined(ProtocolResourceDefinition.WILDCARD_PATH.getKey())) {
    for (    Property protocol : model.get(ProtocolResourceDefinition.WILDCARD_PATH.getKey()).asPropertyList()) {
      this.protocols.add(new InjectedValueDependency<>(new ProtocolServiceNameProvider(address,protocol.getName()),ProtocolConfiguration.class));
    }
  }
  this.parentChannel=new InjectedValueDependency<>(JGroupsRequirement.CHANNEL.getServiceName(context,this.channelName),Channel.class);
  this.parentFactory=new InjectedValueDependency<>(JGroupsRequirement.CHANNEL_SOURCE.getServiceName(context,this.channelName),ChannelFactory.class);
  return this;
}

{
  final ModelControllerClient client=TestSuiteEnvironment.getModelControllerClient();
  ModelNode result;
  ModelNode op=Util.getWriteAttributeOperation(auditLogConfigAddress,AuditLogLoggerResourceDefinition.ENABLED.getName(),new ModelNode(false));
  result=client.execute(op);
  Assert.assertEquals(result.get("failure-description").asString(),SUCCESS,result.get(OUTCOME).asString());
  op=Util.getResourceRemoveOperation(PathAddress.pathAddress(jmxLogConfigAddress,PathElement.pathElement(HANDLER,HANDLER_NAME)));
  result=client.execute(op);
  Assert.assertEquals(result.get("failure-description").asString(),SUCCESS,result.get(OUTCOME).asString());
  op=Util.getResourceRemoveOperation(jmxLogConfigAddress);
  result=client.execute(op);
  Assert.assertEquals(result.get("failure-description").asString(),SUCCESS,result.get(OUTCOME).asString());
  op=Util.getResourceRemoveOperation(jmxFormatterConfigAddress);
  result=client.execute(op);
  Assert.assertEquals(result.get("failure-description").asString(),SUCCESS,result.get(OUTCOME).asString());
  if (auditLogFile.exists()) {
    auditLogFile.delete();
  }
  if (jmxLogFile.exists()) {
    jmxLogFile.delete();
  }
  try {
    container.stop(CONTAINER);
  }
  finally {
    IoUtils.safeClose(client);
  }
}

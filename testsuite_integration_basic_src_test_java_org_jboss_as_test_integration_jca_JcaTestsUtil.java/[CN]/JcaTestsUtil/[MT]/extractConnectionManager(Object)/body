{
  Class<?> clz=connectionFactory.getClass();
  while (!Object.class.equals(clz)) {
    try {
      Field[] fields=clz.getDeclaredFields();
      if (fields != null && fields.length > 0) {
        for (        Field field : fields) {
          Class<?> fieldType=field.getType();
          if (fieldType.equals(javax.resource.spi.ConnectionManager.class) || fieldType.equals(ConnectionManager.class)) {
            field.setAccessible(true);
            return (ConnectionManager)field.get(connectionFactory);
          }
        }
      }
    }
 catch (    Throwable t) {
      fail(t.getMessage());
    }
    try {
      Method[] methods=clz.getDeclaredMethods();
      for (      Method method : methods) {
        Class<?> type=method.getReturnType();
        if (type.equals(javax.resource.spi.ConnectionManager.class) || type.equals(ConnectionManager.class)) {
          method.setAccessible(true);
          return (ConnectionManager)method.invoke(connectionFactory,new Object[]{});
        }
      }
    }
 catch (    Throwable t) {
      fail(t.getMessage());
    }
    clz=clz.getSuperclass();
  }
  return null;
}

{
  if (file == null) {
    throw new IllegalArgumentException("file must be specified");
  }
  if (!file.exists()) {
    return false;
  }
  final VirtualFile manifest=file.getChild(NAME_MANIFEST);
  if (!manifest.exists()) {
    return false;
  }
  final LineNumberReader reader;
  try {
    reader=new LineNumberReader(new InputStreamReader(manifest.openStream()));
    String line;
    while ((line=reader.readLine()) != null) {
      final String header=HEADER_BUNDLE_SYMBOLIC_NAME;
      if (line.contains(header)) {
        for (        final String exclusionValue : this.exclusionValues) {
          if (line.contains(exclusionValue)) {
            if (log.isTraceEnabled()) {
              log.tracef("Configured exclusion value \"" + exclusionValue + "\" encountered in manifest header \""+ header+ "\"; skipping "+ file);
            }
            return true;
          }
        }
      }
    }
  }
 catch (  final IOException ioe) {
    throw new RuntimeException("Could not read contents of " + file,ioe);
  }
  return false;
}

{
  ModelNode address=new ModelNode();
  address.add(ModelDescriptionConstants.SUBSYSTEM,SUBSYSTEM_NAME);
  address.protect();
  ModelNode subsystem=Util.getEmptyOperation(ModelDescriptionConstants.ADD,address);
  for (int i=0; i < reader.getAttributeCount(); i++) {
    ParseUtils.requireNoNamespaceAttribute(reader,i);
    String value=reader.getAttributeValue(i);
    Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case DEFAULT_CONTAINER:
{
        subsystem.get(ModelKeys.DEFAULT_CONTAINER).set(value);
        break;
      }
default :
{
      throw ParseUtils.unexpectedAttribute(reader,i);
    }
}
}
operations.add(subsystem);
while (reader.hasNext() && (reader.nextTag() != XMLStreamConstants.END_ELEMENT)) {
switch (Namespace.forUri(reader.getNamespaceURI())) {
case INFINISPAN_1_0:
{
    Element element=Element.forName(reader.getLocalName());
switch (element) {
case CACHE_CONTAINER:
{
        operations.add(this.parseContainer(reader,address));
        break;
      }
default :
{
      throw ParseUtils.unexpectedElement(reader);
    }
}
break;
}
default :
{
throw ParseUtils.unexpectedElement(reader);
}
}
}
}

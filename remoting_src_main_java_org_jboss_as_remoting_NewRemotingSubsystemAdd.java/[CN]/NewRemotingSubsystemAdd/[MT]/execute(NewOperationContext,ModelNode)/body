{
  final String threadPoolName=operation.require(THREAD_POOL).asString();
  context.writeModel(pathAddress(pathElement("hi")),null);
  context.readModel(EMPTY_ADDRESS).get(THREAD_POOL).set(threadPoolName);
  context.readModel(EMPTY_ADDRESS).get(CONNECTOR).setEmptyObject();
  if (context.getType() == NewOperationContext.Type.SERVER) {
    context.addStep(new NewStepHandler(){
      public void execute(      final NewOperationContext context,      final ModelNode operation){
        final EndpointService endpointService=new EndpointService();
        endpointService.setOptionMap(OptionMap.EMPTY);
        final Injector<Executor> executorInjector=endpointService.getExecutorInjector();
        ServiceVerificationHandler verificationHandler=new ServiceVerificationHandler();
        final ServiceController<Endpoint> controller=context.getServiceTarget().addService(RemotingServices.ENDPOINT,endpointService).addDependency(ThreadsServices.executorName(threadPoolName),new CastingInjector<Executor>(executorInjector,Executor.class)).addListener(verificationHandler).install();
        context.addStep(verificationHandler,NewOperationContext.Stage.VERIFY);
        if (context.completeStep() == NewOperationContext.ResultAction.ROLLBACK) {
          context.removeService(controller);
        }
      }
    }
,NewOperationContext.Stage.RUNTIME);
  }
  context.completeStep();
}

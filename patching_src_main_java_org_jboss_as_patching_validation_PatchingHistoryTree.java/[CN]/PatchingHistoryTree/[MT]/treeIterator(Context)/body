{
  return new TreeIterator(){
    private final Context ctx=context;
    private PatchingHistoryRoot.State rootState=root.artifact.getState(null,ctx);
    private StateNode<?,?> currentState;
    @Override public boolean hasNext(){
      if (currentState == null) {
        if (rootState == null) {
          return false;
        }
        currentState=new StateNode<PatchingHistoryRoot.State,PatchingHistoryRoot.State>(root,rootState,null,ctx);
        rootState=null;
        if (currentState.node.handler == null) {
          currentState=currentState.next(ctx);
          if (currentState == null) {
            return false;
          }
        }
      }
      return true;
    }
    @Override public void handleNext(){
      if (currentState == null) {
        if (rootState == null) {
          throw new NoSuchElementException();
        }
        currentState=new StateNode<PatchingHistoryRoot.State,PatchingHistoryRoot.State>(root,rootState,null,ctx);
        rootState=null;
        if (currentState.node.handler == null) {
          currentState=currentState.next(ctx);
          if (currentState == null) {
            throw new NoSuchElementException();
          }
        }
      }
      currentState.handle(ctx);
      currentState=currentState.next(ctx);
    }
  }
;
}

{
  ArtifactTreeNodeBuilder<S,C> childBuilder=(ArtifactTreeNodeBuilder<S,C>)children.get(artifact);
  if (childBuilder != null) {
    return childBuilder;
  }
  childBuilder=new ArtifactTreeNodeBuilder<S,C>(artifact);
switch (children.size()) {
case 0:
    children=Collections.<Artifact<S,? extends Artifact.State>,ArtifactTreeNodeBuilder<S,? extends Artifact.State>>singletonMap(artifact,childBuilder);
  break;
case 1:
final Map<Artifact<S,? extends Artifact.State>,ArtifactTreeNodeBuilder<S,? extends Artifact.State>> tmp=children;
children=new HashMap<Artifact<S,? extends Artifact.State>,ArtifactTreeNodeBuilder<S,? extends Artifact.State>>();
children.putAll(tmp);
default :
children.put(artifact,childBuilder);
}
return childBuilder;
}

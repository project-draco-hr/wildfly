{
  final DeploymentUnit deploymentUnit=phaseContext.getDeploymentUnit();
  final CompositeIndex index=deploymentUnit.getAttachment(Attachments.COMPOSITE_ANNOTATION_INDEX);
  final EEModuleDescription moduleDescription=deploymentUnit.getAttachment(org.jboss.as.ee.component.Attachments.EE_MODULE_DESCRIPTION);
  final EEApplicationClasses applicationClassesDescription=deploymentUnit.getAttachment(org.jboss.as.ee.component.Attachments.EE_APPLICATION_CLASSES_DESCRIPTION);
  final Module module=deploymentUnit.getAttachment(Attachments.MODULE);
  if (index == null) {
    return;
  }
  if (module == null) {
    return;
  }
  if (!DeploymentTypeMarker.isType(DeploymentType.WAR,deploymentUnit)) {
    return;
  }
  final Set<String> managedBeanClasses=new HashSet<String>();
  handleAnnotations(index,managedBeanClasses);
  processXmlManagedBeans(deploymentUnit,managedBeanClasses);
  for (  String managedBean : managedBeanClasses) {
    try {
      final Class<?> componentClass=module.getClassLoader().loadClass(managedBean);
      componentClass.getConstructor();
    }
 catch (    ClassNotFoundException e) {
      JSFLogger.ROOT_LOGGER.managedBeanLoadFail(managedBean);
      continue;
    }
catch (    NoSuchMethodException e) {
      JSFLogger.ROOT_LOGGER.managedBeanNoDefaultConstructor(managedBean);
      continue;
    }
    installManagedBeanComponent(managedBean,moduleDescription,deploymentUnit,applicationClassesDescription);
  }
}

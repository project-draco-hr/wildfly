{
  validator.validate(operation);
  final String attributeName=operation.require(ModelDescriptionConstants.NAME).asString();
  String factoryName=PathAddress.pathAddress(operation.require(ModelDescriptionConstants.OP_ADDR)).getLastElement().getValue();
  ServiceController<?> hqService=context.getServiceRegistry(false).getService(MessagingServices.JBOSS_MESSAGING);
  HornetQServer hqServer=HornetQServer.class.cast(hqService.getValue());
  ConnectionFactoryControl control=ConnectionFactoryControl.class.cast(hqServer.getManagementService().getResource(ResourceNames.JMS_CONNECTION_FACTORY + factoryName));
  if (HA.getName().equals(attributeName)) {
    context.getResult().set(control.isHA());
  }
 else   if (FACTORY_TYPE.equals(attributeName)) {
    context.getResult().set(control.getFactoryType());
  }
 else   if (INITIAL_MESSAGE_PACKET_SIZE.equals(attributeName)) {
    context.getResult().set(control.getInitialMessagePacketSize());
  }
 else   if (READ_ATTRIBUTES.contains(attributeName)) {
    throw new IllegalStateException(String.format("Read support for attribute %s was not properly implemented",attributeName));
  }
  context.completeStep();
}

{
  WebArchive war=ShrinkWrap.create(WebArchive.class,"ws-serviceref-example-servlet-client.war").addClasses(EndpointInterface.class,EndpointService.class,ServletClient.class).addAsWebInfResource(ServiceRefSevletTestCase.class.getPackage(),"web.xml","web.xml").addAsWebInfResource(ServiceRefSevletTestCase.class.getPackage(),"jboss-web.xml","jboss-web.xml");
  String wsdl=FileUtils.readFile(ServiceRefSevletTestCase.class,"TestService.wsdl");
  final Properties properties=new Properties();
  properties.putAll(System.getProperties());
  final String node0=NetworkUtils.formatPossibleIpv6Address((String)properties.get("node0"));
  if (properties.containsKey("node0")) {
    properties.put("node0",node0);
  }
  war.addAsWebInfResource(new StringAsset(PropertiesValueResolver.replaceProperties(wsdl,properties)),"wsdl/TestService.wsdl");
  war.addAsManifestResource(createPermissionsXmlAsset(new FilePermission(System.getProperty("java.home") + File.separator + "lib"+ File.separator+ "wsdl.properties","read"),new PropertyPermission("user.dir","read"),new RuntimePermission("getClassLoader"),new RuntimePermission("org.apache.cxf.permission","resolveUri"),new RuntimePermission("createClassLoader"),new RuntimePermission("accessDeclaredMembers"),new SocketPermission(node0 + ":8080","connect,resolve")),"jboss-permissions.xml");
  return war;
}

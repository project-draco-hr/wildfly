{
  final SubsystemRegistration subsystem=context.registerSubsystem(SUBSYSTEM_NAME,MANAGEMENT_API_MAJOR_VERSION,MANAGEMENT_API_MINOR_VERSION,MANAGEMENT_API_MICRO_VERSION);
  final ManagementResourceRegistration registration=subsystem.registerSubsystemModel(ConfigAdminProviders.SUBSYSTEM);
  registration.registerOperationHandler(ADD,ConfigAdminAdd.INSTANCE,ConfigAdminAdd.DESCRIPTION,false);
  registration.registerOperationHandler(GenericSubsystemDescribeHandler.DEFINITION,GenericSubsystemDescribeHandler.INSTANCE);
  registration.registerOperationHandler(REMOVE,ReloadRequiredRemoveStepHandler.INSTANCE,ConfigAdminProviders.SUBSYSTEM_REMOVE,false);
  ManagementResourceRegistration configuration=registration.registerSubModel(PathElement.pathElement(ModelConstants.CONFIGURATION),ConfigAdminProviders.CONFIGURATION_DESCRIPTION);
  configuration.registerOperationHandler(ADD,ConfigurationAdd.INSTANCE,ConfigurationAdd.DESCRIPTION,false);
  configuration.registerOperationHandler(REMOVE,ConfigurationRemove.INSTANCE,ConfigurationRemove.DESCRIPTION,false);
  configuration.registerOperationHandler(UPDATE,ConfigurationUpdate.INSTANCE,ConfigurationUpdate.DESCRIPTION,false);
  configuration.registerReadOnlyAttribute(ModelConstants.ENTRIES,null,AttributeAccess.Storage.CONFIGURATION);
  registerTransformers_1_0_0(subsystem);
  subsystem.registerXMLElementWriter(ConfigAdminWriter.INSTANCE);
}

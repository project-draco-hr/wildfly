{
  if (server.isSslEnabled()) {
    props.setProperty(getPropKey(protocol,"ssl.enable"),"true");
  }
 else   if (server.isTlsEnabled()) {
    props.setProperty(getPropKey(protocol,"starttls.enable"),"true");
  }
  if (server.getCredentials() != null) {
    props.setProperty(getPropKey(protocol,"auth"),"true");
    props.setProperty(getPropKey(protocol,"user"),server.getCredentials().getUsername());
  }
  props.setProperty(getPropKey(protocol,"debug"),String.valueOf(sessionConfig.isDebug()));
  Map<String,String> customProps=server.getProperties();
  if (server.getOutgoingSocketBinding() != null) {
    InetSocketAddress socketAddress=getServerSocketAddress(server);
    props.setProperty(getHostKey(protocol),socketAddress.getAddress().getHostName());
    props.setProperty(getPortKey(protocol),String.valueOf(socketAddress.getPort()));
  }
 else {
    String host=customProps.get("host");
    if (host != null && !"".equals(host.trim())) {
      props.setProperty(getHostKey(protocol),host);
    }
    String port=customProps.get("port");
    if (port != null && !"".equals(port.trim())) {
      props.setProperty(getPortKey(protocol),port);
    }
  }
  if (customProps != null && !customProps.isEmpty()) {
    for (    Map.Entry<String,String> prop : customProps.entrySet()) {
      if (!props.contains(prop.getKey())) {
        props.put(getPropKey(protocol,prop.getKey()),prop.getValue());
      }
    }
  }
}

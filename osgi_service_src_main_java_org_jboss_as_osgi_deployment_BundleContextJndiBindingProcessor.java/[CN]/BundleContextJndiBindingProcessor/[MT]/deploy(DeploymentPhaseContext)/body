{
  final DeploymentUnit depUnit=phaseContext.getDeploymentUnit();
  final EEModuleDescription moduleDesc=depUnit.getAttachment(EE_MODULE_DESCRIPTION);
  if (moduleDesc == null) {
    return;
  }
  final CompositeIndex compositeIndex=depUnit.getAttachment(COMPOSITE_ANNOTATION_INDEX);
  if (compositeIndex == null) {
    ROOT_LOGGER.cannotFindAnnotationIndex(depUnit);
    return;
  }
  boolean hasBundleContextResource=false;
  final DotName resourceDotName=DotName.createSimple(Resource.class.getName());
  final DotName targetDotName=DotName.createSimple(BundleContext.class.getName());
  final List<AnnotationInstance> anList=compositeIndex.getAnnotations(resourceDotName);
  for (  AnnotationInstance an : anList) {
    AnnotationTarget anTarget=an.target();
    if (anTarget instanceof FieldInfo) {
      FieldInfo fieldInfo=(FieldInfo)anTarget;
      Type targetType=fieldInfo.type();
      if (targetType.name().equals(targetDotName)) {
        hasBundleContextResource=true;
        break;
      }
    }
  }
  if (hasBundleContextResource == false) {
    return;
  }
  final ServiceTarget serviceTarget=phaseContext.getServiceTarget();
  if (DeploymentTypeMarker.isType(DeploymentType.WAR,depUnit)) {
    ServiceName serviceName=contextServiceNameOfModule(moduleDesc.getApplicationName(),moduleDesc.getModuleName());
    bindServices(depUnit,serviceTarget,moduleDesc,moduleDesc.getModuleName(),serviceName);
  }
  for (  ComponentDescription comp : moduleDesc.getComponentDescriptions()) {
    if (comp.getNamingMode() == ComponentNamingMode.CREATE) {
      ServiceName serviceName=contextServiceNameOfComponent(moduleDesc.getApplicationName(),moduleDesc.getModuleName(),comp.getComponentName());
      bindServices(depUnit,serviceTarget,moduleDesc,comp.getComponentName(),serviceName);
    }
  }
}

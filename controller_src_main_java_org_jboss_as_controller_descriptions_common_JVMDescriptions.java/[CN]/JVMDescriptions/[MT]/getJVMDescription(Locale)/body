{
  final ResourceBundle bundle=getResourceBundle(locale);
  final ModelNode node=new ModelNode();
  node.get(TYPE).set(ModelType.OBJECT);
  node.get(DESCRIPTION).set(bundle.getString("jvm"));
  node.get(ATTRIBUTES,JVM_AGENT_LIB,TYPE).set(ModelType.STRING);
  node.get(ATTRIBUTES,JVM_AGENT_LIB,DESCRIPTION).set(bundle.getString("jvm.agent.lib"));
  node.get(ATTRIBUTES,JVM_AGENT_PATH,TYPE).set(ModelType.STRING);
  node.get(ATTRIBUTES,JVM_AGENT_PATH,DESCRIPTION).set(bundle.getString("jvm.agent.path"));
  node.get(ATTRIBUTES,JVM_DEBUG_ENABLED,TYPE).set(ModelType.BOOLEAN);
  node.get(ATTRIBUTES,JVM_DEBUG_ENABLED,DESCRIPTION).set(bundle.getString("jvm.debug.enabled"));
  node.get(ATTRIBUTES,JVM_DEBUG_OPTIONS,TYPE).set(ModelType.STRING);
  node.get(ATTRIBUTES,JVM_DEBUG_OPTIONS,DESCRIPTION).set(bundle.getString("jvm.debug.options"));
  node.get(ATTRIBUTES,JVM_ENV_CLASSPATH_IGNORED,TYPE).set(ModelType.BOOLEAN);
  node.get(ATTRIBUTES,JVM_ENV_CLASSPATH_IGNORED,DESCRIPTION).set(bundle.getString("jvm.env.classpath.ignored"));
  node.get(ATTRIBUTES,JVM_ENV_VARIABLES,TYPE).set(ModelType.LIST);
  node.get(ATTRIBUTES,JVM_ENV_VARIABLES,VALUE_TYPE).set(ModelType.PROPERTY);
  node.get(ATTRIBUTES,JVM_ENV_VARIABLES,DESCRIPTION).set(bundle.getString("jvm.env.variables"));
  node.get(ATTRIBUTES,JVM_JAVA_AGENT,TYPE).set(ModelType.STRING);
  node.get(ATTRIBUTES,JVM_JAVA_AGENT,DESCRIPTION).set(bundle.getString("jvm.javaagent"));
  node.get(ATTRIBUTES,JVM_JAVA_HOME,TYPE).set(ModelType.STRING);
  node.get(ATTRIBUTES,JVM_JAVA_HOME,DESCRIPTION).set(bundle.getString("jvm.java.home"));
  node.get(ATTRIBUTES,JVM_OPTIONS,TYPE).set(ModelType.LIST);
  node.get(ATTRIBUTES,JVM_OPTIONS,VALUE_TYPE).set(ModelType.STRING);
  node.get(ATTRIBUTES,JVM_OPTIONS,DESCRIPTION).set(bundle.getString("jvm.options"));
  node.get(ATTRIBUTES,JVM_STACK,TYPE).set(ModelType.STRING);
  node.get(ATTRIBUTES,JVM_STACK,DESCRIPTION).set(bundle.getString("jvm.stack"));
  node.get(ATTRIBUTES,JVM_TYPE,TYPE).set(ModelType.STRING);
  node.get(ATTRIBUTES,JVM_TYPE,DESCRIPTION).set(bundle.getString("jvm.type"));
  node.get(CHILDREN,JVM_HEAP,TYPE).set(ModelType.OBJECT);
  node.get(CHILDREN,JVM_HEAP,DESCRIPTION).set(bundle.getString("jvm.heap"));
  node.get(CHILDREN,JVM_HEAP,ATTRIBUTES,SIZE).set(ModelType.STRING);
  node.get(CHILDREN,JVM_HEAP,ATTRIBUTES,MAX_SIZE).set(ModelType.STRING);
  node.get(CHILDREN,JVM_PERMGEN,TYPE).set(ModelType.OBJECT);
  node.get(CHILDREN,JVM_PERMGEN,DESCRIPTION).set(bundle.getString("jvm.permgen"));
  node.get(CHILDREN,JVM_PERMGEN,ATTRIBUTES,SIZE).set(ModelType.STRING);
  node.get(CHILDREN,JVM_PERMGEN,ATTRIBUTES,MAX_SIZE).set(ModelType.STRING);
  return node;
}

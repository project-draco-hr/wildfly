{
  final ModelNode model=context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS).getModel();
  for (  AttributeDefinition ad : AccessAuthorizationResourceDefinition.ATTRIBUTES) {
    ad.validateAndSet(operation,model);
  }
  context.addStep(new OperationStepHandler(){
    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {
      ModelNode provider=AccessAuthorizationResourceDefinition.PROVIDER.resolveModelAttribute(context,model);
      AccessAuthorizationProviderWriteAttributeHander.updateAuthorizer(provider,configurableAuthorizer);
      boolean useRealmRoles=AccessAuthorizationResourceDefinition.USE_REALM_ROLES.resolveModelAttribute(context,model).asBoolean();
      configurableAuthorizer.getWritableAuthorizerConfiguration().setUseRealmRoles(useRealmRoles);
      context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);
    }
  }
,OperationContext.Stage.RUNTIME);
  context.stepCompleted();
}

{
  ModelNode stringKeyedTable=createStringKeyedTable();
  String subsystemXml=getSubsystemXml();
  KernelServices servicesA=this.createKernelServicesBuilder().setSubsystemXml(subsystemXml).build();
  ModelNode result=servicesA.executeOperation(getMixedKeyedJDBCCacheStoreReadOperation("maximal",ModelKeys.DISTRIBUTED_CACHE,"dist","datasource"));
  Assert.assertEquals(result.toString(),SUCCESS,result.get(OUTCOME).asString());
  Assert.assertEquals("java:jboss/jdbc/store",result.get(RESULT).asString());
  result=servicesA.executeOperation(getMixedKeyedJDBCCacheStoreWriteOperation("maximal",ModelKeys.DISTRIBUTED_CACHE,"dist","datasource","new-datasource"));
  Assert.assertEquals(result.toString(),SUCCESS,result.get(OUTCOME).asString());
  result=servicesA.executeOperation(getMixedKeyedJDBCCacheStoreReadOperation("maximal",ModelKeys.DISTRIBUTED_CACHE,"dist","datasource"));
  Assert.assertEquals(result.toString(),SUCCESS,result.get(OUTCOME).asString());
  Assert.assertEquals("new-datasource",result.get(RESULT).asString());
  result=servicesA.executeOperation(getMixedKeyedJDBCCacheStoreReadOperation("maximal",ModelKeys.DISTRIBUTED_CACHE,"dist","string-keyed-table"));
  Assert.assertEquals(result.toString(),SUCCESS,result.get(OUTCOME).asString());
  Assert.assertEquals(stringKeyedTable.asString(),result.get(RESULT).asString());
}

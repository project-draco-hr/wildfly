{
  FileInputStream fis=null;
  try {
    KeyStore loadedKeystore=KeyStore.getInstance("JKS");
    if (new File(path).exists()) {
      fis=new FileInputStream(path);
      loadedKeystore.load(fis,keystorePassword);
    }
 else {
      loadedKeystore.load(null);
    }
    if (alias == null) {
      this.setKeyStore(loadedKeystore);
    }
 else {
      KeyStore newKeystore=KeyStore.getInstance("JKS");
      newKeystore.load(null);
      KeyStore.ProtectionParameter passParam=new KeyStore.PasswordProtection(keyPassword == null ? keystorePassword : keyPassword);
      KeyStore.Entry entry=loadedKeystore.getEntry(this.alias,passParam);
      newKeystore.setEntry(alias,entry,passParam);
      this.setKeyStore(newKeystore);
    }
    this.lastModificationTime=new File(path).lastModified();
  }
 catch (  KeyStoreException e) {
    throw MESSAGES.unableToStart(e);
  }
catch (  NoSuchAlgorithmException e) {
    throw MESSAGES.unableToStart(e);
  }
catch (  CertificateException e) {
    throw MESSAGES.unableToStart(e);
  }
catch (  IOException e) {
    throw MESSAGES.unableToStart(e);
  }
catch (  UnrecoverableEntryException e) {
    throw MESSAGES.unableToStart(e);
  }
 finally {
    safeClose(fis);
  }
}

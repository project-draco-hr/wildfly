{
  final DeploymentUnit deploymentUnit=phaseContext.getDeploymentUnit();
  if (deploymentUnit.getParent() != null) {
    return;
  }
  final EJBClientDescriptorMetaData ejbClientDescriptorMetaData=deploymentUnit.getAttachment(Attachments.EJB_CLIENT_METADATA);
  if (ejbClientDescriptorMetaData == null) {
    return;
  }
  checkDescriptorConfiguration(ejbClientDescriptorMetaData);
  final Module module=deploymentUnit.getAttachment(org.jboss.as.server.deployment.Attachments.MODULE);
  if (module == null) {
    return;
  }
  final ServiceName ejbClientContextServiceName=DescriptorBasedEJBClientContextService.BASE_SERVICE_NAME.append(deploymentUnit.getName());
  final ServiceTarget serviceTarget=phaseContext.getServiceTarget();
  final EJBClientConfiguration ejbClientConfiguration=this.createClientConfiguration(phaseContext.getServiceRegistry(),module.getClassLoader(),ejbClientDescriptorMetaData);
  final DescriptorBasedEJBClientContextService service=new DescriptorBasedEJBClientContextService(ejbClientConfiguration,module.getClassLoader());
  final ServiceBuilder<EJBClientContext> serviceBuilder=serviceTarget.addService(ejbClientContextServiceName,service);
  final String profile=ejbClientDescriptorMetaData.getProfile();
  if (profile != null) {
    final ServiceName profileServiceDependency=RemotingProfileService.BASE_SERVICE_NAME.append(profile);
    serviceBuilder.addDependency(profileServiceDependency,RemotingProfileService.class,service.getProfileServiceInjector());
  }
 else {
    final ServiceName profileServiceName=ejbClientContextServiceName.append(INTERNAL_REMOTING_PROFILE);
    createInternalRemotingProfileService(profileServiceName,serviceTarget,ejbClientDescriptorMetaData);
    serviceBuilder.addDependency(profileServiceName,RemotingProfileService.class,service.getProfileServiceInjector());
  }
  serviceBuilder.addDependency(TCCLEJBClientContextSelectorService.TCCL_BASED_EJB_CLIENT_CONTEXT_SELECTOR_SERVICE_NAME);
  serviceBuilder.install();
  logger.debugf("Deployment unit %s will use %s as the EJB client context service",deploymentUnit,ejbClientContextServiceName);
  phaseContext.addDeploymentDependency(ejbClientContextServiceName,EjbDeploymentAttachmentKeys.EJB_CLIENT_CONTEXT);
  deploymentUnit.putAttachment(EjbDeploymentAttachmentKeys.EJB_CLIENT_CONTEXT_SERVICE_NAME,ejbClientContextServiceName);
}

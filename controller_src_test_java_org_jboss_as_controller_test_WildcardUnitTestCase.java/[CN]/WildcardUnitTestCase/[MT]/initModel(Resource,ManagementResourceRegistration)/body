{
  root.registerOperationHandler("read-resource",ReadResourceHandler.INSTANCE,NULL,true);
  root.registerOperationHandler("describe",new DescribeHandler(),NULL,true);
  root.registerOperationHandler("setup",new OperationStepHandler(){
    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {
      final ModelNode model=new ModelNode();
      model.get("host","A","server","one","subsystem","web","connector","default","1").setEmptyObject();
      model.get("host","A","server","two","subsystem","web","connector","default","2").setEmptyObject();
      model.get("host","A","server","three","subsystem","web","connector","other","3").setEmptyObject();
      model.get("host","B","server","one","subsystem","web","connector","default","4").setEmptyObject();
      model.get("host","B","server","two","subsystem","web","connector","default","5").setEmptyObject();
      model.get("host","B","server","three","subsystem","web","connector","default","6").setEmptyObject();
      createModel(context,model);
      context.stepCompleted();
    }
  }
,NULL);
  final ManagementResourceRegistration hosts=root.registerSubModel(host,NULL);
  final ManagementResourceRegistration servers=hosts.registerSubModel(server,NULL);
  final ManagementResourceRegistration subsystems=servers.registerSubModel(subsystem,NULL);
  final ManagementResourceRegistration connectors=subsystems.registerSubModel(connector,NULL);
}

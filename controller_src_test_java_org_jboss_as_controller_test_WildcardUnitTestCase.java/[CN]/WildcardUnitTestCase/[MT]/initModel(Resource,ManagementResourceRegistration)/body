{
  GlobalOperationHandlers.registerGlobalOperations(root,processType);
  root.registerOperationHandler(GenericSubsystemDescribeHandler.DEFINITION,GenericSubsystemDescribeHandler.INSTANCE);
  root.registerOperationHandler(new SimpleOperationDefinition("setup",new NonResolvingResourceDescriptionResolver()),new OperationStepHandler(){
    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {
      final ModelNode model=new ModelNode();
      model.get("host","A","server","one","subsystem","web","connector","default","1").setEmptyObject();
      model.get("host","A","server","two","subsystem","web","connector","default","2").setEmptyObject();
      model.get("host","A","server","three","subsystem","web","connector","other","3").setEmptyObject();
      model.get("host","B","server","one","subsystem","web","connector","default","4").setEmptyObject();
      model.get("host","B","server","two","subsystem","web","connector","default","5").setEmptyObject();
      model.get("host","B","server","three","subsystem","web","connector","default","6").setEmptyObject();
      createModel(context,model);
      context.stepCompleted();
    }
  }
);
  final ManagementResourceRegistration hosts=root.registerSubModel(new SimpleResourceDefinition(host,new NonResolvingResourceDescriptionResolver()));
  final ManagementResourceRegistration servers=hosts.registerSubModel(new SimpleResourceDefinition(server,new NonResolvingResourceDescriptionResolver()));
  final ManagementResourceRegistration subsystems=servers.registerSubModel(new SimpleResourceDefinition(subsystem,new NonResolvingResourceDescriptionResolver()));
  final ManagementResourceRegistration connectors=subsystems.registerSubModel(new SimpleResourceDefinition(connector,new NonResolvingResourceDescriptionResolver()));
}

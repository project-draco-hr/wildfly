{
  return new CallbackHandler(){
    public void handle(    Callback[] callbacks) throws IOException, UnsupportedCallbackException {
      List<Callback> toRespondTo=new LinkedList<Callback>();
      String userName=null;
      String realm=null;
      ManagedServer server=null;
      for (      Callback current : callbacks) {
        if (current instanceof AuthorizeCallback) {
          toRespondTo.add(current);
        }
 else         if (current instanceof NameCallback) {
          NameCallback nameCallback=(NameCallback)current;
          userName=nameCallback.getDefaultName();
          if (userName.startsWith("=")) {
            server=servers.get(userName.substring(1));
          }
        }
 else         if (current instanceof PasswordCallback) {
          toRespondTo.add(current);
        }
 else         if (current instanceof VerifyPasswordCallback) {
          toRespondTo.add(current);
        }
 else         if (current instanceof DigestHashCallback) {
          toRespondTo.add(current);
        }
 else         if (current instanceof RealmCallback) {
          realm=((RealmCallback)current).getDefaultText();
        }
 else {
          throw new UnsupportedCallbackException(current);
        }
      }
      if (server == null) {
        return;
      }
      final String password=new String(server.getAuthKey(),UTF_8);
      for (      Callback current : toRespondTo) {
        if (current instanceof AuthorizeCallback) {
          AuthorizeCallback authorizeCallback=(AuthorizeCallback)current;
          authorizeCallback.setAuthorized(authorizeCallback.getAuthenticationID().equals(authorizeCallback.getAuthorizationID()));
        }
 else         if (current instanceof PasswordCallback) {
          ((PasswordCallback)current).setPassword(password.toCharArray());
        }
 else         if (current instanceof VerifyPasswordCallback) {
          VerifyPasswordCallback vpc=(VerifyPasswordCallback)current;
          vpc.setVerified(Arrays.equals(password.getBytes(UTF_8),vpc.getPassword().getBytes(UTF_8)));
        }
 else         if (current instanceof DigestHashCallback) {
          DigestHashCallback dhc=(DigestHashCallback)current;
          try {
            UsernamePasswordHashUtil uph=new UsernamePasswordHashUtil();
            if (userName == null || realm == null) {
              throw HostControllerLogger.ROOT_LOGGER.insufficientInformationToGenerateHash();
            }
            dhc.setHash(uph.generateHashedURP(userName,realm,password.toCharArray()));
          }
 catch (          NoSuchAlgorithmException e) {
            throw HostControllerLogger.ROOT_LOGGER.unableToGenerateHash(e);
          }
        }
      }
    }
  }
;
}

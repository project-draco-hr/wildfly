{
  if (stopped || connectionFinished) {
    throw HostControllerMessages.MESSAGES.hostAlreadyShutdown();
  }
  final String serverName=ManagedServer.getServerName(serverProcessName);
  final ManagedServer server=servers.get(serverName);
  if (server == null) {
    ROOT_LOGGER.noServerAvailable(serverName);
    return;
  }
  final Channel.Key key=channel.addCloseHandler(new CloseHandler<Channel>(){
    public void handleClose(    final Channel closed,    final IOException exception){
      server.callbackUnregistered();
      domainController.unregisterRunningServer(server.getServerName());
    }
  }
);
  server.callbackRegistered(new ManagedServer.TransitionTask(){
    @Override public void execute(    ManagedServer server) throws Exception {
      final PathElement element=PathElement.pathElement(RUNNING_SERVER,server.getServerName());
      final ProxyController serverController=RemoteProxyController.create(Executors.newCachedThreadPool(),PathAddress.pathAddress(PathElement.pathElement(HOST,domainController.getLocalHostInfo().getLocalHostName()),element),ProxyOperationAddressTranslator.SERVER,channel);
      if (callback != null && serverController instanceof ManagementMessageHandler) {
        callback.proxyOperationHandlerCreated((ManagementMessageHandler)serverController);
      }
      domainController.registerRunningServer(serverController);
    }
  }
,channel,key);
}

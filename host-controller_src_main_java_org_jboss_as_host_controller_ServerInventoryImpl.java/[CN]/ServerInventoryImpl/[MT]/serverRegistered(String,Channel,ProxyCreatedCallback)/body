{
  try {
    final ManagedServer server=servers.get(serverProcessName);
    if (server == null) {
      log.errorf("No server called %s available",serverProcessName);
      return;
    }
    channel.addCloseHandler(new CloseHandler<Channel>(){
      public void handleClose(      final Channel closed,      final IOException exception){
        domainController.unregisterRunningServer(server.getServerName());
      }
    }
);
    if (!environment.isRestart()) {
      checkState(server,ServerState.STARTING);
    }
synchronized (shutdownCondition) {
      server.setState(ServerState.STARTED);
      shutdownCondition.notifyAll();
    }
    final PathElement element=PathElement.pathElement(RUNNING_SERVER,server.getServerName());
    final ProxyController serverController=RemoteProxyController.create(Executors.newCachedThreadPool(),PathAddress.pathAddress(PathElement.pathElement(HOST,domainController.getLocalHostInfo().getLocalHostName()),element),ProxyOperationAddressTranslator.SERVER,channel);
    if (callback != null && serverController instanceof ManagementMessageHandler) {
      callback.proxyOperationHandlerCreated((ManagementMessageHandler)serverController);
    }
    domainController.registerRunningServer(serverController);
    server.resetRespawnCount();
  }
 catch (  final Exception e) {
    log.errorf(e,"Could not start server %s",serverProcessName);
  }
}

{
  Hashtable<String,String> values=new Hashtable<String,String>();
  values.put("a","aa");
  values.put("b","bb");
  ModelNode operation=getOperationModelNode("a.b.c",values);
  ModelNode model=new ModelNode();
  ConfigurationAdd.INSTANCE.populateModel(operation,model);
  ModelNode aValue=model.get(ConfigurationResource.ENTRIES.getName(),"a");
  Assert.assertEquals(values.get("a"),aValue.asString());
  ModelNode bValue=model.get(ConfigurationResource.ENTRIES.getName(),"b");
  Assert.assertEquals(values.get("b"),bValue.asString());
  ServiceRegistry mockServiceRegistry=Mockito.mock(ServiceRegistry.class);
  ServiceBuilder mockBuilder=Mockito.mock(ServiceBuilder.class);
  ServiceTarget mockServiceTarget=Mockito.mock(ServiceTarget.class);
  Mockito.when(mockServiceTarget.addService(Mockito.eq(ServiceName.JBOSS.append("configadmin","data_initialization")),Mockito.any(Service.class))).thenReturn(mockBuilder);
  OperationContext mockOperationContext=Mockito.mock(OperationContext.class);
  Mockito.when(mockOperationContext.resolveExpressions(aValue)).thenReturn(aValue);
  Mockito.when(mockOperationContext.resolveExpressions(bValue)).thenReturn(bValue);
  Mockito.when(mockOperationContext.getServiceRegistry(true)).thenReturn(mockServiceRegistry);
  Mockito.when(mockOperationContext.getServiceTarget()).thenReturn(mockServiceTarget);
  ConfigurationAdd.INSTANCE.performRuntime(mockOperationContext,operation,model,null,null);
  Mockito.verify(mockBuilder).addDependency(Mockito.eq(ConfigAdmin.SERVICE_NAME),Mockito.eq(ConfigAdmin.class),Mockito.any(Injector.class));
  Mockito.verify(mockBuilder).install();
  ConfigAdminServiceImpl mockCAS=Mockito.mock(ConfigAdminServiceImpl.class);
  ConfigurationAdd.InitializeConfigAdminService initSvc=getInitializationService();
  Field injectedCASField=initSvc.getClass().getDeclaredField("injectedConfigAdminService");
  injectedCASField.setAccessible(true);
  InjectedValue<ConfigAdmin> injectedCAS=(InjectedValue<ConfigAdmin>)injectedCASField.get(initSvc);
  injectedCAS.setValue(new ImmediateValue<ConfigAdmin>(mockCAS));
  Hashtable<String,String> values2=new Hashtable<String,String>();
  values2.put("x","x");
  ModelNode op2=getOperationModelNode("xx",values2);
  ModelNode mod2=new ModelNode();
  ConfigurationAdd.INSTANCE.populateModel(op2,mod2);
  ModelNode xValue=mod2.get(ConfigurationResource.ENTRIES.getName(),"x");
  Assert.assertEquals(values2.get("x"),xValue.asString());
  Mockito.when(mockOperationContext.resolveExpressions(xValue)).thenReturn(xValue);
  ConfigurationAdd.INSTANCE.performRuntime(mockOperationContext,op2,mod2,null,null);
  initSvc.start(null);
  Mockito.verify(mockCAS).putConfigurationInternal("a.b.c",values);
  Mockito.verify(mockCAS).putConfigurationInternal("xx",values2);
}

def __getFiles(self, configDirAry):
    '\n        This function will collect files from JBOSS_HOME for analysis.  The scope of files to\n        be collected are determined by options to this SOS plug-in.\n        '
    for dir_ in configDirAry:
        path = os.path.join(self.__jbossHome, dir_)
        self.addForbiddenPath(os.path.join(path, 'tmp'))
        self.addForbiddenPath(os.path.join(path, 'work'))
        self.addForbiddenPath(os.path.join(path, 'data'))
        if os.path.exists(path):
            confDir = os.path.join(path, 'configuration')
            self.addForbiddenPath(os.path.join(confDir, 'mgmt-users.properties'))
            self.addForbiddenPath(os.path.join(confDir, 'application-users.properties'))
            for logFile in find('*.log', path):
                self.addCopySpecLimit(logFile, self.getOption('logsize'), sub=(self.__jbossHome, 'JBOSSHOME'))
            for xml in find('*.xml', path):
                self.addCopySpec(xml, sub=(self.__jbossHome, 'JBOSSHOME'))
            for prop in find('*.properties', path):
                self.addCopySpec(prop, sub=(self.__jbossHome, 'JBOSSHOME'))
            deployment_info = self.__get_deployment_info(confDir)
            deployments = self.__get_deployments(path)
            for deployment in deployments:
                self.__get_listing_from_deployment(deployment, deployment_info)
    for xml in find('*.xml', os.path.join(self.__jbossHome, 'modules')):
        self.addCopySpec(xml, sub=(self.__jbossHome, 'JBOSSHOME'))

{
  super("batch-edit-line");
  argCompleter=new CommandLineCompleter(){
    @Override public int complete(    CommandContext ctx,    String buffer,    int cursor,    List<String> candidates){
      final BatchManager batchManager=ctx.getBatchManager();
      if (!batchManager.isBatchActive()) {
        return -1;
      }
      int nextCharIndex=0;
      while (nextCharIndex < buffer.length()) {
        if (!Character.isWhitespace(buffer.charAt(nextCharIndex))) {
          break;
        }
        ++nextCharIndex;
      }
      if (nextCharIndex == buffer.length()) {
        candidates.add("--help");
        return nextCharIndex;
      }
      int nextWsIndex=nextCharIndex + 1;
      while (nextWsIndex < buffer.length()) {
        if (Character.isWhitespace(buffer.charAt(nextWsIndex))) {
          break;
        }
        ++nextWsIndex;
      }
      if (nextWsIndex == buffer.length()) {
        return -1;
      }
      String lineNumberStr=buffer.substring(nextCharIndex,nextWsIndex);
      if ("--help".startsWith(lineNumberStr)) {
        candidates.add("--help");
        return nextCharIndex;
      }
      final int lineNumber;
      try {
        lineNumber=Integer.parseInt(lineNumberStr);
      }
 catch (      NumberFormatException e) {
        return -1;
      }
      final Batch batch=batchManager.getActiveBatch();
      int batchSize=batch.size();
      if (lineNumber < 1 || lineNumber > batchSize) {
        return -1;
      }
      nextCharIndex=nextWsIndex + 1;
      while (nextCharIndex < buffer.length()) {
        if (!Character.isWhitespace(buffer.charAt(nextCharIndex))) {
          break;
        }
        ++nextCharIndex;
      }
      String cmd=buffer.substring(nextCharIndex);
      if ("--help".startsWith(cmd)) {
        candidates.add("--help");
      }
      int cmdResult=ctx.getDefaultCommandCompleter().complete(ctx,cmd,0,candidates);
      final String batchedCmd=batch.getCommands().get(lineNumber - 1).getCommand();
      if (cmd.isEmpty() || batchedCmd.startsWith(cmd)) {
        int lastWsIndex=cmd.lastIndexOf(' ');
        if (lastWsIndex > 0) {
          candidates.add(batchedCmd.substring(lastWsIndex + 1).trim());
        }
 else {
          candidates.add(batchedCmd);
        }
      }
      if (cmdResult < 0) {
        return candidates.isEmpty() ? -1 : nextCharIndex;
      }
      return nextCharIndex + cmdResult;
    }
  }
;
}

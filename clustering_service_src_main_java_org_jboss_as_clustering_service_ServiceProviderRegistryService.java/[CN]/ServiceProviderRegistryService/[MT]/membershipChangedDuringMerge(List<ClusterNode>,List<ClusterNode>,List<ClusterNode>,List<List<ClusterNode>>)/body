{
  Operation<Map<String,Set<ClusterNode>>> operation=new Operation<Map<String,Set<ClusterNode>>>(){
    @Override public Map<String,Set<ClusterNode>> invoke(    Cache<String,Map<ClusterNode,Void>> cache){
      Map<String,Set<ClusterNode>> updates=new HashMap<String,Set<ClusterNode>>();
      if (newMembers.isEmpty()) {
        for (        String service : cache.keySet()) {
          updates.put(service,cache.get(service).keySet());
        }
      }
 else {
        for (        ClusterNode node : newMembers) {
          List<String> services=ServiceProviderRegistryService.this.handler.getServices(node);
          for (          String service : services) {
            Map<ClusterNode,Void> nodes=cache.getAdvancedCache().withFlags(Flag.CACHE_MODE_LOCAL).putIfAbsent(service,null);
            nodes.put(node,null);
            updates.put(service,Collections.unmodifiableSet(nodes.keySet()));
          }
        }
      }
      ServiceProviderRegistryService.this.purgeDeadMembers(deadMembers,updates);
      return updates;
    }
  }
;
  this.notifyListeners(this.invoker.invoke(this.cache,operation),true);
}

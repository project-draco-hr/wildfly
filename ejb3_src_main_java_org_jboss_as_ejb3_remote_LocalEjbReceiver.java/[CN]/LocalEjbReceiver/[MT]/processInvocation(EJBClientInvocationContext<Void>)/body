{
  final EjbDeploymentInformation ejb=findBean(invocation.getAppName(),invocation.getModuleName(),invocation.getDistinctName(),invocation.getBeanName());
  final Class<?> viewClass=invocation.getViewClass();
  final ComponentView view=ejb.getView(viewClass.getName());
  if (view == null) {
    throw new RuntimeException("Could not find view " + viewClass + " for ejb "+ ejb.getEjbName());
  }
  final InterceptorContext context=new InterceptorContext();
  context.setParameters(invocation.getParameters());
  context.setMethod(invocation.getInvokedMethod());
  context.setTarget(invocation.getInvokedProxy());
  context.setContextData(new HashMap<String,Object>());
  final Object result=view.invoke(context);
  return new Future<Object>(){
    @Override public boolean cancel(    final boolean mayInterruptIfRunning){
      return false;
    }
    @Override public boolean isCancelled(){
      return false;
    }
    @Override public boolean isDone(){
      return true;
    }
    @Override public Object get() throws InterruptedException, ExecutionException {
      return result;
    }
    @Override public Object get(    final long timeout,    final TimeUnit unit) throws InterruptedException, ExecutionException, TimeoutException {
      return result;
    }
  }
;
}

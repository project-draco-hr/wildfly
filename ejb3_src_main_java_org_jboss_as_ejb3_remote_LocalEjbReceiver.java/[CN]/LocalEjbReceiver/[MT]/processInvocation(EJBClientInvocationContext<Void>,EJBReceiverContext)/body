{
  final EjbDeploymentInformation ejb=findBean(invocation.getAppName(),invocation.getModuleName(),invocation.getDistinctName(),invocation.getBeanName());
  final Class<?> viewClass=invocation.getViewClass();
  final ComponentView view=ejb.getView(viewClass.getName());
  if (view == null) {
    throw new RuntimeException("Could not find view " + viewClass + " for ejb "+ ejb.getEjbName());
  }
  final Method invokedMethod=invocation.getInvokedMethod();
  final Method method=view.getMethod(invokedMethod.getName(),DescriptorUtils.methodDescriptor(invokedMethod));
  final Object[] parameters;
  if (invocation.getParameters() == null) {
    parameters=EMPTY_OBJECT_ARRAY;
  }
 else {
    parameters=new Object[invocation.getParameters().length];
    for (int i=0; i < parameters.length; ++i) {
      parameters[i]=clone(method.getParameterTypes()[i],invocation.getParameters()[i]);
    }
  }
  final InterceptorContext context=new InterceptorContext();
  context.setParameters(parameters);
  context.setMethod(method);
  context.setTarget(invocation.getInvokedProxy());
  context.setContextData(new HashMap<String,Object>());
  context.putPrivateData(Component.class,ejb.getEjbComponent());
  context.putPrivateData(ComponentView.class,view);
  final Object result=view.invoke(context);
  final Object clonedResult=clone(method.getReturnType(),result);
  return new ImmediateFuture(clonedResult);
}

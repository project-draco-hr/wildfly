{
  if (addedNodes == null || addedNodes.isEmpty()) {
    return;
  }
  final EJBRemoteConnectorService ejbRemoteConnectorService=this.ejbRemoteConnectorServiceValue.getOptionalValue();
  final Endpoint endpoint=this.endpointValue.getOptionalValue();
  if (ejbRemoteConnectorService == null || endpoint == null) {
    return;
  }
  final List<EJBRemoteConnectorService.EjbListenerAddress> listeningAddresses=ejbRemoteConnectorService.getListeningAddresses();
  final ClusterContext clusterContext=ejbClientContext.getOrCreateClusterContext(clusterName);
  for (  Map.Entry<String,List<ClientMapping>> entry : addedNodes.entrySet()) {
    final String addedNodeName=entry.getKey();
    if (LocalEjbReceiver.this.getNodeName().equals(addedNodeName)) {
      clusterContext.addClusterNodes(new LocalClusterNodeManager());
      continue;
    }
    if (this.isLocalOnlyEJBClientContext(ejbClientContext)) {
      logger.debugf("Skipping cluster node additions to EJB client context %s since it can only handle local node",ejbClientContext);
      continue;
    }
    final List<ClientMapping> clientMappings=entry.getValue();
    ClientMapping resolvedClientMapping=null;
    for (    final ClientMapping clientMapping : clientMappings) {
      final InetAddress sourceNetworkAddress=clientMapping.getSourceNetworkAddress();
      final int netMask=clientMapping.getSourceNetworkMaskBits();
      for (      EJBRemoteConnectorService.EjbListenerAddress binding : listeningAddresses) {
        final boolean match=NetworkUtil.belongsToNetwork(binding.getAddress().getAddress(),sourceNetworkAddress,(byte)(netMask & 0xff));
        if (match) {
          resolvedClientMapping=clientMapping;
          logger.debugf("Client mapping %s matches client address %s",clientMapping,binding.getAddress().getAddress());
          break;
        }
      }
      if (resolvedClientMapping != null) {
        break;
      }
    }
    if (resolvedClientMapping == null) {
      EjbLogger.ROOT_LOGGER.cannotAddClusterNodeDueToUnresolvableClientMapping(addedNodeName,clusterName,listeningAddresses);
      continue;
    }
    final ClusterNodeManager remotingClusterNodeManager=new RemotingConnectionClusterNodeManager(clusterContext,endpoint,addedNodeName,resolvedClientMapping.getDestinationAddress(),resolvedClientMapping.getDestinationPort(),ejbRemoteConnectorService.getProtocol());
    clusterContext.addClusterNodes(remotingClusterNodeManager);
  }
}

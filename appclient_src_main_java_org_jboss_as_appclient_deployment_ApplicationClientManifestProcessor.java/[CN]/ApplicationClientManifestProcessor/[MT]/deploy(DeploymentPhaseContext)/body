{
  final DeploymentUnit deploymentUnit=phaseContext.getDeploymentUnit();
  if (!DeploymentTypeMarker.isType(DeploymentType.APPLICATION_CLIENT,deploymentUnit)) {
    return;
  }
  final ResourceRoot root=deploymentUnit.getAttachment(Attachments.DEPLOYMENT_ROOT);
  final Module module=deploymentUnit.getAttachment(Attachments.MODULE);
  final EEModuleDescription moduleDescription=deploymentUnit.getAttachment(org.jboss.as.ee.component.Attachments.EE_MODULE_DESCRIPTION);
  final EEApplicationClasses applicationClasses=deploymentUnit.getAttachment(org.jboss.as.ee.component.Attachments.EE_APPLICATION_CLASSES_DESCRIPTION);
  final Manifest manifest=root.getAttachment(Attachments.MANIFEST);
  if (manifest != null) {
    Attributes main=manifest.getMainAttributes();
    if (main != null) {
      String mainClass=main.getValue("Main-Class");
      if (mainClass != null && !mainClass.isEmpty()) {
        try {
          final Class<?> clazz=module.getClassLoader().loadClass(mainClass);
          deploymentUnit.putAttachment(AppClientAttachments.MAIN_CLASS,clazz);
          final ApplicationClientComponentDescription description=new ApplicationClientComponentDescription(clazz.getName(),moduleDescription,deploymentUnit.getServiceName(),applicationClasses);
          moduleDescription.addComponent(description);
          deploymentUnit.putAttachment(AppClientAttachments.APPLICATION_CLIENT_COMPONENT,description);
          final DeploymentDescriptorEnvironment environment=deploymentUnit.getAttachment(org.jboss.as.ee.component.Attachments.MODULE_DEPLOYMENT_DESCRIPTOR_ENVIRONMENT);
          if (environment != null) {
            DescriptorEnvironmentLifecycleMethodProcessor.handleMethods(environment,moduleDescription,mainClass);
          }
        }
 catch (        ClassNotFoundException e) {
          throw AppClientLogger.ROOT_LOGGER.cannotLoadAppClientMainClass(e);
        }
      }
    }
  }
}

{
  if (component instanceof EJBComponent == false) {
    throw MESSAGES.unexpectedComponent(component,EJBComponent.class);
  }
  final EJBComponent ejbComponent=(EJBComponent)component;
  final ServerSecurityManager securityManager=ejbComponent.getSecurityManager();
  final EJBSecurityMetaData securityMetaData=ejbComponent.getSecurityMetaData();
  final String securityDomain=securityMetaData.getSecurityDomain();
  if (securityDomain == null) {
    throw MESSAGES.invalidSecurityForDomainSet(ejbComponent.getComponentName());
  }
  if (ROOT_LOGGER.isTraceEnabled()) {
    ROOT_LOGGER.trace("Using security domain: " + securityDomain + " for EJB "+ ejbComponent.getComponentName());
  }
  final String runAs=securityMetaData.getRunAs();
  final String runAsPrincipal=securityMetaData.getRunAsPrincipal();
  final SecurityRolesMetaData securityRoles=securityMetaData.getSecurityRoles();
  Set<String> extraRoles=null;
  Map<String,Set<String>> principalVsRolesMap=null;
  if (securityRoles != null && runAsPrincipal != null) {
    principalVsRolesMap=securityRoles.getPrincipalVersusRolesMap();
    extraRoles=securityRoles.getSecurityRoleNamesByPrincipal(runAsPrincipal);
  }
  SecurityContextInterceptorHolder holder=new SecurityContextInterceptorHolder();
  holder.setSecurityManager(securityManager).setSecurityDomain(securityDomain).setRunAs(runAs).setRunAsPrincipal(runAsPrincipal).setExtraRoles(extraRoles).setPrincipalVsRolesMap(principalVsRolesMap);
  return new SecurityContextInterceptor(holder);
}

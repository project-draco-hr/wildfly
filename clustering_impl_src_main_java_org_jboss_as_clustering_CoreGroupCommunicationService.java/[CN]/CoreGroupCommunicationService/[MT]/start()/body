{
  if (state == State.STARTING || state == State.STARTED || state == State.STOPPING) {
    log.debug("Ignoring start call; current state is " + this.state);
    return;
  }
  if (state != State.CREATED && state != State.STOPPED && state != State.FAILED) {
    log.debug("Start requested before create, calling create now");
    create();
  }
  state=State.STARTING;
  try {
    startService();
    state=State.STARTED;
  }
 catch (  Throwable t) {
    state=State.FAILED;
    if (this.channel != null && this.channelSelfConnected) {
      this.log.debug("Caught exception after channel connected; closing channel -- " + t.getLocalizedMessage());
      this.channel.close();
      this.channel=null;
    }
    if (t instanceof Exception)     throw (Exception)t;
 else     if (t instanceof Error)     throw (Error)t;
 else     throw new RuntimeException(t);
  }
}

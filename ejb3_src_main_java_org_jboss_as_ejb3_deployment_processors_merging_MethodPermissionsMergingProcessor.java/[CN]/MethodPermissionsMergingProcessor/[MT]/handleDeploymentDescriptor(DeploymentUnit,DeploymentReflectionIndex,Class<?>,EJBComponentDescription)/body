{
  componentDescription.getConfigurators().add(new EjbJaccConfigurator());
  EjbJarMetaData ejbJarMetadata=deploymentUnit.getAttachment(EjbDeploymentAttachmentKeys.EJB_JAR_METADATA);
  if (ejbJarMetadata != null) {
    final AssemblyDescriptorMetaData assemblyDescriptor=ejbJarMetadata.getAssemblyDescriptor();
    if (assemblyDescriptor != null) {
      final ExcludeListMetaData excludeList=assemblyDescriptor.getExcludeListByEjbName(componentDescription.getEJBName());
      if (excludeList != null && excludeList.getMethods() != null) {
        for (        final MethodMetaData method : excludeList.getMethods()) {
          final String methodName=method.getMethodName();
          final MethodIntf defaultMethodIntf=(componentDescription instanceof MessageDrivenComponentDescription) ? MethodIntf.MESSAGE_ENDPOINT : MethodIntf.BEAN;
          final MethodIntf methodIntf=this.getMethodIntf(method.getMethodIntf(),defaultMethodIntf);
          if (methodName.equals("*")) {
            componentDescription.getDescriptorMethodPermissions().setAttribute(methodIntf,null,EJBMethodSecurityAttribute.denyAll());
          }
 else {
            final MethodParametersMetaData methodParams=method.getMethodParams();
            if (methodParams == null) {
              componentDescription.getDescriptorMethodPermissions().setAttribute(methodIntf,EJBMethodSecurityAttribute.denyAll(),methodName);
            }
 else {
              componentDescription.getDescriptorMethodPermissions().setAttribute(methodIntf,EJBMethodSecurityAttribute.denyAll(),null,methodName,this.getMethodParams(methodParams));
            }
          }
        }
      }
      final MethodPermissionsMetaData methodPermissions=assemblyDescriptor.getMethodPermissionsByEjbName(componentDescription.getEJBName());
      if (methodPermissions != null) {
        for (        final MethodPermissionMetaData methodPermissionMetaData : methodPermissions) {
          final MethodsMetaData methods=methodPermissionMetaData.getMethods();
          for (          final MethodMetaData method : methods) {
            EJBMethodSecurityAttribute ejbMethodSecurityMetaData;
            if (methodPermissionMetaData.isNotChecked()) {
              ejbMethodSecurityMetaData=EJBMethodSecurityAttribute.permitAll();
            }
 else {
              ejbMethodSecurityMetaData=EJBMethodSecurityAttribute.rolesAllowed(methodPermissionMetaData.getRoles());
            }
            final String methodName=method.getMethodName();
            final MethodIntf defaultMethodIntf=(componentDescription instanceof MessageDrivenComponentDescription) ? MethodIntf.MESSAGE_ENDPOINT : MethodIntf.BEAN;
            final MethodIntf methodIntf=this.getMethodIntf(method.getMethodIntf(),defaultMethodIntf);
            if (methodName.equals("*")) {
              final EJBMethodSecurityAttribute existingRoles=componentDescription.getDescriptorMethodPermissions().getAttributeStyle1(methodIntf,null);
              ejbMethodSecurityMetaData=mergeExistingRoles(ejbMethodSecurityMetaData,existingRoles);
              componentDescription.getDescriptorMethodPermissions().setAttribute(methodIntf,null,ejbMethodSecurityMetaData);
            }
 else {
              final MethodParametersMetaData methodParams=method.getMethodParams();
              if (methodParams == null) {
                final EJBMethodSecurityAttribute existingRoles=componentDescription.getDescriptorMethodPermissions().getAttributeStyle2(methodIntf,methodName);
                ejbMethodSecurityMetaData=mergeExistingRoles(ejbMethodSecurityMetaData,existingRoles);
                componentDescription.getDescriptorMethodPermissions().setAttribute(methodIntf,ejbMethodSecurityMetaData,methodName);
              }
 else {
                final EJBMethodSecurityAttribute existingRoles=componentDescription.getDescriptorMethodPermissions().getAttributeStyle3(methodIntf,null,methodName,this.getMethodParams(methodParams));
                ejbMethodSecurityMetaData=mergeExistingRoles(ejbMethodSecurityMetaData,existingRoles);
                componentDescription.getDescriptorMethodPermissions().setAttribute(methodIntf,ejbMethodSecurityMetaData,null,methodName,this.getMethodParams(methodParams));
              }
            }
          }
        }
      }
    }
  }
}

{
switch (transition) {
case STARTING_to_START_FAILED:
{
      failed.add(controller);
      break;
    }
case START_FAILED_to_STARTING:
{
    failed.remove(controller);
    break;
  }
case START_REQUESTED_to_PROBLEM:
{
  problem.add(controller);
  break;
}
case PROBLEM_to_START_REQUESTED:
{
problem.remove(controller);
break;
}
}
final ServiceController.Substate before=transition.getBefore();
final ServiceController.Substate after=transition.getAfter();
final boolean beforeIsRestState=before.isRestState();
final boolean afterIsRestState=after.isRestState();
if (beforeIsRestState && !afterIsRestState) {
outstanding++;
}
 else if (!beforeIsRestState && afterIsRestState) {
if (outstanding-- == 1) {
notifyAll();
}
}
}

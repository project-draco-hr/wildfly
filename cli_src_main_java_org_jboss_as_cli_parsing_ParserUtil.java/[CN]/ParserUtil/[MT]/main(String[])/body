{
  final String line="s";
  System.out.println(line);
  ParserUtil.parse(line,new CommandLineParser.CallbackHandler(){
    @Override public void property(    String name,    String value,    int separator){
      StringBuilder buf=new StringBuilder();
      if (name == null) {
        buf.append('\'').append(value).append('\'');
      }
 else       if (value == null) {
        buf.append('\'').append(name).append('\'');
      }
 else {
        buf.append('\'').append(name).append("'='").append(value).append('\'');
      }
      System.out.println(buf.toString());
    }
    @Override public void operationName(    int index,    String name) throws CommandFormatException {
      System.out.println("command: '" + name + "'");
    }
    @Override public void outputTarget(    int index,    String outputTarget) throws CommandFormatException {
      System.out.println("output: '" + outputTarget + "'");
    }
    @Override public void start(    String operationString){
    }
    @Override public void rootNode(    int index){
      System.out.println("rootNode " + index);
    }
    @Override public void parentNode(    int index){
      System.out.println("parentNode");
    }
    @Override public void nodeType(    int index){
      System.out.println("nodeType");
    }
    @Override public void nodeType(    int index,    String nodeType) throws OperationFormatException {
      System.out.println("nodeType: '" + nodeType + "'");
    }
    @Override public void nodeTypeNameSeparator(    int index){
    }
    @Override public void nodeName(    int index,    String nodeName) throws OperationFormatException {
      System.out.println("nodeName: '" + nodeName + "'");
    }
    @Override public void nodeSeparator(    int index){
    }
    @Override public void addressOperationSeparator(    int index){
    }
    @Override public void propertyListStart(    int index){
    }
    @Override public void propertyName(    int index,    String propertyName) throws OperationFormatException {
      System.out.println("propertyName: " + propertyName);
    }
    @Override public void propertyNameValueSeparator(    int index){
    }
    @Override public void propertySeparator(    int index){
    }
    @Override public void propertyListEnd(    int index){
    }
    @Override public void nodeTypeOrName(    int index,    String typeOrName) throws OperationFormatException {
    }
    @Override public void setFormat(    CommandLineFormat format){
    }
  }
);
}

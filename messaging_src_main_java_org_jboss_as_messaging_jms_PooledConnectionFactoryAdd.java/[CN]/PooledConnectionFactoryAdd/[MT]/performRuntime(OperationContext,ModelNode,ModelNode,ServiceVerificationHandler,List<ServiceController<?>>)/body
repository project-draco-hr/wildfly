{
  ModelNode opAddr=operation.require(OP_ADDR);
  final PathAddress address=PathAddress.pathAddress(opAddr);
  final String name=address.getLastElement().getValue();
  for (  final AttributeDefinition attribute : JMSServices.POOLED_CONNECTION_FACTORY_ATTRS) {
    attribute.resolveModelAttribute(context,model);
  }
  final String jndiName=model.get(CommonAttributes.ENTRIES.getName()).asList().get(0).asString();
  final int minPoolSize=model.hasDefined(MIN_POOL_SIZE.getName()) ? model.get(MIN_POOL_SIZE.getName()).asInt() : MIN_POOL_SIZE.getDefaultValue().asInt();
  final int maxPoolSize=model.hasDefined(MAX_POOL_SIZE.getName()) ? model.get(MAX_POOL_SIZE.getName()).asInt() : MAX_POOL_SIZE.getDefaultValue().asInt();
  final String txSupport;
  if (model.hasDefined(TRANSACTION)) {
    String txType=model.get(TRANSACTION).asString();
    if (LOCAL.equals(txType)) {
      txSupport=LOCAL_TX;
    }
 else     if (NONE.equals(txType)) {
      txSupport=NO_TX;
    }
 else {
      txSupport=XA_TX;
    }
  }
 else {
    txSupport=XA_TX;
  }
  ServiceTarget serviceTarget=context.getServiceTarget();
  List<String> connectors=getConnectors(model);
  String discoveryGroupName=getDiscoveryGroup(model);
  List<PooledConnectionFactoryConfigProperties> adapterParams=getAdapterParams(model,context);
  final ServiceName hqServiceName=MessagingServices.getHornetQServiceName(PathAddress.pathAddress(opAddr));
  ServiceName hornetQResourceAdapterService=JMSServices.getPooledConnectionFactoryBaseServiceName(hqServiceName).append(name);
  PooledConnectionFactoryService resourceAdapterService=new PooledConnectionFactoryService(name,connectors,discoveryGroupName,adapterParams,jndiName,txSupport,minPoolSize,maxPoolSize);
  ServiceBuilder serviceBuilder=serviceTarget.addService(hornetQResourceAdapterService,resourceAdapterService).addDependency(TxnServices.JBOSS_TXN_TRANSACTION_MANAGER,resourceAdapterService.getTransactionManager()).addDependency(hqServiceName,HornetQServer.class,resourceAdapterService.getHornetQService()).addDependency(JMSServices.getJmsManagerBaseServiceName(hqServiceName)).addListener(verificationHandler);
  newControllers.add(serviceBuilder.setInitialMode(Mode.ACTIVE).install());
}

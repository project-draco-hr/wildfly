{
  resourceRegistration.registerReadOnlyAttribute(LOAD,new AbstractNodeOperation(){
    @Override protected void handleNode(    OperationContext context,    ModClusterStatus.Node ctx,    ModelNode operation) throws OperationFailedException {
      context.getResult().set(new ModelNode(ctx.getLoad()));
    }
  }
);
  resourceRegistration.registerReadOnlyAttribute(STATUS,new AbstractNodeOperation(){
    @Override protected void handleNode(    OperationContext context,    ModClusterStatus.Node ctx,    ModelNode operation) throws OperationFailedException {
      context.getResult().set(new ModelNode(ctx.getStatus().name()));
    }
  }
);
  resourceRegistration.registerReadOnlyAttribute(LOAD_BALANCING_GROUP,new AbstractNodeOperation(){
    @Override protected void handleNode(    OperationContext context,    ModClusterStatus.Node ctx,    ModelNode operation) throws OperationFailedException {
      context.getResult().set(new ModelNode(ctx.getDomain()));
    }
  }
);
  resourceRegistration.registerReadOnlyAttribute(CACHE_CONNECTIONS,new AbstractNodeOperation(){
    @Override protected void handleNode(    OperationContext context,    ModClusterStatus.Node ctx,    ModelNode operation) throws OperationFailedException {
      context.getResult().set(new ModelNode(ctx.getCacheConnections()));
    }
  }
);
  resourceRegistration.registerReadOnlyAttribute(MAX_CONNECTIONS,new AbstractNodeOperation(){
    @Override protected void handleNode(    OperationContext context,    ModClusterStatus.Node ctx,    ModelNode operation) throws OperationFailedException {
      context.getResult().set(new ModelNode(ctx.getMaxConnections()));
    }
  }
);
  resourceRegistration.registerReadOnlyAttribute(OPEN_CONNECTIONS,new AbstractNodeOperation(){
    @Override protected void handleNode(    OperationContext context,    ModClusterStatus.Node ctx,    ModelNode operation) throws OperationFailedException {
      context.getResult().set(new ModelNode(ctx.getOpenConnections()));
    }
  }
);
  resourceRegistration.registerReadOnlyAttribute(PING,new AbstractNodeOperation(){
    @Override protected void handleNode(    OperationContext context,    ModClusterStatus.Node ctx,    ModelNode operation) throws OperationFailedException {
      context.getResult().set(new ModelNode(ctx.getPing()));
    }
  }
);
  resourceRegistration.registerReadOnlyAttribute(READ,new AbstractNodeOperation(){
    @Override protected void handleNode(    OperationContext context,    ModClusterStatus.Node ctx,    ModelNode operation) throws OperationFailedException {
      context.getResult().set(new ModelNode(ctx.getRead()));
    }
  }
);
  resourceRegistration.registerReadOnlyAttribute(REQUEST_QUEUE_SIZE,new AbstractNodeOperation(){
    @Override protected void handleNode(    OperationContext context,    ModClusterStatus.Node ctx,    ModelNode operation) throws OperationFailedException {
      context.getResult().set(new ModelNode(ctx.getRequestQueueSize()));
    }
  }
);
  resourceRegistration.registerReadOnlyAttribute(TIMEOUT,new AbstractNodeOperation(){
    @Override protected void handleNode(    OperationContext context,    ModClusterStatus.Node ctx,    ModelNode operation) throws OperationFailedException {
      context.getResult().set(new ModelNode(ctx.getTimeout()));
    }
  }
);
  resourceRegistration.registerReadOnlyAttribute(WRITTEN,new AbstractNodeOperation(){
    @Override protected void handleNode(    OperationContext context,    ModClusterStatus.Node ctx,    ModelNode operation) throws OperationFailedException {
      context.getResult().set(new ModelNode(ctx.getTransferred()));
    }
  }
);
  resourceRegistration.registerReadOnlyAttribute(TTL,new AbstractNodeOperation(){
    @Override protected void handleNode(    OperationContext context,    ModClusterStatus.Node ctx,    ModelNode operation) throws OperationFailedException {
      context.getResult().set(new ModelNode(ctx.getTtl()));
    }
  }
);
  resourceRegistration.registerReadOnlyAttribute(FLUSH_PACKETS,new AbstractNodeOperation(){
    @Override protected void handleNode(    OperationContext context,    ModClusterStatus.Node ctx,    ModelNode operation) throws OperationFailedException {
      context.getResult().set(new ModelNode(ctx.isFlushPackets()));
    }
  }
);
  resourceRegistration.registerReadOnlyAttribute(QUEUE_NEW_REQUESTS,new AbstractNodeOperation(){
    @Override protected void handleNode(    OperationContext context,    ModClusterStatus.Node ctx,    ModelNode operation) throws OperationFailedException {
      context.getResult().set(new ModelNode(ctx.isQueueNewRequests()));
    }
  }
);
  resourceRegistration.registerReadOnlyAttribute(URI,new AbstractNodeOperation(){
    @Override protected void handleNode(    OperationContext context,    ModClusterStatus.Node ctx,    ModelNode operation) throws OperationFailedException {
      context.getResult().set(new ModelNode(ctx.getUri().toString()));
    }
  }
);
}

{
  concurrent.decrementAndGet();
  for (; ; ) {
    final Values oldv=values.get();
    final Values newv=new Values(oldv.invocations + 1,oldv.waitTime + invocationWaitTime,oldv.executionTime + invocationExecutionTime);
    if (values.compareAndSet(oldv,newv))     break;
  }
  final AtomicReference<Values> methodValues=ref(methods,method.getName());
  for (; ; ) {
    final Values oldv=methodValues.get();
    final Values newv=new Values(oldv.invocations + 1,oldv.waitTime + invocationWaitTime,oldv.executionTime + invocationExecutionTime);
    if (methodValues.compareAndSet(oldv,newv))     break;
  }
}

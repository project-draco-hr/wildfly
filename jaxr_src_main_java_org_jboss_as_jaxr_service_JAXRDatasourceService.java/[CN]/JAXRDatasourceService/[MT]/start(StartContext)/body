{
  log.infof("Starting: %s",getClass().getSimpleName());
  try {
    NamingStore namingStore=injectedJavaContext.getValue();
    String lookup=config.getDataSourceBinding();
    if (lookup == null || lookup.startsWith("java:") == false)     throw new IllegalStateException("Datasource lookup expected in java context: %s" + lookup);
    long timeout=2000;
    while (datasource == null && timeout > 0) {
      try {
        datasource=(DataSource)namingStore.lookup(new CompositeName(lookup.substring(5)));
      }
 catch (      Exception ex) {
        Thread.sleep(200);
        timeout-=200;
      }
    }
    if (datasource == null)     throw new IllegalStateException("Cannot obtain data source: " + lookup);
    if (config.isDropOnStart()) {
      log.debug("Drop juddi tables on start");
      locateAndRunScript("juddi_drop_db.ddl",Level.DEBUG);
    }
    if (config.isCreateOnStart()) {
      log.debug("Create juddi tables on start");
      locateAndRunScript("juddi_create_db.ddl",Level.ERROR);
      locateAndRunScript("juddi_data.ddl",Level.ERROR);
    }
  }
 catch (  Exception ex) {
    log.errorf(ex,"Cannot start JUDDI service");
  }
}

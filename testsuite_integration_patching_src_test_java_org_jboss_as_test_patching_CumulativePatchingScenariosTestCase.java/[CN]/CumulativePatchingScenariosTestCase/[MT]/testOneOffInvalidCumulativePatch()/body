{
  String oneOffPatchID1=randomString();
  String oneOffPatchID2=randomString();
  String cpPatchID=randomString();
  File oneOffZip1=createOneOffPatchAddingMiscFile(oneOffPatchID1,AS_VERSION);
  File oneOffZip2=createOneOffPatchAddingAModule(oneOffPatchID2,AS_VERSION);
  File cpZip=createInvalidCumulativePatch(cpPatchID,AS_VERSION,"EAP with cp patch");
  controller.start(CONTAINER);
  Assert.assertTrue("Patch should be accepted",CliUtilsForPatching.applyPatch(oneOffZip1.getAbsolutePath()));
  Assert.assertTrue("server should be in restart-required mode",CliUtilsForPatching.doesServerRequireRestart());
  controller.stop(CONTAINER);
  controller.start(CONTAINER);
  Assert.assertTrue("The patch " + oneOffPatchID1 + " should be listed as installed",CliUtilsForPatching.getInstalledPatches().contains(oneOffPatchID1));
  Assert.assertTrue("Patch should be accepted",CliUtilsForPatching.applyPatch(oneOffZip2.getAbsolutePath()));
  Assert.assertTrue("server should be in restart-required mode",CliUtilsForPatching.doesServerRequireRestart());
  controller.stop(CONTAINER);
  controller.start(CONTAINER);
  Assert.assertTrue("The patch " + oneOffPatchID2 + " should be listed as installed",CliUtilsForPatching.getInstalledPatches().contains(oneOffPatchID2));
  Assert.assertFalse("Patch shouldn't be accepted",CliUtilsForPatching.applyPatch(cpZip.getAbsolutePath()));
  controller.stop(CONTAINER);
  controller.start(CONTAINER);
  Assert.assertTrue("The patch " + oneOffPatchID1 + " should be listed as installed",CliUtilsForPatching.getInstalledPatches().contains(oneOffPatchID1));
  Assert.assertTrue("The patch " + oneOffPatchID2 + " should be listed as installed",CliUtilsForPatching.getInstalledPatches().contains(oneOffPatchID2));
  File miscFile=newFile(new File(AS_DISTRIBUTION),"awesomeDirectory","awesomeFile");
  Assert.assertTrue("File " + miscFile.getAbsolutePath() + " should exist.",miscFile.exists());
  Assert.assertEquals("Unexpected content of file: " + miscFile.getAbsolutePath(),"test content",readFile(miscFile.getAbsolutePath()));
  controller.stop(CONTAINER);
}

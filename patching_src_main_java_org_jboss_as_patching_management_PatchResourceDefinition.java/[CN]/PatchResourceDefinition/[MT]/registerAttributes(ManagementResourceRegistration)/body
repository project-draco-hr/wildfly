{
  super.registerAttributes(registry);
  registry.registerReadOnlyAttribute(VERSION,new PatchAttributeReadHandler(){
    @Override void handle(    ModelNode result,    PatchInfo info){
      result.set(info.getVersion());
    }
  }
);
  registry.registerReadOnlyAttribute(CUMULATIVE,new PatchAttributeReadHandler(){
    @Override void handle(    ModelNode result,    PatchInfo info){
      result.set(info.getCumulativeID());
    }
  }
);
  registry.registerReadOnlyAttribute(PATCHES,new PatchAttributeReadHandler(){
    @Override void handle(    ModelNode result,    PatchInfo info){
      result.setEmptyList();
      for (      final String id : info.getPatchIDs()) {
        result.add(id);
      }
    }
  }
);
  StandardResourceDescriptionResolver resolver=new StandardResourceDescriptionResolver("patching.layer","org.jboss.as.patching.management.LocalDescriptions",PatchResourceDefinition.class.getClassLoader());
  registry.registerSubModel(new SimpleResourceDefinition(PathElement.pathElement("layer"),resolver){
    @Override public void registerAttributes(    final ManagementResourceRegistration resource){
      resource.registerReadOnlyAttribute(CUMULATIVE,new LayerAttributeReadHandler(){
        @Override void handle(        ModelNode result,        PatchableTarget layer) throws OperationFailedException {
          try {
            result.set(layer.loadTargetInfo().getCumulativeID());
          }
 catch (          IOException e) {
            throw new OperationFailedException("Failed to load layer info",e);
          }
        }
      }
);
      resource.registerReadOnlyAttribute(PATCHES,new LayerAttributeReadHandler(){
        @Override void handle(        ModelNode result,        PatchableTarget layer) throws OperationFailedException {
          result.setEmptyList();
          try {
            for (            final String id : layer.loadTargetInfo().getPatchIDs()) {
              result.add(id);
            }
          }
 catch (          IOException e) {
            throw new OperationFailedException("Failed to load layer info",e);
          }
        }
      }
);
    }
  }
);
  resolver=new StandardResourceDescriptionResolver("patching.addon","org.jboss.as.patching.management.LocalDescriptions",PatchResourceDefinition.class.getClassLoader());
  registry.registerSubModel(new SimpleResourceDefinition(PathElement.pathElement("addon"),resolver){
    @Override public void registerAttributes(    final ManagementResourceRegistration resource){
      resource.registerReadOnlyAttribute(CUMULATIVE,new AddOnAttributeReadHandler(){
        @Override void handle(        ModelNode result,        PatchableTarget addon) throws OperationFailedException {
          try {
            result.set(addon.loadTargetInfo().getCumulativeID());
          }
 catch (          IOException e) {
            throw new OperationFailedException("Failed to load add-on info",e);
          }
        }
      }
);
      resource.registerReadOnlyAttribute(PATCHES,new AddOnAttributeReadHandler(){
        @Override void handle(        ModelNode result,        PatchableTarget addon) throws OperationFailedException {
          result.setEmptyList();
          try {
            for (            final String id : addon.loadTargetInfo().getPatchIDs()) {
              result.add(id);
            }
          }
 catch (          IOException e) {
            throw new OperationFailedException("Failed to load add-on info",e);
          }
        }
      }
);
    }
  }
);
}

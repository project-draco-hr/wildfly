{
  this.con=con;
  this.ps=ps;
  this.rs=rs;
  this.limit=limit;
  this.count=count;
  this.selectEntity=selectEntity;
  this.selectField=selectField;
  this.selectFunction=selectFunction;
  this.selectManager=selectManager;
  this.eagerLoadMask=eagerLoadMask;
  this.factory=factory;
  loadOnFindCmr=!onFindCMRList.isEmpty();
  firstIterator=getFirstIterator();
  if (firstIterator.hasNext()) {
    try {
      size=rs.getInt(1);
    }
 catch (    SQLException e) {
      throw MESSAGES.failedToReadResultSet(e);
    }
    if (limit > 0 && size > limit) {
      size=limit;
    }
  }
  if (size < 1) {
    firstIterator=null;
    results=new ArrayList(0);
    closeResources();
  }
 else {
    results=new ArrayList(size);
    try {
      selectManager.getComponent().getTransactionSynchronizationRegistry().registerInterposedSynchronization(new Synchronization(){
        public void beforeCompletion(){
          closeResources();
        }
        public void afterCompletion(        int status){
          closeResources();
        }
      }
);
    }
 catch (    Exception e) {
      throw MESSAGES.failedToObtainCurrentTx(e);
    }
  }
}

{
  final ModelNode model=context.createResource(PathAddress.EMPTY_ADDRESS).getModel();
  for (  AttributeDefinition attr : attributes) {
    attr.validateAndSet(operation,model);
  }
  final String name=PathAddress.pathAddress(operation.get(OP_ADDR)).getLastElement().getValue();
  final String value=operation.hasDefined(VALUE.getName()) ? operation.get(VALUE.getName()).asString() : null;
  final boolean applyToRuntime=systemPropertyUpdater != null && systemPropertyUpdater.isRuntimeSystemPropertyUpdateAllowed(name,value,context.isBooting());
  final boolean reload=!applyToRuntime && context.getProcessType().isServer();
  if (applyToRuntime) {
    String setValue=null;
    boolean setIt=false;
    try {
      setValue=value != null ? VALUE.resolveModelAttribute(context,model).asString() : null;
      setIt=true;
    }
 catch (    Exception resolutionFailure) {
      handleResolutionFailure(context,model,name,resolutionFailure);
    }
    if (setIt) {
      setProperty(name,setValue);
    }
  }
 else   if (reload) {
    context.reloadRequired();
  }
  context.completeStep(new OperationContext.RollbackHandler(){
    @Override public void handleRollback(    OperationContext context,    ModelNode operation){
      if (reload) {
        context.revertReloadRequired();
      }
      if (systemPropertyUpdater != null) {
        WildFlySecurityManager.clearPropertyPrivileged(name);
        if (systemPropertyUpdater != null) {
          systemPropertyUpdater.systemPropertyUpdated(name,null);
        }
      }
    }
  }
);
}

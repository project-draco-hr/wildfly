{
  Joinpoint instantiateJoinpoint=null;
  ValueConfig[] parameters=new ValueConfig[0];
  String[] types=Configurator.NO_PARAMS_TYPES;
  ConstructorConfig ctorConfig=beanConfig.getConstructor();
  if (ctorConfig != null) {
    parameters=ctorConfig.getParameters();
    types=Configurator.getTypes(parameters);
    String factoryClass=ctorConfig.getFactoryClass();
    FactoryConfig factory=ctorConfig.getFactory();
    if (factoryClass != null || factory != null) {
      String factoryMethod=ctorConfig.getFactoryMethod();
      if (factoryMethod == null)       throw new StartException("Missing factory method in ctor configuration: " + beanConfig);
      if (factoryClass != null) {
        Class<?> factoryClazz=Class.forName(factoryClass,false,module.getClassLoader());
        Method method=Configurator.findMethod(index,factoryClazz,factoryMethod,types,true,true,true);
        MethodJoinpoint mj=new MethodJoinpoint(method);
        mj.setTarget(new ImmediateValue<Object>(null));
        mj.setParameters(parameters);
        instantiateJoinpoint=mj;
      }
 else       if (factory != null) {
        ReflectionJoinpoint rj=new ReflectionJoinpoint(factory.getBeanInfo(),factoryMethod,types);
        rj.setTarget(new ImmediateValue<Object>(factory.getValue(null)));
        rj.setParameters(parameters);
        instantiateJoinpoint=rj;
      }
    }
  }
  if (instantiateJoinpoint == null) {
    if (beanInfo == null)     throw new StartException("Missing bean info, set bean's class attribute: " + beanConfig);
    Constructor ctor=(types.length == 0) ? beanInfo.getConstructor() : beanInfo.findConstructor(types);
    ConstructorJoinpoint constructorJoinpoint=new ConstructorJoinpoint(ctor);
    constructorJoinpoint.setParameters(parameters);
    instantiateJoinpoint=constructorJoinpoint;
  }
  return instantiateJoinpoint.dispatch();
}

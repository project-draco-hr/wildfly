{
  final PathAddress address=PathAddress.pathAddress(operation.get(OP_ADDR));
  final String name=address.getLastElement().getValue();
  final ServiceTarget serviceTarget=context.getServiceTarget();
  final AsyncHandlerService service=new AsyncHandlerService();
  final ServiceBuilder<Handler> serviceBuilder=serviceTarget.addService(LogServices.handlerName(name),service);
  final List<InjectedValue<Handler>> list=new ArrayList<InjectedValue<Handler>>();
  if (operation.hasDefined(SUBHANDLERS))   for (  final ModelNode handlerName : operation.get(SUBHANDLERS).asList()) {
    final InjectedValue<Handler> injectedValue=new InjectedValue<Handler>();
    serviceBuilder.addDependency(LogServices.handlerName(handlerName.asString()),Handler.class,injectedValue);
    list.add(injectedValue);
  }
  service.addHandlers(list);
  if (operation.hasDefined(QUEUE_LENGTH))   service.setQueueLength(operation.get(QUEUE_LENGTH).asInt());
  service.setLevel(Level.parse(operation.get(LEVEL).asString()));
  if (operation.hasDefined(OVERFLOW_ACTION))   service.setOverflowAction(OverflowAction.valueOf(operation.get(OVERFLOW_ACTION).asString()));
  serviceBuilder.addListener(verificationHandler);
  serviceBuilder.setInitialMode(ServiceController.Mode.ACTIVE);
  newControllers.add(serviceBuilder.install());
}

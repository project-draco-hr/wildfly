{
  try {
    final ServiceTarget target=updateContext.getServiceTarget();
    final AsyncHandlerService service=new AsyncHandlerService();
    final ServiceBuilder<Handler> serviceBuilder=target.addService(LogServices.handlerName(getName()),service);
    final List<InjectedValue<Handler>> list=new ArrayList<InjectedValue<Handler>>();
    for (    String handlerName : getSubhandlers()) {
      final InjectedValue<Handler> injectedValue=new InjectedValue<Handler>();
      serviceBuilder.addDependency(LogServices.handlerName(handlerName),Handler.class,injectedValue);
      list.add(injectedValue);
    }
    service.addHandlers(list);
    service.setQueueLength(queueLength);
    service.setLevel(Level.parse(getLevelName()));
    service.setOverflowAction(overflowAction);
    serviceBuilder.setInitialMode(ServiceController.Mode.ACTIVE);
    serviceBuilder.addListener(new UpdateResultHandler.ServiceStartListener<P>(resultHandler,param));
    serviceBuilder.install();
  }
 catch (  Throwable t) {
    resultHandler.handleFailure(t,param);
    return;
  }
}

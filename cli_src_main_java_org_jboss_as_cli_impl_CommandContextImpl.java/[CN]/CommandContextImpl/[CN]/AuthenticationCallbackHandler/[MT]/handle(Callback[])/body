{
  try {
    timeoutHandler.suspendAndExecute(new Runnable(){
      @Override public void run(){
        try {
          dohandle(callbacks);
        }
 catch (        IOException e) {
          throw new RuntimeException(e);
        }
catch (        UnsupportedCallbackException e) {
          throw new RuntimeException(e);
        }
      }
    }
);
  }
 catch (  RuntimeException e) {
    if (e.getCause() instanceof IOException) {
      throw (IOException)e.getCause();
    }
 else     if (e.getCause() instanceof UnsupportedCallbackException) {
      throw (UnsupportedCallbackException)e.getCause();
    }
    throw e;
  }
}

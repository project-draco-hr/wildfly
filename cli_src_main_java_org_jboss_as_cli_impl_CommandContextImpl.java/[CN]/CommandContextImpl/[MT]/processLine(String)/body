{
  if (line.isEmpty() || line.charAt(0) == '#') {
    return;
  }
  exitCode=0;
  if (isOperation(line)) {
    ModelNode request;
    try {
      resetArgs(line);
      request=parsedCmd.toOperationRequest(this);
    }
 catch (    CommandFormatException e) {
      error(e.getLocalizedMessage());
      return;
    }
    if (isBatchMode()) {
      StringBuilder op=new StringBuilder();
      op.append(getPrefixFormatter().format(parsedCmd.getAddress()));
      op.append(line.substring(line.indexOf(':')));
      DefaultBatchedCommand batchedCmd=new DefaultBatchedCommand(op.toString(),request);
      Batch batch=getBatchManager().getActiveBatch();
      batch.add(batchedCmd);
      printLine("#" + batch.size() + " "+ batchedCmd.getCommand());
    }
 else {
      set("OP_REQ",request);
      try {
        operationHandler.handle(this);
      }
  finally {
        set("OP_REQ",null);
      }
    }
  }
 else {
    try {
      resetArgs(line);
    }
 catch (    CommandFormatException e1) {
      error(e1.getLocalizedMessage());
      return;
    }
    final String cmdName=parsedCmd.getOperationName();
    CommandHandler handler=cmdRegistry.getCommandHandler(cmdName.toLowerCase());
    if (handler != null) {
      if (isBatchMode() && handler.isBatchMode()) {
        if (!(handler instanceof OperationCommand)) {
          error("The command is not allowed in a batch.");
        }
 else {
          try {
            ModelNode request=((OperationCommand)handler).buildRequest(this);
            BatchedCommand batchedCmd=new DefaultBatchedCommand(line,request);
            Batch batch=getBatchManager().getActiveBatch();
            batch.add(batchedCmd);
            printLine("#" + batch.size() + " "+ batchedCmd.getCommand());
          }
 catch (          CommandFormatException e) {
            error("Failed to add to batch: " + e.getLocalizedMessage());
          }
        }
      }
 else {
        try {
          handler.handle(this);
        }
 catch (        CommandFormatException e) {
          error(e.getLocalizedMessage());
        }
      }
      try {
        resetArgs(null);
      }
 catch (      CommandFormatException e) {
      }
    }
 else {
      error("Unexpected command '" + line + "'. Type 'help --commands' for the list of supported commands.");
    }
  }
}

{
  if (line.isEmpty() || line.charAt(0) == '#') {
    return;
  }
  resetArgs(line);
  if (parsedCmd.getFormat() == OperationFormat.INSTANCE) {
    final ModelNode request=parsedCmd.toOperationRequest(this);
    if (isBatchMode()) {
      StringBuilder op=new StringBuilder();
      op.append(getNodePathFormatter().format(parsedCmd.getAddress()));
      op.append(line.substring(line.indexOf(':')));
      DefaultBatchedCommand batchedCmd=new DefaultBatchedCommand(op.toString(),request);
      Batch batch=getBatchManager().getActiveBatch();
      batch.add(batchedCmd);
      printLine("#" + batch.size() + " "+ batchedCmd.getCommand());
    }
 else {
      set("OP_REQ",request);
      try {
        operationHandler.handle(this);
      }
  finally {
        set("OP_REQ",null);
      }
    }
  }
 else {
    final String cmdName=parsedCmd.getOperationName();
    CommandHandler handler=cmdRegistry.getCommandHandler(cmdName.toLowerCase());
    if (handler != null) {
      if (isBatchMode() && handler.isBatchMode(this)) {
        if (!(handler instanceof OperationCommand)) {
          throw new CommandLineException("The command is not allowed in a batch.");
        }
 else {
          try {
            ModelNode request=((OperationCommand)handler).buildRequest(this);
            BatchedCommand batchedCmd=new DefaultBatchedCommand(line,request);
            Batch batch=getBatchManager().getActiveBatch();
            batch.add(batchedCmd);
            printLine("#" + batch.size() + " "+ batchedCmd.getCommand());
          }
 catch (          CommandFormatException e) {
            throw new CommandFormatException("Failed to add to batch '" + line + "'",e);
          }
        }
      }
 else {
        handler.handle(this);
      }
    }
 else {
      throw new CommandLineException("Unexpected command '" + line + "'. Type 'help --commands' for the list of supported commands.");
    }
  }
}

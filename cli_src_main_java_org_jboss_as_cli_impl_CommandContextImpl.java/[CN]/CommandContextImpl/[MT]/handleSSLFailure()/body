{
  Certificate[] lastChain;
  if (trustManager == null || (lastChain=trustManager.getLastFailedCertificateChain()) == null) {
    return false;
  }
  error("Unable to connect due to unrecognised server certificate");
  for (  Certificate current : lastChain) {
    if (current instanceof X509Certificate) {
      X509Certificate x509Current=(X509Certificate)current;
      Map<String,String> fingerprints=generateFingerprints(x509Current);
      printLine("Subject    - " + x509Current.getSubjectX500Principal().getName());
      printLine("Issuer     - " + x509Current.getIssuerDN().getName());
      printLine("Valid From - " + x509Current.getNotBefore());
      printLine("Valid To   - " + x509Current.getNotAfter());
      for (      String alg : fingerprints.keySet()) {
        printLine(alg + " : " + fingerprints.get(alg));
      }
      printLine("");
    }
  }
  for (; ; ) {
    String response;
    if (trustManager.isModifyTrustStore()) {
      response=readLine("Accept certificate? [N]o, [T]emporarily, [P]ermenantly : ",false,true);
    }
 else {
      response=readLine("Accept certificate? [N]o, [T]emporarily : ",false,true);
    }
    if (response != null && response.length() == 1) {
switch (response.toLowerCase().charAt(0)) {
case 'n':
        return false;
case 't':
      trustManager.storeChainTemporarily(lastChain);
    return true;
case 'p':
  if (trustManager.isModifyTrustStore()) {
    trustManager.storeChainPermenantly(lastChain);
    return true;
  }
}
}
}
}

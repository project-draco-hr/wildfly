{
  final ResourceBundle bundle=getResourceBundle(locale);
  final ModelNode node=new ModelNode();
  node.get(DESCRIPTION).set(bundle.getString(PlatformMBeanConstants.MEMORY_POOL));
  final ModelNode attrs=node.get(ATTRIBUTES);
  addObjectNameAttribute(attrs,bundle);
  for (  String attr : PlatformMBeanConstants.MEMORY_POOL_READ_WRITE_ATTRIBUTES) {
    attrs.get(attr,DESCRIPTION).set(bundle.getString(PlatformMBeanConstants.MEMORY_POOL + "." + attr));
  }
  for (  String attr : PlatformMBeanConstants.MEMORY_POOL_READ_ATTRIBUTES) {
    attrs.get(attr,DESCRIPTION).set(bundle.getString(PlatformMBeanConstants.MEMORY_POOL + "." + attr));
  }
  for (  String attr : PlatformMBeanConstants.MEMORY_POOL_METRICS) {
    attrs.get(attr,DESCRIPTION).set(bundle.getString(PlatformMBeanConstants.MEMORY_POOL + "." + attr));
  }
  populateAttribute(attrs,NAME,ModelType.STRING,true,null);
  final ModelNode types=populateAttribute(attrs,TYPE,ModelType.STRING,true,null).get(ALLOWED);
  for (  MemoryType memType : MemoryType.values()) {
    types.add(memType.name());
  }
  final ModelNode usage=populateAttribute(attrs,USAGE,ModelType.OBJECT,true,null);
  populateMemoryUsage(usage.get(VALUE_TYPE),bundle);
  final ModelNode peakUsage=populateAttribute(attrs,PEAK_USAGE,ModelType.OBJECT,true,null);
  populateMemoryUsage(peakUsage.get(VALUE_TYPE),bundle);
  populateAttribute(attrs,VALID,ModelType.BOOLEAN,true,null);
  final ModelNode names=populateAttribute(attrs,MEMORY_MANAGER_NAMES,ModelType.LIST,true,null);
  names.get(VALUE_TYPE).set(ModelType.STRING);
  final ModelNode usageThresh=populateAttribute(attrs,USAGE_THRESHOLD,ModelType.LONG,false,MeasurementUnit.BYTES);
  usageThresh.get(MIN).set(0);
  populateAttribute(attrs,USAGE_THRESHOLD_EXCEEDED,ModelType.BOOLEAN,false,null);
  populateAttribute(attrs,USAGE_THRESHOLD_COUNT,ModelType.LONG,false,MeasurementUnit.NONE);
  populateAttribute(attrs,USAGE_THRESHOLD_SUPPORTED,ModelType.BOOLEAN,true,null);
  final ModelNode collUsageThresh=populateAttribute(attrs,COLLECTION_USAGE_THRESHOLD,ModelType.LONG,false,MeasurementUnit.BYTES);
  collUsageThresh.get(MIN).set(0);
  populateAttribute(attrs,COLLECTION_USAGE_THRESHOLD_EXCEEDED,ModelType.BOOLEAN,false,null);
  populateAttribute(attrs,COLLECTION_USAGE_THRESHOLD_COUNT,ModelType.LONG,false,MeasurementUnit.NONE);
  populateAttribute(attrs,COLLECTION_USAGE_THRESHOLD_SUPPORTED,ModelType.BOOLEAN,true,null);
  final ModelNode collUsage=populateAttribute(attrs,COLLECTION_USAGE,ModelType.OBJECT,false,null);
  populateMemoryUsage(collUsage.get(VALUE_TYPE),bundle);
  node.get(OPERATIONS).setEmptyObject();
  node.get(CHILDREN).setEmptyObject();
  return node;
}

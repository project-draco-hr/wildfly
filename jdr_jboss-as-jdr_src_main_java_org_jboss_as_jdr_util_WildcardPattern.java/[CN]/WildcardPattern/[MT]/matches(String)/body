{
  int targetIdx=0;
  int targetEnd=target.length();
  int tokenIdx=0;
  int tokenEnd=tokens.length;
  while (tokenIdx < tokenEnd && targetIdx < targetEnd && targetIdx > -1) {
    if ("?".equals(tokens[tokenIdx])) {
      targetIdx++;
      tokenIdx++;
    }
 else     if ("*".equals(tokens[tokenIdx])) {
      if (tokenIdx == (tokenEnd - 1)) {
        targetIdx=targetEnd;
        tokenIdx=tokenEnd;
      }
 else {
        targetIdx=target.indexOf(tokens[tokenIdx + 1],targetIdx);
        tokenIdx++;
      }
    }
 else {
      if (target.substring(targetIdx).startsWith(tokens[tokenIdx])) {
        targetIdx+=tokens[tokenIdx].length();
        tokenIdx++;
      }
 else {
        targetIdx=-1;
        break;
      }
    }
  }
  return (tokenIdx == tokenEnd && targetIdx == targetEnd);
}

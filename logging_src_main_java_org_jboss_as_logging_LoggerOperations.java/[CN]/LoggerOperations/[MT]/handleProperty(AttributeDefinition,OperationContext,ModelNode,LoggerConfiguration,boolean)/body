{
  if (FILTER_SPEC.equals(attribute)) {
    final ModelNode valueNode=(resolveValue ? FILTER_SPEC.resolveModelAttribute(context,model) : model);
    final String resolvedValue=(valueNode.isDefined() ? valueNode.asString() : null);
    configuration.setFilter(resolvedValue);
  }
 else   if (LEVEL.equals(attribute)) {
    final String resolvedValue=(resolveValue ? LEVEL.resolvePropertyValue(context,model) : LEVEL.resolver().resolveValue(context,model));
    configuration.setLevel(resolvedValue);
  }
 else   if (HANDLERS.equals(attribute)) {
    final Collection<String> resolvedValue=(resolveValue ? HANDLERS.resolvePropertyValue(context,model) : HANDLERS.resolver().resolveValue(context,model));
    configuration.setHandlerNames(resolvedValue);
  }
 else   if (USE_PARENT_HANDLERS.equals(attribute)) {
    final ModelNode useParentHandlers=(resolveValue ? USE_PARENT_HANDLERS.resolveModelAttribute(context,model) : model);
    final Boolean resolvedValue=(useParentHandlers.isDefined() ? useParentHandlers.asBoolean() : null);
    configuration.setUseParentHandlers(resolvedValue);
  }
}

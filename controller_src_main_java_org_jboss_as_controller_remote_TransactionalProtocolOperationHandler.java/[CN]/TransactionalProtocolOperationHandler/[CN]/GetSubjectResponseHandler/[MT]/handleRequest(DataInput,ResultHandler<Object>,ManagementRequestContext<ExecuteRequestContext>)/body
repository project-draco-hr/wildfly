{
  ProtocolUtils.expectHeader(input,ModelControllerProtocol.PARAM_SUBJECT_LENGTH);
  final int size=input.readInt();
  Subject subject=null;
  if (size == 1) {
    Unmarshaller unmarshaller=MarshallingUtil.getUnmarshaller();
    ByteInput byteInput=MarshallingUtil.createByteInput(input);
    unmarshaller.start(byteInput);
    try {
      subject=unmarshaller.readObject(Subject.class);
    }
 catch (    ClassNotFoundException e) {
      throw MESSAGES.unableToUnmarshallSubject(e);
    }
    unmarshaller.finish();
  }
 else {
    subject=null;
  }
  final Subject finalSubject=subject;
  context.executeAsync(new AsyncTask<TransactionalProtocolOperationHandler.ExecuteRequestContext>(){
    @Override public void execute(    final ManagementRequestContext<ExecuteRequestContext> context) throws Exception {
      AccessController.doPrivileged(new PrivilegedAction<Void>(){
        @Override public Void run(){
          Subject.doAs(finalSubject,context.getAttachment().getAction());
          return null;
        }
      }
);
    }
  }
);
}

{
  super.setupViewInterceptors(view);
  view.getConfigurators().add(new ViewConfigurator(){
    @Override public void configure(    DeploymentPhaseContext context,    ComponentConfiguration componentConfiguration,    ViewDescription description,    ViewConfiguration configuration) throws DeploymentUnitProcessingException {
      configuration.addViewInterceptor(new ImmediateInterceptorFactory(new Interceptor(){
        @Override public Object processInvocation(        final InterceptorContext context) throws Exception {
          context.putPrivateData(InvocationType.class,InvocationType.MESSAGE_DELIVERY);
          return context.proceed();
        }
      }
),InterceptorOrder.View.INVOCATION_TYPE);
      configuration.addViewInterceptor(MessageDrivenComponentInstanceAssociatingFactory.instance(),InterceptorOrder.View.ASSOCIATING_INTERCEPTOR);
      final MessageDrivenComponentDescription mdb=(MessageDrivenComponentDescription)componentConfiguration.getComponentDescription();
      if (mdb.getTransactionManagementType() == TransactionManagementType.CONTAINER) {
        configuration.addViewInterceptor(CMTTxInterceptor.FACTORY,InterceptorOrder.View.CMT_TRANSACTION_INTERCEPTOR);
      }
    }
  }
);
}

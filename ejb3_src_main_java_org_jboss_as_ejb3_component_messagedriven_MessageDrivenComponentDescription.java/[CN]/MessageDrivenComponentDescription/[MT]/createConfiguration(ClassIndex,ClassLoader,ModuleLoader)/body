{
  final ComponentConfiguration mdbComponentConfiguration=new ComponentConfiguration(this,classIndex,moduleClassLoader,moduleLoader);
  mdbComponentConfiguration.setComponentCreateServiceFactory(new MessageDrivenComponentCreateServiceFactory());
  final MessageDrivenComponentDescription mdbComponentDescription=(MessageDrivenComponentDescription)mdbComponentConfiguration.getComponentDescription();
  mdbComponentConfiguration.getCreateDependencies().add(new PoolInjectingConfigurator(mdbComponentDescription));
  mdbComponentConfiguration.getCreateDependencies().add(new ResourceAdapterInjectingConfiguration());
  if (TransactionManagementType.BEAN.equals(this.getTransactionManagementType())) {
    getConfigurators().add(new ComponentConfigurator(){
      @Override public void configure(      final DeploymentPhaseContext context,      final ComponentDescription description,      final ComponentConfiguration configuration) throws DeploymentUnitProcessingException {
        configuration.addComponentInterceptor(EjbBMTInterceptor.FACTORY,InterceptorOrder.Component.BMT_TRANSACTION_INTERCEPTOR,false);
      }
    }
);
  }
 else {
    getConfigurators().add(new ComponentConfigurator(){
      @Override public void configure(      final DeploymentPhaseContext context,      final ComponentDescription description,      final ComponentConfiguration configuration) throws DeploymentUnitProcessingException {
        configuration.addTimeoutViewInterceptor(TimerCMTTxInterceptor.FACTORY,InterceptorOrder.View.CMT_TRANSACTION_INTERCEPTOR);
      }
    }
);
  }
  return mdbComponentConfiguration;
}

{
  DeploymentReflectionIndex reflectionIndex=context.getDeploymentUnit().getAttachment(REFLECTION_INDEX);
  ClassReflectionIndex<?> index=reflectionIndex.getClassIndex(componentConfiguration.getComponentClass());
  Method[] methods=configuration.getProxyFactory().getCachedMethods();
  for (  Method method : methods) {
    final Method componentMethod=ClassReflectionIndexUtil.findRequiredMethod(reflectionIndex,index,method);
    configuration.addViewInterceptor(method,new ImmediateInterceptorFactory(new ComponentDispatcherInterceptor(componentMethod)),InterceptorOrder.View.COMPONENT_DISPATCHER);
    configuration.addClientInterceptor(method,CLIENT_DISPATCHER_INTERCEPTOR_FACTORY,InterceptorOrder.Client.CLIENT_DISPATCHER);
  }
  configuration.addViewPostConstructInterceptor(Interceptors.getTerminalInterceptorFactory(),InterceptorOrder.ViewPostConstruct.TERMINAL_INTERCEPTOR);
  configuration.addViewPreDestroyInterceptor(Interceptors.getTerminalInterceptorFactory(),InterceptorOrder.ViewPreDestroy.TERMINAL_INTERCEPTOR);
  configuration.addClientPostConstructInterceptor(Interceptors.getTerminalInterceptorFactory(),InterceptorOrder.ClientPostConstruct.TERMINAL_INTERCEPTOR);
  configuration.addClientPreDestroyInterceptor(Interceptors.getTerminalInterceptorFactory(),InterceptorOrder.ClientPreDestroy.TERMINAL_INTERCEPTOR);
  final List<BindingConfiguration> bindingConfigurations=configuration.getBindingConfigurations();
  List<String> viewNameParts=description.getViewNameParts();
  final ServiceName serviceName;
  if (!viewNameParts.isEmpty()) {
    serviceName=context.getDeploymentUnit().getServiceName().append("component").append(componentConfiguration.getComponentName()).append("VIEW").append(viewNameParts.toArray(new String[viewNameParts.size()]));
  }
 else {
    serviceName=context.getDeploymentUnit().getServiceName().append("component").append(componentConfiguration.getComponentName()).append("VIEW").append(description.getViewClassName());
  }
  for (  String bindingName : description.getBindingNames()) {
    bindingConfigurations.add(new BindingConfiguration(bindingName,new ViewBindingInjectionSource(serviceName)));
  }
}

{
  SimpleHome simpleHome=getSimpleHome();
  Collection c=simpleHome.findWithByteArray(byteArrayValue);
  assertEquals(1,c.size());
  Simple s=(Simple)c.iterator().next();
  assertTrue(s.isIdentical(simple));
  assertEquals(booleanPrimitive,s.getBooleanPrimitive());
  assertEquals(booleanObject,s.getBooleanObject());
  assertEquals(bytePrimitive,s.getBytePrimitive());
  assertEquals(byteObject,s.getByteObject());
  assertEquals(shortPrimitive,s.getShortPrimitive());
  assertEquals(shortObject,s.getShortObject());
  assertEquals(integerPrimitive,s.getIntegerPrimitive());
  assertEquals(integerObject,s.getIntegerObject());
  assertEquals(longPrimitive,s.getLongPrimitive());
  assertEquals(longObject,s.getLongObject());
  assertEquals(floatPrimitive,s.getFloatPrimitive(),0);
  assertEquals(floatObject,s.getFloatObject());
  assertEquals(doublePrimitive,s.getDoublePrimitive(),0);
  assertEquals(doubleObject,s.getDoubleObject());
  assertEquals(stringValue,s.getStringValue());
  assertTrue("expected :<" + simple.getUtilDateValue() + "> but was <"+ utilDateValue+ ">",utilDateValue.compareTo(simple.getUtilDateValue()) == 0);
  assertTrue("expected :<" + simple.getSqlDateValue() + "> but was <"+ sqlDateValue+ ">",sqlDateValue.compareTo(simple.getSqlDateValue()) == 0);
  assertTrue("expected :<" + simple.getTimeValue() + "> but was <"+ timeValue+ ">",timeValue.compareTo(simple.getTimeValue()) == 0);
  assertTrue("expected :<" + simple.getTimestampValue() + "> but was <"+ timestampValue+ ">",timestampValue.compareTo(simple.getTimestampValue()) == 0);
  assertTrue("expected :<" + simple.getBigDecimalValue() + "> but was <"+ bigDecimalValue+ ">",bigDecimalValue.compareTo(simple.getBigDecimalValue()) == 0);
  byte[] array=simple.getByteArrayValue();
  assertEquals(byteArrayValue.length,array.length);
  for (int i=0; i < array.length; i++) {
    assertEquals(byteArrayValue[i],array[i]);
  }
  assertEquals(valueClass,simple.getValueClass());
  assertEquals(objectValue,simple.getObjectValue());
}

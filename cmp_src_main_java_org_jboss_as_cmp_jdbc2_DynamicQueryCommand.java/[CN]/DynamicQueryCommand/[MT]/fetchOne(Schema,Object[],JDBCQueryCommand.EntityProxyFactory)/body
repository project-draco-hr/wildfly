{
  if (log.isTraceEnabled()) {
    log.trace("executing dynamic-ql: " + args[0]);
  }
  JDBCStoreManager2 manager=(JDBCStoreManager2)entity.getManager();
  QLCompiler compiler=new EJBQLToSQL92Compiler(manager.getCatalog());
  try {
    compiler.compileJBossQL((String)args[0],metadata.getMethod().getReturnType(),getParamTypes(args),metadata);
  }
 catch (  Throwable t) {
    throw CmpMessages.MESSAGES.errorCompilingJbossQlStatement(args[0],t);
  }
  String sql=compiler.getSQL();
  AbstractQueryCommand.ResultReader resultReader;
  if (!compiler.isSelectEntity()) {
    if (compiler.isSelectField()) {
      resultReader=new AbstractQueryCommand.FieldReader((JDBCCMPFieldBridge2)compiler.getSelectField());
    }
 else {
      resultReader=new AbstractQueryCommand.FunctionReader(compiler.getSelectFunction());
    }
  }
 else {
    resultReader=new AbstractQueryCommand.EntityReader((JDBCEntityBridge2)compiler.getSelectEntity(),compiler.isSelectDistinct());
  }
  return AbstractQueryCommand.fetchOne(entity,sql,toArray(compiler.getInputParameters()),resultReader,(Object[])args[1],factory,log);
}

{
  MockProcessManager pm=MockProcessManager.create(3);
  setDomainConfigDir("standard");
  ServerManager sm=ServerManagerStarter.createServerManager(pm);
  pm.waitForServerManager();
  checkProcessManagerConnection(pm,"ServerManager",true);
  pm.waitForAddedProcesses();
  pm.waitForStartedProcesses();
  MockManagedProcess svr1=pm.getProcess("Server:server-one");
  Assert.assertNotNull(svr1);
  MockManagedProcess svr2=pm.getProcess("Server:server-two");
  Assert.assertNotNull(svr2);
  svr1.waitForStart();
  svr2.waitForStart();
  Standalone cfg1=readStartCommand(svr1.getMessageHandler());
  Assert.assertEquals("server-one",cfg1.getServerName());
  Standalone cfg2=readStartCommand(svr2.getMessageHandler());
  Assert.assertEquals("server-two",cfg2.getServerName());
  Assert.assertTrue(managerAlive(svr1.getSmAddress(),svr1.getSmPort()));
  svr1.getCommunicationHandler().sendMessage(ServerManagerProtocolCommand.SERVER_STARTED.createCommandBytes(null));
  svr2.getCommunicationHandler().sendMessage(ServerManagerProtocolCommand.SERVER_STARTED.createCommandBytes(null));
  pm.resetReconnectServers();
  sm.stop();
  sm=ServerManagerStarter.createServerManager(pm,true);
  pm.waitForReconnectServers();
  sm.stop();
}

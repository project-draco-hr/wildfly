{
  setDomainConfigDir("standard");
  TestProcessHandlerFactory processHandlerFactory=new TestProcessHandlerFactory(true,false);
  final TestProcessManager pm=TestProcessManager.create(processHandlerFactory,InetAddress.getLocalHost(),0);
  pm.pollAddedProcess(3);
  pm.pollStartedProcess(3);
  TestServerManagerProcess sm=assertGetServerManager(processHandlerFactory);
  MockServerProcess svr1=assertGetServer(processHandlerFactory,"Server:server-one");
  MockServerProcess svr2=assertGetServer(processHandlerFactory,"Server:server-two");
  sendMessageToServerManager(ServerToServerManagerProtocolCommand.SERVER_AVAILABLE,svr1,svr2);
  Assert.assertEquals("server-one",assertReadStartCommand(svr1).getServerName());
  Assert.assertEquals("server-two",assertReadStartCommand(svr2).getServerName());
  Assert.assertTrue(managerAlive(svr1.getSmAddress(),svr1.getSmPort()));
  Assert.assertTrue(managerAlive(svr1.getPmAddress(),svr1.getPmPort()));
  svr1.sendMessageToManager(ServerToServerManagerProtocolCommand.SERVER_STARTED);
  final int addCount=pm.getAddCount();
  final int removeCount=pm.getRemoveCount();
  int stopCount=pm.getStopCount();
  int startCount=pm.getStartCount();
  for (int i=0; i <= 4; i++) {
    svr2.sendMessageToManager(ServerToServerManagerProtocolCommand.SERVER_STARTED);
    if (i < 4) {
      final MockServerProcess proc=svr2;
      sm.resetDownLatch();
      processHandlerFactory.resetLatch("Server:server-two");
      new Thread(new Runnable(){
        @Override public void run(){
          proc.crashServer(1);
        }
      }
).start();
      sm.waitForDown();
      pm.pollStoppedProcess(1);
      pm.pollStartedProcess(1);
      Assert.assertEquals(++stopCount,pm.getStopCount());
      Assert.assertEquals(++startCount,pm.getStartCount());
      svr2=assertGetServer(processHandlerFactory,"Server:server-two");
      svr2.sendMessageToManager(ServerToServerManagerProtocolCommand.SERVER_AVAILABLE);
      Assert.assertEquals("server-two",assertReadStartCommand(svr2).getServerName());
    }
  }
  Assert.assertEquals(addCount,pm.getAddCount());
  Assert.assertEquals(removeCount,pm.getRemoveCount());
  shutdownProcessManagerAndWait(pm);
}

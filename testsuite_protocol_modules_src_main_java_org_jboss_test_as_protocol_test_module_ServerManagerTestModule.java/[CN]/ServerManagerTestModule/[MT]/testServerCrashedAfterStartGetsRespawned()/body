{
  MockProcessManager pm=MockProcessManager.create(3);
  setDomainConfigDir("standard");
  ServerManagerStarter.createServerManager(pm);
  pm.waitForServerManager();
  checkProcessManagerConnection(pm,"ServerManager",true);
  pm.waitForAddedProcesses();
  pm.waitForStartedProcesses();
  MockManagedProcess svr1=pm.getProcess("Server:server-one");
  Assert.assertNotNull(svr1);
  MockManagedProcess svr2=pm.getProcess("Server:server-two");
  Assert.assertNotNull(svr2);
  svr1.waitForStart();
  svr2.waitForStart();
  Standalone cfg1=readStartCommand(svr1.getMessageHandler());
  Assert.assertEquals("server-one",cfg1.getServerName());
  Standalone cfg2=readStartCommand(svr2.getMessageHandler());
  Assert.assertEquals("server-two",cfg2.getServerName());
  Assert.assertTrue(managerAlive(svr1.getSmAddress(),svr1.getSmPort()));
  svr1.getCommunicationHandler().sendMessage(ServerManagerProtocolCommand.SERVER_STARTED.createCommandBytes(null));
  final int addCount=pm.getAddCount();
  final int removeCount=pm.getRemoveCount();
  int stopCount=pm.getStopCount();
  int startCount=pm.getStartCount();
  MockManagedProcess serverManager=pm.getServerManager();
  for (int i=0; i <= 4; i++) {
    pm.resetStopLatch(1);
    pm.resetStartLatch(1);
    if (i < 4) {
      svr2.getCommunicationHandler().sendMessage(ServerManagerProtocolCommand.SERVER_STARTED.createCommandBytes(null));
      svr2.stop();
      serverManager.sendDown("Server:server-two");
      pm.waitForStoppedProcesses();
      pm.waitForStartedProcesses();
      Assert.assertEquals(++stopCount,pm.getStopCount());
      Assert.assertEquals(++startCount,pm.getStartCount());
      svr2=pm.getProcess("Server:server-two");
      svr2.waitForStart();
      cfg2=readStartCommand(svr2.getMessageHandler());
      Assert.assertEquals("server-two",cfg2.getServerName());
    }
 else {
      svr2.getCommunicationHandler().sendMessage(ServerManagerProtocolCommand.SERVER_STARTED.createCommandBytes(null));
    }
  }
  Assert.assertEquals(addCount,pm.getAddCount());
  Assert.assertEquals(removeCount,pm.getRemoveCount());
}

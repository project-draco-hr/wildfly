{
  setDomainConfigDir("standard");
  TestProcessHandlerFactory processHandlerFactory=new TestProcessHandlerFactory(true,false);
  final TestProcessManager pm=TestProcessManager.create(processHandlerFactory,InetAddress.getLocalHost(),0);
  pm.pollAddedProcess(3);
  pm.pollStartedProcess(3);
  TestServerManagerProcess sm=assertGetServerManager(processHandlerFactory);
  MockServerProcess svr1=assertGetServer(processHandlerFactory,"Server:server-one");
  MockServerProcess svr2=assertGetServer(processHandlerFactory,"Server:server-two");
  sendMessageToServerManager(ServerToServerManagerProtocolCommand.SERVER_AVAILABLE,svr1,svr2);
  Assert.assertEquals("server-one",assertReadStartCommand(svr1).getServerName());
  Assert.assertEquals("server-two",assertReadStartCommand(svr2).getServerName());
  managerAlive(svr1.getSmAddress(),svr1.getSmPort());
  managerAlive(svr1.getPmAddress(),svr1.getPmPort());
  sendMessageToServerManager(ServerToServerManagerProtocolCommand.SERVER_STARTED,svr1,svr2);
  shutdownProcessManagerNoWait(pm);
  sm.waitForShutdown();
  svr1.waitForShutdownCommand();
  svr2.waitForShutdownCommand();
  waitForManagerToStop(svr1.getSmAddress(),svr1.getSmPort(),5000);
  waitForManagerToStop(svr1.getPmAddress(),svr1.getPmPort(),5000);
}

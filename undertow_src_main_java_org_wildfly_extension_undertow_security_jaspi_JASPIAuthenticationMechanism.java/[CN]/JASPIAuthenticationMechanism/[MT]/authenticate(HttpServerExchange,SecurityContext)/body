{
  JASPICAttachment attachment=exchange.getAttachment(JASPICAttachment.ATTACHMENT_KEY);
  AuthenticationMechanismOutcome outcome;
  Account authenticatedAccount=null;
  Boolean isValid=attachment.getValid();
  attachment.setValid(null);
  GenericMessageInfo messageInfo=attachment.getMessageInfo();
  if (isValid == null) {
    isValid=createJASPIAuthenticationManager().isValid(messageInfo,new Subject(),JASPI_HTTP_SERVLET_LAYER,attachment.getApplicationIdentifier(),new JBossCallbackHandler());
  }
  final ServletRequestContext requestContext=attachment.getRequestContext();
  final JASPIServerAuthenticationManager sam=attachment.getSam();
  final JASPICallbackHandler cbh=attachment.getCbh();
  if (isValid) {
    org.jboss.security.SecurityContext jbossSct=SecurityActions.getSecurityContext();
    authenticatedAccount=createAccount(attachment.getCachedAccount(),jbossSct);
  }
  String authType=(String)messageInfo.getMap().get(JASPI_AUTH_TYPE);
  if (authType == null)   authType=this.configuredAuthMethod != null ? this.configuredAuthMethod : MECHANISM_NAME;
  if (isValid && authenticatedAccount != null) {
    outcome=AuthenticationMechanismOutcome.AUTHENTICATED;
    Object registerObj=messageInfo.getMap().get(JASPI_REGISTER_SESSION);
    boolean cache=false;
    if (registerObj != null && (registerObj instanceof String)) {
      cache=Boolean.valueOf((String)registerObj);
    }
    sc.authenticationComplete(authenticatedAccount,authType,cache);
  }
 else   if (isValid && authenticatedAccount == null && !isMandatory(requestContext)) {
    outcome=AuthenticationMechanismOutcome.NOT_ATTEMPTED;
  }
 else {
    outcome=AuthenticationMechanismOutcome.NOT_AUTHENTICATED;
    sc.authenticationFailed("JASPIC authentication failed.",authType);
  }
  return outcome;
}

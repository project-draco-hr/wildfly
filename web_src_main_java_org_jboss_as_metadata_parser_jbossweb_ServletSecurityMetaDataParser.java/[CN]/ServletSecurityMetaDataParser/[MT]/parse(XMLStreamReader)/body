{
  ServletSecurityMetaData servletSecurity=new ServletSecurityMetaData();
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
    final Element element=Element.forName(reader.getLocalName());
switch (element) {
case HTTP_METHOD_CONSTRAINT:
      List<HttpMethodConstraintMetaData> httpMethodConstraints=servletSecurity.getHttpMethodConstraints();
    if (httpMethodConstraints == null) {
      httpMethodConstraints=new ArrayList<HttpMethodConstraintMetaData>();
      servletSecurity.setHttpMethodConstraints(httpMethodConstraints);
    }
  httpMethodConstraints.add(HttpMethodConstraintMetaDataParser.parse(reader));
break;
case EMPTY_ROLE_SEMANTIC:
servletSecurity.setEmptyRoleSemantic(EmptyRoleSemanticType.valueOf(reader.getElementText()));
break;
case TRANSPORT_GUARANTEE:
servletSecurity.setTransportGuarantee(TransportGuaranteeType.valueOf(reader.getElementText()));
break;
case ROLE_ALLOWED:
List<String> rolesAllowed=servletSecurity.getRolesAllowed();
if (rolesAllowed == null) {
rolesAllowed=new ArrayList<String>();
servletSecurity.setRolesAllowed(rolesAllowed);
}
rolesAllowed.add(reader.getElementText());
break;
default :
throw unexpectedElement(reader);
}
}
return servletSecurity;
}

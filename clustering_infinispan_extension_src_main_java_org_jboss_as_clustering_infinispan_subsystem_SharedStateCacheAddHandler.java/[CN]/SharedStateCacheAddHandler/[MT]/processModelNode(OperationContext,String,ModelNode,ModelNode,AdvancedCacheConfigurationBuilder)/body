{
  super.processModelNode(context,containerName,containerModel,cache,configBuilder);
  ConfigurationBuilder builder=configBuilder.getConfigurationBuilder();
  if (cache.hasDefined(StateTransferResourceDefinition.PATH.getKey())) {
    ModelNode stateTransfer=cache.get(StateTransferResourceDefinition.PATH.getKeyValuePair());
    if (stateTransfer.isDefined()) {
      builder.clustering().stateTransfer().fetchInMemoryState(StateTransferResourceDefinition.ENABLED.resolveModelAttribute(context,stateTransfer).asBoolean()).timeout(StateTransferResourceDefinition.TIMEOUT.resolveModelAttribute(context,stateTransfer).asLong()).chunkSize(StateTransferResourceDefinition.CHUNK_SIZE.resolveModelAttribute(context,stateTransfer).asInt());
    }
  }
  if (cache.hasDefined(BackupSiteResourceDefinition.WILDCARD_PATH.getKey())) {
    for (    Property property : cache.get(BackupSiteResourceDefinition.WILDCARD_PATH.getKey()).asPropertyList()) {
      String siteName=property.getName();
      ModelNode site=property.getValue();
      builder.sites().addBackup().site(siteName).backupFailurePolicy(BackupFailurePolicy.valueOf(BackupSiteResourceDefinition.FAILURE_POLICY.resolveModelAttribute(context,site).asString())).strategy(BackupStrategy.valueOf(BackupSiteResourceDefinition.STRATEGY.resolveModelAttribute(context,site).asString())).replicationTimeout(BackupSiteResourceDefinition.REPLICATION_TIMEOUT.resolveModelAttribute(context,site).asLong());
      if (BackupSiteResourceDefinition.ENABLED.resolveModelAttribute(context,site).asBoolean()) {
        builder.sites().addInUseBackupSite(siteName);
      }
    }
  }
  if (cache.hasDefined(BackupForResourceDefinition.PATH.getKey())) {
    ModelNode backupFor=cache.get(BackupForResourceDefinition.PATH.getKeyValuePair());
    if (backupFor.isDefined()) {
      builder.sites().backupFor().remoteCache(ModelNodes.asString(BackupForResourceDefinition.REMOTE_CACHE.resolveModelAttribute(context,backupFor))).remoteSite(ModelNodes.asString(BackupForResourceDefinition.REMOTE_SITE.resolveModelAttribute(context,backupFor)));
    }
  }
}

{
  assertTrue(resourceDescription.get(ATTRIBUTES,TimerAttributeDefinition.INSTANCE.getName()).isDefined());
  assertEquals(ModelType.STRING,resourceDescription.get(ATTRIBUTES,TimerAttributeDefinition.INSTANCE.getName(),DESCRIPTION).getType());
  assertEquals(ModelType.LIST,resourceDescription.get(ATTRIBUTES,TimerAttributeDefinition.INSTANCE.getName(),TYPE).asType());
  assertEquals(ModelType.OBJECT,resourceDescription.get(ATTRIBUTES,TimerAttributeDefinition.INSTANCE.getName(),VALUE_TYPE).getType());
  final ModelNode timerAttr=resource.get(TimerAttributeDefinition.INSTANCE.getName());
  assertTrue(timerAttr.isDefined());
  final List<ModelNode> timers=timerAttr.asList();
  if (!expectTimer) {
    assertEquals(0,timers.size());
  }
 else {
    assertEquals(1,timers.size());
    final ModelNode timer=timers.get(0);
    assertTrue(timer.get("persistent").isDefined());
    assertFalse(timer.get("persistent").asBoolean());
    assertTrue(timer.get("schedule","second").isDefined());
    assertEquals("15",timer.get("schedule","second").asString());
    for (    String field : TIMER_ATTRIBUTES) {
      assertTrue(field,timer.has(field));
    }
    for (    String field : SCHEDULE_ATTRIBUTES) {
      assertTrue(field,timer.get("schedule").has(field));
    }
  }
}

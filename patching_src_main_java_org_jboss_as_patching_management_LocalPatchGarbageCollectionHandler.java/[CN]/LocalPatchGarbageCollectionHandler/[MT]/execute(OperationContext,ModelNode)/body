{
  final String patchId=operation.require(PATCH_ID).asString();
  context.acquireControllerLock();
  PatchInfoService service=(PatchInfoService)context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME);
  final PatchInfo info=service.getValue();
  if (info.getCumulativeID().equals(patchId)) {
    throw PatchManagementMessages.MESSAGES.patchActive(patchId);
  }
  if (info.getPatchIDs().contains(patchId)) {
    throw PatchManagementMessages.MESSAGES.patchActive(patchId);
  }
  final InstalledImage installedImage=service.getStructure().getInstalledImage();
  final File history=installedImage.getPatchHistoryDir(patchId);
  if (history.exists()) {
    recursiveDelete(history);
  }
  final File patchRoot=installedImage.getPatchHistoryDir(patchId);
  if (patchRoot.exists()) {
    recursiveDelete(patchRoot);
  }
  context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);
}

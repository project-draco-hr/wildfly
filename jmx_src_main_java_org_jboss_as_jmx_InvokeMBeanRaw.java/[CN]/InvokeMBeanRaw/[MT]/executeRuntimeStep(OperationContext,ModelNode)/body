{
  ServiceController<?> service=context.getServiceRegistry(false).getRequiredService(MBeanServerService.SERVICE_NAME);
  MBeanServer server=(MBeanServer)service.getValue();
  String name=operation.require(MBEAN_NAME).asString();
  String operationName=operation.require(MBEAN_OPERATION_NAME).asString();
  ArrayList<String> signatureList=new ArrayList<String>();
  if (operation.hasDefined(SIGNATURE)) {
    for (    ModelNode node : operation.get(SIGNATURE).asList()) {
      signatureList.add(node.asString());
    }
  }
  ArrayList<Object> parameterList=new ArrayList<Object>();
  if (operation.hasDefined(PARAMETERS)) {
    for (    ModelNode node : operation.get(PARAMETERS).asList()) {
      parameterList.add(getObject(node.asBytes()));
    }
  }
  File file=operation.hasDefined(NOTIFICATION_FILE) ? new File(operation.get(NOTIFICATION_FILE).asString()) : null;
  Object result;
  FileNotificationListener listener=null;
  ObjectName beanName=null;
  try {
    beanName=ObjectName.getInstance(name);
    if (file != null && file.exists()) {
      listener=new FileNotificationListener(file);
      server.addNotificationListener(beanName,listener,null,null);
    }
    result=server.invoke(beanName,operationName,parameterList.toArray(),signatureList.toArray(new String[0]));
  }
 catch (  Exception e) {
    throw new OperationFailedException(e.getMessage(),e,new ModelNode().set(e.getMessage()));
  }
 finally {
    if (listener != null) {
      try {
        server.removeNotificationListener(beanName,listener);
        listener.done();
      }
 catch (      Exception e) {
      }
    }
  }
  context.getResult().set(getBytes(result));
  context.completeStep();
}

{
  SavedRequest saved=(SavedRequest)session.getNote(Constants.FORM_REQUEST_NOTE);
  session.removeNote(Constants.FORM_REQUEST_NOTE);
  session.removeNote(Constants.FORM_PRINCIPAL_NOTE);
  if (saved == null)   return (false);
  request.clearCookies();
  Iterator cookies=saved.getCookies();
  while (cookies.hasNext()) {
    request.addCookie((Cookie)cookies.next());
  }
  MimeHeaders rmh=request.getCoyoteRequest().getMimeHeaders();
  rmh.recycle();
  boolean cachable="GET".equalsIgnoreCase(saved.getMethod()) || "HEAD".equalsIgnoreCase(saved.getMethod());
  Iterator names=saved.getHeaderNames();
  while (names.hasNext()) {
    String name=(String)names.next();
    if (!("If-Modified-Since".equalsIgnoreCase(name) || (cachable && "If-None-Match".equalsIgnoreCase(name)))) {
      Iterator values=saved.getHeaderValues(name);
      while (values.hasNext()) {
        rmh.addValue(name).setString((String)values.next());
      }
    }
  }
  request.clearLocales();
  Iterator locales=saved.getLocales();
  while (locales.hasNext()) {
    request.addLocale((Locale)locales.next());
  }
  request.getCoyoteRequest().getParameters().recycle();
  if ("POST".equalsIgnoreCase(saved.getMethod())) {
    ByteChunk body=saved.getBody();
    if (body != null) {
      request.getCoyoteRequest().action(ActionCode.ACTION_REQ_SET_BODY_REPLAY,body);
      MessageBytes contentType=MessageBytes.newInstance();
      String savedContentType=saved.getContentType();
      if (savedContentType == null) {
        savedContentType="application/x-www-form-urlencoded";
      }
      contentType.setString(savedContentType);
      request.getCoyoteRequest().setContentType(contentType);
    }
  }
  request.getCoyoteRequest().method().setString(saved.getMethod());
  request.getCoyoteRequest().queryString().setString(saved.getQueryString());
  request.getCoyoteRequest().requestURI().setString(saved.getRequestURI());
  return true;
}

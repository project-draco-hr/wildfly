{
  ByteArrayOutputStream baos=new ByteArrayOutputStream();
  Base64OutputStream b64os=getOut(baos);
  b64os.write(input,0,1);
  b64os.close();
  b64os=getOut(baos);
  b64os.write(input,1,2);
  b64os.close();
  b64os=getOut(baos);
  b64os.write(input,3,3);
  b64os.close();
  b64os=getOut(baos);
  b64os.write(input,6,4);
  b64os.close();
  byte[] output=baos.toByteArray();
  Base64InputStream b64is=getIn(output);
  byte[] result=new byte[10];
  Assert.assertEquals(10,b64is.read(result,0,10));
  Assert.assertArrayEquals(input,result);
  b64is=getIn(output);
  result=new byte[10];
  Assert.assertEquals(1,b64is.read(result,0,1));
  byte[] correct=new byte[10];
  correct[0]=(byte)1;
  Assert.assertArrayEquals(correct,result);
  b64is=getIn(output);
  result=new byte[10];
  Assert.assertEquals(2,b64is.read(result,0,2));
  correct[1]=(byte)2;
  Assert.assertArrayEquals(correct,result);
  b64is=getIn(output);
  result=new byte[10];
  Assert.assertEquals(3,b64is.read(result,0,3));
  correct[2]=(byte)3;
  Assert.assertArrayEquals(correct,result);
  b64is=getIn(output);
  result=new byte[10];
  Assert.assertEquals(4,b64is.read(result,0,4));
  correct[3]=(byte)4;
  Assert.assertArrayEquals(correct,result);
  b64is=getIn(output);
  result=new byte[10];
  Assert.assertEquals(2,b64is.read(result,0,2));
  Assert.assertEquals(5,b64is.read(result,2,5));
  correct[4]=(byte)5;
  correct[5]=(byte)6;
  correct[6]=(byte)7;
  Assert.assertArrayEquals(correct,result);
}

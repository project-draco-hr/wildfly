{
  final URI uri=http.getRequestURI();
  final String requestMethod=http.getRequestMethod();
  if (!GET.equals(requestMethod)) {
    http.sendResponseHeaders(METHOD_NOT_ALLOWED,-1);
    return;
  }
  String path=uri.getPath();
  String resource=path.substring(CONTEXT.length(),path.length());
  if (resource.startsWith("/"))   resource=resource.substring(1);
  if (resource.equals("")) {
    InetSocketAddress address=http.getHttpContext().getServer().getAddress();
    String hostName=address.getHostName();
    int port=address.getPort();
    final Headers responseHeaders=http.getResponseHeaders();
    responseHeaders.add(CONTENT_TYPE,TEXT_HTML);
    responseHeaders.add(LOCATION,"http://" + hostName + ":"+ port+ "/console/index.html");
    http.sendResponseHeaders(FOUND,0);
    OutputStream outputStream=http.getResponseBody();
    outputStream.flush();
    safeClose(outputStream);
    return;
  }
 else   if (resource.indexOf(".") == -1) {
    respond404(http);
  }
  InputStream inputStream=getLoader().getResourceAsStream(resource);
  if (inputStream != null) {
    final Headers responseHeaders=http.getResponseHeaders();
    responseHeaders.add(CONTENT_TYPE,resolveContentType(path));
    responseHeaders.add(ACCESS_CONTROL_ALLOW_ORIGIN,WILDCARD);
    boolean skipcache=resource.endsWith(NOCACHE_JS);
    if (!skipcache) {
      if (System.currentTimeMillis() > lastExpiryDate) {
        lastExpiryDate=calculateExpiryDate();
        lastExpiryHeader=htmlExpiresDateFormat().format(new Date(lastExpiryDate));
      }
      responseHeaders.add(EXPIRES_HEADER,lastExpiryHeader);
    }
    http.sendResponseHeaders(OK,0);
    OutputStream outputStream=http.getResponseBody();
    fastChannelCopy(inputStream,outputStream);
    outputStream.flush();
    safeClose(outputStream);
    safeClose(inputStream);
  }
 else {
    respond404(http);
  }
}

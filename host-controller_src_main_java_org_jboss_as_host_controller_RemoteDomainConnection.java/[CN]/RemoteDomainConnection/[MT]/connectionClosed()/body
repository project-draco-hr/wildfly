{
  if (!reconnect.get()) {
    return;
  }
  final Connection connection=this.connection;
  if (connection != null) {
    if (channel == null) {
      connection.closeAsync();
    }
  }
 else {
    if (reconnecting.compareAndSet(false,true)) {
      HostControllerLogger.ROOT_LOGGER.lostRemoteDomainConnection();
      executorService.execute(new Runnable(){
        @Override public void run(){
          try {
            reconnect();
          }
  finally {
            reconnecting.set(false);
          }
        }
        private void reconnect(){
          final ReconnectPolicy policy=reconnectPolicy;
          for (; ; ) {
            try {
              policy.wait(reconnectionCount++);
              if (!reconnect.get()) {
                return;
              }
              HostControllerLogger.ROOT_LOGGER.debugf("trying to reconnect to remote host-controller");
              final RegistrationResult result=connectSync();
              if (result.isOK()) {
                HostControllerLogger.ROOT_LOGGER.reconnectedToMaster();
                return;
              }
            }
 catch (            InterruptedException e) {
              Thread.currentThread().interrupt();
              return;
            }
catch (            Exception e) {
              HostControllerLogger.ROOT_LOGGER.debugf(e,"failed to reconnect to the remote host-controller");
            }
          }
        }
      }
);
    }
  }
}

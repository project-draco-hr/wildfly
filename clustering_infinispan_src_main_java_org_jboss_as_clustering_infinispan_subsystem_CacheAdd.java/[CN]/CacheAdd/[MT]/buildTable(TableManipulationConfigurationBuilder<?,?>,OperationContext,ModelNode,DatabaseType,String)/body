{
  ModelNode tableNamePrefix=JDBCStoreResourceDefinition.PREFIX.resolveModelAttribute(context,table);
  builder.databaseType(type).batchSize(JDBCStoreResourceDefinition.BATCH_SIZE.resolveModelAttribute(context,table).asInt()).fetchSize(JDBCStoreResourceDefinition.FETCH_SIZE.resolveModelAttribute(context,table).asInt()).tableNamePrefix(tableNamePrefix.isDefined() ? tableNamePrefix.asString() : defaultTableNamePrefix).idColumnName(getColumnProperty(context,table,ModelKeys.ID_COLUMN,JDBCStoreResourceDefinition.COLUMN_NAME,"id")).idColumnType(getColumnProperty(context,table,ModelKeys.ID_COLUMN,JDBCStoreResourceDefinition.COLUMN_TYPE,"VARCHAR")).dataColumnName(getColumnProperty(context,table,ModelKeys.DATA_COLUMN,JDBCStoreResourceDefinition.COLUMN_NAME,"datum")).dataColumnType(getColumnProperty(context,table,ModelKeys.DATA_COLUMN,JDBCStoreResourceDefinition.COLUMN_TYPE,"BINARY")).timestampColumnName(getColumnProperty(context,table,ModelKeys.TIMESTAMP_COLUMN,JDBCStoreResourceDefinition.COLUMN_NAME,"version")).timestampColumnType(getColumnProperty(context,table,ModelKeys.TIMESTAMP_COLUMN,JDBCStoreResourceDefinition.COLUMN_TYPE,"BIGINT"));
}

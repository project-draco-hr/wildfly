{
  final InjectedValue<EmbeddedCacheManager> container=new InjectedValue<EmbeddedCacheManager>();
  final CacheDependencies cacheDependencies=new CacheDependencies(container);
  final Service<Cache<Object,Object>> service=new CacheService<Object,Object>(cacheName,cacheDependencies);
  final ServiceBuilder<?> builder=AsynchronousService.addService(target,CacheService.getServiceName(containerName,cacheName),service).addDependency(CacheConfigurationService.getServiceName(containerName,cacheName)).addDependency(EmbeddedCacheManagerService.getServiceName(containerName),EmbeddedCacheManager.class,container).addDependency(config.clustering().cacheMode().isClustered() ? DependencyType.REQUIRED : DependencyType.OPTIONAL,ChannelService.getServiceName(containerName)).setInitialMode(initialMode);
  if (config.transaction().recovery().enabled()) {
    builder.addDependency(TxnServices.JBOSS_TXN_ARJUNA_RECOVERY_MANAGER,XAResourceRecoveryRegistry.class,cacheDependencies.getRecoveryRegistryInjector());
  }
  if (cacheName.equals(defaultCache)) {
    builder.addAliases(CacheService.getServiceName(containerName,null));
  }
  if (initialMode == ServiceController.Mode.ACTIVE) {
    builder.addListener(verificationHandler);
  }
  return builder.install();
}

{
  boolean useStringKeyedTable=store.hasDefined(ModelKeys.STRING_KEYED_TABLE);
  boolean useBinaryKeyedTable=store.hasDefined(ModelKeys.BINARY_KEYED_TABLE);
  if (useStringKeyedTable && !useBinaryKeyedTable) {
    JdbcStringBasedCacheStoreConfigurationBuilder builder=loadersBuilder.addStore(JdbcStringBasedCacheStoreConfigurationBuilder.class);
    buildStringKeyedTable(builder.table(),context,store.get(ModelKeys.STRING_KEYED_TABLE));
    return builder;
  }
 else   if (useBinaryKeyedTable && !useStringKeyedTable) {
    JdbcBinaryCacheStoreConfigurationBuilder builder=loadersBuilder.addStore(JdbcBinaryCacheStoreConfigurationBuilder.class);
    buildBinaryKeyedTable(builder.table(),context,store.get(ModelKeys.BINARY_KEYED_TABLE));
    return builder;
  }
  JdbcMixedCacheStoreConfigurationBuilder builder=loadersBuilder.addStore(JdbcMixedCacheStoreConfigurationBuilder.class);
  buildStringKeyedTable(builder.stringTable(),context,store.get(ModelKeys.STRING_KEYED_TABLE));
  buildBinaryKeyedTable(builder.binaryTable(),context,store.get(ModelKeys.BINARY_KEYED_TABLE));
  return builder;
}

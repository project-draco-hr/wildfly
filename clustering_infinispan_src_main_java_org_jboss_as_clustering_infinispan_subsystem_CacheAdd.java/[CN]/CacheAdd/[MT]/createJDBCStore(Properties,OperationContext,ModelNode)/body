{
  boolean useStringKeyedTable=store.hasDefined(ModelKeys.STRING_KEYED_TABLE);
  boolean useBinaryKeyedTable=store.hasDefined(ModelKeys.BINARY_KEYED_TABLE);
  if (useStringKeyedTable && !useBinaryKeyedTable) {
    this.setStringKeyedTableProperties(properties,context,store.get(ModelKeys.STRING_KEYED_TABLE),"","stringsTableNamePrefix");
    return new JdbcStringBasedCacheStore();
  }
 else   if (useBinaryKeyedTable && !useStringKeyedTable) {
    this.setBinaryKeyedTableProperties(properties,context,store.get(ModelKeys.BINARY_KEYED_TABLE),"","bucketTableNamePrefix");
    return new JdbcBinaryCacheStore();
  }
  this.setStringKeyedTableProperties(properties,context,store.get(ModelKeys.STRING_KEYED_TABLE),"ForStrings","tableNamePrefixForStrings");
  this.setBinaryKeyedTableProperties(properties,context,store.get(ModelKeys.BINARY_KEYED_TABLE),"ForBinary","tableNamePrefixForBinary");
  return new JdbcMixedCacheStore();
}

{
  PathAddress cacheAddress=getCacheAddressFromOperation(operation);
  PathAddress containerAddress=getCacheContainerAddressFromOperation(operation);
  String cacheName=cacheAddress.getLastElement().getValue();
  String containerName=containerAddress.getLastElement().getValue();
  ModelNode resolvedValue=null;
  final String jndiName=((resolvedValue=CacheResource.JNDI_NAME.resolveModelAttribute(context,cacheModel)).isDefined()) ? resolvedValue.asString() : null;
  final ServiceController.Mode initialMode=StartMode.valueOf(CacheResource.START.resolveModelAttribute(context,cacheModel).asString()).getMode();
  final ModuleIdentifier moduleId=(resolvedValue=CacheResource.CACHE_MODULE.resolveModelAttribute(context,cacheModel)).isDefined() ? ModuleIdentifier.fromString(resolvedValue.asString()) : null;
  List<Dependency<?>> dependencies=new LinkedList<Dependency<?>>();
  ConfigurationBuilder builder=new ConfigurationBuilder().read(getDefaultConfiguration(this.mode));
  processModelNode(context,containerName,cacheModel,builder,dependencies);
  String defaultCache=CacheContainerResource.DEFAULT_CACHE.resolveModelAttribute(context,containerModel).asString();
  ServiceTarget target=context.getServiceTarget();
  Configuration config=builder.build();
  Collection<ServiceController<?>> controllers=new ArrayList<ServiceController<?>>(3);
  controllers.add(this.installCacheConfigurationService(target,containerName,cacheName,defaultCache,moduleId,builder,config,dependencies,verificationHandler));
  log.debugf("Cache configuration service for %s installed for container %s",cacheName,containerName);
  controllers.add(this.installCacheService(target,containerName,cacheName,defaultCache,initialMode,config,verificationHandler));
  controllers.add(this.installJndiService(target,containerName,cacheName,InfinispanJndiName.createCacheJndiName(jndiName,containerName,cacheName),verificationHandler));
  log.debugf("Cache service for cache %s installed for container %s",cacheName,containerName);
  return controllers;
}

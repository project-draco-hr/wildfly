{
  boolean useEntryTable=store.hasDefined(ModelKeys.ENTRY_TABLE);
  boolean useBucketTable=store.hasDefined(ModelKeys.BUCKET_TABLE);
  if (useEntryTable && !useBucketTable) {
    this.setEntryTableProperties(properties,store.get(ModelKeys.ENTRY_TABLE),"");
    return new JdbcStringBasedCacheStore();
  }
 else   if (useBucketTable && !useEntryTable) {
    this.setBucketTableProperties(properties,store.get(ModelKeys.BUCKET_TABLE),"");
    return new JdbcBinaryCacheStore();
  }
  this.setEntryTableProperties(properties,store.get(ModelKeys.ENTRY_TABLE),"ForStrings");
  this.setBucketTableProperties(properties,store.get(ModelKeys.BUCKET_TABLE),"ForBinary");
  return new JdbcMixedCacheStore();
}

{
  int offset=0;
  if (ctx.getArgumentsString() != null) {
    offset=ctx.getArgumentsString().length();
    buffer=ctx.getArgumentsString() + buffer;
  }
  if (buffer.isEmpty()) {
    for (    String cmd : cmdRegistry.getTabCompletionCommands()) {
      CommandHandler handler=cmdRegistry.getCommandHandler(cmd);
      if (handler.isAvailable(ctx)) {
        candidates.add(cmd);
      }
    }
    Collections.sort(candidates);
    return 0;
  }
  final DefaultCallbackHandler parsedCmd=(DefaultCallbackHandler)ctx.getParsedCommandLine();
  try {
    parsedCmd.parse(ctx.getCurrentNodePath(),buffer,false);
  }
 catch (  CommandFormatException e) {
    if (!parsedCmd.endsOnAddressOperationNameSeparator() || !parsedCmd.endsOnSeparator()) {
      return -1;
    }
  }
  OperationCandidatesProvider candidatesProvider=cmdProvider;
  if (!buffer.isEmpty()) {
    int cmdFirstIndex=0;
    while (cmdFirstIndex < buffer.length()) {
      final char ch=buffer.charAt(cmdFirstIndex++);
      if (!Character.isWhitespace(ch)) {
        if (ch == '.' || ch == ':' || ch == '/') {
          candidatesProvider=ctx.getOperationCandidatesProvider();
        }
        break;
      }
    }
  }
  int result=OperationRequestCompleter.INSTANCE.complete(ctx,parsedCmd,candidatesProvider,buffer,cursor,candidates);
  if (result <= 0) {
    return result;
  }
  return result - offset;
}

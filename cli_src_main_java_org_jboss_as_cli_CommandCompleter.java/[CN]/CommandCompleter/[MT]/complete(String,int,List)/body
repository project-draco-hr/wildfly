{
  int cmdFirstIndex=0;
  while (cmdFirstIndex < buffer.length()) {
    if (!Character.isWhitespace(buffer.charAt(cmdFirstIndex))) {
      break;
    }
    ++cmdFirstIndex;
  }
  if (cmdFirstIndex == buffer.length()) {
    for (    String cmd : cmdRegistry.getTabCompletionCommands()) {
      CommandHandler handler=cmdRegistry.getCommandHandler(cmd);
      if (handler.isAvailable(ctx)) {
        candidates.add(cmd);
      }
    }
    return cmdFirstIndex;
  }
  char firstChar=buffer.charAt(cmdFirstIndex);
  if (firstChar == '.' || firstChar == ':' || firstChar == '/') {
    return OperationRequestCompleter.INSTANCE.complete(ctx,buffer,cursor,candidates);
  }
  int cmdLastIndex=cmdFirstIndex + 1;
  while (cmdLastIndex < buffer.length() && !Character.isWhitespace(buffer.charAt(cmdLastIndex))) {
    ++cmdLastIndex;
  }
  String cmd=buffer.substring(cmdFirstIndex,cmdLastIndex);
  if (cmdLastIndex < buffer.length()) {
    CommandHandler handler=cmdRegistry.getCommandHandler(cmd);
    if (handler != null) {
      CommandArgumentCompleter argsCompleter=handler.getArgumentCompleter();
      if (argsCompleter != null) {
        int nextCharIndex=cmdLastIndex + 1;
        while (nextCharIndex < buffer.length()) {
          if (!Character.isWhitespace(buffer.charAt(nextCharIndex))) {
            break;
          }
          ++nextCharIndex;
        }
        String cmdBuffer=buffer.substring(nextCharIndex);
        int result=argsCompleter.complete(ctx,cmdBuffer,cursor,candidates);
        if (result >= 0) {
          return nextCharIndex + result;
        }
 else {
          return result;
        }
      }
    }
  }
  if (cmdLastIndex < buffer.length()) {
    cmd=buffer.substring(cmdFirstIndex);
  }
  for (  String command : cmdRegistry.getTabCompletionCommands()) {
    if (!command.startsWith(cmd)) {
      continue;
    }
    CommandHandler handler=cmdRegistry.getCommandHandler(command);
    if (handler.isAvailable(ctx)) {
      candidates.add(command);
    }
  }
  return buffer.length() - cmd.length();
}

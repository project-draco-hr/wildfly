{
  int firstCharIndex=0;
  while (firstCharIndex < buffer.length()) {
    if (!Character.isWhitespace(buffer.charAt(firstCharIndex))) {
      break;
    }
    ++firstCharIndex;
  }
  if (firstCharIndex == buffer.length()) {
    candidates.addAll(commands);
    return firstCharIndex;
  }
  char firstChar=buffer.charAt(firstCharIndex);
  if (firstChar == '.' || firstChar == ':' || firstChar == '/') {
    return -1;
  }
  if (buffer.startsWith("cd ",firstCharIndex) || buffer.startsWith("cn ",firstCharIndex) || buffer.startsWith("ls ")) {
    int nextCharIndex=firstCharIndex + 3;
    while (nextCharIndex < buffer.length()) {
      if (!Character.isWhitespace(buffer.charAt(nextCharIndex))) {
        break;
      }
      ++nextCharIndex;
    }
    if (nextCharIndex < buffer.length() && buffer.charAt(nextCharIndex) == '-') {
      nextCharIndex=buffer.indexOf(' ',nextCharIndex);
      if (nextCharIndex < 0) {
        return -1;
      }
      while (nextCharIndex < buffer.length()) {
        if (!Character.isWhitespace(buffer.charAt(nextCharIndex))) {
          break;
        }
        ++nextCharIndex;
      }
    }
    String opBuffer=buffer.substring(nextCharIndex);
    int result=opCompleter.doComplete(opBuffer,candidates,false);
    if (result >= 0) {
      return nextCharIndex + result;
    }
 else {
      return result;
    }
  }
 else   if (buffer.startsWith("deploy ",firstCharIndex)) {
    int nextCharIndex=firstCharIndex + 7;
    while (nextCharIndex < buffer.length()) {
      if (!Character.isWhitespace(buffer.charAt(nextCharIndex))) {
        break;
      }
      ++nextCharIndex;
    }
    if (nextCharIndex < buffer.length() && buffer.charAt(nextCharIndex) == '-') {
      nextCharIndex=buffer.indexOf(' ',nextCharIndex);
      if (nextCharIndex < 0) {
        return -1;
      }
      while (nextCharIndex < buffer.length()) {
        if (!Character.isWhitespace(buffer.charAt(nextCharIndex))) {
          break;
        }
        ++nextCharIndex;
      }
    }
    String opBuffer=buffer.substring(nextCharIndex);
    int result=fnCompleter.complete(opBuffer,cursor,candidates);
    if (result >= 0) {
      return nextCharIndex + result;
    }
 else {
      return result;
    }
  }
 else   if (buffer.startsWith("undeploy ",firstCharIndex)) {
    int nextCharIndex=firstCharIndex + 9;
    while (nextCharIndex < buffer.length()) {
      if (!Character.isWhitespace(buffer.charAt(nextCharIndex))) {
        break;
      }
      ++nextCharIndex;
    }
    if (nextCharIndex < buffer.length() && buffer.charAt(nextCharIndex) == '-') {
      nextCharIndex=buffer.indexOf(' ',nextCharIndex);
      if (nextCharIndex < 0) {
        return -1;
      }
      while (nextCharIndex < buffer.length()) {
        if (!Character.isWhitespace(buffer.charAt(nextCharIndex))) {
          break;
        }
        ++nextCharIndex;
      }
    }
    if (ctx.getModelControllerClient() != null) {
      List<String> deployments=Util.getDeployments(ctx.getModelControllerClient());
      if (deployments.isEmpty()) {
        return -1;
      }
      String opBuffer=buffer.substring(nextCharIndex).trim();
      if (opBuffer.isEmpty()) {
        candidates.addAll(deployments);
      }
 else {
        for (        String name : deployments) {
          if (name.startsWith(opBuffer)) {
            candidates.add(name);
          }
        }
        Collections.sort(candidates);
      }
      return nextCharIndex;
    }
 else {
      return -1;
    }
  }
  String cmdChunk=buffer.substring(firstCharIndex);
  for (  String command : commands) {
    if (command.startsWith(cmdChunk))     candidates.add(command);
  }
  return buffer.length() - cmdChunk.length();
}

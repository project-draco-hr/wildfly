{
  final BatchBuilder batchBuilder=serviceContainer.batchBuilder();
  batchBuilder.addListener(deploymentServiceListener);
  deploymentServiceListener.startBatch();
  final DeploymentModuleLoader deploymentModuleLoader=deploymentService.getModuleLoader();
  Module module=null;
  final ModuleConfig moduleConfig=deploymentUnitContext.getAttachment(ModuleConfig.ATTACHMENT_KEY);
  if (moduleConfig != null) {
    try {
      module=deploymentModuleLoader.loadModule(moduleConfig.getIdentifier());
    }
 catch (    ModuleLoadException e) {
      throw new DeploymentException("Failed to load deployment module.  The module spec was likely not added to the deployment module loader",e);
    }
  }
  final BatchBuilder subBatchBuilder=batchBuilder.subBatchBuilder();
  subBatchBuilder.addDependency(deploymentServiceName);
  final ClassLoader currentCl=getContextClassLoader();
  try {
    if (module != null) {
      setContextClassLoader(module.getClassLoader());
    }
    DeploymentModuleLoaderSelector.CURRENT_MODULE_LOADER.set(deploymentModuleLoader);
    final DeploymentItemContext deploymentItemContext=new DeploymentItemContextImpl(module,subBatchBuilder);
    final Collection<DeploymentItem> deploymentItems=deploymentUnitContext.getDeploymentItems();
    for (    DeploymentItem deploymentItem : deploymentItems) {
      deploymentItem.install(deploymentItemContext);
    }
  }
  finally {
    setContextClassLoader(currentCl);
    DeploymentModuleLoaderSelector.CURRENT_MODULE_LOADER.set(null);
  }
  try {
    batchBuilder.install();
    deploymentServiceListener.finishBatch();
    deploymentServiceListener.finishDeployment();
  }
 catch (  ServiceRegistryException e) {
    throw new DeploymentException(e);
  }
}

{
  if (discardPolicy == DiscardPolicy.ALWAYS) {
    return new DiscardDefinition(pathElement);
  }
  final List<TransformationRule> rules=new ArrayList<TransformationRule>();
  final Map<String,AttributeTransformationDescription> attributes=registry.buildAttributes();
  final List<TransformationDescription> children=new ArrayList<TransformationDescription>();
  for (  final TransformationDescriptionBuilder builder : this.children) {
    children.add(builder.build());
  }
  return new TransformingDescription(pathElement,pathTransformation,discardPolicy,resourceTransformer,steps,attributes,children);
}

{
  if (discardPolicy == DiscardPolicy.ALWAYS) {
    return new DiscardDefinition(pathElement);
  }
  final Map<String,AttributeTransformationDescription> attributes=registry.buildAttributes();
  final Map<String,OperationTransformer> operations=new HashMap<String,OperationTransformer>();
  for (  final Map.Entry<String,OperationTransformationEntry> entry : operationTransformers.entrySet()) {
    final OperationTransformer transformer=entry.getValue().getOperationTransformer(registry);
    operations.put(entry.getKey(),transformer);
  }
  final List<TransformationDescription> children=new ArrayList<TransformationDescription>();
  for (  final TransformationDescriptionBuilder builder : this.children) {
    children.add(builder.build());
  }
  return new TransformingDescription(pathElement,pathAddressTransformer,discardPolicy,resourceTransformer,attributes,operations,children);
}

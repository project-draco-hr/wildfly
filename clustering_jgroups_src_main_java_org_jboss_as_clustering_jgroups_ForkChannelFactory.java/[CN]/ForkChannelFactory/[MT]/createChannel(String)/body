{
  JGroupsLogger.ROOT_LOGGER.debugf("Creating fork channel %s from channel %s",id,this.channel.getClusterName());
  final String stackName=this.protocols.isEmpty() ? this.channel.getClusterName() : id;
  ProtocolStackConfiguration forkStack=new ProtocolStackConfiguration(){
    @Override public String getName(){
      return stackName;
    }
    @Override public ProtocolDefaults getDefaults(){
      return ForkChannelFactory.this.parentStack.getDefaults();
    }
    @Override public TransportConfiguration getTransport(){
      return ForkChannelFactory.this.parentStack.getTransport();
    }
    @Override public List<ProtocolConfiguration> getProtocols(){
      return ForkChannelFactory.this.protocols;
    }
    @Override public ServerEnvironment getEnvironment(){
      return ForkChannelFactory.this.parentStack.getEnvironment();
    }
    @Override public RelayConfiguration getRelay(){
      return ForkChannelFactory.this.parentStack.getRelay();
    }
  }
;
  List<Protocol> protocols=Configurator.createProtocols(JChannelFactory.createProtocols(forkStack),new ProtocolStack());
  return new ForkChannel(this.channel,stackName,id,protocols.toArray(new Protocol[protocols.size()]));
}

{
  ModelNode opAddr=operation.require(OP_ADDR);
  final PathAddress address=PathAddress.pathAddress(opAddr);
  final String name=address.getLastElement().getValue();
  final ModelNode compensatingOperation=Util.getResourceRemoveOperation(opAddr);
  final ModelNode subModel=context.getSubModel();
  for (  final String attribute : JMSServices.CF_ATTRIBUTES) {
    if (operation.hasDefined(attribute)) {
      subModel.get(attribute).set(operation.get(attribute));
    }
  }
  if (context.getRuntimeContext() != null) {
    context.getRuntimeContext().setRuntimeTask(new RuntimeTask(){
      public void execute(      RuntimeTaskContext context) throws OperationFailedException {
        System.out.println(Arrays.asList(jndiBindings(operation)));
        final ConnectionFactoryConfiguration configuration=createConfiguration(name,operation);
        final ConnectionFactoryService service=new ConnectionFactoryService(configuration);
        final ServiceName serviceName=JMSServices.JMS_CF_BASE.append(name);
        context.getServiceTarget().addService(serviceName,service).addDependency(JMSServices.JMS_MANAGER,JMSServerManager.class,service.getJmsServer()).setInitialMode(Mode.ACTIVE).addListener(new ResultHandler.ServiceStartListener(resultHandler)).install();
      }
    }
);
  }
 else {
    resultHandler.handleResultComplete();
  }
  return new BasicOperationResult(compensatingOperation);
}

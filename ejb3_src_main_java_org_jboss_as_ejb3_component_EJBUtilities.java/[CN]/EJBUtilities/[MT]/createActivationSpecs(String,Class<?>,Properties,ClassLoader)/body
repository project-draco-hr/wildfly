{
  try {
    final String raIdentifier=ConnectorServices.getRegisteredResourceAdapterIdentifier(resourceAdapterName);
    if (raIdentifier == null) {
      throw EjbLogger.ROOT_LOGGER.unknownResourceAdapter(resourceAdapterName);
    }
    final ResourceAdapterRepository resourceAdapterRepository=getResourceAdapterRepository();
    if (resourceAdapterRepository == null) {
      throw EjbLogger.ROOT_LOGGER.resourceAdapterRepositoryUnAvailable();
    }
    final List<MessageListener> messageListeners=resourceAdapterRepository.getMessageListeners(raIdentifier);
    if (messageListeners == null || messageListeners.isEmpty()) {
      throw EjbLogger.ROOT_LOGGER.unknownMessageListenerType(messageListenerInterface.getName(),resourceAdapterName);
    }
    MessageListener requiredMessageListener=null;
    for (    final MessageListener messageListener : messageListeners) {
      if (messageListenerInterface.equals(messageListener.getType())) {
        requiredMessageListener=messageListener;
        break;
      }
    }
    if (requiredMessageListener == null) {
      throw EjbLogger.ROOT_LOGGER.unknownMessageListenerType(messageListenerInterface.getName(),resourceAdapterName);
    }
    final Activation activation=requiredMessageListener.getActivation();
    final Properties validActivationConfigProps=this.filterUnknownActivationConfigProperties(resourceAdapterName,activation,activationConfigProperties);
    final ActivationSpec activationSpec=activation.createInstance();
    PropertyEditors.mapJavaBeanProperties(activationSpec,validActivationConfigProps);
    return activationSpec;
  }
 catch (  IllegalAccessException e) {
    throw new RuntimeException(e);
  }
catch (  ResourceException e) {
    throw new RuntimeException(e);
  }
catch (  InstantiationException e) {
    throw new RuntimeException(e);
  }
catch (  NotFoundException e) {
    throw new RuntimeException(e);
  }
catch (  IntrospectionException e) {
    throw new RuntimeException(e);
  }
}

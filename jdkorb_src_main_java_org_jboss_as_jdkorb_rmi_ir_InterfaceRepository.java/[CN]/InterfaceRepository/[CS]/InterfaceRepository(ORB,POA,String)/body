{
  this.orb=orb;
  this.poa=poa;
  impl=new RepositoryImpl(orb,poa,name);
  final HashMap<Class<?>,TypeCode> primitiveTypeCodeMap=new HashMap<Class<?>,TypeCode>();
  primitiveTypeCodeMap.put(Void.TYPE,orb.get_primitive_tc(TCKind.tk_void));
  primitiveTypeCodeMap.put(Boolean.TYPE,orb.get_primitive_tc(TCKind.tk_boolean));
  primitiveTypeCodeMap.put(Character.TYPE,orb.get_primitive_tc(TCKind.tk_wchar));
  primitiveTypeCodeMap.put(Byte.TYPE,orb.get_primitive_tc(TCKind.tk_octet));
  primitiveTypeCodeMap.put(Short.TYPE,orb.get_primitive_tc(TCKind.tk_short));
  primitiveTypeCodeMap.put(Integer.TYPE,orb.get_primitive_tc(TCKind.tk_long));
  primitiveTypeCodeMap.put(Long.TYPE,orb.get_primitive_tc(TCKind.tk_longlong));
  primitiveTypeCodeMap.put(Float.TYPE,orb.get_primitive_tc(TCKind.tk_float));
  primitiveTypeCodeMap.put(Double.TYPE,orb.get_primitive_tc(TCKind.tk_double));
  this.typeCodeMap=primitiveTypeCodeMap;
  final HashMap<Class<?>,TypeCode> typeCodes=new HashMap<Class<?>,TypeCode>(primitiveTypeCodeMap);
  typeCodes.put(String.class,orb.create_wstring_tc(0));
  constantTypeCodeMap=typeCodes;
}

{
  if (WildFlySecurityManager.isChecking()) {
    return WildFlySecurityManager.doUnchecked(new PrivilegedAction<SecurityContext>(){
      @Override public SecurityContext run(){
        try {
          return SecurityContextFactory.createSecurityContext(domain);
        }
 catch (        Exception e) {
          throw UndertowLogger.ROOT_LOGGER.failToCreateSecurityContext(e);
        }
      }
    }
);
  }
 else {
    try {
      return SecurityContextFactory.createSecurityContext(domain);
    }
 catch (    Exception e) {
      throw UndertowLogger.ROOT_LOGGER.failToCreateSecurityContext(e);
    }
  }
}

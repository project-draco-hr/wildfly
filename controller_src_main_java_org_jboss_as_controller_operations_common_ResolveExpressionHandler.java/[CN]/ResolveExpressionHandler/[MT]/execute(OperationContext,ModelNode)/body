{
  context.addStep(new OperationStepHandler(){
    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {
      ModelNode toResolve=EXPRESSION.validateOperation(operation);
      if (toResolve.getType() == ModelType.STRING) {
        toResolve=ParseUtils.parsePossibleExpression(toResolve.asString());
      }
      try {
        ModelNode resolved=toResolve.resolve();
        ModelNode result=context.getResult();
        if (resolved.isDefined()) {
          result.set(resolved.asString());
        }
        context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);
      }
 catch (      SecurityException e) {
        throw new OperationFailedException(new ModelNode().set(ControllerLogger.ROOT_LOGGER.noPermissionToResolveExpression(toResolve,e)));
      }
catch (      IllegalStateException e) {
        throw new OperationFailedException(new ModelNode().set(ControllerLogger.ROOT_LOGGER.cannotResolveExpression(toResolve,e)));
      }
    }
  }
,OperationContext.Stage.RUNTIME);
  context.stepCompleted();
}

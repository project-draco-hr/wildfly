{
  log.info("Checking timeout interceptor on: " + currentPhase);
  boolean okContext=false;
  if (previousPhase == null) {
    okContext=ctx.getContextData().get("interceptor") == null;
  }
 else {
    okContext=previousPhase.equals(ctx.getContextData().get("interceptor"));
  }
  ctx.getContextData().put("interceptor",currentPhase);
  final boolean okTimer=ctx.getTimer() != null;
  final boolean okTarget=ctx.getTarget() instanceof TimeoutBean;
  final boolean okMethod="timeout".equals(ctx.getMethod().getName());
  Object[] params=ctx.getParameters();
  final boolean okParams=params[0] instanceof Timer;
  String retStr="Timeout" + currentPhase;
  boolean isOk=okContext && okTimer && okTarget&& okMethod&& okParams;
  if (isOk) {
    retStr+="OK:";
  }
 else {
    retStr+="FAIL:";
    retStr+=okContext ? "" : "(context expected: " + previousPhase + " but was "+ ctx.getContextData().get("interceptor")+ ")";
    retStr+=okTimer ? "" : "(timer was null but it can't be)";
    retStr+=okTarget ? "" : "(target was not instance of InvocationBean but was " + ctx.getTarget() + ")";
    retStr+=okMethod ? "" : "(method was not callMethod but was " + ctx.getMethod().getName() + ")";
    retStr+=okParams ? "" : "(first param has to be type of Timer and not " + params[0] + " )";
    log.error(retStr);
  }
  return retStr;
}

{
  List<ProtocolConfiguration> protocols=stack.getProtocols();
  List<org.jgroups.conf.ProtocolConfiguration> result=new ArrayList<>(protocols.size());
  TransportConfiguration transport=stack.getTransport();
  for (  ProtocolConfiguration protocol : protocols) {
    org.jgroups.conf.ProtocolConfiguration config=createProtocol(stack,protocol);
    Introspector introspector=new Introspector(config);
    SocketBinding binding=protocol.getSocketBinding();
    if (binding != null) {
      configureBindAddress(introspector,config,binding);
      configureServerSocket(introspector,config,"bind_port",binding);
      configureServerSocket(introspector,config,"start_port",binding);
      configureMulticastSocket(introspector,config,"mcast_addr","mcast_port",binding);
    }
 else     if (transport.getSocketBinding() != null) {
      configureBindAddress(introspector,config,transport.getSocketBinding());
    }
    if (!multicastCapable) {
      setProperty(introspector,config,"use_mcast_xmit",String.valueOf(false));
      setProperty(introspector,config,"use_mcast_xmit_req",String.valueOf(false));
    }
    DataSource dataSource=protocol.getDataSource();
    if (dataSource != null) {
      String jndiName=((org.jboss.as.connector.subsystems.datasources.WildFlyDataSource)dataSource).getJndiName();
      setProperty(introspector,config,"datasource_jndi_name",jndiName);
    }
    result.add(config);
  }
  return result;
}

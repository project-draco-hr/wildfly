{
  final String name=PathAddress.pathAddress(operation.get(OP_ADDR)).getLastElement().getValue();
  final String value=newValue.isDefined() ? newValue.asString() : null;
  final boolean applyToRuntime=processEnvironment != null && processEnvironment.isRuntimeSystemPropertyUpdateAllowed(name,value,context.isBooting());
  final boolean reload=!applyToRuntime && context.getProcessType().isServer();
  if (applyToRuntime) {
    context.addStep(new OperationStepHandler(){
      public void execute(      OperationContext context,      ModelNode operation) throws OperationFailedException {
        String setValue=value == null ? null : context.resolveExpressions(newValue).asString();
        SecurityActions.setSystemProperty(name,setValue);
        if (processEnvironment != null) {
          processEnvironment.systemPropertyUpdated(name,setValue);
        }
        if (context.completeStep() == OperationContext.ResultAction.ROLLBACK) {
          final String oldValue=currentValue.isDefined() ? context.resolveExpressions(currentValue).asString() : null;
          if (oldValue != null) {
            SecurityActions.setSystemProperty(name,oldValue);
          }
 else {
            SecurityActions.clearSystemProperty(name);
          }
          if (processEnvironment != null) {
            processEnvironment.systemPropertyUpdated(name,oldValue);
          }
        }
      }
    }
,OperationContext.Stage.RUNTIME);
  }
 else   if (reload) {
    context.reloadRequired();
  }
  context.completeStep(new OperationContext.RollbackHandler(){
    @Override public void handleRollback(    OperationContext context,    ModelNode operation){
      if (reload) {
        context.revertReloadRequired();
      }
    }
  }
);
}

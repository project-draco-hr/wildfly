{
  readResource(true,true,null,null,null,null);
  addCore(main);
  readResource(true,false,"R/O","R/W",null,null);
  readResource(true,true,"R/O","R/W","runtime",null);
  addChild(main);
  readResource(true,false,"R/O","R/W",null,"R/W 2");
  readResource(true,true,"R/O","R/W","runtime","R/W 2");
  readResource(true,false,"R/O","R/W",null,"R/W 2",other,MODEL);
  readResource(true,true,"R/O","R/W","runtime","R/W 2",other,MODEL);
  writeAttribute("rw","abc",other,MODEL);
  Assert.assertEquals("abc",readAttribute("rw",other,MODEL));
  Assert.assertEquals("abc",readAttribute("rwa",other,MODEL));
  writeAttribute("rwa","123",other,MODEL);
  Assert.assertEquals("123",readAttribute("rw",other,MODEL));
  Assert.assertEquals("123",readAttribute("rwa",other,MODEL));
  undefineAttribute("rw",other,MODEL);
  Assert.assertNull(readAttribute("rw",other,MODEL));
  Assert.assertNull(readAttribute("rwa",other,MODEL));
  writeAttribute("rw","aliased",other,MODEL,CHILD,KID_ALIASED);
  Assert.assertEquals("aliased",readAttribute("rw",other,MODEL,CHILD,KID_MODEL));
  writeAttribute("rw","main",other,MODEL,CHILD,KID_MODEL);
  Assert.assertEquals("main",readAttribute("rw",other,MODEL,CHILD,KID_ALIASED));
  ModelNode op=createOperation(REMOVE,main,MODEL);
  executeForResult(op);
  readResource(true,true,null,null,null,null);
}

{
  ModelNode op=createOperation(READ_RESOURCE_DESCRIPTION_OPERATION);
  op.get(RECURSIVE).set(true);
  op.get(OPERATIONS).set(true);
  op.get(INHERITED).set(false);
  ModelNode result=executeForResult(op);
  Assert.assertTrue(result.get(CHILDREN,CORE,MODEL_DESCRIPTION,MODEL).isDefined());
  Assert.assertFalse(result.get(CHILDREN,ALIASED,MODEL_DESCRIPTION,MODEL).isDefined());
  op=createOperation(READ_RESOURCE_DESCRIPTION_OPERATION);
  op.get(RECURSIVE).set(true);
  op.get(OPERATIONS).set(true);
  op.get(INCLUDE_ALIASES).set(true);
  op.get(INHERITED).set(false);
  result=executeForResult(op);
  Assert.assertTrue(result.get(CHILDREN,CORE,MODEL_DESCRIPTION,MODEL).isDefined());
  Assert.assertTrue(result.get(CHILDREN,ALIASED,MODEL_DESCRIPTION,MODEL).isDefined());
  checkReadResourceDescription(result.get(CHILDREN,CORE,MODEL_DESCRIPTION,MODEL),true);
  checkReadResourceDescription(result.get(CHILDREN,ALIASED,MODEL_DESCRIPTION,MODEL),true);
  op=createOperation(READ_RESOURCE_DESCRIPTION_OPERATION,CORE,MODEL);
  op.get(RECURSIVE).set(true);
  op.get(OPERATIONS).set(true);
  op.get(INHERITED).set(false);
  result=executeForResult(op);
  Assert.assertTrue(result.isDefined());
  checkReadResourceDescription(result,false);
  op=createOperation(READ_RESOURCE_DESCRIPTION_OPERATION,CORE,MODEL);
  op.get(RECURSIVE).set(true);
  op.get(OPERATIONS).set(true);
  op.get(INHERITED).set(false);
  op.get(INCLUDE_ALIASES).set(true);
  result=executeForResult(op);
  Assert.assertTrue(result.isDefined());
  checkReadResourceDescription(result,true);
  op=createOperation(READ_RESOURCE_DESCRIPTION_OPERATION,ALIASED,MODEL);
  op.get(RECURSIVE).set(true);
  op.get(OPERATIONS).set(true);
  op.get(INHERITED).set(false);
  result=executeForResult(op);
  Assert.assertTrue(result.isDefined());
  checkReadResourceDescription(result,false);
  op=createOperation(READ_RESOURCE_DESCRIPTION_OPERATION,ALIASED,MODEL);
  op.get(RECURSIVE).set(true);
  op.get(OPERATIONS).set(true);
  op.get(INHERITED).set(false);
  op.get(INCLUDE_ALIASES).set(true);
  result=executeForResult(op);
  Assert.assertTrue(result.isDefined());
  checkReadResourceDescription(result,true);
  op=createOperation(READ_RESOURCE_DESCRIPTION_OPERATION,CORE,MODEL,CHILD,KID_MODEL);
  op.get(RECURSIVE).set(true);
  op.get(OPERATIONS).set(true);
  op.get(INHERITED).set(false);
  result=executeForResult(op);
  Assert.assertTrue(result.isDefined());
  checkChildResourceDescription(result);
  op=createOperation(READ_RESOURCE_DESCRIPTION_OPERATION,ALIASED,MODEL,CHILD,KID_MODEL);
  op.get(RECURSIVE).set(true);
  op.get(OPERATIONS).set(true);
  op.get(INHERITED).set(false);
  result=executeForResult(op);
  Assert.assertTrue(result.isDefined());
  checkChildResourceDescription(result);
  op=createOperation(READ_RESOURCE_DESCRIPTION_OPERATION,CORE,MODEL,CHILD,KID_ALIASED);
  op.get(RECURSIVE).set(true);
  op.get(OPERATIONS).set(true);
  op.get(INHERITED).set(false);
  result=executeForResult(op);
  Assert.assertTrue(result.isDefined());
  checkChildResourceDescription(result);
  op=createOperation(READ_RESOURCE_DESCRIPTION_OPERATION,ALIASED,MODEL,CHILD,KID_ALIASED);
  op.get(RECURSIVE).set(true);
  op.get(OPERATIONS).set(true);
  op.get(INHERITED).set(false);
  result=executeForResult(op);
  Assert.assertTrue(result.isDefined());
  checkChildResourceDescription(result);
}

{
  context.startSubsystemElement(Namespace.CURRENT.getUriString(),false);
  ModelNode scanners=context.getModelNode();
  for (  final Property list : scanners.asPropertyList()) {
    final ModelNode node=list.getValue();
    for (    final Property scanner : node.asPropertyList()) {
      final String scannerName=scanner.getName();
      final ModelNode configuration=scanner.getValue();
      writer.writeEmptyElement(Element.DEPLOYMENT_SCANNER.getLocalName());
      if (!DeploymentScannerExtension.DEFAULT_SCANNER_NAME.equals(scannerName)) {
        writer.writeAttribute(Attribute.NAME.getLocalName(),scannerName);
      }
      DeploymentScannerDefinition.PATH.marshallAsAttribute(configuration,writer);
      DeploymentScannerDefinition.RELATIVE_TO.marshallAsAttribute(configuration,writer);
      DeploymentScannerDefinition.SCAN_ENABLED.marshallAsAttribute(configuration,writer);
      DeploymentScannerDefinition.SCAN_INTERVAL.marshallAsAttribute(configuration,writer);
      DeploymentScannerDefinition.AUTO_DEPLOY_ZIPPED.marshallAsAttribute(configuration,writer);
      DeploymentScannerDefinition.AUTO_DEPLOY_EXPLODED.marshallAsAttribute(configuration,writer);
      DeploymentScannerDefinition.AUTO_DEPLOY_XML.marshallAsAttribute(configuration,writer);
      DeploymentScannerDefinition.DEPLOYMENT_TIMEOUT.marshallAsAttribute(configuration,writer);
      DeploymentScannerDefinition.RUNTIME_FAILURE_CAUSES_ROLLBACK.marshallAsAttribute(configuration,writer);
    }
    writer.writeEndElement();
  }
}

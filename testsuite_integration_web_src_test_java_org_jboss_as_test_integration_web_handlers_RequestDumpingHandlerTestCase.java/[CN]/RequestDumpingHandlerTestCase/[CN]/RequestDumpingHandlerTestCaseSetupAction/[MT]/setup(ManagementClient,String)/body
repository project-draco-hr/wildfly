{
  ModelNode op=Util.getReadAttributeOperation(aLogAddr,"file");
  originalValue=ManagementOperations.executeOperation(managementClient.getControllerClient(),op);
  log.debug("Original value: " + originalValue.toString());
  relativeTo=originalValue.get("relative-to").asString();
  op=Util.getReadAttributeOperation(PathAddress.pathAddress("path",relativeTo),"path");
  ModelNode logPathModel=ManagementOperations.executeOperation(managementClient.getControllerClient(),op);
  logFilePath=Paths.get(logPathModel.asString() + File.separator + LOG_FILE_PREFIX+ LOG_FILE_SUFFIX);
  ModelNode file=new ModelNode();
  file.get("relative-to").set(relativeTo);
  file.get("path").set(LOG_FILE_PREFIX + LOG_FILE_SUFFIX);
  op=Util.createAddOperation(ADDR_FILE_HANDLER);
  op.get(FILE).set(file);
  ManagementOperations.executeOperation(managementClient.getControllerClient(),op);
  op=Util.createAddOperation(ADDR_LOGGER);
  LinkedList<ModelNode> handlers=new LinkedList<ModelNode>();
  handlers.add(new ModelNode(FILE_HANDLER_NAME));
  op.get("handlers").set(handlers);
  ManagementOperations.executeOperation(managementClient.getControllerClient(),op);
  FileUtils.deleteDirectory(WORK_DIR);
  WORK_DIR.mkdirs();
  Utils.createKeyMaterial(WORK_DIR);
  ModelNode operation=createOpNode(HTTPS_REALM_PATH,ModelDescriptionConstants.ADD);
  Utils.applyUpdate(operation,managementClient.getControllerClient());
  operation=createOpNode(HTTPS_REALM_AUTH_PATH,ModelDescriptionConstants.ADD);
  operation.get("keystore-path").set(SERVER_TRUSTSTORE_FILE.getAbsolutePath());
  operation.get("keystore-password").set(SecurityTestConstants.KEYSTORE_PASSWORD);
  Utils.applyUpdate(operation,managementClient.getControllerClient());
  operation=createOpNode(HTTPS_REALM_SSL_PATH,ModelDescriptionConstants.ADD);
  operation.get(PROTOCOL).set("TLSv1");
  operation.get("keystore-path").set(SERVER_KEYSTORE_FILE.getAbsolutePath());
  operation.get("keystore-password").set(SecurityTestConstants.KEYSTORE_PASSWORD);
  Utils.applyUpdate(operation,managementClient.getControllerClient());
  operation=createOpNode(HTTPS_LISTENER_PATH,ModelDescriptionConstants.ADD);
  operation.get("socket-binding").set(HTTPS);
  operation.get("security-realm").set(HTTPS_REALM);
  Utils.applyUpdate(operation,managementClient.getControllerClient());
  ServerReload.executeReloadAndWaitForCompletion(managementClient.getControllerClient());
}

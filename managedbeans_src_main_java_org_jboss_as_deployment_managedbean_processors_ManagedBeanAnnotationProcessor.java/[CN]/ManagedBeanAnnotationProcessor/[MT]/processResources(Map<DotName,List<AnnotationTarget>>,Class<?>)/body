{
  final List<AnnotationTarget> resourceTargets=classAnnotations.get(RESOURCE_ANNOTATION_NAME);
  if (resourceTargets == null) {
    return Collections.emptyList();
  }
  final List<ResourceConfiguration> resourceConfigurations=new ArrayList<ResourceConfiguration>(resourceTargets.size());
  for (  AnnotationTarget annotationTarget : resourceTargets) {
    final ResourceConfiguration resourceConfiguration;
    if (annotationTarget instanceof FieldInfo) {
      resourceConfiguration=processFieldResource(FieldInfo.class.cast(annotationTarget),owningClass);
    }
 else     if (annotationTarget instanceof MethodInfo) {
      resourceConfiguration=processMethodResource(MethodInfo.class.cast(annotationTarget),owningClass);
    }
 else     if (annotationTarget instanceof ClassInfo) {
      final Resource resource=owningClass.getAnnotation(Resource.class);
      if (resource == null) {
        throw new DeploymentUnitProcessingException("Failed to get @Resource annotation from class " + owningClass.getName());
      }
      resourceConfiguration=processClassResource(owningClass,resource);
    }
 else {
      continue;
    }
    if (resourceConfiguration != null) {
      resourceConfigurations.add(resourceConfiguration);
    }
  }
  resourceConfigurations.addAll(processClassResources(owningClass));
  return resourceConfigurations;
}

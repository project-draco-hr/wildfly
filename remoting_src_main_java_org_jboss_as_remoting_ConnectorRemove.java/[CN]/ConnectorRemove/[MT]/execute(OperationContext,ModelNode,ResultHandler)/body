{
  final PathAddress address=PathAddress.pathAddress(operation.require(OP_ADDR));
  final String name=address.getLastElement().getValue();
  final ModelNode connector=context.getSubModel();
  final ModelNode compensating=new ModelNode();
  compensating.get(OP_ADDR).set(operation.require(OP_ADDR));
  compensating.get(OP).set(ADD);
  compensating.get(SASL).set(connector.get(SASL));
  compensating.get(AUTHENTICATION_PROVIDER).set(connector.get(AUTHENTICATION_PROVIDER));
  compensating.get(PROPERTIES).set(connector.get(PROPERTIES));
  if (context.getRuntimeContext() != null) {
    ServiceName connectorServiceName=RemotingServices.connectorServiceName(name);
    final ServiceController<?> controller=context.getRuntimeContext().getServiceRegistry().getService(connectorServiceName);
    if (controller != null) {
      controller.addListener(new ResultHandler.ServiceRemoveListener(resultHandler));
    }
 else {
      resultHandler.handleResultComplete();
    }
  }
 else {
    resultHandler.handleResultComplete();
  }
  return new BasicOperationResult(compensating);
}

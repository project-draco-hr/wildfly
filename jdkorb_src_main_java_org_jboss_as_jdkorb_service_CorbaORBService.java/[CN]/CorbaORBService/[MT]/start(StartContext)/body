{
  JdkORBLogger.ROOT_LOGGER.debugServiceStartup(context.getController().getName().getCanonicalName());
  try {
    properties.setProperty(JdkORBSubsystemConstants.ORB_CLASS,ORBImpl.class.getName());
    properties.setProperty(JdkORBSubsystemConstants.ORB_SINGLETON_CLASS,ORBSingleton.class.getName());
    SecurityActions.setSystemProperty(JdkORBSubsystemConstants.ORB_CLASS,ORBImpl.class.getName());
    SecurityActions.setSystemProperty(JdkORBSubsystemConstants.ORB_SINGLETON_CLASS,ORBSingleton.class.getName());
    properties.setProperty(ORBConstants.IOR_TO_SOCKET_INFO_CLASS_PROPERTY,CSIV2IORToSocketInfo.class.getName());
    if (this.jdkORBSocketBindingInjector.getValue() != null) {
      InetSocketAddress address=this.jdkORBSocketBindingInjector.getValue().getSocketAddress();
      properties.setProperty(ORBConstants.SERVER_HOST_PROPERTY,address.getAddress().getHostAddress());
      properties.setProperty(ORBConstants.SERVER_PORT_PROPERTY,String.valueOf(address.getPort()));
      properties.setProperty(ORBConstants.PERSISTENT_SERVER_PORT_PROPERTY,String.valueOf(address.getPort()));
    }
    if (this.jdkORBSSLSocketBindingInjector.getValue() != null) {
      InetSocketAddress address=this.jdkORBSSLSocketBindingInjector.getValue().getSocketAddress();
      properties.setProperty(JdkORBSubsystemConstants.ORB_SSL_PORT,String.valueOf(address.getPort()));
      final String sslSocket=new StringBuilder().append(JdkORBSubsystemConstants.SSL_SOCKET_TYPE).append(":").append(String.valueOf(address.getPort())).toString();
      properties.setProperty(ORBConstants.LISTEN_SOCKET_PROPERTY,sslSocket);
      if (!properties.containsKey(JdkORBSubsystemConstants.ORB_ADDRESS)) {
        properties.setProperty(JdkORBSubsystemConstants.ORB_ADDRESS,address.getAddress().getHostAddress());
      }
    }
    ClassLoader loader=WildFlySecurityManager.getCurrentContextClassLoaderPrivileged();
    try {
      WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(WildFlySecurityManager.getClassLoaderPrivileged(this.getClass()));
      this.orb=ORB.init(new String[0],properties);
      ORB.init();
    }
  finally {
      WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(loader);
    }
    Thread orbThread=SecurityActions.createThread(new ORBRunner(this.orb),"ORB Run Thread");
    orbThread.start();
    ServiceTarget target=context.getChildTarget();
    CorbaServiceUtil.bindObject(target,"ORB",this.orb);
  }
 catch (  Exception e) {
    throw new StartException(e);
  }
  CorbaUtils.setOrbProperties(properties);
  JdkORBLogger.ROOT_LOGGER.corbaORBServiceStarted();
}

{
  final EnumSet<Attribute> required=EnumSet.of(Attribute.HOST,Attribute.PORT);
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    final String value=reader.getAttributeValue(i);
    if (!isNoNamespaceAttribute(reader,i)) {
      throw unexpectedAttribute(reader,i);
    }
 else {
      final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
      required.remove(attribute);
switch (attribute) {
case HOST:
{
          outboundSocketBindingAddOperation.get(HOST).set(value);
          break;
        }
case PORT:
{
        outboundSocketBindingAddOperation.get(PORT).set(parseBoundedIntegerAttribute(reader,i,0,65535,true));
        break;
      }
default :
    throw unexpectedAttribute(reader,i);
}
}
}
if (!required.isEmpty()) {
throw missingRequired(reader,required);
}
requireNoContent(reader);
}

{
  final ModelNode mapping=new ModelNode();
  final ModelNode sourceNetwork=mapping.get(SOURCE_NETWORK);
  final ModelNode destination=mapping.get(DESTINATION_ADDRESS);
  final ModelNode destinationPort=mapping.get(DESTINATION_PORT);
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    final String value=reader.getAttributeValue(i);
    if (!isNoNamespaceAttribute(reader,i)) {
      throw unexpectedAttribute(reader,i);
    }
    final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case SOURCE_NETWORK:
      validateAddressMask(value,reader.getLocation());
    sourceNetwork.set(value);
  break;
case DESTINATION_ADDRESS:
if (value == null || value.isEmpty()) {
  throw invalidAttributeValue(reader,i);
}
destination.set(value);
break;
case DESTINATION_PORT:
{
destinationPort.set(parseBoundedIntegerAttribute(reader,i,0,65535,true));
break;
}
}
}
if (!destination.isDefined()) {
throw MESSAGES.missingRequiredAttributes(new StringBuilder(DESTINATION_PORT),reader.getLocation());
}
requireNoContent(reader);
return mapping;
}

{
  writer.writeStartElement(Element.SOCKET_BINDING_GROUP.getLocalName());
  SocketBindingGroupResourceDefinition.NAME.marshallAsAttribute(bindingGroup,writer);
  SocketBindingGroupResourceDefinition.DEFAULT_INTERFACE.marshallAsAttribute(bindingGroup,writer);
  if (fromServer) {
    SocketBindingGroupResourceDefinition.PORT_OFFSET.marshallAsAttribute(bindingGroup,writer);
  }
  if (!fromServer) {
    SocketBindingGroupResourceDefinition.INCLUDES.marshallAsElement(bindingGroup,writer);
  }
  if (bindingGroup.hasDefined(SOCKET_BINDING)) {
    ModelNode bindings=bindingGroup.get(SOCKET_BINDING);
    for (    String bindingName : bindings.keys()) {
      ModelNode binding=bindings.get(bindingName);
      writer.writeStartElement(Element.SOCKET_BINDING.getLocalName());
      writeAttribute(writer,Attribute.NAME,bindingName);
      ModelNode attr=binding.get(PORT);
      writeAttribute(writer,Attribute.PORT,attr.asString());
      attr=binding.get(FIXED_PORT);
      if (attr.isDefined() && attr.asBoolean()) {
        writeAttribute(writer,Attribute.FIXED_PORT,attr.asString());
      }
      attr=binding.get(INTERFACE);
      if (attr.isDefined()) {
        writeAttribute(writer,Attribute.INTERFACE,attr.asString());
      }
      attr=binding.get(MULTICAST_ADDRESS);
      if (attr.isDefined()) {
        writeAttribute(writer,Attribute.MULTICAST_ADDRESS,attr.asString());
      }
      attr=binding.get(MULTICAST_PORT);
      if (attr.isDefined()) {
        writeAttribute(writer,Attribute.MULTICAST_PORT,attr.asString());
      }
      writer.writeEndElement();
    }
  }
  if (bindingGroup.hasDefined(LOCAL_DESTINATION_CLIENT_SOCKET_BINDING)) {
    final ModelNode localDestinationClientSocketBindings=bindingGroup.get(LOCAL_DESTINATION_CLIENT_SOCKET_BINDING);
    for (    final String clientSocketBindingName : localDestinationClientSocketBindings.keys()) {
      final ModelNode clientSocketBinding=localDestinationClientSocketBindings.get(clientSocketBindingName);
      writer.writeStartElement(Element.CLIENT_SOCKET_BINDING.getLocalName());
      writeAttribute(writer,Attribute.NAME,clientSocketBindingName);
      if (clientSocketBinding.hasDefined(SOURCE_PORT)) {
        final String sourcePort=clientSocketBinding.get(SOURCE_PORT).asString();
        writeAttribute(writer,Attribute.SOURCE_PORT,sourcePort);
      }
      if (clientSocketBinding.hasDefined(SOURCE_INTERFACE)) {
        final String sourceInterface=clientSocketBinding.get(SOURCE_INTERFACE).asString();
        writeAttribute(writer,Attribute.SOURCE_INTERFACE,sourceInterface);
      }
      if (clientSocketBinding.hasDefined(FIXED_SOURCE_PORT)) {
        final String fixedSourcePort=clientSocketBinding.get(FIXED_SOURCE_PORT).asString();
        writeAttribute(writer,Attribute.FIXED_SOURCE_PORT,fixedSourcePort);
      }
      writer.writeStartElement(Element.LOCAL_DESTINATION.getLocalName());
      final ModelNode socketBindingRef=clientSocketBinding.get(SOCKET_BINDING_REF);
      writeAttribute(writer,Attribute.SOCKET_BINDING_REF,socketBindingRef.asString());
      writer.writeEndElement();
      writer.writeEndElement();
    }
  }
  if (bindingGroup.hasDefined(REMOTE_DESTINATION_CLIENT_SOCKET_BINDING)) {
    final ModelNode remoteDestinationClientSocketBindings=bindingGroup.get(REMOTE_DESTINATION_CLIENT_SOCKET_BINDING);
    for (    final String clientSocketBindingName : remoteDestinationClientSocketBindings.keys()) {
      final ModelNode clientSocketBinding=remoteDestinationClientSocketBindings.get(clientSocketBindingName);
      writer.writeStartElement(Element.CLIENT_SOCKET_BINDING.getLocalName());
      writeAttribute(writer,Attribute.NAME,clientSocketBindingName);
      if (clientSocketBinding.hasDefined(SOURCE_PORT)) {
        final String sourcePort=clientSocketBinding.get(SOURCE_PORT).asString();
        writeAttribute(writer,Attribute.SOURCE_PORT,sourcePort);
      }
      if (clientSocketBinding.hasDefined(SOURCE_INTERFACE)) {
        final String sourceInterface=clientSocketBinding.get(SOURCE_INTERFACE).asString();
        writeAttribute(writer,Attribute.SOURCE_INTERFACE,sourceInterface);
      }
      if (clientSocketBinding.hasDefined(FIXED_SOURCE_PORT)) {
        final String fixedSourcePort=clientSocketBinding.get(FIXED_SOURCE_PORT).asString();
        writeAttribute(writer,Attribute.FIXED_SOURCE_PORT,fixedSourcePort);
      }
      writer.writeStartElement(Element.REMOTE_DESTINATION.getLocalName());
      final ModelNode host=clientSocketBinding.get(HOST);
      writeAttribute(writer,Attribute.HOST,host.asString());
      final ModelNode destPort=clientSocketBinding.get(PORT);
      writeAttribute(writer,Attribute.PORT,destPort.asString());
      writer.writeEndElement();
      writer.writeEndElement();
    }
  }
  writer.writeEndElement();
}

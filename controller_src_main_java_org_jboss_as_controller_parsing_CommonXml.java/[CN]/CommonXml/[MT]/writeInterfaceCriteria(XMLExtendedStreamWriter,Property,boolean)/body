{
  final Element element=Element.forName(property.getName());
switch (element) {
case INET_ADDRESS:
    writeInterfaceCriteria(writer,element,Attribute.VALUE,property.getValue(),nested);
  break;
case LOOPBACK_ADDRESS:
writeInterfaceCriteria(writer,element,Attribute.VALUE,property.getValue(),nested);
break;
case LINK_LOCAL_ADDRESS:
case LOOPBACK:
case MULTICAST:
case POINT_TO_POINT:
case PUBLIC_ADDRESS:
case SITE_LOCAL_ADDRESS:
case UP:
case VIRTUAL:
{
if (property.getValue().asBoolean(false)) {
writer.writeEmptyElement(element.getLocalName());
}
break;
}
case NIC:
writeInterfaceCriteria(writer,element,Attribute.NAME,property.getValue(),nested);
break;
case NIC_MATCH:
writeInterfaceCriteria(writer,element,Attribute.PATTERN,property.getValue(),nested);
break;
case SUBNET_MATCH:
writeInterfaceCriteria(writer,element,Attribute.VALUE,property.getValue(),nested);
break;
case ANY:
case NOT:
if (nested) {
break;
}
writer.writeStartElement(element.getLocalName());
writeInterfaceCriteria(writer,property.getValue(),true);
writer.writeEndElement();
break;
default :
{
throw new RuntimeException("Unknown property in interface criteria list: " + property.getName());
}
}
}

{
  if (object == null)   throw new IllegalArgumentException(ConnectorLogger.ROOT_LOGGER.nullVar("Object"));
  if (propertyName == null || propertyName.trim().equals(""))   throw ConnectorLogger.ROOT_LOGGER.undefinedVar("PropertyName");
  String methodName="set" + propertyName.substring(0,1).toUpperCase(Locale.US);
  if (propertyName.length() > 1) {
    methodName+=propertyName.substring(1);
  }
  Method method=findMethod(object.getClass(),methodName,propertyType);
  if (method != null) {
    Class<?> parameterClass=method.getParameterTypes()[0];
    Object parameterValue=null;
    try {
      parameterValue=getValue(propertyName,parameterClass,propertyValue,WildFlySecurityManager.getClassLoaderPrivileged(object.getClass()));
    }
 catch (    Throwable t) {
      throw new InvocationTargetException(t,t.getMessage());
    }
    if (!parameterClass.isPrimitive() || parameterValue != null)     method.invoke(object,new Object[]{parameterValue});
  }
 else {
    if (!includeFields)     throw ConnectorLogger.ROOT_LOGGER.noSuchMethod(methodName);
    Field field=findField(object.getClass(),propertyName,propertyType);
    if (field != null) {
      Class<?> fieldClass=field.getType();
      Object fieldValue=null;
      try {
        fieldValue=getValue(propertyName,fieldClass,propertyValue,WildFlySecurityManager.getClassLoaderPrivileged(object.getClass()));
      }
 catch (      Throwable t) {
        throw new InvocationTargetException(t,t.getMessage());
      }
      field.set(object,fieldValue);
    }
 else {
      throw ConnectorLogger.ROOT_LOGGER.noSuchField(propertyName);
    }
  }
}

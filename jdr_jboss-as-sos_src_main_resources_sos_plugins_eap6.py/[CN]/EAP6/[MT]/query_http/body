def query_http(self, request_obj, postdata=None):
    host = self.getOption(('host', 'as7_host'))
    port = self.getOption(('port', 'as7_port'))
    username = self.getOption(('user', 'as7_user'), None)
    password = self.getOption(('pass', 'as7_pass'), None)
    uri = ('http://%s:%s/management' % (host, port))
    json_data = {'operation': request_obj.operation, 'address': [], }
    for (key, val) in request_obj.url_parts():
        json_data['address'].append({key: val, })
    for (key, val) in request_obj.parameters.iteritems():
        json_data[key] = val
    postdata = json.dumps(json_data)
    headers = {'Content-Type': 'application/json', 'Accept': 'application/json', }
    opener = urllib2.build_opener()
    if (username and password):
        passwd_manager = urllib2.HTTPPasswordMgrWithDefaultRealm()
        passwd_manager.add_password(realm='ManagementRealm', uri=uri, user=username, passwd=password)
        digest_auth_handler = urllib2.HTTPDigestAuthHandler(passwd_manager)
        basic_auth_handler = urllib2.HTTPBasicAuthHandler(passwd_manager)
        opener.add_handler(digest_auth_handler)
        opener.add_handler(basic_auth_handler)
    req = urllib2.Request(uri, data=postdata, headers=headers)
    try:
        resp = opener.open(req)
        return resp.read()
    except Exception as e:
        err_msg = ('Could not query url: %s; error: %s' % (uri, e))
        self.addAlert(err_msg)
        return err_msg

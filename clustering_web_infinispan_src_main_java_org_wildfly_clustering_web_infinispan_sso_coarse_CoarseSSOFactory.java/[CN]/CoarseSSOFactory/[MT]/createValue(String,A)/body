{
  AuthenticationKey key=new AuthenticationKey(id);
  AuthenticationEntry<A,D,L> entry=new AuthenticationEntry<>(this.marshaller.write(authentication));
  AuthenticationEntry<A,D,L> existingEntry=this.authenticationCache.getAdvancedCache().withFlags(Flag.FORCE_SYNCHRONOUS).putIfAbsent(key,entry);
  if (existingEntry != null) {
    Map<D,String> value=this.sessionsCache.get(new CoarseSessionsKey(id));
    return new CoarseSSOEntry<>(authentication,entry.getLocalContext(),value);
  }
  Map<D,String> map=new HashMap<>();
  Map<D,String> existingMap=this.sessionsCache.getAdvancedCache().withFlags(Flag.FORCE_SYNCHRONOUS).putIfAbsent(new CoarseSessionsKey(id),map);
  return new CoarseSSOEntry<>(authentication,entry.getLocalContext(),(existingMap != null) ? existingMap : map);
}

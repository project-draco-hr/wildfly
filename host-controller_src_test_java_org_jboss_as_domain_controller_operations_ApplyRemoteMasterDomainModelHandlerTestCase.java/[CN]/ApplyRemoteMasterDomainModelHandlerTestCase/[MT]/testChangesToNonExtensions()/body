{
  Resource root=createRootResource();
  final ModelNode operation=new ModelNode();
  final ModelNode change=new ModelNode();
  change.get(ReadMasterDomainModelUtil.DOMAIN_RESOURCE_ADDRESS).set(PathAddress.pathAddress(PathElement.pathElement(SERVER_GROUP,"group-one")).toModelNode());
  final ModelNode group=root.clone().getChild(PathElement.pathElement(SERVER_GROUP,"group-one")).getModel();
  group.get(PROFILE).set("profile-two");
  change.get(ReadMasterDomainModelUtil.DOMAIN_RESOURCE_MODEL).set(group);
  operation.get(DOMAIN_MODEL).set(getCurrentModelUpdates(root,UpdateListModifier.createForChanges(change)));
  MockOperationContext operationContext=getOperationContext(root,false);
  operationContext.expectStep(PathAddress.EMPTY_ADDRESS);
  handler.execute(operationContext,operation);
  Map<OperationContext.Stage,List<OperationAndHandler>> addedSteps=operationContext.verify();
  assertTrue(addedSteps.containsKey(OperationContext.Stage.MODEL));
  List<OperationAndHandler> modelSteps=addedSteps.get(OperationContext.Stage.MODEL);
  assertEquals(2,modelSteps.size());
  OperationAndHandler oah=modelSteps.get(1);
  operationContext=getOperationContext(root,false);
  operationContext.expectStep(PathAddress.pathAddress(PathElement.pathElement(HOST,"localhost"),PathElement.pathElement(SERVER,"server-one")));
  oah.handler.execute(operationContext,oah.operation);
  operationContext.verify();
}

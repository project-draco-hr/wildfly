{
  DomainUpdateApplierResponse response=processUpdate();
  try {
    final Marshaller marshaller=getMarshaller();
    marshaller.start(output);
    marshaller.writeByte(ManagementProtocol.PARAM_APPLY_UPDATE_RESULT);
    if (response.getDomainFailure() != null) {
      marshaller.writeByte(ManagementProtocol.PARAM_APPLY_UPDATE_RESULT_EXCEPTION);
      marshaller.writeObject(response.getDomainFailure());
    }
 else {
      marshaller.writeByte(ManagementProtocol.APPLY_UPDATE_RESULT_DOMAIN_MODEL_SUCCESS);
      marshaller.writeByte(ManagementProtocol.PARAM_APPLY_UPDATE_RESULT_HOST_FAILURE_COUNT);
      Map<String,UpdateFailedException> hostFailures=response.getHostFailures();
      if (hostFailures == null || hostFailures.size() == 0) {
        marshaller.writeInt(0);
      }
 else {
        marshaller.writeInt(hostFailures.size());
        for (        Map.Entry<String,UpdateFailedException> entry : hostFailures.entrySet()) {
          marshaller.writeByte(ManagementProtocol.PARAM_HOST_NAME);
          marshaller.writeUTF(entry.getKey());
          marshaller.writeByte(ManagementProtocol.PARAM_APPLY_UPDATE_RESULT_EXCEPTION);
          marshaller.writeObject(entry.getValue());
        }
      }
      marshaller.writeByte(ManagementProtocol.PARAM_APPLY_UPDATE_RESULT_SERVER_COUNT);
      List<ServerIdentity> servers=response.getServers();
      if (servers == null || servers.size() == 0) {
        marshaller.writeInt(0);
      }
 else {
        marshaller.writeInt(servers.size());
        for (        ServerIdentity server : servers) {
          marshaller.writeByte(ManagementProtocol.PARAM_HOST_NAME);
          marshaller.writeUTF(server.getHostName());
          marshaller.writeByte(ManagementProtocol.PARAM_SERVER_GROUP_NAME);
          marshaller.writeUTF(server.getServerGroupName());
          marshaller.writeByte(ManagementProtocol.PARAM_SERVER_NAME);
          marshaller.writeUTF(server.getServerName());
        }
      }
    }
    marshaller.finish();
  }
 catch (  Exception e) {
    throw new ManagementException("Unable to send domain model update response.",e);
  }
}

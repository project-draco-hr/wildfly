{
  HostModelUtil.createRootRegistry(rootRegistration,environment,ignoredRegistry,this,processType,authorizer,modelControllerResource);
  VersionModelInitializer.registerRootResource(rootResource,environment != null ? environment.getProductConfig() : null);
  CoreManagementResourceDefinition.registerDomainResource(rootResource,authorizer.getWritableAuthorizerConfiguration());
  this.modelNodeRegistration=rootRegistration;
  ResourceProvider.Tool.addResourceProvider(HOST_CONNECTION,new ResourceProvider(){
    @Override public boolean has(    String name){
      return slaveHostRegistrations.contains(name);
    }
    @Override public Resource get(    String name){
      return PlaceholderResource.INSTANCE;
    }
    @Override public boolean hasChildren(){
      return true;
    }
    @Override public Set<String> children(){
      return slaveHostRegistrations.getHosts();
    }
    @Override public void register(    String name,    Resource resource){
      throw new UnsupportedOperationException();
    }
    @Override public Resource remove(    String name){
      throw new UnsupportedOperationException();
    }
    @Override public ResourceProvider clone(){
      return this;
    }
  }
,rootResource.getChild(CoreManagementResourceDefinition.PATH_ELEMENT));
}

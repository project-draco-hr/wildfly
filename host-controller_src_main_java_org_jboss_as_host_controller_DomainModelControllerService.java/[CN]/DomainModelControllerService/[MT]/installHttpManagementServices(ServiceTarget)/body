{
  String interfaceName=hostControllerInfo.getHttpManagementInterface();
  int port=hostControllerInfo.getHttpManagementPort();
  int securePort=hostControllerInfo.getHttpManagementSecurePort();
  String securityRealm=hostControllerInfo.getHttpManagementSecurityRealm();
  StringBuilder sb=new StringBuilder();
  sb.append("creating http management service using network interface (").append(interfaceName).append(")");
  if (port > -1) {
    sb.append(" port (").append(port).append(")");
  }
  if (securePort > -1) {
    sb.append(" securePort (").append(securePort).append(")");
  }
  Logger.getLogger("org.jboss.as").info(sb.toString());
  final ThreadFactory httpMgmtThreads=new JBossThreadFactory(new ThreadGroup("HttpManagementService-threads"),Boolean.FALSE,null,"%G - %t",null,null,AccessController.getContext());
  final HttpManagementService service=new HttpManagementService();
  ServiceBuilder builder=serviceTarget.addService(HttpManagementService.SERVICE_NAME,service).addDependency(NetworkInterfaceService.JBOSS_NETWORK_INTERFACE.append(interfaceName),NetworkInterfaceBinding.class,service.getInterfaceInjector()).addDependency(SERVICE_NAME,ModelController.class,service.getModelControllerInjector()).addInjection(service.getTempDirInjector(),environment.getDomainTempDir().getAbsolutePath()).addInjection(service.getPortInjector(),port).addInjection(service.getSecurePortInjector(),securePort).addInjection(service.getExecutorServiceInjector(),Executors.newCachedThreadPool(httpMgmtThreads));
  if (securityRealm != null) {
    builder.addDependency(SecurityRealmService.BASE_SERVICE_NAME.append(securityRealm),SecurityRealmService.class,service.getSecurityRealmInjector());
  }
 else {
    Logger.getLogger("org.jboss.as").warn("No security realm defined for http management service, all access will be unrestricted.");
  }
  builder.setInitialMode(ServiceController.Mode.ACTIVE).install();
}

{
  final Map<String,ProxyController> hostProxies=new ConcurrentHashMap<String,ProxyController>();
  final Map<String,ProxyController> serverProxies=new ConcurrentHashMap<String,ProxyController>();
  final LocalHostControllerInfoImpl hostControllerInfo=new LocalHostControllerInfoImpl(processState);
  final AbstractVaultReader vaultReader=service(AbstractVaultReader.class);
  ROOT_LOGGER.debugf("Using VaultReader %s",vaultReader);
  final ContentRepository contentRepository=ContentRepository.Factory.create(environment.getDomainDeploymentDir());
  final PrepareStepHandler prepareStepHandler=new PrepareStepHandler(hostControllerInfo,contentRepository,hostProxies,serverProxies);
  DomainModelControllerService service=new DomainModelControllerService(environment,runningModeControl,processState,hostControllerInfo,contentRepository,hostProxies,serverProxies,prepareStepHandler,vaultReader,bootstrapListener);
  return serviceTarget.addService(SERVICE_NAME,service).addDependency(HostControllerService.HC_EXECUTOR_SERVICE_NAME,ExecutorService.class,service.getExecutorServiceInjector()).addDependency(ProcessControllerConnectionService.SERVICE_NAME,ProcessControllerConnectionService.class,service.injectedProcessControllerConnection).setInitialMode(ServiceController.Mode.ACTIVE).install();
}

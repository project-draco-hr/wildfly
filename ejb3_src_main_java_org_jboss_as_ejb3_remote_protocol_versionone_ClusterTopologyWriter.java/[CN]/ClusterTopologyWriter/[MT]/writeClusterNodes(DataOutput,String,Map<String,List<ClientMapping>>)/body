{
  final int memberCount=clientMappings.size();
  PackedInteger.writePackedInteger(output,memberCount);
  for (  final Map.Entry<String,List<ClientMapping>> entry : clientMappings.entrySet()) {
    final String nodeName=entry.getKey();
    output.writeUTF(nodeName);
    final List<ClientMapping> clientMappingsForNode=entry.getValue();
    if (clientMappingsForNode == null || clientMappingsForNode.isEmpty()) {
      throw new IllegalStateException("No client-mapping entries found for node " + nodeName + " in cluster "+ clusterName);
    }
    PackedInteger.writePackedInteger(output,clientMappingsForNode.size());
    for (    final ClientMapping clientMapping : clientMappingsForNode) {
      InetAddress clientNetworkAddress=clientMapping.getSourceNetworkAddress();
      if (clientNetworkAddress instanceof Inet4Address) {
        final String ipv4MappedAddress="::" + clientNetworkAddress.getHostAddress();
        clientNetworkAddress=InetAddress.getByName(ipv4MappedAddress);
      }
      final byte[] clientNetworkAddressBytes=clientNetworkAddress.getAddress();
      output.write(clientNetworkAddressBytes);
      output.writeByte(clientMapping.getSourceNetworkMaskBits());
      output.writeUTF(clientMapping.getDestinationAddress());
      output.writeShort(clientMapping.getDestinationPort());
    }
  }
}

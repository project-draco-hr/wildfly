{
  raw=new byte[length - offset];
  System.arraycopy(data,offset,raw,0,length);
  int startPos=0;
  int endPos=-1;
  endPos=searchChar(raw,startPos,SP);
  prioVersion=getString(raw,startPos,endPos);
  startPos=endPos + 1;
  endPos=searchChar(raw,startPos,' ');
  timestamp=getString(raw,startPos,endPos);
  startPos=endPos + 1;
  endPos=searchChar(raw,startPos,' ');
  host=getString(raw,startPos,endPos);
  startPos=endPos + 1;
  endPos=searchChar(raw,startPos,' ');
  appName=getString(raw,startPos,endPos);
  startPos=endPos + 1;
  endPos=searchChar(raw,startPos,' ');
  procId=getString(raw,startPos,endPos);
  startPos=endPos + 1;
  endPos=searchChar(raw,startPos,' ');
  msgId=getString(raw,startPos,endPos);
  startPos=endPos + 1;
  if (raw[startPos] == '[') {
    endPos=searchChar(raw,startPos,']') + 1;
  }
 else {
    endPos=searchChar(raw,startPos,' ');
    if (endPos == -1)     endPos=raw.length;
  }
  structuredData=getString(raw,startPos,endPos);
  startPos=endPos + 1;
  if (startPos < raw.length) {
    if (startPos + 3 < raw.length && raw[startPos] == UTF_8_BOM[0] && raw[startPos + 1] == UTF_8_BOM[1] && raw[startPos + 2] == UTF_8_BOM[2]) {
      startPos+=3;
    }
    message=getString(raw,startPos,raw.length);
  }
 else {
    message=null;
  }
  endPos=prioVersion.indexOf(">");
  final String priorityStr=prioVersion.substring(1,endPos);
  int priority=0;
  try {
    priority=Integer.parseInt(priorityStr);
  }
 catch (  NumberFormatException nfe) {
    LOGGER.error("Can't parse priority");
  }
  facility=(priority >> 3) << 3;
  level=priority - facility;
  startPos=endPos + 1;
  int ver=0;
  if (startPos < prioVersion.length()) {
    try {
      ver=Integer.parseInt(prioVersion.substring(startPos));
    }
 catch (    NumberFormatException nfe) {
      LOGGER.error("Can't parse version");
      ver=-1;
    }
  }
  version=ver;
}

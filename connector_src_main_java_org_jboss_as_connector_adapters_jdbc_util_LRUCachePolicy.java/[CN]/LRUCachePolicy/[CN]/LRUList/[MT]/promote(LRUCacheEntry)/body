{
  if (entry == null) {
    throw new IllegalArgumentException("Trying to promote a null object");
  }
  if (capacity < 1) {
    throw new IllegalStateException("Can't work with capacity < 1");
  }
  entryPromotion(entry);
  entry.time=System.currentTimeMillis();
  if (entry.prev == null) {
    if (entry.next == null) {
      if (count == 0) {
        head=entry;
        tail=entry;
        ++count;
        entryAdded(entry);
      }
 else       if (count == 1 && head == entry) {
      }
 else       if (count < capacity) {
        entry.prev=null;
        entry.next=head;
        head.prev=entry;
        head=entry;
        ++count;
        entryAdded(entry);
      }
 else       if (count < maxCapacity) {
        entry.prev=null;
        entry.next=head;
        head.prev=entry;
        head=entry;
        ++count;
        int oldCapacity=capacity;
        ++capacity;
        entryAdded(entry);
        capacityChanged(oldCapacity);
      }
 else {
        throw new IllegalStateException("Attempt to put a new cache entry on a full cache");
      }
    }
 else {
    }
  }
 else {
    if (entry.next == null) {
      LRUCacheEntry beforeLast=entry.prev;
      beforeLast.next=null;
      entry.prev=null;
      entry.next=head;
      head.prev=entry;
      head=entry;
      tail=beforeLast;
    }
 else {
      LRUCacheEntry previous=entry.prev;
      previous.next=entry.next;
      entry.next.prev=previous;
      entry.prev=null;
      entry.next=head;
      head.prev=entry;
      head=entry;
    }
  }
}

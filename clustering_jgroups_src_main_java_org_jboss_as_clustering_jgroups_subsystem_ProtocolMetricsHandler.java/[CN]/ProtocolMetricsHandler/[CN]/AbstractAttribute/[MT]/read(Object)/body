{
  PrivilegedExceptionAction<Object> action=new PrivilegedExceptionAction<Object>(){
    @Override public Object run() throws Exception {
      boolean accessible=AbstractAttribute.this.accessible.isAccessible();
      if (!accessible) {
        AbstractAttribute.this.accessible.setAccessible(true);
      }
      try {
        return AbstractAttribute.this.get(object);
      }
  finally {
        if (!accessible) {
          AbstractAttribute.this.accessible.setAccessible(false);
        }
      }
    }
  }
;
  try {
    return AccessController.doPrivileged(action);
  }
 catch (  PrivilegedActionException e) {
    throw e.getException();
  }
}

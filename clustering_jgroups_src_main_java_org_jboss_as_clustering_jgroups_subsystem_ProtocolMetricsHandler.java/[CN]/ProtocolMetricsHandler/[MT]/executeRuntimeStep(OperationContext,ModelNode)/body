{
  PathAddress pathAddress=PathAddress.pathAddress(operation.require(OP_ADDR));
  String channelName=pathAddress.getElement(pathAddress.size() - 2).getValue();
  String protocolName=pathAddress.getElement(pathAddress.size() - 1).getValue();
  String attrName=operation.require(NAME).asString();
  ServiceName channelServiceName=ChannelInstanceResource.CHANNEL_PARENT.append(channelName);
  ServiceController<?> controller=context.getServiceRegistry(false).getService(channelServiceName);
  boolean started=controller != null && controller.getValue() != null;
  ModelNode result=new ModelNode();
  String className=JGROUPS_PROTOCOL_PKG + "." + protocolName;
  Class<? extends Protocol> protocolClass=null;
  boolean loaded=false;
  try {
    protocolClass=Protocol.class.getClassLoader().loadClass(className).asSubclass(Protocol.class);
    loaded=true;
  }
 catch (  ClassNotFoundException e) {
    context.getFailureDescription().set(JGroupsLogger.ROOT_LOGGER.unableToLoadProtocol(className));
  }
  if (loaded) {
    Field field=null;
    boolean fieldFound=false;
    try {
      field=getField(protocolClass,attrName);
      fieldFound=true;
    }
 catch (    NoSuchFieldException e) {
      context.getFailureDescription().set(JGroupsLogger.ROOT_LOGGER.unknownMetric(attrName));
    }
    if (fieldFound && started) {
      Channel channel=(Channel)controller.getValue();
      int index=protocolName.lastIndexOf('.');
      if (index > 0)       protocolName=protocolName.substring(index + 1);
      Protocol protocol=channel.getProtocolStack().findProtocol(protocolName);
      if (protocol == null) {
        context.getFailureDescription().set(JGroupsLogger.ROOT_LOGGER.protocolNotFoundInStack(protocolName));
      }
      FieldTypes type=null;
      if (ChannelInstanceResourceDefinition.isEquivalentModelTypeAvailable(field.getType())) {
        type=FieldTypes.getStat(field.getType().toString());
      }
 else {
        type=FieldTypes.NON_PRIMITIVE;
      }
      try {
        result=getProtocolFieldValue(protocol,field,type);
      }
 catch (      PrivilegedActionException pae) {
        context.getFailureDescription().set(JGroupsLogger.ROOT_LOGGER.privilegedAccessExceptionForAttribute(attrName));
      }
catch (      InstantiationException ie) {
        context.getFailureDescription().set(JGroupsLogger.ROOT_LOGGER.instantiationExceptionOnConverterForAttribute(attrName));
      }
      context.getResult().set(result);
    }
  }
  context.completeStep(OperationContext.ResultHandler.NOOP_RESULT_HANDLER);
}

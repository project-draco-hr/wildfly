{
  ModelNode fieldValue=AccessController.doPrivileged(new PrivilegedExceptionAction<ModelNode>(){
    @Override public ModelNode run() throws Exception {
      ModelNode result=new ModelNode();
      String value=null;
      if (!f.isAccessible())       f.setAccessible(true);
switch (t) {
case BOOLEAN:
        result.set(f.getBoolean(p));
      break;
case BYTE:
    result.set(f.getByte(p));
  break;
case CHAR:
result.set(f.getChar(p));
break;
case SHORT:
result.set((int)f.getShort(p));
break;
case INT:
result.set(f.getInt(p));
break;
case LONG:
result.set(f.getLong(p));
break;
case FLOAT:
result.set((double)f.getFloat(p));
break;
case DOUBLE:
result.set(f.getDouble(p));
break;
case STRING:
value=(String)f.get(p);
if (value != null) result.set(value);
break;
case NON_PRIMITIVE:
value=getStringValue(p,f);
if (value != null) {
result.set(value);
}
break;
}
return result;
}
}
);
return fieldValue;
}

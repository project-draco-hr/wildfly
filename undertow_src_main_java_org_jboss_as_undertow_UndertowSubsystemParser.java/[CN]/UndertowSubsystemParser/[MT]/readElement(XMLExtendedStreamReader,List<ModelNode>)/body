{
  PathAddress address=PathAddress.pathAddress(UndertowExtension.SUBSYSTEM_PATH);
  final ModelNode subsystem=Util.createAddOperation(address);
  list.add(subsystem);
  final Namespace namespace=Namespace.forUri(reader.getNamespaceURI());
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
switch (namespace) {
case UNDERTOW_1_0:
{
switch (reader.getLocalName()) {
case Constants.WORKER:
{
            WorkerResourceDefinition.INSTANCE.parse(reader,address,list);
            break;
          }
case Constants.BUFFER_POOL:
{
          BufferPoolResourceDefinition.INSTANCE.parse(reader,address,list);
          break;
        }
case Constants.SERVER:
{
        ServerDefinition.INSTANCE.parse(reader,address,list);
        break;
      }
case Constants.SERVLET_CONTAINER:
{
      ServletContainerDefinition.INSTANCE.parse(reader,address,list);
      break;
    }
default :
{
    throw unexpectedElement(reader);
  }
}
break;
}
default :
{
throw unexpectedElement(reader);
}
}
}
ParseUtils.requireNoContent(reader);
}

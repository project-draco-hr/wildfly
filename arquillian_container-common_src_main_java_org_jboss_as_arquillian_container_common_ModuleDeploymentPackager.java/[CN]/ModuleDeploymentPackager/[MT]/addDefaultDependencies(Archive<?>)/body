{
  if (appArchive instanceof ManifestContainer<?> == false)   throw new IllegalArgumentException("ManifestContainer expected " + appArchive);
  final Manifest manifest=DelegatingDeploymentPackager.getOrCreateManifest(appArchive);
  Attributes attributes=manifest.getMainAttributes();
  String value=attributes.getValue("Dependencies");
  StringBuffer moduleDeps=new StringBuffer(value != null && value.trim().length() > 0 ? value + "," : "");
  moduleDeps.append("org.jboss.arquillian.api");
  moduleDeps.append(",org.jboss.arquillian.junit");
  moduleDeps.append(",org.jboss.arquillian.spi");
  moduleDeps.append(",org.jboss.shrinkwrap.api");
  moduleDeps.append(",junit.junit");
  attributes.putValue("Dependencies",moduleDeps.toString());
  ((ManifestContainer<?>)appArchive).setManifest(new Asset(){
    public InputStream openStream(){
      try {
        ByteArrayOutputStream baos=new ByteArrayOutputStream();
        manifest.write(baos);
        return new ByteArrayInputStream(baos.toByteArray());
      }
 catch (      IOException ex) {
        throw new IllegalStateException("Cannot write manifest",ex);
      }
    }
  }
);
}

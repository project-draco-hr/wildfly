{
  final Resource resource=context.createResource(PathAddress.EMPTY_ADDRESS);
  final ModelNode model=resource.getModel();
  updateModel(operation,model);
  if (context.getProcessType().isServer()) {
    context.addStep(new OperationStepHandler(){
      @Override public void execute(      final OperationContext context,      final ModelNode operation) throws OperationFailedException {
        performRuntime(context,operation,logContextConfiguration,name,model);
        context.completeStep(new RollbackHandler(){
          @Override public void handleRollback(          OperationContext context,          ModelNode operation){
            logContextConfiguration.forget();
            try {
              performRollback(context,operation,logContextConfiguration,name);
              logContextConfiguration.commit();
            }
 catch (            OperationFailedException e) {
              throw LoggingMessages.MESSAGES.rollbackFailure(e);
            }
          }
        }
);
      }
    }
,Stage.RUNTIME);
  }
}

{
  Hashtable<String,String> params=new Hashtable<String,String>();
  params.put("enabled","true");
  params.put("use-java-context","true");
  params.put("spy","false");
  params.put("use-ccm","true");
  params.put("driver-name","h2");
  params.put("new-connection-sql","select 1");
  params.put("transaction-isolation","TRANSACTION_READ_COMMITTED");
  params.put("url-delimiter",":");
  params.put("url-selector-strategy-class-name","someClass");
  params.put("min-pool-size","1");
  params.put("max-pool-size","5");
  params.put("pool-prefill","true");
  params.put("pool-use-strict-min","true");
  params.put("flush-strategy","EntirePool");
  params.put("user-name","sa");
  params.put("password","sa");
  params.put("security-domain","HsqlDbRealm");
  params.put("reauth-plugin-class-name","someClass1");
  params.put("valid-connection-checker-class-name","someClass2");
  params.put("check-valid-connection-sql","select 1");
  params.put("validate-on-match","true");
  params.put("background-validation","true");
  params.put("background-validation-millis","2000");
  params.put("use-fast-fail","true");
  params.put("stale-connection-checker-class-name","someClass3");
  params.put("exception-sorter-class-name","someClass4");
  params.put("blocking-timeout-wait-millis","20000");
  params.put("idle-timeout-minutes","4");
  params.put("set-tx-query-timeout","true");
  params.put("query-timeout","120");
  params.put("use-try-lock","100");
  params.put("allocation-retry","2");
  params.put("allocation-retry-wait-millis","3000");
  params.put("track-statements","NOWARN");
  params.put("prepared-statements-cache-size","30");
  params.put("share-prepared-statements","true");
  return params;
}

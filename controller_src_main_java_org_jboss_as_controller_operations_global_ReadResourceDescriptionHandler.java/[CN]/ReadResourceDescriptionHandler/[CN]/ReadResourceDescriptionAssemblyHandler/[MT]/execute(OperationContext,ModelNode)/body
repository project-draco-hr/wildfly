{
  for (  Map.Entry<PathElement,ModelNode> entry : childResources.entrySet()) {
    final PathElement element=entry.getKey();
    final ModelNode value=entry.getValue();
    if (!value.has(FAILURE_DESCRIPTION)) {
      ModelNode actualValue=value.get(RESULT);
      if (actualValue.equals(PROXY_NO_SUCH_RESOURCE)) {
        nodeDescription.get(CHILDREN).remove(element.getKey());
      }
 else {
        nodeDescription.get(CHILDREN,element.getKey(),MODEL_DESCRIPTION,element.getValue()).set(actualValue);
      }
    }
 else     if (value.hasDefined(FAILURE_DESCRIPTION)) {
      context.getFailureDescription().set(value.get(FAILURE_DESCRIPTION));
      break;
    }
  }
  if (operations != null) {
    for (    Map.Entry<String,ModelNode> entry : operations.entrySet()) {
      nodeDescription.get(OPERATIONS.getName(),entry.getKey()).set(entry.getValue());
    }
  }
  if (accessControlContext.defaultWildcardAccessControl != null && accessControlContext.localResourceAccessControlResults != null) {
    ModelNode accessControl=new ModelNode();
    accessControl.setEmptyObject();
    ModelNode defaultControl;
    if (accessControlContext.defaultWildcardAccessControl != null) {
      accessControl.get(DEFAULT).set(accessControlContext.defaultWildcardAccessControl);
      defaultControl=accessControlContext.defaultWildcardAccessControl;
    }
 else {
      defaultControl=new ModelNode();
    }
    if (accessControlContext.localResourceAccessControlResults != null) {
      ModelNode exceptions=accessControl.get(EXCEPTIONS);
      exceptions.setEmptyObject();
      for (      Map.Entry<PathAddress,ModelNode> entry : accessControlContext.localResourceAccessControlResults.entrySet()) {
        if (!entry.getValue().isDefined()) {
          continue;
        }
        if (!entry.getValue().equals(defaultControl)) {
          ModelNode exceptionAddr=entry.getKey().toModelNode();
          ModelNode exception=entry.getValue();
          exception.get(ADDRESS).set(exceptionAddr);
          exceptions.get(exceptionAddr.asString()).set(entry.getValue());
        }
      }
    }
    nodeDescription.get(ACCESS_CONTROL.getName()).set(accessControl);
  }
  if (accessControl == AccessControl.TRIM_DESCRIPTONS) {
    nodeDescription.get(ModelDescriptionConstants.DESCRIPTION).clear();
    if (nodeDescription.hasDefined(ModelDescriptionConstants.ATTRIBUTES)) {
      nodeDescription.get(ModelDescriptionConstants.ATTRIBUTES).clear();
    }
    if (nodeDescription.hasDefined(ModelDescriptionConstants.OPERATIONS)) {
      nodeDescription.get(ModelDescriptionConstants.OPERATIONS).clear();
    }
    if (nodeDescription.hasDefined(CHILDREN)) {
      for (      String child : nodeDescription.get(CHILDREN).keys()) {
        ModelNode childNode=nodeDescription.get(CHILDREN,child);
        if (childNode.isDefined()) {
          childNode.remove(ModelDescriptionConstants.DESCRIPTION);
        }
      }
    }
  }
  context.getResult().set(nodeDescription);
  context.stepCompleted();
}

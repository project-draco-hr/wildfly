{
  for (  final Method method : configuration.getProxyFactory().getCachedMethods()) {
    if (method.getName().equals("getPrimaryKey") && method.getParameterTypes().length == 0) {
      configuration.addClientInterceptor(method,ViewDescription.CLIENT_DISPATCHER_INTERCEPTOR_FACTORY,InterceptorOrder.Client.CLIENT_DISPATCHER);
      configuration.addViewInterceptor(method,PRIMARY_KEY_INTERCEPTOR,InterceptorOrder.View.COMPONENT_DISPATCHER);
    }
 else     if (method.getName().equals("remove") && method.getParameterTypes().length == 0) {
      configuration.addClientInterceptor(method,ViewDescription.CLIENT_DISPATCHER_INTERCEPTOR_FACTORY,InterceptorOrder.Client.CLIENT_DISPATCHER);
      configuration.addViewInterceptor(method,getEjbRemoveInterceptorFactory(),InterceptorOrder.View.SESSION_REMOVE_INTERCEPTOR);
      configuration.addViewInterceptor(method,org.jboss.invocation.Interceptors.getTerminalInterceptorFactory(),InterceptorOrder.View.COMPONENT_DISPATCHER);
    }
 else     if (method.getName().equals("getEJBLocalHome") && method.getParameterTypes().length == 0) {
      configuration.addClientInterceptor(method,ViewDescription.CLIENT_DISPATCHER_INTERCEPTOR_FACTORY,InterceptorOrder.Client.CLIENT_DISPATCHER);
      final GetHomeInterceptorFactory factory=new GetHomeInterceptorFactory();
      configuration.addViewInterceptor(method,factory,InterceptorOrder.View.COMPONENT_DISPATCHER);
      final SessionBeanComponentDescription componentDescription=(SessionBeanComponentDescription)componentConfiguration.getComponentDescription();
      componentConfiguration.getStartDependencies().add(new DependencyConfigurator<ComponentStartService>(){
        @Override public void configureDependency(        final ServiceBuilder<?> serviceBuilder,        final ComponentStartService service) throws DeploymentUnitProcessingException {
          serviceBuilder.addDependency(componentDescription.getEjbLocalHomeView().getServiceName(),ComponentView.class,factory.getViewToCreate());
        }
      }
);
    }
 else     if (method.getName().equals("getEJBHome") && method.getParameterTypes().length == 0) {
      configuration.addClientInterceptor(method,ViewDescription.CLIENT_DISPATCHER_INTERCEPTOR_FACTORY,InterceptorOrder.Client.CLIENT_DISPATCHER);
      final GetHomeInterceptorFactory factory=new GetHomeInterceptorFactory();
      configuration.addViewInterceptor(method,factory,InterceptorOrder.View.COMPONENT_DISPATCHER);
      final SessionBeanComponentDescription componentDescription=(SessionBeanComponentDescription)componentConfiguration.getComponentDescription();
      componentConfiguration.getStartDependencies().add(new DependencyConfigurator<ComponentStartService>(){
        @Override public void configureDependency(        final ServiceBuilder<?> serviceBuilder,        final ComponentStartService service) throws DeploymentUnitProcessingException {
          serviceBuilder.addDependency(componentDescription.getEjbHomeView().getServiceName(),ComponentView.class,factory.getViewToCreate());
        }
      }
);
    }
  }
}

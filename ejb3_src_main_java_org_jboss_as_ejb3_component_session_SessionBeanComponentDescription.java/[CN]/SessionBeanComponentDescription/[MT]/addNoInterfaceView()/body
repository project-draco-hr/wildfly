{
  this.noInterfaceViewPresent=true;
  viewTypes.put(getEJBClassName(),MethodIntf.LOCAL);
  ViewDescription viewDescription=new ViewDescription(this,this.getEJBClassName());
  this.getViews().add(viewDescription);
  this.setupViewInterceptors(viewDescription);
  this.setupClientViewInterceptors(viewDescription);
  viewDescription.getConfigurators().add(new ViewConfigurator(){
    @Override public void configure(    final DeploymentPhaseContext context,    final ComponentConfiguration componentConfiguration,    final ViewDescription description,    final ViewConfiguration configuration) throws DeploymentUnitProcessingException {
      for (      final Method method : configuration.getProxyFactory().getCachedMethods()) {
        if (!Modifier.isPublic(method.getModifiers())) {
          configuration.addViewInterceptor(method,new ImmediateInterceptorFactory(new NotBusinessMethodInterceptor(method)),InterceptorOrder.View.NOT_BUSINESS_METHOD);
        }
      }
    }
  }
);
}

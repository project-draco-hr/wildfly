{
  final DeploymentUnit deploymentUnit=phaseContext.getDeploymentUnit();
  final ModuleSpecification moduleSpecification=deploymentUnit.getAttachment(Attachments.MODULE_SPECIFICATION);
  final ModuleLoader loader=deploymentUnit.getAttachment(Attachments.SERVICE_MODULE_LOADER);
  moduleSpecification.addSystemDependency(new ModuleDependency(loader,CORBA_ID,false,true,true));
  Boolean activate=deploymentUnit.getAttachment(AppClientAttachments.START_APP_CLIENT);
  if (activate == null || !activate) {
    return;
  }
  final ModuleDependency dependency=new ModuleDependency(loader,APP_CLIENT_MODULE_ID,false,true,true);
  dependency.addImportFilter(PathFilters.acceptAll(),true);
  moduleSpecification.addSystemDependency(dependency);
  final AdditionalModuleSpecification specification=new AdditionalModuleSpecification(APP_CLIENT_MODULE_ID,Collections.<ResourceRoot>emptySet());
  final String[] parts=additionalClassPath.split(File.pathSeparator);
  for (  final String part : parts) {
    final ResourceLoader resource=ResourceLoaders.createFileResourceLoader(part,new File(part));
    specification.addResourceLoader(ResourceLoaderSpec.createResourceLoaderSpec(resource));
  }
  deploymentUnit.addToAttachmentList(Attachments.ADDITIONAL_MODULES,specification);
}

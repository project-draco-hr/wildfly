{
  context.addStep(new AlternativeAttributeValidationStepHandler(new SimpleAttributeDefinition[]{HandlerResourceDefinition.CLASS_NAME,HandlerResourceDefinition.CODE}),OperationContext.Stage.MODEL);
  context.addStep(new OperationStepHandler(){
    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {
      PathAddress pathAddress=PathAddress.pathAddress(operation.get(OP_ADDR));
      String handlerName=pathAddress.getLastElement().getValue();
      ModelNode handlerNode=context.readResource(EMPTY_ADDRESS,false).getModel();
      String handlerType=getHandlerType(context,handlerNode);
      PathAddress parentAddress=pathAddress.subAddress(0,pathAddress.size() - 1);
      Resource parentResource=context.readResourceFromRoot(parentAddress);
      Set<ResourceEntry> existingHandlers=parentResource.getChildren(ModelElement.COMMON_HANDLER.getName());
      for (      ResourceEntry existingHandlerEntry : existingHandlers) {
        String existingHandlerName=existingHandlerEntry.getName();
        String existingHandlerType=getHandlerType(context,existingHandlerEntry.getModel());
        if (!handlerName.equals(existingHandlerName) && (handlerType.equals(existingHandlerType))) {
          throw ROOT_LOGGER.federationHandlerAlreadyDefined(handlerType);
        }
      }
      context.stepCompleted();
    }
  }
,OperationContext.Stage.MODEL);
  super.execute(context,operation);
}

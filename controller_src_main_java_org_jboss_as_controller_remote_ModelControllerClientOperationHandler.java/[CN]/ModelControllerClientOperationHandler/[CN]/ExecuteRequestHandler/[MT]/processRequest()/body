{
  if (!asynch) {
    doProcessRequest();
  }
 else {
    Future<Void> future=executorService.submit(new Callable<Void>(){
      public Void call() throws Exception {
        doProcessRequest();
        return null;
      }
    }
);
    try {
      future.get();
    }
 catch (    ExecutionException e) {
      Throwable cause=e.getCause();
      if (cause instanceof RequestProcessingException) {
        throw (RequestProcessingException)cause;
      }
      if (cause instanceof RuntimeException) {
        throw (RuntimeException)cause;
      }
      throw new RequestProcessingException(cause);
    }
catch (    InterruptedException e) {
      Thread t=asynchRequests.get(batchId);
      if (t != null) {
        t.interrupt();
      }
      Thread.currentThread().interrupt();
      throw new RequestProcessingException("Thread was interrupted waiting for a response for asynch operation");
    }
  }
}

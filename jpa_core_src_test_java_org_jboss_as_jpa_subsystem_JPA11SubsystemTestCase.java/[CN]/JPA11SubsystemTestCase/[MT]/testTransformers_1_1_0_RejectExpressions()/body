{
  ModelVersion oldVersion=ModelVersion.create(1,1,0);
  KernelServicesBuilder builder=createKernelServicesBuilder(null);
  builder.createLegacyKernelServicesBuilder(null,oldVersion).setExtensionClassName(JPAExtension.class.getName()).addMavenResourceURL("org.jboss.as:jboss-as-jpa:7.1.2.Final").addMavenResourceURL("org.jboss.as:jboss-as-controller:7.1.2.Final").addParentFirstClassPattern("org.jboss.as.controller.*");
  KernelServices mainServices=builder.build();
  KernelServices legacyServices=mainServices.getLegacyServices(oldVersion);
  Assert.assertNotNull(legacyServices);
  Assert.assertTrue(mainServices.isSuccessfulBoot());
  Assert.assertTrue(legacyServices.isSuccessfulBoot());
  List<ModelNode> ops=builder.parseXmlResource("subsystem-1.1-transformers.xml");
  ModelTestUtils.checkFailedTransformedBootOperations(mainServices,oldVersion,ops,new FailedOperationTransformationConfig().addFailedAttribute(PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM,JPAExtension.SUBSYSTEM_NAME)),new FailedOperationTransformationConfig.RejectExpressionsConfig(DEFAULT_DATASOURCE).setNotExpectedWriteFailure(JPADefinition.DEFAULT_EXTENDEDPERSISTENCE_INHERITANCE)));
  ModelNode legacyModel=legacyServices.readWholeModel().require(SUBSYSTEM).require(JPAExtension.SUBSYSTEM_NAME);
  Assert.assertEquals(1,legacyModel.keys().size());
  Assert.assertEquals("test-ds",legacyModel.get(DEFAULT_DATASOURCE.getName()).asString());
  ModelNode op=Util.getWriteAttributeOperation(PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM,JPAExtension.SUBSYSTEM_NAME)),CommonAttributes.DEFAULT_EXTENDEDPERSISTENCE_INHERITANCE,new ModelNode().setExpression("${xxxx:SHALLOW}"));
  ModelTestUtils.checkFailed(mainServices.executeOperation(oldVersion,mainServices.transformOperation(oldVersion,op)));
  op=Util.getWriteAttributeOperation(PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM,JPAExtension.SUBSYSTEM_NAME)),CommonAttributes.DEFAULT_EXTENDEDPERSISTENCE_INHERITANCE,new ModelNode().setExpression("SHALLOW"));
  ModelTestUtils.checkFailed(mainServices.executeOperation(oldVersion,mainServices.transformOperation(oldVersion,op)));
  op=Util.getUndefineAttributeOperation(PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM,JPAExtension.SUBSYSTEM_NAME)),CommonAttributes.DEFAULT_EXTENDEDPERSISTENCE_INHERITANCE);
  ModelTestUtils.checkOutcome(mainServices.executeOperation(oldVersion,mainServices.transformOperation(oldVersion,op)));
}

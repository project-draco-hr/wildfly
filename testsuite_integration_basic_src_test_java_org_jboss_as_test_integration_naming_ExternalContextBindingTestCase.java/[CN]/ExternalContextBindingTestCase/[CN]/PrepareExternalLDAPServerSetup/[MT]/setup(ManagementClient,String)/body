{
  try {
    Security.addProvider(new BouncyCastleProvider());
  }
 catch (  SecurityException ex) {
    LOGGER.warn("Cannot register BouncyCastleProvider",ex);
  }
  directoryService=DSAnnotationProcessor.getDirectoryService();
  final SchemaManager schemaManager=directoryService.getSchemaManager();
  try {
    for (    LdifEntry ldifEntry : new LdifReader(ExternalContextBindingTestCase.class.getResourceAsStream(ExternalContextBindingTestCase.class.getSimpleName() + ".ldif"))) {
      directoryService.getAdminSession().add(new DefaultEntry(schemaManager,ldifEntry.getEntry()));
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
    throw e;
  }
  final ManagedCreateLdapServer createLdapServer=new ManagedCreateLdapServer((CreateLdapServer)AnnotationUtils.getInstance(CreateLdapServer.class));
  fixTransportAddress(createLdapServer,managementClient.getMgmtAddress());
  ldapServer=ServerAnnotationProcessor.instantiateLdapServer(createLdapServer,directoryService);
  ldapServer.start();
}

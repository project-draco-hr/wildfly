{
  ModelNode address=createAddress("nocache");
  ModelNode bindingAdd=new ModelNode();
  bindingAdd.get(OP).set(ADD);
  bindingAdd.get(OP_ADDR).set(address);
  bindingAdd.get(BINDING_TYPE).set(EXTERNAL_CONTEXT);
  bindingAdd.get(MODULE).set(MODULE_NAME);
  bindingAdd.get(CLASS).set(InitialContext.class.getName());
  ModelNode addResult=managementClient.getControllerClient().execute(bindingAdd);
  Assert.assertFalse(addResult.get(FAILURE_DESCRIPTION).toString(),addResult.get(FAILURE_DESCRIPTION).isDefined());
  LOGGER.info("Object factory bound.");
  address=createAddress("cache");
  bindingAdd=new ModelNode();
  bindingAdd.get(OP).set(ADD);
  bindingAdd.get(OP_ADDR).set(address);
  bindingAdd.get(BINDING_TYPE).set(EXTERNAL_CONTEXT);
  bindingAdd.get(MODULE).set(MODULE_NAME);
  bindingAdd.get(CACHE).set(true);
  bindingAdd.get(CLASS).set(InitialContext.class.getName());
  addResult=managementClient.getControllerClient().execute(bindingAdd);
  Assert.assertFalse(addResult.get(FAILURE_DESCRIPTION).toString(),addResult.get(FAILURE_DESCRIPTION).isDefined());
  LOGGER.info("Object factory bound.");
  address=createAddress("ldap");
  bindingAdd=new ModelNode();
  bindingAdd.get(OP).set(ADD);
  bindingAdd.get(OP_ADDR).set(address);
  bindingAdd.get(BINDING_TYPE).set(EXTERNAL_CONTEXT);
  bindingAdd.get(MODULE).set(MODULE_NAME);
  bindingAdd.get(CLASS).set(InitialDirContext.class.getName());
  bindingAdd.get(ENVIRONMENT).add("java.naming.provider.url","ldap://" + managementClient.getMgmtAddress() + ":"+ ExternalContextBindingTestCase.LDAP_PORT);
  bindingAdd.get(ENVIRONMENT).add("java.naming.factory.initial",LdapCtxFactory.class.getName());
  bindingAdd.get(ENVIRONMENT).add(Context.SECURITY_AUTHENTICATION,"simple");
  bindingAdd.get(ENVIRONMENT).add(Context.SECURITY_PRINCIPAL,"uid=jduke,ou=People,dc=jboss,dc=org");
  bindingAdd.get(ENVIRONMENT).add(Context.SECURITY_CREDENTIALS,"theduke");
  addResult=managementClient.getControllerClient().execute(bindingAdd);
  Assert.assertFalse(addResult.get(FAILURE_DESCRIPTION).toString(),addResult.get(FAILURE_DESCRIPTION).isDefined());
  address=createAddress("ldap-cache");
  bindingAdd=new ModelNode();
  bindingAdd.get(OP).set(ADD);
  bindingAdd.get(OP_ADDR).set(address);
  bindingAdd.get(BINDING_TYPE).set(EXTERNAL_CONTEXT);
  bindingAdd.get(MODULE).set(MODULE_NAME);
  bindingAdd.get(CLASS).set(InitialDirContext.class.getName());
  bindingAdd.get(CACHE).set(true);
  bindingAdd.get(ENVIRONMENT).add("java.naming.provider.url","ldap://" + managementClient.getMgmtAddress() + ":"+ ExternalContextBindingTestCase.LDAP_PORT);
  bindingAdd.get(ENVIRONMENT).add("java.naming.factory.initial",LdapCtxFactory.class.getName());
  bindingAdd.get(ENVIRONMENT).add(Context.SECURITY_AUTHENTICATION,"simple");
  bindingAdd.get(ENVIRONMENT).add(Context.SECURITY_PRINCIPAL,"uid=jduke,ou=People,dc=jboss,dc=org");
  bindingAdd.get(ENVIRONMENT).add(Context.SECURITY_CREDENTIALS,"theduke");
  addResult=managementClient.getControllerClient().execute(bindingAdd);
  Assert.assertFalse(addResult.get(FAILURE_DESCRIPTION).toString(),addResult.get(FAILURE_DESCRIPTION).isDefined());
}

{
  Authentication.setupDefaultAuthenticator();
  HttpURLConnection connection=null;
  BufferedOutputStream os=null;
  BufferedInputStream is=null;
  final String basicUrl="http://" + managementClient.getMgmtAddress() + ":9990/"+ MANAGEMENT_URL_PART;
  String uploadUrl=basicUrl + "/" + UPLOAD_URL_PART;
  try {
    connection=getHttpURLConnection(uploadUrl,"multipart/form-data; boundary=" + BOUNDARY_PARAM);
    final JavaArchive archive=ShrinkWrap.create(JavaArchive.class,"test-http-deployment.sar").addPackage(Simple.class.getPackage());
    os=new BufferedOutputStream(connection.getOutputStream());
    is=new BufferedInputStream(archive.as(ZipExporter.class).exportAsInputStream());
    writeUploadRequest(is,os);
    assertEquals("text/html",connection.getHeaderField("Content-Type"));
    ModelNode node=readResult(connection.getInputStream());
    assertNotNull(node);
    System.out.println(node);
    assertEquals(SUCCESS,node.require(OUTCOME).asString());
    byte[] hash=node.require(RESULT).asBytes();
    connection.disconnect();
    connection=getHttpURLConnection(basicUrl,"application/json");
    os=new BufferedOutputStream(connection.getOutputStream());
    writeAddRequest(os,hash);
    node=readResult(connection.getInputStream());
    assertNotNull(node);
    System.out.println(node);
    assertEquals(SUCCESS,node.require(OUTCOME).asString());
    connection.disconnect();
  }
  finally {
    closeQuietly(is);
    closeQuietly(os);
    try {
      connection=getHttpURLConnection(basicUrl,"application/json");
      os=new BufferedOutputStream(connection.getOutputStream());
      writeRemoveRequest(os);
      ModelNode node=readResult(connection.getInputStream());
      System.out.println(node);
      connection.disconnect();
    }
 catch (    Exception ignored) {
      ignored.printStackTrace();
    }
 finally {
      closeQuietly(os);
    }
  }
}

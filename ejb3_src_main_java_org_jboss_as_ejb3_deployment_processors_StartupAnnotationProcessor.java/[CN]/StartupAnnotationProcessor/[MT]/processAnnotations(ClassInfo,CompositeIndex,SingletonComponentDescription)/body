{
  Map<DotName,List<AnnotationInstance>> annotationsOnBean=beanClass.annotations();
  if (annotationsOnBean == null || annotationsOnBean.isEmpty()) {
    return;
  }
  List<AnnotationInstance> startupAnnotations=annotationsOnBean.get(DotName.createSimple(Startup.class.getName()));
  if (startupAnnotations == null || startupAnnotations.isEmpty()) {
    return;
  }
  if (startupAnnotations.size() > 1) {
    throw new DeploymentUnitProcessingException("More than one @Startup annotation found on bean: " + componentDescription.getEJBName());
  }
  AnnotationInstance startupAnnotation=startupAnnotations.get(0);
  if (startupAnnotation.target() instanceof ClassInfo == false) {
    throw new DeploymentUnitProcessingException("@Startup can appear only on a class. Target: " + startupAnnotation.target() + " is not a class");
  }
  componentDescription.initOnStartup();
  logger.debug(componentDescription.getEJBName() + " bean has been marked for init-on-startup (a.k.a @Startup)");
}

{
  Collection retVal;
  Method method=getMethod();
  try {
    JDBCQueryCommand query=manager.getQueryManager().getQueryCommand(method);
    retVal=query.execute(method,args,null);
  }
 catch (  FinderException e) {
    throw e;
  }
catch (  EJBException e) {
    throw e;
  }
catch (  Exception e) {
    throw new EJBException("Error in " + getSelectorName(),e);
  }
  if (!Collection.class.isAssignableFrom(getReturnType())) {
    if (retVal.size() == 0) {
      throw new ObjectNotFoundException();
    }
    if (retVal.size() > 1) {
      throw new FinderException(getSelectorName() + " returned " + retVal.size()+ " objects");
    }
    Object o=retVal.iterator().next();
    if (o == null && method.getReturnType().isPrimitive()) {
      throw new FinderException("Cannot return null as a value of primitive type " + method.getReturnType().getName());
    }
    return o;
  }
 else {
    if (Set.class.isAssignableFrom(getReturnType())) {
      return new HashSet(retVal);
    }
 else {
      return retVal;
    }
  }
}

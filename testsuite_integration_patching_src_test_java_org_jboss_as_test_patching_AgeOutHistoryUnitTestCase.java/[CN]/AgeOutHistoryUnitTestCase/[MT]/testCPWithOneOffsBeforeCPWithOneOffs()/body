{
  Module module=new Module.Builder("module-test").miscFile(new ResourceItem("resource-test",("module resource").getBytes())).build();
  File moduleDir=module.writeToDisk(new File(MODULES_PATH));
  byte[] targetHash=HashUtils.hashFile(moduleDir);
  targetHash=applyOneOff("oneoff1",targetHash);
  targetHash=applyOneOff("oneoff2",targetHash);
  targetHash=applyCP("cp1",targetHash);
  targetHash=applyOneOff("oneoff3",targetHash);
  targetHash=applyOneOff("oneoff4",targetHash);
  targetHash=applyCP("cp2",targetHash);
  targetHash=applyOneOff("oneoff5",targetHash);
  targetHash=applyOneOff("oneoff6",targetHash);
  controller.start(CONTAINER);
  try {
    client=createClient();
    assertPatched(client,new String[]{"oneoff6","oneoff5","cp2","oneoff4","oneoff3","cp1","oneoff2","oneoff1"},new boolean[]{false,false,true,false,false,true,false,false});
    ageoutHistory(client);
    assertCleanedUp("oneoff1","oneoff2","cp1","oneoff3","oneoff4");
    assertPatched(client,new String[]{"oneoff6","oneoff5","cp2","oneoff4","oneoff3","cp1","oneoff2","oneoff1"},new boolean[]{false,false,true,false,false,true,false,false});
  }
  finally {
    controller.stop(CONTAINER);
  }
}

{
  validator.validate(operation);
  final String attributeName=operation.require(ModelDescriptionConstants.NAME).asString();
  String queueName=PathAddress.pathAddress(operation.require(ModelDescriptionConstants.OP_ADDR)).getLastElement().getValue();
  final ServiceName hqServiceName=MessagingServices.getHornetQServiceName(PathAddress.pathAddress(operation.get(ModelDescriptionConstants.OP_ADDR)));
  ServiceController<?> hqService=context.getServiceRegistry(false).getService(hqServiceName);
  HornetQServer hqServer=HornetQServer.class.cast(hqService.getValue());
  QueueControl control=QueueControl.class.cast(hqServer.getManagementService().getResource(ResourceNames.CORE_QUEUE + queueName));
  if (MESSAGE_COUNT.getName().equals(attributeName)) {
    context.getResult().set(control.getMessageCount());
  }
 else   if (SCHEDULED_COUNT.getName().equals(attributeName)) {
    context.getResult().set(control.getScheduledCount());
  }
 else   if (CONSUMER_COUNT.getName().equals(attributeName)) {
    context.getResult().set(control.getConsumerCount());
  }
 else   if (DELIVERING_COUNT.getName().equals(attributeName)) {
    context.getResult().set(control.getDeliveringCount());
  }
 else   if (MESSAGES_ADDED.getName().equals(attributeName)) {
    context.getResult().set(control.getMessagesAdded());
  }
 else   if (ID.getName().equals(attributeName)) {
    context.getResult().set(control.getID());
  }
 else   if (PAUSED.getName().equals(attributeName)) {
    try {
      context.getResult().set(control.isPaused());
    }
 catch (    RuntimeException e) {
      throw e;
    }
catch (    Exception e) {
      throw new RuntimeException(e);
    }
  }
 else   if (TEMPORARY.getName().equals(attributeName)) {
    context.getResult().set(control.isTemporary());
  }
 else {
    throw MESSAGES.unsupportedAttribute(attributeName);
  }
  context.stepCompleted();
}

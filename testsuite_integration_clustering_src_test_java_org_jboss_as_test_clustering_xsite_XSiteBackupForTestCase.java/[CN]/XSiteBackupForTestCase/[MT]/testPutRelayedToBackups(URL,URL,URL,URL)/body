{
  DefaultHttpClient client=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient();
  URI url1=CacheAccessServlet.createPutURI(baseURL1,"a","100");
  URI url2=CacheAccessServlet.createGetURI(baseURL2,"a");
  URI url3=CacheAccessServlet.createGetURI(baseURL3,"a");
  URI url4=CacheAccessServlet.createGetURI(baseURL4,"a");
  try {
    System.out.println("Executing HTTP request: " + url1);
    HttpResponse response=client.execute(new HttpGet(url1));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    System.out.println("Executed HTTP request");
    waitForReplication(GRACE_TIME_TO_REPLICATE);
    System.out.println("Executing HTTP request: " + url2);
    response=client.execute(new HttpGet(url2));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    System.out.println("Executed HTTP request");
    System.out.println("Executing HTTP request: " + url3);
    response=client.execute(new HttpGet(url3));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    System.out.println("Executed HTTP request");
    System.out.println("Executing HTTP request: " + url4);
    response=client.execute(new HttpGet(url4));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    System.out.println("Executed HTTP request");
  }
  finally {
    HttpClientUtils.closeQuietly(client);
  }
}

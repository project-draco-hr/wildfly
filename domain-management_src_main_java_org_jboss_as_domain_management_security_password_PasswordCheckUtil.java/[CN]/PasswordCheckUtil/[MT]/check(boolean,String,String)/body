{
  List<PasswordRestriction> passwordValuesRestrictions=getPasswordRestrictions(userName);
  final PasswordStrengthCheckResult strengthResult=this.passwordStrengthChecker.check(password,passwordValuesRestrictions);
  final int failedRestrictions=strengthResult.getFailedRestrictions().size();
  final PasswordStrength strength=strengthResult.getStrength();
  final boolean strongEnough=assertStrength(strength);
  PasswordCheckResult.Result resultAction;
  String resultMessage=null;
  if (isAdminitrative) {
    if (strongEnough) {
      if (failedRestrictions > 0) {
        resultAction=Result.WARN;
        resultMessage=strengthResult.getFailedRestrictions().get(0).getMessage();
      }
 else {
        resultAction=Result.ACCEPT;
      }
    }
 else {
      resultAction=Result.WARN;
      resultMessage=MESSAGES.passwordNotStrongEnough(strength.toString(),this.acceptable.toString());
    }
  }
 else {
    if (strongEnough) {
      if (failedRestrictions > 0) {
        resultAction=Result.REJECT;
        resultMessage=strengthResult.getFailedRestrictions().get(0).getMessage();
      }
 else {
        resultAction=Result.ACCEPT;
      }
    }
 else {
      if (failedRestrictions > 0) {
        resultAction=Result.REJECT;
        resultMessage=strengthResult.getFailedRestrictions().get(0).getMessage();
      }
 else {
        resultAction=Result.REJECT;
        resultMessage=MESSAGES.passwordNotStrongEnough(strength.toString(),this.acceptable.toString());
      }
    }
  }
  return new PasswordCheckResult(resultAction,resultMessage);
}

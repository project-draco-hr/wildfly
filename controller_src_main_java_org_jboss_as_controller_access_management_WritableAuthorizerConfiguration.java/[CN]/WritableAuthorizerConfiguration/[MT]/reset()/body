{
  this.authorizerDescription=StandardRBACAuthorizer.AUTHORIZER_DESCRIPTION;
  this.useRealmRoles=this.nonFacadeMBeansSensitive=false;
  this.roleMappings=new HashMap<String,RoleMappingImpl>();
  RoleMaps oldRoleMaps=this.roleMaps;
  this.roleMaps=new RoleMaps(authorizerDescription.getStandardRoles(),Collections.<String,ScopedRole>emptyMap());
  for (  ScopedRole role : oldRoleMaps.scopedRoles.values()) {
    for (    ScopedRoleListener listener : scopedRoleListeners) {
      try {
        listener.scopedRoleRemoved(role);
      }
 catch (      Exception ignored) {
      }
    }
  }
}

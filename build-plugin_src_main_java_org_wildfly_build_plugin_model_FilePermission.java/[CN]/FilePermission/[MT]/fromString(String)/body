{
  if (permission.length() != 3) {
    throw new RuntimeException("Permission string must be 3 digits");
  }
  final Set<PosixFilePermission> permissions=new HashSet<>();
  int user=Integer.parseInt(Character.toString(permission.charAt(0)));
  if ((user & 1) != 0) {
    permissions.add(PosixFilePermission.OWNER_EXECUTE);
  }
  if ((user & 2) != 0) {
    permissions.add(PosixFilePermission.OWNER_WRITE);
  }
  if ((user & 4) != 0) {
    permissions.add(PosixFilePermission.OWNER_READ);
  }
  int group=Integer.parseInt(Character.toString(permission.charAt(1)));
  if ((group & 1) != 0) {
    permissions.add(PosixFilePermission.GROUP_EXECUTE);
  }
  if ((group & 2) != 0) {
    permissions.add(PosixFilePermission.GROUP_WRITE);
  }
  if ((group & 4) != 0) {
    permissions.add(PosixFilePermission.GROUP_READ);
  }
  int others=Integer.parseInt(Character.toString(permission.charAt(2)));
  if ((others & 1) != 0) {
    permissions.add(PosixFilePermission.OTHERS_EXECUTE);
  }
  if ((others & 2) != 0) {
    permissions.add(PosixFilePermission.OTHERS_WRITE);
  }
  if ((others & 4) != 0) {
    permissions.add(PosixFilePermission.OTHERS_READ);
  }
  return permissions;
}

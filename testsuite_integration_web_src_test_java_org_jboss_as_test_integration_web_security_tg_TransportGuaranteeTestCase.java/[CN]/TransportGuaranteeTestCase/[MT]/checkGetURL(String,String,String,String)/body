{
  log.info("Checking URL=" + url);
  HttpClient httpClient;
  if (url.startsWith("https")) {
    httpClient=TestHttpClientUtils.wrapHttpsClient(new DefaultHttpClient());
  }
 else {
    httpClient=new DefaultHttpClient();
  }
  ((DefaultHttpClient)httpClient).getCredentialsProvider().setCredentials(new AuthScope(AuthScope.ANY),new UsernamePasswordCredentials(user,pass));
  HttpGet get=new HttpGet(url);
  HttpResponse hr;
  try {
    hr=httpClient.execute(get);
  }
 catch (  Exception e) {
    if (responseSubstring == null)     return false;
 else     throw new Exception(e);
  }
  int statusCode=hr.getStatusLine().getStatusCode();
  if (statusCode != 200) {
    log.info("statusCode not expected. statusCode=" + statusCode + ", URL="+ url);
    return false;
  }
  if (responseSubstring == null) {
    log.info("statusCode==200 on URL=" + url);
    return true;
  }
  String response=EntityUtils.toString(hr.getEntity());
  if (response.indexOf(responseSubstring) != -1) {
    return true;
  }
 else {
    log.info("Response doesn't contain expected substring (" + responseSubstring + ")");
    return false;
  }
}

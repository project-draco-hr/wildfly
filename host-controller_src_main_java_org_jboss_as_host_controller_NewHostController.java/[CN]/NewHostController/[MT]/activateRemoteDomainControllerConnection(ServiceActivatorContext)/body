{
  final ServiceTarget serviceTarget=serviceActivatorContext.getServiceTarget();
  final NewDomainControllerConnectionService domainControllerClientService=new NewDomainControllerConnectionService(this,fileRepository,10L);
  final HostModel hostConfig=getHostModel();
  final RemoteDomainControllerElement remoteDomainControllerElement=hostConfig.getRemoteDomainControllerElement();
  final InetAddress hostAddress;
  try {
    hostAddress=InetAddress.getByName(remoteDomainControllerElement.getHost());
  }
 catch (  final UnknownHostException e) {
    throw new RuntimeException("Failed to get remote domain controller address",e);
  }
  final ManagementElement managementElement=hostConfig.getManagementElement();
  serviceTarget.addService(DomainControllerConnectionService.SERVICE_NAME,domainControllerClientService).addListener(new AbstractServiceListener<DomainControllerConnection>(){
    @Override public void serviceFailed(    final ServiceController<? extends DomainControllerConnection> serviceController,    final StartException reason){
      log.error("Failed to register with domain controller.",reason);
    }
  }
).addInjection(domainControllerClientService.getDomainControllerAddressInjector(),hostAddress).addInjection(domainControllerClientService.getDomainControllerPortInjector(),remoteDomainControllerElement.getPort()).addDependency(NetworkInterfaceService.JBOSS_NETWORK_INTERFACE.append(managementElement.getInterfaceName()),NetworkInterfaceBinding.class,domainControllerClientService.getLocalManagementInterfaceInjector()).addInjection(domainControllerClientService.getLocalManagementPortInjector(),managementElement.getPort()).addDependency(SERVICE_NAME_BASE.append("executor"),ScheduledExecutorService.class,domainControllerClientService.getExecutorServiceInjector()).addDependency(SERVICE_NAME_BASE.append("thread-factory"),ThreadFactory.class,domainControllerClientService.getThreadFactoryInjector()).addAliases(DomainControllerConnection.SERVICE_NAME).setInitialMode(ServiceController.Mode.ACTIVE).install();
}

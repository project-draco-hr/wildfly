{
  final ServiceTarget serviceTarget=serviceActivatorContext.getServiceTarget();
  final ModelNode managementResource=getHostModel().get(MANAGEMENT);
  final String managementInterface=managementResource.require(INTERFACE).asString();
  final int managementPort=managementResource.require(PORT).asInt();
  final ServiceName threadFactoryServiceName=SERVICE_NAME_BASE.append("thread-factory");
  serviceTarget.addService(threadFactoryServiceName,new ThreadFactoryService()).install();
  final ServiceName executorServiceName=SERVICE_NAME_BASE.append("executor");
  final InjectedValue<ThreadFactory> threadFactoryValue=new InjectedValue<ThreadFactory>();
  serviceTarget.addService(executorServiceName,new Service<ScheduledExecutorService>(){
    private ScheduledExecutorService executorService;
    @Override public synchronized void start(    final StartContext context) throws StartException {
      executorService=Executors.newScheduledThreadPool(20,threadFactoryValue.getValue());
    }
    @Override public synchronized void stop(    final StopContext context){
      executorService.shutdown();
    }
    @Override public synchronized ScheduledExecutorService getValue() throws IllegalStateException {
      return executorService;
    }
  }
).addDependency(threadFactoryServiceName,ThreadFactory.class,threadFactoryValue).install();
  final ManagementCommunicationService managementCommunicationService=new ManagementCommunicationService();
  serviceTarget.addService(ManagementCommunicationService.SERVICE_NAME,managementCommunicationService).addDependency(NetworkInterfaceService.JBOSS_NETWORK_INTERFACE.append(managementInterface),NetworkInterfaceBinding.class,managementCommunicationService.getInterfaceInjector()).addInjection(managementCommunicationService.getPortInjector(),managementPort).addDependency(executorServiceName,ExecutorService.class,managementCommunicationService.getExecutorServiceInjector()).addDependency(threadFactoryServiceName,ThreadFactory.class,managementCommunicationService.getThreadFactoryInjector()).setInitialMode(ServiceController.Mode.ACTIVE).install();
  final ManagementOperationHandlerService<NewHostControllerOperationHandler> operationHandlerService=new ManagementOperationHandlerService<NewHostControllerOperationHandler>(new NewHostControllerOperationHandler(this));
  serviceTarget.addService(ManagementCommunicationService.SERVICE_NAME.append("host","controller"),operationHandlerService).addDependency(ManagementCommunicationService.SERVICE_NAME,ManagementCommunicationService.class,new ManagementCommunicationServiceInjector(operationHandlerService)).install();
  final ManagementOperationHandlerService<NewServerToHostControllerOperationHandler> serverOperationHandlerService=new ManagementOperationHandlerService<NewServerToHostControllerOperationHandler>(new NewServerToHostControllerOperationHandler(this));
  serviceTarget.addService(ManagementCommunicationService.SERVICE_NAME.append("server","to","host","controller"),serverOperationHandlerService).addDependency(ManagementCommunicationService.SERVICE_NAME,ManagementCommunicationService.class,new ManagementCommunicationServiceInjector(serverOperationHandlerService)).install();
}

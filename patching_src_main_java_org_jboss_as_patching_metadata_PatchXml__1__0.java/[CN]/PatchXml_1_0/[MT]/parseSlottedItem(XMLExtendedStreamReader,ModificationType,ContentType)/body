{
  String moduleName=null;
  String slot="main";
  byte[] hash=NO_CONTENT;
  byte[] targetHash=NO_CONTENT;
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    final String value=reader.getAttributeValue(i);
    final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case NAME:
      moduleName=value;
    break;
case SLOT:
  slot=value;
break;
case HASH:
hash=hexStringToByteArray(value);
break;
case EXISTING_HASH:
targetHash=hexStringToByteArray(value);
break;
default :
throw unexpectedAttribute(reader,i);
}
}
requireNoContent(reader);
final ModuleItem item=contentType == ContentType.MODULE ? new ModuleItem(moduleName,slot,hash) : new BundleItem(moduleName,slot,hash);
return new ContentModification(item,targetHash,modificationType);
}

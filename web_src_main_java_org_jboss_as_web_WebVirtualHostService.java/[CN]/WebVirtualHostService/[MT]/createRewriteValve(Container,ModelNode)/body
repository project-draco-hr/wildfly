{
  final RewriteValve rewriteValve=new RewriteValve();
  rewriteValve.setContainer(container);
  StringBuffer configuration=new StringBuffer();
  for (  final ModelNode rewrite : element.asList()) {
    if (rewrite.has(Constants.CONDITION)) {
      for (      final ModelNode condition : rewrite.get(Constants.CONDITION).asList()) {
        configuration.append("RewriteCond ").append(condition.get(Constants.TEST).asString()).append(" ").append(condition.get(Constants.PATTERN).asString());
        if (condition.hasDefined(Constants.FLAGS)) {
          configuration.append(" [").append(condition.get(Constants.FLAGS).asString()).append("]\r\n");
        }
 else {
          configuration.append("\r\n");
        }
      }
    }
    configuration.append("RewriteRule ").append(rewrite.get(Constants.PATTERN).asString()).append(" ").append(rewrite.get(Constants.SUBSTITUTION).asString());
    if (rewrite.hasDefined(Constants.FLAGS)) {
      configuration.append(" [").append(rewrite.get(Constants.FLAGS).asString()).append("]\r\n");
    }
 else {
      configuration.append("\r\n");
    }
  }
  try {
    rewriteValve.setConfiguration(configuration.toString());
  }
 catch (  Exception e) {
    throw new StartException(e);
  }
  return rewriteValve;
}

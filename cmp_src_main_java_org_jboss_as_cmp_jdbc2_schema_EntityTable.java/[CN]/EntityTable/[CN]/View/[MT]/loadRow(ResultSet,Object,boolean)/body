{
  Row row=getRowByPk(pk,false);
  if (row != null) {
    if (log.isTraceEnabled()) {
      log.trace("row is already loaded: pk=" + pk);
    }
    return row;
  }
 else   if (log.isTraceEnabled()) {
    log.trace("reading result set: pk=" + pk);
  }
  row=createCleanRow(pk);
  JDBCCMPFieldBridge2[] tableFields=(JDBCCMPFieldBridge2[])entity.getTableFields();
  int rsOffset=1;
  for (int i=0; i < tableFields.length; ++i) {
    JDBCCMPFieldBridge2 field=tableFields[i];
    if (searchableOnly && !field.getJDBCType().isSearchable()) {
      row.fields[field.getRowIndex()]=NOT_LOADED;
      --rsOffset;
      continue;
    }
    Object columnValue=field.loadArgumentResults(rs,field.getRowIndex() + rsOffset);
    row.fields[field.getRowIndex()]=columnValue;
    if (field.getVersionIndex() != -1) {
      row.fields[field.getVersionIndex()]=columnValue;
    }
  }
  Object[] relations=(relationsTotal > 0 ? new Object[relationsTotal] : null);
  try {
    cache.lock(row.pk);
    cache.put(tx,row.pk,row.fields,relations);
  }
  finally {
    cache.unlock(row.pk);
  }
  return row;
}

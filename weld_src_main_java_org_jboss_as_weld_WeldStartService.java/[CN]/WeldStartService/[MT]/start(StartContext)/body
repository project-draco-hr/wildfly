{
  if (runOnce.get()) {
    ServiceController<?> controller=context.getController().getServiceContainer().getService(deploymentServiceName);
    controller.addListener(new AbstractServiceListener<Object>(){
      @Override public void transition(      final ServiceController<?> controller,      final ServiceController.Transition transition){
        if (transition.getAfter().equals(ServiceController.Substate.DOWN)) {
          controller.setMode(Mode.ACTIVE);
          controller.removeListener(this);
        }
      }
    }
);
    controller.setMode(Mode.NEVER);
    return;
  }
  runOnce.set(true);
  ClassLoader oldTccl=WildFlySecurityManager.getCurrentContextClassLoaderPrivileged();
  try {
    for (    SetupAction action : setupActions) {
      action.setup(null);
    }
    WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(classLoader);
    bootstrap.getValue().getBootstrap().startInitialization();
    bootstrap.getValue().getBootstrap().deployBeans();
    bootstrap.getValue().getBootstrap().validateBeans();
    bootstrap.getValue().getBootstrap().endInitialization();
  }
  finally {
    for (    SetupAction action : setupActions) {
      try {
        action.teardown(null);
      }
 catch (      Exception e) {
        WeldLogger.DEPLOYMENT_LOGGER.exceptionClearingThreadState(e);
      }
    }
    WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(oldTccl);
  }
}

{
  final ModelNode operation=new ModelNode();
  ProtocolUtils.expectHeader(input,ModelControllerProtocol.PARAM_OPERATION);
  operation.readExternal(input);
  ProtocolUtils.expectHeader(input,ModelControllerProtocol.PARAM_INPUTSTREAMS_LENGTH);
  final int attachmentsLength=input.readInt();
  final ManagementResponseHeader response=ManagementResponseHeader.create(context.getRequestHeader());
  final FlushableDataOutput os=context.writeMessage(response);
  try {
    os.write(ManagementProtocol.RESPONSE_END);
    os.close();
  }
  finally {
    StreamUtils.safeClose(os);
  }
  context.executeAsync(new ManagementRequestContext.AsyncTask<ExecuteRequestContext>(){
    @Override public void execute(    ManagementRequestContext<ExecuteRequestContext> context) throws Exception {
      doExecute(operation,attachmentsLength,context);
    }
  }
);
}

{
  CacheMode mode=local ? CacheMode.LOCAL : (totalReplication ? CacheMode.REPL_SYNC : CacheMode.DIST_SYNC);
  GlobalConfigurationBuilder globalBuilder=new GlobalConfigurationBuilder();
  String name="container" + containerIndex++;
  globalBuilder.transport().transport(local ? null : new JGroupsTransport()).addProperty(JGroupsTransport.CHANNEL_LOOKUP,ChannelLookup.class.getName()).distributedSyncTimeout(60000).clusterName("test").globalJmxStatistics().enable().cacheManagerName(name).allowDuplicateDomains(true);
  ConfigurationBuilder builder=new ConfigurationBuilder().read(CacheAdd.getDefaultConfiguration(mode));
  builder.transaction().syncCommitPhase(true).syncRollbackPhase(true).transactionMode(TransactionMode.TRANSACTIONAL).transactionManagerLookup(new TransactionManagerProvider(BatchModeTransactionManager.getInstance())).invocationBatching().enable().jmxStatistics().enable();
  if (passivationDir != null) {
    builder.loaders().passivation(true).preload(false).addCacheLoader().cacheLoader(new FileCacheStore()).addProperty("location",passivationDir).addProperty("fsyncMode","perWrite").fetchPersistentState(mode.isReplicated()).purgeOnStartup(purgeCacheLoader).purgeSynchronously(true);
  }
  try {
    return new ExtendedCacheManager(new DefaultEmbeddedCacheManager(globalBuilder.build(),builder.build(),CacheContainer.DEFAULT_CACHE_NAME));
  }
 catch (  Exception e) {
    throw new IllegalStateException(e);
  }
}

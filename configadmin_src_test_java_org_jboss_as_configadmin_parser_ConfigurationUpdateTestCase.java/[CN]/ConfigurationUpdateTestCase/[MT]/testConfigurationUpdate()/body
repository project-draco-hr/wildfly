{
  ModelNode targetModel=new ModelNode();
  Resource mockResource=Mockito.mock(Resource.class);
  Mockito.when(mockResource.getModel()).thenReturn(targetModel);
  OperationContext mockOperationContext=Mockito.mock(OperationContext.class);
  Mockito.when(mockOperationContext.createResource(PathAddress.EMPTY_ADDRESS)).thenReturn(mockResource);
  Hashtable<String,String> dict=new Hashtable<String,String>();
  dict.put("foo","bar");
  ModelNode operation=getOperationModelNode("mypid",dict);
  ConfigurationUpdate.INSTANCE.execute(mockOperationContext,operation);
  InOrder inOrder=Mockito.inOrder(mockOperationContext);
  inOrder.verify(mockOperationContext).removeResource(PathAddress.EMPTY_ADDRESS);
  inOrder.verify(mockOperationContext).createResource(PathAddress.EMPTY_ADDRESS);
  ArgumentCaptor<OperationStepHandler> addedStep=ArgumentCaptor.forClass(OperationStepHandler.class);
  inOrder.verify(mockOperationContext).addStep(addedStep.capture(),Mockito.eq(OperationContext.Stage.RUNTIME));
  inOrder.verify(mockOperationContext).completeStep();
  ModelNode expectedModel=new ModelNode();
  ModelNode subModel=new ModelNode();
  subModel.get("foo").set("bar");
  expectedModel.get("entries").set(subModel);
  assertEquals(expectedModel,targetModel);
  OperationStepHandler step=addedStep.getValue();
  ConfigAdminServiceImpl mockCAS=Mockito.mock(ConfigAdminServiceImpl.class);
  ServiceController mockCASServiceController=Mockito.mock(ServiceController.class);
  Mockito.when(mockCASServiceController.getValue()).thenReturn(mockCAS);
  ServiceRegistry mockServiceRegistry=Mockito.mock(ServiceRegistry.class);
  Mockito.when(mockServiceRegistry.getService(ConfigAdminService.SERVICE_NAME)).thenReturn(mockCASServiceController);
  OperationContext mockContext2=Mockito.mock(OperationContext.class);
  Mockito.when(mockContext2.getServiceRegistry(true)).thenReturn(mockServiceRegistry);
  step.execute(mockContext2,operation);
  Mockito.verify(mockCAS).putConfigurationFromDMR("mypid",dict);
  Mockito.verify(mockContext2).completeStep();
}

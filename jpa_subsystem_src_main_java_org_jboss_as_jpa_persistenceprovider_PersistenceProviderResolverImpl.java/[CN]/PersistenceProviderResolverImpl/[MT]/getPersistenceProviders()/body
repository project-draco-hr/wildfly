{
  List<PersistenceProvider> providersCopy=new ArrayList<>(providers.size());
synchronized (persistenceProviderPerClassLoader) {
    if (persistenceProviderPerClassLoader.size() > 0) {
      ClassLoader deploymentClassLoader=findParentModuleCl(WildFlySecurityManager.getCurrentContextClassLoaderPrivileged());
      ROOT_LOGGER.tracef("get application level Persistence Provider for classloader %s",deploymentClassLoader);
      List<Class<? extends PersistenceProvider>> deploymentSpecificPersistenceProviders=persistenceProviderPerClassLoader.get(deploymentClassLoader);
      ROOT_LOGGER.tracef("got application level Persistence Provider list %s",deploymentSpecificPersistenceProviders);
      if (deploymentSpecificPersistenceProviders != null) {
        for (        Class<? extends PersistenceProvider> providerClass : deploymentSpecificPersistenceProviders) {
          try {
            ROOT_LOGGER.tracef("application has its own Persistence Provider %s",providerClass.getName());
            providersCopy.add(providerClass.newInstance());
          }
 catch (          InstantiationException e) {
            throw JpaLogger.ROOT_LOGGER.couldNotCreateInstanceProvider(e,providerClass.getName());
          }
catch (          IllegalAccessException e) {
            throw JpaLogger.ROOT_LOGGER.couldNotCreateInstanceProvider(e,providerClass.getName());
          }
        }
      }
    }
  }
  for (  Class<?> providerClass : providers) {
    try {
      providersCopy.add((PersistenceProvider)providerClass.newInstance());
      ROOT_LOGGER.tracef("returning global (module) Persistence Provider %s",providerClass.getName());
    }
 catch (    InstantiationException e) {
      throw JpaLogger.ROOT_LOGGER.couldNotCreateInstanceProvider(e,providerClass.getName());
    }
catch (    IllegalAccessException e) {
      throw JpaLogger.ROOT_LOGGER.couldNotCreateInstanceProvider(e,providerClass.getName());
    }
  }
  return providersCopy;
}

{
  ModuleClassLoader classLoader=(ModuleClassLoader)getClass().getClassLoader();
  List<String> foundResources=ResourceListingUtils.listResources(classLoader,rootDir,recursive);
  List<String> resourcesInDeployment=new ArrayList<>();
  resourcesInDeployment.add(ResourceListingUtils.classToPath(JarResourceListingTestCase.class));
  resourcesInDeployment.add(ResourceListingUtils.classToPath(ResourceListingUtils.class));
  resourcesInDeployment.add("META-INF/example.txt");
  resourcesInDeployment.add("META-INF/properties/nested.properties");
  resourcesInDeployment.add("META-INF/MANIFEST.MF");
  resourcesInDeployment.add("example2.txt");
  resourcesInDeployment.add("TextFile1.txt");
  ResourceListingUtils.filterResources(resourcesInDeployment,rootDir,!recursive);
  Collections.sort(foundResources);
  Collections.sort(resourcesInDeployment);
  log.info("List of expected resources:");
  for (  String expectedResource : resourcesInDeployment) {
    log.info(expectedResource);
  }
  log.info("List of found resources: ");
  for (  String foundResource : foundResources) {
    log.info(foundResource);
  }
  Assert.assertArrayEquals("Not all resources from JAR archive are correctly listed",resourcesInDeployment.toArray(),foundResources.toArray());
}

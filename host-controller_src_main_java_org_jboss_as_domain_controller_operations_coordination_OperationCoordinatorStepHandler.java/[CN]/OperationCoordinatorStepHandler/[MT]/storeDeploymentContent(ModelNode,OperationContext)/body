{
  try {
    PathAddress address=PathAddress.pathAddress(opNode.get(OP_ADDR));
    if (address.size() == 0) {
      String opName=opNode.get(OP).asString();
      if (DeploymentFullReplaceHandler.OPERATION_NAME.equals(opName) && hasStorableContent(opNode)) {
        byte[] hash=DeploymentUploadUtil.storeDeploymentContent(context,opNode,contentRepository);
        opNode.get(CONTENT).get(0).remove(INPUT_STREAM_INDEX);
        opNode.get(CONTENT).get(0).get(HASH).set(hash);
      }
 else       if (COMPOSITE.equals(opName) && opNode.hasDefined(STEPS)) {
        for (        ModelNode childOp : opNode.get(STEPS).asList()) {
          storeDeploymentContent(childOp,context);
        }
      }
    }
 else     if (address.size() == 1 && DEPLOYMENT.equals(address.getElement(0).getKey()) && ADD.equals(opNode.get(OP).asString()) && hasStorableContent(opNode)) {
      byte[] hash=DeploymentUploadUtil.storeDeploymentContent(context,opNode,contentRepository);
      opNode.get(CONTENT).get(0).remove(INPUT_STREAM_INDEX);
      opNode.get(CONTENT).get(0).get(HASH).set(hash);
    }
  }
 catch (  IOException ioe) {
    throw new OperationFailedException(new ModelNode().set(MESSAGES.caughtExceptionStoringDeploymentContent(ioe.getClass().getSimpleName(),ioe)));
  }
}

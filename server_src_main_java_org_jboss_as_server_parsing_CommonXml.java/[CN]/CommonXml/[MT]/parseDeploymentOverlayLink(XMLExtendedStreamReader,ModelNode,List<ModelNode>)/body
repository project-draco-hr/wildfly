{
  final EnumSet<Attribute> required=EnumSet.of(Attribute.NAME,Attribute.DEPLOYMENT,Attribute.DEPLOYMENT_OVERLAY);
  String name=null;
  String deployment=null;
  String deploymentOverlay=null;
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    requireNoNamespaceAttribute(reader,i);
    final String value=reader.getAttributeValue(i);
    final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
    required.remove(attribute);
switch (attribute) {
case NAME:
{
        name=value;
        break;
      }
case DEPLOYMENT:
{
      deployment=value;
      break;
    }
case DEPLOYMENT_OVERLAY:
{
    deploymentOverlay=value;
    break;
  }
default :
throw unexpectedAttribute(reader,i);
}
}
if (required.size() > 0) {
throw missingRequired(reader,required);
}
requireNoContent(reader);
final ModelNode addr=address.clone();
addr.add(DEPLOYMENT_OVERLAY_LINK,name);
final ModelNode op=new ModelNode();
op.get(OP).set(ADD);
op.get(OP_ADDR).set(addr);
op.get(DEPLOYMENT).set(deployment);
op.get(DEPLOYMENT_OVERLAY).set(deploymentOverlay);
list.add(op);
}

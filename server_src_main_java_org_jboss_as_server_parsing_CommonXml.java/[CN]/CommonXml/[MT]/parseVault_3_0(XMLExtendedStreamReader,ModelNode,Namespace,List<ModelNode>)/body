{
  final int vaultAttribCount=reader.getAttributeCount();
  ModelNode vault=new ModelNode();
  String code=null;
  for (int i=0; i < vaultAttribCount; i++) {
    requireNoNamespaceAttribute(reader,i);
    final String value=reader.getAttributeValue(i);
    final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case CODE:
{
        VaultResourceDefinition.CODE.parseAndSetParameter(value,vault,reader);
        break;
      }
case MODULE:
{
      VaultResourceDefinition.MODULE.parseAndSetParameter(value,vault,reader);
      break;
    }
default :
  throw unexpectedAttribute(reader,i);
}
}
ModelNode vaultAddress=address.clone();
vaultAddress.add(CORE_SERVICE,VAULT);
if (code != null) {
vault.get(Attribute.CODE.getLocalName()).set(code);
}
vault.get(OP_ADDR).set(vaultAddress);
vault.get(OP).set(ADD);
while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
requireNamespace(reader,expectedNs);
final Element element=Element.forName(reader.getLocalName());
switch (element) {
case VAULT_OPTION:
{
  parseModuleOption(reader,vault.get(VAULT_OPTIONS));
  break;
}
}
}
list.add(vault);
}

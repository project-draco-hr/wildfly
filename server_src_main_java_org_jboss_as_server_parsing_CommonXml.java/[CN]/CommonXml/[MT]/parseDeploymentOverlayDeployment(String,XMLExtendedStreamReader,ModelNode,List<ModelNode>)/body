{
  final EnumSet<Attribute> required=EnumSet.of(Attribute.NAME);
  String depName=null;
  boolean regEx=false;
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    requireNoNamespaceAttribute(reader,i);
    final String value=reader.getAttributeValue(i);
    final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
    required.remove(attribute);
switch (attribute) {
case NAME:
{
        depName=value;
        break;
      }
case REGULAR_EXPRESSION:
{
      regEx=Boolean.parseBoolean(value);
      break;
    }
default :
  throw unexpectedAttribute(reader,i);
}
}
requireNoContent(reader);
if (required.size() > 0) {
throw missingRequired(reader,required);
}
final ModelNode address=baseAddress.clone();
address.add(DEPLOYMENT_OVERLAY,name);
address.add(DEPLOYMENT,depName);
final ModelNode op=new ModelNode();
op.get(OP).set(ADD);
op.get(OP_ADDR).set(address);
op.get(REGULAR_EXPRESSION).set(regEx);
list.add(op);
}

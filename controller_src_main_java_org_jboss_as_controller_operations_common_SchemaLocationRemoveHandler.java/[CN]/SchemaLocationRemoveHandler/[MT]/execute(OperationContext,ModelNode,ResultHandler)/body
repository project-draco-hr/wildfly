{
  ModelNode param=operation.get(SCHEMA_LOCATION);
  typeValidator.validateParameter(SCHEMA_LOCATION,param);
  ModelNode locations=context.getSubModel().get(SCHEMA_LOCATIONS);
  Property toRemove=null;
  ModelNode newList=new ModelNode().setEmptyList();
  String uri=param.asString();
  if (locations.isDefined()) {
    for (    Property location : locations.asPropertyList()) {
      if (uri.equals(location.getName())) {
        toRemove=location;
      }
 else {
        newList.add(location.getName(),location.getValue());
      }
    }
  }
  if (toRemove != null) {
    ModelNode compensating=SchemaLocationAddHandler.getAddSchemaLocationOperation(operation.get(OP_ADDR),toRemove);
    locations.set(newList);
    resultHandler.handleResultComplete();
    return new BasicOperationResult(compensating);
  }
 else {
    throw new OperationFailedException(new ModelNode().set("No schema location with URI " + uri + "found"));
  }
}

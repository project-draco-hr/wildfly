{
  final ResourceTransformationDescriptionBuilder builder=TransformationDescriptionBuilder.Factory.createInstance(PATH);
  builder.rejectChildResource(DISCARDED_WILDCARD);
  builder.rejectChildResource(DISCARDED_SPECIFIC);
  TransformationDescription.Tools.register(builder.build(),transformersSubRegistration);
  final Resource resource=transformResource();
  Assert.assertNotNull(resource);
  final Resource toto=resource.getChild(PATH);
  Assert.assertNotNull(toto);
  final ModelNode model=toto.getModel();
  Assert.assertEquals(1,model.keys().size());
  Assert.assertEquals("test",model.get("subs").asString());
  ModelNode op=Util.createAddOperation(PathAddress.pathAddress(PATH));
  TransformedOperation transformed=transformOperation(op);
  Assert.assertEquals(op,transformed.getTransformedOperation());
  Assert.assertFalse(transformed.rejectOperation(success()));
  op=Util.createAddOperation(PathAddress.pathAddress(PATH,DISCARDED_WILDCARD_ENTRY));
  transformed=transformOperation(op);
  Assert.assertNull(transformed.getTransformedOperation());
  Assert.assertTrue(transformed.rejectOperation(success()));
  Assert.assertNotNull(transformed.getFailureDescription());
  op=Util.createAddOperation(PathAddress.pathAddress(PATH,DISCARDED_SPECIFIC));
  transformed=transformOperation(op);
  Assert.assertNull(transformed.getTransformedOperation());
  Assert.assertTrue(transformed.rejectOperation(success()));
  Assert.assertNotNull(transformed.getFailureDescription());
  op=Util.createAddOperation(PathAddress.pathAddress(PATH,DISCARDED_WILDCARD_ENTRY,DISCARDED_CHILD));
  transformed=transformOperation(op);
  Assert.assertNull(transformed.getTransformedOperation());
  Assert.assertTrue(transformed.rejectOperation(success()));
  Assert.assertNotNull(transformed.getFailureDescription());
  op=Util.createAddOperation(PathAddress.pathAddress(PATH,DISCARDED_SPECIFIC,DISCARDED_CHILD));
  transformed=transformOperation(op);
  Assert.assertNull(transformed.getTransformedOperation());
  Assert.assertTrue(transformed.rejectOperation(success()));
  Assert.assertNotNull(transformed.getFailureDescription());
}

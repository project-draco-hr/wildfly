{
  super(component,instanceReference,preDestroyInterceptor,methodInterceptors);
  final SessionID existingSession=(SessionID)factoryContext.getContextData().get(SessionID.class);
  if (existingSession != null) {
    this.id=existingSession;
  }
 else {
    final UUID uuid=UUID.randomUUID();
    ByteBuffer bb=ByteBuffer.wrap(new byte[16]);
    bb.putLong(uuid.getMostSignificantBits());
    bb.putLong(uuid.getLeastSignificantBits());
    this.id=SessionID.createSessionID(bb.array());
  }
  this.afterBegin=component.createInterceptor(component.getAfterBegin(),factoryContext);
  this.afterCompletion=component.createInterceptor(component.getAfterCompletion(),factoryContext);
  this.beforeCompletion=component.createInterceptor(component.getBeforeCompletion(),factoryContext);
  this.prePassivate=component.createInterceptor(component.getPrePassivate(),factoryContext);
  this.postActivate=component.createInterceptor(component.getPostActivate(),factoryContext);
  this.ejb2XRemoveInterceptor=component.createInterceptor(component.getEjb2XRemoveMethod(),factoryContext);
}

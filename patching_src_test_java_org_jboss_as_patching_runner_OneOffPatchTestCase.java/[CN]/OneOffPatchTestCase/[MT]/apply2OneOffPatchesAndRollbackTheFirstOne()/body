{
  File binDir=mkdir(env.getInstalledImage().getJbossHome(),"bin");
  String standaloneFileName="standalone.sh";
  File standaloneShellFile=touch(binDir,standaloneFileName);
  dump(standaloneShellFile,"original script to run standalone AS7");
  byte[] existingHashForStandaloneShell=hashFile(standaloneShellFile);
  String domainFileName="domain.sh";
  File domainShellFile=touch(binDir,domainFileName);
  dump(domainShellFile,"original script to run domain AS7");
  byte[] existingHashForDomainShell=hashFile(domainShellFile);
  String patchID="patch-1-" + randomString();
  String layerPatchID=randomString();
  File patchDir=mkdir(tempDir,patchID);
  String moduleName=randomString();
  ContentModification moduleAdded=ContentModificationUtils.addModule(patchDir,layerPatchID,moduleName);
  ContentModification fileUpdated=ContentModificationUtils.modifyMisc(patchDir,patchID,"updated script",standaloneShellFile,"bin","standalone.sh");
  Identity identityBeforePatch=loadInstalledIdentity().getIdentity();
  Patch patch=PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).oneOffPatchIdentity(productConfig.getProductName(),productConfig.getProductVersion()).getParent().oneOffPatchElement(layerPatchID,BASE,false).addContentModification(moduleAdded).getParent().addContentModification(fileUpdated).build();
  createPatchXMLFile(patchDir,patch);
  File zippedPatch=createZippedPatchFile(patchDir,patchID);
  PatchingResult result=executePatch(zippedPatch);
  assertPatchHasBeenApplied(result,patch);
  assertFileExists(standaloneShellFile);
  assertFileContent(fileUpdated.getItem().getContentHash(),standaloneShellFile);
  InstalledIdentity updatedInstalledIdentity=loadInstalledIdentity();
  File modulePatchDirectory=updatedInstalledIdentity.getLayers().get(0).loadTargetInfo().getDirectoryStructure().getModulePatchDirectory(layerPatchID);
  assertDirExists(modulePatchDirectory);
  assertDefinedModule(modulePatchDirectory,moduleName,moduleAdded.getItem().getContentHash());
  String patchID_2="patch-2-" + randomString();
  File patchDir_2=mkdir(tempDir,patchID_2);
  ContentModification otherFileUpdated=ContentModificationUtils.modifyMisc(patchDir_2,patchID_2,"updated domain script",domainShellFile,"bin","domain.sh");
  Patch patch_2=PatchBuilder.create().setPatchId(patchID_2).setDescription(randomString()).oneOffPatchIdentity(productConfig.getProductName(),productConfig.getProductVersion()).getParent().addContentModification(otherFileUpdated).build();
  createPatchXMLFile(patchDir_2,patch_2);
  File zippedPatch_2=createZippedPatchFile(patchDir_2,patchID_2);
  PatchingResult result_2=executePatch(zippedPatch_2);
  assertPatchHasBeenApplied(result_2,patch_2);
  assertFileExists(domainShellFile);
  assertFileContent(otherFileUpdated.getItem().getContentHash(),domainShellFile);
  PatchingResult rollbackResult=rollback(patchID,true);
  assertFileExists(standaloneShellFile);
  assertFileContent(existingHashForStandaloneShell,standaloneShellFile);
  assertFileExists(domainShellFile);
  assertFileContent(existingHashForDomainShell,domainShellFile);
}

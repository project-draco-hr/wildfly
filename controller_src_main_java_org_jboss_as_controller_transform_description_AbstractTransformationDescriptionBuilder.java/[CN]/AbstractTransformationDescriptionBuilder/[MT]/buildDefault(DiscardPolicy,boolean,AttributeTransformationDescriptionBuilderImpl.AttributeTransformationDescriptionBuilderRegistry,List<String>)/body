{
  final Map<String,AttributeTransformationDescription> attributes=registry.buildAttributes();
  final Map<String,OperationTransformer> operations=buildOperationTransformers(registry);
  final List<TransformationDescription> children=buildChildren();
  if (!operations.containsKey(ModelDescriptionConstants.WRITE_ATTRIBUTE_OPERATION)) {
    operations.put(ModelDescriptionConstants.WRITE_ATTRIBUTE_OPERATION,OperationTransformationRules.createWriteOperation(attributes));
  }
  if (!operations.containsKey(ModelDescriptionConstants.UNDEFINE_ATTRIBUTE_OPERATION)) {
    operations.put(ModelDescriptionConstants.UNDEFINE_ATTRIBUTE_OPERATION,OperationTransformationRules.createUndefinedOperation(attributes));
  }
  return new TransformingDescription(pathElement,pathAddressTransformer,discardPolicy,inherited,resourceTransformer,attributes,operations,children,discardedOperations);
}

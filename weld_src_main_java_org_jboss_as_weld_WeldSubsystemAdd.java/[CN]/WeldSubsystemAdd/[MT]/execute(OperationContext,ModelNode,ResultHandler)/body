{
  final ModelNode compensatingOperation=Util.getResourceRemoveOperation(operation.require(OP_ADDR));
  if (context instanceof BootOperationContext) {
    final BootOperationContext bootContext=(BootOperationContext)context;
    SingletonProvider.initialize(new TCCLSingletonProvider());
    bootContext.addDeploymentProcessor(Phase.DEPENDENCIES,Phase.DEPENDENCIES_WELD,new WeldDependencyProcessor());
    bootContext.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_WELD_DEPLOYMENT,new BeansXmlProcessor());
    bootContext.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_WELD_WEB_INTEGRATION,new WebIntegrationProcessor());
    bootContext.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_WELD_BEAN_ARCHIVE,new BeanArchiveProcessor());
    bootContext.addDeploymentProcessor(Phase.INSTALL,Phase.INSTALL_WELD_DEPLOYMENT,new WeldDeploymentProcessor());
    bootContext.addDeploymentProcessor(Phase.INSTALL,Phase.INSTALL_WELD_BEAN_MANAGER,new WeldBeanManagerServiceProcessor());
  }
  context.getSubModel().setEmptyObject();
  resultHandler.handleResultComplete(compensatingOperation);
  return Cancellable.NULL;
}

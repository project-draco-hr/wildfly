{
  context.addStep(new AbstractDeploymentChainStep(){
    protected void execute(    DeploymentProcessorTarget processorTarget){
      processorTarget.addDeploymentProcessor(Phase.DEPENDENCIES,Phase.DEPENDENCIES_WELD,new WeldDependencyProcessor());
      processorTarget.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_WELD_DEPLOYMENT,new BeansXmlProcessor());
      processorTarget.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_WELD_WEB_INTEGRATION,new WebIntegrationProcessor());
      processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_WELD_EJB_INTERCEPTORS_INTEGRATION,new WeldEjbInterceptorIntegrationProcessor());
      processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_WELD_BEAN_ARCHIVE,new BeanArchiveProcessor());
      processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_WELD_PORTABLE_EXTENSIONS,new WeldPortableExtensionProcessor());
      processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_WELD_COMPONENT_INTEGRATION,new WeldComponentIntegrationProcessor());
      processorTarget.addDeploymentProcessor(Phase.INSTALL,Phase.INSTALL_WELD_DEPLOYMENT,new WeldDeploymentProcessor());
      processorTarget.addDeploymentProcessor(Phase.INSTALL,Phase.INSTALL_WELD_BEAN_MANAGER,new WeldBeanManagerServiceProcessor());
    }
  }
,OperationContext.Stage.RUNTIME);
  TCCLSingletonService singleton=new TCCLSingletonService();
  newControllers.add(context.getServiceTarget().addService(TCCLSingletonService.SERVICE_NAME,singleton).setInitialMode(Mode.ON_DEMAND).install());
}

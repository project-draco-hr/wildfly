{
  ModelNode opAddr=operation.require(OP_ADDR);
  PathAddress address=PathAddress.pathAddress(opAddr);
  final String securityDomain=address.getLastElement().getValue();
  String principal=null;
  if (operation.hasDefined(Constants.PRINCIPAL_ARGUMENT))   principal=operation.get(Constants.PRINCIPAL_ARGUMENT).asString();
  ServiceController<SecurityDomainContext> controller=getSecurityDomainService(context,securityDomain);
  if (controller != null) {
    waitForService(controller);
    SecurityDomainContext sdc=controller.getValue();
    @SuppressWarnings("unchecked") CacheableManager<?,Principal> manager=(CacheableManager<?,Principal>)sdc.getAuthenticationManager();
    if (principal != null)     manager.flushCache(new SimplePrincipal(principal));
 else     manager.flushCache();
  }
 else {
    throw SecurityMessages.MESSAGES.noAuthenticationCacheAvailable(securityDomain);
  }
  context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);
}

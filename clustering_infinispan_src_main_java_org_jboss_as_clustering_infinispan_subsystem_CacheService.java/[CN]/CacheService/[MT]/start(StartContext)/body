{
  EmbeddedCacheManager container=this.dependencies.getCacheContainer();
  this.cache=container.getCache(this.name);
  this.cache.start();
  Configuration config=this.cache.getCacheConfiguration();
  if (config.transaction().transactionMode().isTransactional()) {
    ComponentRegistry registry=this.cache.getAdvancedCache().getComponentRegistry();
    InterceptorChain chain=registry.getComponent(InterceptorChain.class);
    TransactionTable table=registry.getComponent(TransactionTable.class);
    TransactionCoordinator coordinator=registry.getComponent(TransactionCoordinator.class);
    RecoveryManager recovery=registry.getComponent(RecoveryManager.class);
    TxInterceptor interceptor=new TxInterceptor();
    interceptor.init(table,config,coordinator,this.cache.getAdvancedCache().getRpcManager(),recovery);
    chain.replaceInterceptor(interceptor,org.infinispan.interceptors.TxInterceptor.class);
  }
  XAResourceRecoveryRegistry recoveryRegistry=this.dependencies.getRecoveryRegistry();
  if (recoveryRegistry != null) {
    this.recovery=new InfinispanXAResourceRecovery(this.name,container);
    recoveryRegistry.addXAResourceRecovery(this.recovery);
  }
  log.debugf("%s cache started",this.name);
}

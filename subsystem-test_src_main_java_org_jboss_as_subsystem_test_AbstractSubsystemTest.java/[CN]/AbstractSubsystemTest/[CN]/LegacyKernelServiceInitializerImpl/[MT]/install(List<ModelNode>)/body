{
  ClassLoader parent=this.getClass().getClassLoader() != null ? this.getClass().getClassLoader() : null;
  ClassLoader legacyCl=new ChildFirstClassLoader(parent,parentFirst,childFirst,classloaderURLs.toArray(new URL[classloaderURLs.size()]));
  Class<?> clazz=legacyCl.loadClass(extensionClassName != null ? extensionClassName : mainExtension.getClass().getName());
  Assert.assertEquals(legacyCl,clazz.getClassLoader());
  Assert.assertTrue(Extension.class.isAssignableFrom(clazz));
  Extension extension=(Extension)clazz.newInstance();
  XMLMapper xmlMapper=XMLMapper.Factory.create();
  TestParser testParser=new TestParser(mainSubsystemName,extensionParsingRegistry);
  ExtensionRegistry extensionParsingRegistry=new ExtensionRegistry(additionalInit.getProcessType(),new RunningModeControl(additionalInit.getExtensionRegistryRunningMode()));
  xmlMapper.registerRootElement(new QName(TEST_NAMESPACE,"test"),testParser);
  extension.initializeParsers(extensionParsingRegistry.getExtensionParsingContext("Test",xmlMapper));
  return KernelServices.create(mainSubsystemName,additionalInit,cloneExtensionRegistry(additionalInit),bootOperations,testParser,extension,modelVersion);
}

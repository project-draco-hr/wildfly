{
  ParseUtils.requireNoAttributes(reader);
  final Map<String,List<ModelNode>> profileOps=new LinkedHashMap<String,List<ModelNode>>();
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
    if (Namespace.forUri(reader.getNamespaceURI()) != Namespace.UNKNOWN) {
      throw unexpectedElement(reader);
    }
    if (Element.forName(reader.getLocalName()) != Element.SUBSYSTEM) {
      throw unexpectedElement(reader);
    }
    String namespace=reader.getNamespaceURI();
    if (profileOps.containsKey(namespace)) {
      throw MESSAGES.duplicateDeclaration("subsystem",reader.getLocation());
    }
    final List<ModelNode> subsystems=new ArrayList<ModelNode>();
    reader.handleAny(subsystems);
    profileOps.put(namespace,subsystems);
  }
  Set<ProfileParsingCompletionHandler> completionHandlers=extensionRegistry.getProfileParsingCompletionHandlers();
  for (  ProfileParsingCompletionHandler completionHandler : completionHandlers) {
    completionHandler.handleProfileParsingCompletion(profileOps,operations);
  }
  for (  List<ModelNode> subsystems : profileOps.values()) {
    operations.addAll(subsystems);
  }
}

{
  final ModelNode node=new ModelNode();
  node.get(DESCRIPTION).set(description);
  node.get(HEAD_COMMENT_ALLOWED).set(true);
  node.get(TAIL_COMMENT_ALLOWED).set(true);
  node.get(ATTRIBUTES,NAME,DESCRIPTION).set(bundle.getString("threadpool.common.name"));
  node.get(ATTRIBUTES,NAME,TYPE).set(ModelType.STRING);
  node.get(ATTRIBUTES,NAME,REQUIRED).set(true);
  node.get(ATTRIBUTES,THREAD_FACTORY,DESCRIPTION).set(bundle.getString("threadpool.common.threadfactory"));
  node.get(ATTRIBUTES,THREAD_FACTORY,TYPE).set(ModelType.STRING);
  node.get(ATTRIBUTES,THREAD_FACTORY,REQUIRED).set(false);
  node.get(ATTRIBUTES,PROPERTIES,DESCRIPTION).set(bundle.getString("threadpool.common.properties"));
  node.get(ATTRIBUTES,PROPERTIES,TYPE).set(ModelType.LIST);
  node.get(ATTRIBUTES,PROPERTIES,VALUE_TYPE).set(ModelType.PROPERTY);
  node.get(ATTRIBUTES,PROPERTIES,REQUIRED).set(false);
  node.get(ATTRIBUTES,MAX_THREADS_COUNT,DESCRIPTION).set(bundle.getString("threadpool.common.maxthreadscount"));
  node.get(ATTRIBUTES,MAX_THREADS_COUNT,TYPE).set(ModelType.BIG_DECIMAL);
  node.get(ATTRIBUTES,MAX_THREADS_COUNT,REQUIRED).set(false);
  node.get(ATTRIBUTES,MAX_THREADS_PER_CPU,DESCRIPTION).set(bundle.getString("threadpool.common.maxthreadspercpu"));
  node.get(ATTRIBUTES,MAX_THREADS_PER_CPU,TYPE).set(ModelType.BIG_DECIMAL);
  node.get(ATTRIBUTES,MAX_THREADS_PER_CPU,REQUIRED).set(false);
  node.get(ATTRIBUTES,KEEPALIVE_TIME_DURATION,DESCRIPTION).set(bundle.getString("threadpool.common.keepaliveduration"));
  node.get(ATTRIBUTES,KEEPALIVE_TIME_DURATION,TYPE).set(ModelType.LONG);
  node.get(ATTRIBUTES,KEEPALIVE_TIME_DURATION,REQUIRED).set(false);
  node.get(ATTRIBUTES,KEEPALIVE_TIME_UNIT,DESCRIPTION).set(bundle.getString("threadpool.common.keepaliveunit"));
  node.get(ATTRIBUTES,KEEPALIVE_TIME_UNIT,TYPE).set(ModelType.STRING);
  node.get(ATTRIBUTES,KEEPALIVE_TIME_UNIT,REQUIRED).set(false);
  return node;
}

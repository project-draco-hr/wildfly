{
  ModelNode address=new ModelNode();
  address.add("deployment","ij.rar").add("subsystem","resource-adapters").add("ironjacamar","ironjacamar").add("resource-adapter","ij");
  ModelNode operation=new ModelNode();
  operation.get(OP).set("read-resource");
  operation.get(OP_ADDR).set(address);
  operation.get(RECURSIVE).set(true);
  ModelNode result=executeOperation(operation);
  assertEquals("Bootstrap-context value is wrong",result.get("bootstrap-context").asString(),"default");
  assertEquals("Transaction-support value is wrong",result.get("transaction-support").asString(),"XATransaction");
  assertEquals("RA config property value is wrong",result.get("config-properties","raProperty","value").asString(),"4");
  assertEquals("Bean validation groups set wrong",result.get("beanvalidationgroups").asString(),"[\"org.jboss.as.test.integration.jca.beanvalidation.ra.ValidGroup\",\"org.jboss.as.test.integration.jca.beanvalidation.ra.ValidGroup1\"]");
  ModelNode node=result.get("admin-objects","java:jboss/VAO");
  Properties params=getAOProperties(true);
  assertTrue("compare failed, node:" + node.asString() + "\nparams:"+ params,checkModelParams(node,params));
  assertEquals("AO config property value is wrong",node.get("config-properties","aoProperty","value").asString(),"admin");
  node=result.get("admin-objects","java:jboss/VAO1");
  params=getAOProperties(false);
  assertTrue("compare failed, node:" + node.asString() + "\nparams:"+ params,checkModelParams(node,params));
  assertEquals("AO1 config property value is wrong",node.get("config-properties","aoProperty","value").asString(),"admin1");
  node=result.get("connection-definitions","java:jboss/VCF");
  params=getCFProperties(true);
  assertTrue("compare failed, node:" + node.asString() + "\nparams:"+ params,checkModelParams(node,params));
  assertEquals("CF config property value is wrong",node.get("config-properties","cfProperty","value").asString(),"first");
  assertEquals("Recovery plugin property value is wrong","C",node.get("recovery-plugin-properties","Property").asString());
  node=result.get("connection-definitions","java:jboss/VCF1");
  params=getCFProperties(false);
  assertTrue("compare failed, node:" + node.asString() + "\nparams:"+ params,checkModelParams(node,params));
  assertEquals("CF1 config property value is wrong",node.get("config-properties","cfProperty","value").asString(),"2nd");
  assertEquals("Recovery plugin 1 property value is wrong","C",node.get("recovery-plugin-properties","Property").asString());
}

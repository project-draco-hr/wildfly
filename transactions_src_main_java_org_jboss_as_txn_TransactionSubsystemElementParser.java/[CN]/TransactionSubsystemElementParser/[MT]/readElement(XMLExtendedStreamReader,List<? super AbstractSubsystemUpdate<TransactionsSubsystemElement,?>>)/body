{
  if (reader.getAttributeCount() > 0) {
    throw ParseUtils.unexpectedAttribute(reader,0);
  }
  RecoveryEnvironmentElement recoveryEnvironmentElement=null;
  CoreEnvironmentElement coreEnvironmentElement=null;
  CoordinatorEnvironmentElement coordinatorEnvironmentElement=null;
  ObjectStoreEnvironmentElement objectStoreEnvironmentElement=null;
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
switch (Namespace.forUri(reader.getNamespaceURI())) {
case TRANSACTIONS_1_0:
{
        final Element element=Element.forName(reader.getLocalName());
switch (element) {
case RECOVERY_ENVIRONMENT:
{
            recoveryEnvironmentElement=parseRecoveryEnvironmentElement(reader);
            break;
          }
case CORE_ENVIRONMENT:
{
          coreEnvironmentElement=parseCoreEnvironmentElement(reader);
          break;
        }
case COORDINATOR_ENVIRONMENT:
{
        coordinatorEnvironmentElement=parseCoordinatorEnvironmentElement(reader);
        break;
      }
case OBJECT_STORE:
{
      objectStoreEnvironmentElement=parseObjectStoreEnvironmentElement(reader);
      break;
    }
default :
{
    throw ParseUtils.unexpectedElement(reader);
  }
}
break;
}
default :
{
throw ParseUtils.unexpectedElement(reader);
}
}
}
if (recoveryEnvironmentElement == null) {
throw ParseUtils.missingRequiredElement(reader,Collections.singleton(Element.RECOVERY_ENVIRONMENT.getLocalName()));
}
if (coreEnvironmentElement == null) {
throw ParseUtils.missingRequiredElement(reader,Collections.singleton(Element.CORE_ENVIRONMENT.getLocalName()));
}
if (coordinatorEnvironmentElement == null) {
coordinatorEnvironmentElement=new CoordinatorEnvironmentElement();
}
if (objectStoreEnvironmentElement == null) {
objectStoreEnvironmentElement=new ObjectStoreEnvironmentElement();
}
final TransactionSubsystemElementUpdate update=new TransactionSubsystemElementUpdate();
update.setRecoveryEnvironmentElement(recoveryEnvironmentElement);
update.setCoreEnvironmentElement(coreEnvironmentElement);
update.setCoordinatorEnvironmentElement(coordinatorEnvironmentElement);
update.setObjectStoreEnvironmentElement(objectStoreEnvironmentElement);
updates.add(update);
}

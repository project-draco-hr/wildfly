{
  writer.writeDefaultNamespace(namespaceUri);
  for (  NamespacePrefix namespace : prefixes.values()) {
    writer.writeNamespace(namespace.getPrefix(),namespace.getNamespaceURI());
  }
  final Iterator<SchemaLocation> it=schemaLocations.values().iterator();
  if (it.hasNext()) {
    final StringBuilder str=new StringBuilder();
    do {
      final SchemaLocation location=it.next();
      str.append(location.getNamespaceUri()).append(' ').append(location.getLocationUri());
      if (it.hasNext()) {
        str.append(' ');
      }
    }
 while (it.hasNext());
    writer.writeAttribute(Namespace.XML_SCHEMA_INSTANCE.getUriString(),Attribute.SCHEMA_LOCATION.getLocalName(),str.toString());
  }
  if (noNamespaceSchemaLocation != null) {
    writer.writeAttribute(Namespace.XML_SCHEMA_INSTANCE.getUriString(),Attribute.NO_NAMESPACE_SCHEMA_LOCATION.getLocalName(),noNamespaceSchemaLocation);
  }
}

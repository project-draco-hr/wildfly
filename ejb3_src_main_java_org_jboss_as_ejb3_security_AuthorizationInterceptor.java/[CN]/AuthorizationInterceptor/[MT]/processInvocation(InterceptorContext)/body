{
  final Component component=context.getPrivateData(Component.class);
  if (component instanceof EJBComponent == false) {
    throw MESSAGES.unexpectedComponent(component,EJBComponent.class);
  }
  final Method invokedMethod=context.getMethod();
  final ComponentView componentView=context.getPrivateData(ComponentView.class);
  final String viewClassOfInvokedMethod=componentView.getViewClass().getName();
  if (!this.viewClassName.equals(viewClassOfInvokedMethod) || !this.viewMethod.equals(invokedMethod)) {
    throw MESSAGES.failProcessInvocation(this.getClass().getName(),invokedMethod,viewClassOfInvokedMethod,viewMethod,viewClassName);
  }
  final EJBComponent ejbComponent=(EJBComponent)component;
  if (ejbMethodSecurityMetaData.isDenyAll()) {
    throw MESSAGES.invocationOfMethodNotAllowed(invokedMethod,ejbComponent.getComponentName());
  }
  if (!ejbMethodSecurityMetaData.isPermitAll()) {
    final Collection<String> allowedRoles=ejbMethodSecurityMetaData.getRolesAllowed();
    if (!allowedRoles.isEmpty()) {
      final SimpleSecurityManager securityManager=ejbComponent.getSecurityManager();
      if (!securityManager.isCallerInRole(ejbComponent.getSecurityMetaData().getSecurityRoles(),allowedRoles.toArray(new String[allowedRoles.size()]))) {
        throw MESSAGES.invocationOfMethodNotAllowed(invokedMethod,ejbComponent.getComponentName());
      }
    }
  }
  return context.proceed();
}

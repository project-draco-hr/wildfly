{
  super(reader);
  String prefix=null;
  String module=null;
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    final String value=reader.getAttributeValue(i);
    if (reader.getAttributeNamespace(i) != null) {
      throw unexpectedAttribute(reader,i);
    }
 else {
      final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case PREFIX:
{
          prefix=value;
          break;
        }
case MODULE:
{
        module=value;
        break;
      }
default :
    throw unexpectedAttribute(reader,i);
}
}
}
if (prefix == null) {
throw missingRequired(reader,Collections.singleton(Attribute.PREFIX));
}
if (module == null) {
throw missingRequired(reader,Collections.singleton(Attribute.MODULE));
}
this.prefix=prefix;
this.module=module;
requireNoContent(reader);
}

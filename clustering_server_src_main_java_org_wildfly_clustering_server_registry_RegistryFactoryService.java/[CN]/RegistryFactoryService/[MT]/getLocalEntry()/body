{
  RegistryEntryProvider<K,V> provider=this.provider.get();
  if (provider == null)   return null;
  K key=provider.getKey();
  final Map.Entry<K,V> entry=(key != null) ? new AbstractMap.SimpleImmutableEntry<>(key,provider.getValue()) : null;
  if (entry != null) {
    final Node node=this.group.getLocalNode();
    Operation<Void> operation=new Operation<Void>(){
      @Override public Void invoke(      Cache<Node,Entry<K,V>> cache){
        cache.put(node,entry);
        return null;
      }
    }
;
    this.invoker.invoke(this.cache,operation,Flag.IGNORE_RETURN_VALUES);
  }
  return entry;
}

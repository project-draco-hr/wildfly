{
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    final String value=reader.getAttributeValue(i);
    if (!isNoNamespaceAttribute(reader,i)) {
      throw unexpectedAttribute(reader,i);
    }
 else {
      final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case ATTRIBUTE:
        LdapAuthorizationResourceDefinition.ROLES_DN.parseAndSetParameter(value,ldapAuthorization,reader);
      break;
case USERNAME_ATTRIBUTE:
    LdapAuthorizationResourceDefinition.USERNAME.parseAndSetParameter(value,ldapAuthorization,reader);
  break;
case PATTERN:
{
  LdapAuthorizationResourceDefinition.PATTERN.parseAndSetParameter(value,ldapAuthorization,reader);
  break;
}
case GROUP:
{
LdapAuthorizationResourceDefinition.GROUP.parseAndSetParameter(value,ldapAuthorization,reader);
break;
}
case RESULT_PATTERN:
{
LdapAuthorizationResourceDefinition.RESULT_PATTERN.parseAndSetParameter(value,ldapAuthorization,reader);
break;
}
case REVERSE_GROUP:
{
LdapAuthorizationResourceDefinition.REVERSE_GROUP.parseAndSetParameter(value,ldapAuthorization,reader);
break;
}
default :
{
throw unexpectedAttribute(reader,i);
}
}
}
}
requireNoContent(reader);
}

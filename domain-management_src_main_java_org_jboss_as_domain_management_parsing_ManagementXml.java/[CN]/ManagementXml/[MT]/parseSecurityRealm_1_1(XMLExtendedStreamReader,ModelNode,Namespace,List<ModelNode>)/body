{
  requireSingleAttribute(reader,Attribute.NAME.getLocalName());
  final String realmName=reader.getAttributeValue(0);
  final ModelNode realmAddress=address.clone();
  realmAddress.add(SECURITY_REALM,realmName);
  final ModelNode add=new ModelNode();
  add.get(OP_ADDR).set(realmAddress);
  add.get(OP).set(ADD);
  list.add(add);
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
    requireNamespace(reader,expectedNs);
    final Element element=Element.forName(reader.getLocalName());
switch (element) {
case SERVER_IDENTITIES:
      parseServerIdentities(reader,expectedNs,realmAddress,list);
    break;
case AUTHENTICATION:
{
    parseAuthentication_1_1(reader,expectedNs,realmAddress,list);
    break;
  }
case AUTHORIZATION:
parseAuthorization_1_1(reader,expectedNs,add,list);
break;
default :
{
throw unexpectedElement(reader);
}
}
}
}

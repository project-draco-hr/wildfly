{
  ModelNode addr=realmAddress.clone().add(AUTHENTICATION,JAAS);
  ModelNode jaas=Util.getEmptyOperation(ADD,addr);
  list.add(jaas);
  boolean nameFound=false;
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    final String value=reader.getAttributeValue(i);
    if (!isNoNamespaceAttribute(reader,i)) {
      throw unexpectedAttribute(reader,i);
    }
 else {
      final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case NAME:
        if (nameFound) {
          throw unexpectedAttribute(reader,i);
        }
      nameFound=true;
    JaasAuthenticationResourceDefinition.NAME.parseAndSetParameter(value,jaas,reader);
  break;
case ASSIGN_GROUPS:
JaasAuthenticationResourceDefinition.ASSIGN_GROUPS.parseAndSetParameter(value,jaas,reader);
break;
default :
{
throw unexpectedAttribute(reader,i);
}
}
}
}
if (nameFound == false) {
throw missingRequired(reader,Collections.singleton(Attribute.NAME));
}
requireNoContent(reader);
}

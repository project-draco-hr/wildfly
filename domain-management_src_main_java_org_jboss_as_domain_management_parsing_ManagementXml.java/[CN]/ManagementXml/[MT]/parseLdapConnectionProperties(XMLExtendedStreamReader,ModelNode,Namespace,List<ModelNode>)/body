{
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
    requireNamespace(reader,expectedNs);
    final Element element=Element.forName(reader.getLocalName());
switch (element) {
case PROPERTY:
{
        Set<Attribute> required=EnumSet.of(Attribute.NAME,Attribute.VALUE);
        final ModelNode add=new ModelNode();
        add.get(OP).set(ADD);
        final int count=reader.getAttributeCount();
        for (int i=0; i < count; i++) {
          final String value=reader.getAttributeValue(i);
          if (!isNoNamespaceAttribute(reader,i)) {
            throw unexpectedAttribute(reader,i);
          }
 else {
            final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
            required.remove(attribute);
switch (attribute) {
case NAME:
{
                add.get(OP_ADDR).set(address.clone()).add(PROPERTY,value);
                break;
              }
case VALUE:
{
              LdapConnectionPropertyResourceDefinition.VALUE.parseAndSetParameter(value,add,reader);
              break;
            }
default :
{
            throw unexpectedAttribute(reader,i);
          }
      }
    }
  }
  if (required.size() > 0) {
    throw missingRequired(reader,required);
  }
  requireNoContent(reader);
  list.add(add);
  break;
}
default :
{
throw unexpectedElement(reader);
}
}
}
}

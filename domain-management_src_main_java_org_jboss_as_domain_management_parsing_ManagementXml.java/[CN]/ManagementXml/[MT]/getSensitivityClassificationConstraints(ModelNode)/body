{
  Map<String,Map<String,Set<String>>> configuredConstraints=new HashMap<String,Map<String,Set<String>>>();
  if (constraint.hasDefined(SENSITIVITY_CLASSIFICATION)) {
    ModelNode sensitivityParent=constraint.require(SENSITIVITY_CLASSIFICATION);
    if (sensitivityParent.hasDefined(SENSITIVITY_CLASSIFICATION)) {
      for (      Property sensitivityProperty : sensitivityParent.get(SENSITIVITY_CLASSIFICATION).asPropertyList()) {
        if (sensitivityProperty.getValue().hasDefined(TYPE)) {
          for (          Property typeProperty : sensitivityProperty.getValue().get(TYPE).asPropertyList()) {
            ModelNode classification=typeProperty.getValue();
            if (classification.hasDefined(SensitivityResourceDefinition.CONFIGURED_REQUIRES_ACCESS.getName()) || classification.hasDefined(SensitivityResourceDefinition.CONFIGURED_REQUIRES_WRITE.getName()) || classification.hasDefined(SensitivityResourceDefinition.CONFIGURED_REQUIRES_READ.getName())) {
              Map<String,Set<String>> constraintMap=configuredConstraints.get(SENSITIVITY_CLASSIFICATION);
              if (constraintMap == null) {
                constraintMap=new HashMap<String,Set<String>>();
                configuredConstraints.put(SENSITIVITY_CLASSIFICATION,constraintMap);
              }
              Set<String> types=constraintMap.get(sensitivityProperty.getName());
              if (types == null) {
                types=new HashSet<String>();
                constraintMap.put(sensitivityProperty.getName(),types);
              }
              types.add(typeProperty.getName());
            }
          }
        }
      }
    }
  }
  return configuredConstraints;
}

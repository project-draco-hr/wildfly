{
  if (accessAuthorization == null || accessAuthorization.isDefined() == false) {
    return;
  }
  boolean hasServerGroupRoles=accessAuthorization.hasDefined(SERVER_GROUP_SCOPED_ROLE);
  boolean hasHostRoles=accessAuthorization.hasDefined(HOST_SCOPED_ROLE) || accessAuthorization.hasDefined(HOST_SCOPED_ROLES);
  boolean hasRoleMapping=accessAuthorization.hasDefined(ROLE_MAPPING);
  Map<String,Map<String,Set<String>>> configuredAccessConstraints=getConfiguredAccessConstraints(accessAuthorization);
  boolean hasProvider=accessAuthorization.hasDefined(AccessAuthorizationResourceDefinition.PROVIDER.getName());
  if (!hasProvider && !hasServerGroupRoles && !hasHostRoles&& !hasRoleMapping&& configuredAccessConstraints.size() == 0) {
    return;
  }
  writer.writeStartElement(Element.ACCESS_CONTROL.getLocalName());
  AccessAuthorizationResourceDefinition.PROVIDER.marshallAsAttribute(accessAuthorization,writer);
  if (hasServerGroupRoles) {
    ModelNode serverGroupRoles=accessAuthorization.get(SERVER_GROUP_SCOPED_ROLE);
    if (serverGroupRoles.asInt() > 0) {
      writeServerGroupScopedRoles(writer,serverGroupRoles);
    }
  }
  if (hasHostRoles) {
    ModelNode serverGroupRoles=accessAuthorization.get(HOST_SCOPED_ROLE);
    if (serverGroupRoles.asInt() > 0) {
      writeHostScopedRoles(writer,serverGroupRoles);
    }
  }
  if (hasRoleMapping) {
    writeRoleMapping(writer,accessAuthorization);
  }
  if (configuredAccessConstraints.size() > 0) {
    writeAccessConstraints(writer,accessAuthorization,configuredAccessConstraints);
  }
  writer.writeEndElement();
}

{
  ParseUtils.requireSingleAttribute(reader,NAME);
  String name=reader.getAttributeValue(0);
  ModelNode addr=address.clone().add(ROLE_MAPPING,name);
  final ModelNode add=new ModelNode();
  add.get(OP_ADDR).set(addr);
  add.get(OP).set(ADD);
  list.add(add);
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
    requireNamespace(reader,expectedNs);
    final Element element=Element.forName(reader.getLocalName());
switch (element) {
case INCLUDE:
{
        ModelNode includeAddr=addr.clone().add(INCLUDE);
        parseIncludeExclude(reader,includeAddr,expectedNs,list);
        break;
      }
case EXCLUDE:
{
      ModelNode excludeAddr=addr.clone().add(EXCLUDE);
      parseIncludeExclude(reader,excludeAddr,expectedNs,list);
      break;
    }
default :
{
    throw unexpectedElement(reader);
  }
}
}
}

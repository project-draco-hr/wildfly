{
  final ModelNode add=new ModelNode();
  add.get(OP).set(ADD);
  list.add(add);
  Set<Attribute> required=EnumSet.of(Attribute.NAME,Attribute.URL,Attribute.SEARCH_DN,Attribute.SEARCH_CREDENTIAL);
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    final String value=reader.getAttributeValue(i);
    if (!isNoNamespaceAttribute(reader,i)) {
      throw unexpectedAttribute(reader,i);
    }
 else {
      final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
      required.remove(attribute);
switch (attribute) {
case NAME:
{
          add.get(OP_ADDR).set(address).add(LDAP_CONNECTION,value);
          break;
        }
case URL:
{
        LdapConnectionResourceDefinition.URL.parseAndSetParameter(value,add,reader);
        break;
      }
case SEARCH_DN:
{
      LdapConnectionResourceDefinition.SEARCH_DN.parseAndSetParameter(value,add,reader);
      break;
    }
case SEARCH_CREDENTIAL:
{
    LdapConnectionResourceDefinition.SEARCH_CREDENTIAL.parseAndSetParameter(value,add,reader);
    break;
  }
case INITIAL_CONTEXT_FACTORY:
{
  LdapConnectionResourceDefinition.INITIAL_CONTEXT_FACTORY.parseAndSetParameter(value,add,reader);
  break;
}
default :
{
throw unexpectedAttribute(reader,i);
}
}
}
}
if (required.size() > 0) {
throw missingRequired(reader,required);
}
requireNoContent(reader);
}

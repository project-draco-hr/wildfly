{
  ModelNode addr=new ModelNode();
  ModelNode addCacheOp=Util.getEmptyOperation(ADD,addr);
  String type=BY_SEARCH_TIME;
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    final String value=reader.getAttributeValue(i);
    if (!isNoNamespaceAttribute(reader,i)) {
      throw unexpectedAttribute(reader,i);
    }
 else {
      final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case TYPE:
{
          if (BY_ACCESS_TIME.equals(value) || BY_SEARCH_TIME.equals(value)) {
            type=value;
          }
 else {
            throw invalidAttributeValue(reader,i);
          }
          break;
        }
case EVICTION_TIME:
{
        LdapCacheResourceDefinition.EVICTION_TIME.parseAndSetParameter(value,addCacheOp,reader);
        break;
      }
case CACHE_FAILURES:
{
      LdapCacheResourceDefinition.CACHE_FAILURES.parseAndSetParameter(value,addCacheOp,reader);
      break;
    }
case MAX_CACHE_SIZE:
{
    LdapCacheResourceDefinition.MAX_CACHE_SIZE.parseAndSetParameter(value,addCacheOp,reader);
    break;
  }
default :
{
  throw unexpectedAttribute(reader,i);
}
}
}
}
requireNoContent(reader);
addCacheOp.get(OP_ADDR).add(CACHE,type);
return addCacheOp;
}

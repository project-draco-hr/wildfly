{
  writer.writeStartElement(Element.LDAP.getLocalName());
  LdapAuthorizationResourceDefinition.CONNECTION.marshallAsAttribute(ldapNode,writer);
  if (ldapNode.hasDefined(USERNAME_TO_DN)) {
    ModelNode usenameToDn=ldapNode.require(USERNAME_TO_DN);
    if (usenameToDn.hasDefined(USERNAME_IS_DN) || usenameToDn.hasDefined(USERNAME_FILTER) || usenameToDn.hasDefined(ADVANCED_FILTER)) {
      writer.writeStartElement(Element.USERNAME_TO_DN.getLocalName());
      if (usenameToDn.hasDefined(USERNAME_IS_DN)) {
        ModelNode usernameIsDn=usenameToDn.require(USERNAME_IS_DN);
        UserIsDnResourceDefintion.FORCE.marshallAsAttribute(usernameIsDn,writer);
        writer.writeEmptyElement(Element.USERNAME_IS_DN.getLocalName());
      }
 else       if (usenameToDn.hasDefined(USERNAME_FILTER)) {
        ModelNode usernameFilter=usenameToDn.require(USERNAME_FILTER);
        UserSearchResourceDefintion.FORCE.marshallAsAttribute(usernameFilter,writer);
        writer.writeStartElement(Element.USERNAME_FILTER.getLocalName());
        UserSearchResourceDefintion.BASE_DN.marshallAsAttribute(usernameFilter,writer);
        UserSearchResourceDefintion.RECURSIVE.marshallAsAttribute(usernameFilter,writer);
        UserSearchResourceDefintion.USER_DN_ATTRIBUTE.marshallAsAttribute(usernameFilter,writer);
        UserSearchResourceDefintion.ATTRIBUTE.marshallAsAttribute(usernameFilter,writer);
        writer.writeEndElement();
      }
 else {
        ModelNode advancedFilter=usenameToDn.require(ADVANCED_FILTER);
        AdvancedUserSearchResourceDefintion.FORCE.marshallAsAttribute(advancedFilter,writer);
        writer.writeStartElement(Element.ADVANCED_FILTER.getLocalName());
        AdvancedUserSearchResourceDefintion.BASE_DN.marshallAsAttribute(advancedFilter,writer);
        AdvancedUserSearchResourceDefintion.RECURSIVE.marshallAsAttribute(advancedFilter,writer);
        AdvancedUserSearchResourceDefintion.USER_DN_ATTRIBUTE.marshallAsAttribute(advancedFilter,writer);
        AdvancedUserSearchResourceDefintion.FILTER.marshallAsAttribute(advancedFilter,writer);
        writer.writeEndElement();
      }
      writer.writeEndElement();
    }
  }
  if (ldapNode.hasDefined(GROUP_SEARCH)) {
    ModelNode groupSearch=ldapNode.require(GROUP_SEARCH);
    if (groupSearch.hasDefined(GROUP_TO_PRINCIPAL) || groupSearch.hasDefined(PRINCIPAL_TO_GROUP)) {
      writer.writeStartElement(Element.GROUP_SEARCH.getLocalName());
      if (groupSearch.hasDefined(GROUP_TO_PRINCIPAL)) {
        ModelNode groupToPrincipal=groupSearch.require(GROUP_TO_PRINCIPAL);
        GroupToPrincipalResourceDefinition.GROUP_NAME.marshallAsAttribute(groupToPrincipal,writer);
        GroupToPrincipalResourceDefinition.ITERATIVE.marshallAsAttribute(groupToPrincipal,writer);
        GroupToPrincipalResourceDefinition.GROUP_DN_ATTRIBUTE.marshallAsAttribute(groupToPrincipal,writer);
        GroupToPrincipalResourceDefinition.GROUP_NAME_ATTRIBUTE.marshallAsAttribute(groupToPrincipal,writer);
        writer.writeStartElement(Element.GROUP_TO_PRINCIPAL.getLocalName());
        GroupToPrincipalResourceDefinition.SEARCH_BY.marshallAsAttribute(groupToPrincipal,writer);
        GroupToPrincipalResourceDefinition.BASE_DN.marshallAsAttribute(groupToPrincipal,writer);
        GroupToPrincipalResourceDefinition.RECURSIVE.marshallAsAttribute(groupToPrincipal,writer);
        writer.writeStartElement(Element.MEMBERSHIP_FILTER.getLocalName());
        GroupToPrincipalResourceDefinition.PRINCIPAL_ATTRIBUTE.marshallAsAttribute(groupToPrincipal,writer);
        writer.writeEndElement();
        writer.writeEndElement();
      }
 else {
        ModelNode principalToGroup=groupSearch.require(PRINCIPAL_TO_GROUP);
        PrincipalToGroupResourceDefinition.GROUP_NAME.marshallAsAttribute(principalToGroup,writer);
        PrincipalToGroupResourceDefinition.ITERATIVE.marshallAsAttribute(principalToGroup,writer);
        PrincipalToGroupResourceDefinition.GROUP_DN_ATTRIBUTE.marshallAsAttribute(principalToGroup,writer);
        PrincipalToGroupResourceDefinition.GROUP_NAME_ATTRIBUTE.marshallAsAttribute(principalToGroup,writer);
        writer.writeStartElement(Element.PRINCIPAL_TO_GROUP.getLocalName());
        PrincipalToGroupResourceDefinition.GROUP_ATTRIBUTE.marshallAsAttribute(principalToGroup,writer);
        writer.writeEndElement();
      }
      writer.writeEndElement();
    }
  }
  writer.writeEndElement();
}

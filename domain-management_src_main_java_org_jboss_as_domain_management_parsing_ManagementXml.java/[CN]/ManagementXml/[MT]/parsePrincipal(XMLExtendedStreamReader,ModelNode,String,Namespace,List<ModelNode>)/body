{
  String alias=null;
  String realm=null;
  String name=null;
  ModelNode addOp=new ModelNode();
  addOp.get(OP).set(ADD);
  addOp.get(TYPE).set(type);
  int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    final String value=reader.getAttributeValue(i);
    if (!isNoNamespaceAttribute(reader,i)) {
      throw unexpectedAttribute(reader,i);
    }
 else {
      final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case ALIAS:
{
          alias=value;
          break;
        }
case NAME:
{
        name=value;
        PrincipalResourceDefinition.NAME.parseAndSetParameter(value,addOp,reader);
        break;
      }
case REALM:
{
      realm=value;
      PrincipalResourceDefinition.REALM.parseAndSetParameter(value,addOp,reader);
      break;
    }
default :
{
    throw unexpectedAttribute(reader,i);
  }
}
}
}
if (name == null) {
throw ParseUtils.missingRequired(reader,Collections.singleton(Attribute.NAME));
}
String addrValue=alias == null ? generateAlias(type,name,realm) : alias;
ModelNode addAddr=address.clone().add(addrValue);
addOp.get(OP_ADDR).set(addAddr);
list.add(addOp);
ParseUtils.requireNoContent(reader);
}

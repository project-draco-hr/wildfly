{
  final int count=reader.getAttributeCount();
  String name=null;
  ModelNode applicationValue=null;
  for (int i=0; i < count; i++) {
    final String value=reader.getAttributeValue(i);
    if (!isNoNamespaceAttribute(reader,i)) {
      throw unexpectedAttribute(reader,i);
    }
 else {
      final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case NAME:
{
          name=value;
          break;
        }
case APPLICATION:
{
        applicationValue=ApplicationTypeConfigResourceDefinition.CONFIGURED_APPLICATION.parse(value,reader);
        break;
      }
default :
{
      throw unexpectedAttribute(reader,i);
    }
}
}
}
if (name == null) {
throw ParseUtils.missingRequired(reader,Collections.singleton(Attribute.NAME));
}
if (applicationValue == null) {
throw ParseUtils.missingRequired(reader,Collections.singleton(Attribute.APPLICATION));
}
final ModelNode newAddress=address.clone().add(ApplicationTypeConfigResourceDefinition.PATH_ELEMENT.getKey(),name);
list.add(Util.getWriteAttributeOperation(newAddress,ApplicationTypeConfigResourceDefinition.CONFIGURED_APPLICATION.getName(),applicationValue));
ParseUtils.requireNoContent(reader);
}

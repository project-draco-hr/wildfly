{
  Map<String,Map<String,Set<String>>> configuredConstraints=new HashMap<String,Map<String,Set<String>>>();
  if (accessConstraint.hasDefined(SensitivityResourceDefinition.VAULT_ELEMENT.getKey()) && accessConstraint.get(SensitivityResourceDefinition.VAULT_ELEMENT.getKey()).hasDefined(SensitivityResourceDefinition.VAULT_ELEMENT.getValue())) {
    ModelNode classification=accessConstraint.get(SensitivityResourceDefinition.VAULT_ELEMENT.getKey(),SensitivityResourceDefinition.VAULT_ELEMENT.getValue());
    if (classification.hasDefined(SensitivityResourceDefinition.CONFIGURED_REQUIRES_ACCESS.getName()) || classification.hasDefined(SensitivityResourceDefinition.CONFIGURED_REQUIRES_WRITE.getName()) || classification.hasDefined(SensitivityResourceDefinition.CONFIGURED_REQUIRES_READ.getName())) {
      configuredConstraints.put(SensitivityResourceDefinition.VAULT_ELEMENT.getKey(),Collections.<String,Set<String>>emptyMap());
    }
  }
  if (accessConstraint.hasDefined(SENSITIVITY_CLASSIFICATION)) {
    for (    Property sensitivityProperty : accessConstraint.get(SENSITIVITY_CLASSIFICATION).asPropertyList()) {
      if (sensitivityProperty.getValue().hasDefined(TYPE)) {
        for (        Property typeProperty : sensitivityProperty.getValue().get(TYPE).asPropertyList()) {
          ModelNode classification=typeProperty.getValue();
          if (classification.hasDefined(SensitivityResourceDefinition.CONFIGURED_REQUIRES_ACCESS.getName()) || classification.hasDefined(SensitivityResourceDefinition.CONFIGURED_REQUIRES_WRITE.getName()) || classification.hasDefined(SensitivityResourceDefinition.CONFIGURED_REQUIRES_READ.getName())) {
            Map<String,Set<String>> constraint=configuredConstraints.get(SENSITIVITY_CLASSIFICATION);
            if (constraint == null) {
              constraint=new HashMap<String,Set<String>>();
              configuredConstraints.put(SENSITIVITY_CLASSIFICATION,constraint);
            }
            Set<String> types=constraint.get(sensitivityProperty.getName());
            if (types == null) {
              types=new HashSet<String>();
              constraint.put(sensitivityProperty.getName(),types);
            }
            types.add(typeProperty.getName());
          }
        }
      }
    }
  }
  if (accessConstraint.hasDefined(APPLICATION_TYPE)) {
    for (    Property applicationTypeProperty : accessConstraint.get(APPLICATION_TYPE).asPropertyList()) {
      if (applicationTypeProperty.getValue().hasDefined(TYPE)) {
        for (        Property typeProperty : applicationTypeProperty.getValue().get(TYPE).asPropertyList()) {
          ModelNode applicationType=typeProperty.getValue();
          if (applicationType.hasDefined(ApplicationTypeConfigResourceDefinition.CONFIGURED_APPLICATION.getName())) {
            Map<String,Set<String>> constraint=configuredConstraints.get(APPLICATION_TYPE);
            if (constraint == null) {
              constraint=new HashMap<String,Set<String>>();
              configuredConstraints.put(APPLICATION_TYPE,constraint);
            }
            Set<String> types=constraint.get(applicationTypeProperty.getName());
            if (types == null) {
              types=new HashSet<String>();
              constraint.put(applicationTypeProperty.getName(),types);
            }
            types.add(typeProperty.getName());
          }
        }
      }
    }
  }
  return configuredConstraints;
}

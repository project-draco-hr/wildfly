{
  requireSingleAttribute(reader,Attribute.NAME.getLocalName());
  final String realmName=reader.getAttributeValue(0);
  final ModelNode realmAddress=address.clone();
  realmAddress.add(SECURITY_REALM,realmName);
  final ModelNode add=new ModelNode();
  add.get(OP_ADDR).set(realmAddress);
  add.get(OP).set(ADD);
  list.add(add);
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
    requireNamespace(reader,expectedNs);
    final Element element=Element.forName(reader.getLocalName());
switch (element) {
case PLUG_INS:
      parsePlugIns(reader,expectedNs,realmAddress,list);
    break;
case SERVER_IDENTITIES:
  parseServerIdentities(reader,expectedNs,realmAddress,list);
break;
case AUTHENTICATION:
{
parseAuthentication_1_3(reader,expectedNs,realmAddress,list);
break;
}
case AUTHORIZATION:
switch (expectedNs) {
case DOMAIN_1_4:
parseAuthorization_1_3(reader,expectedNs,realmAddress,list);
break;
default :
parseAuthorization_1_5(reader,expectedNs,add,list);
}
break;
default :
{
throw unexpectedElement(reader);
}
}
}
}

{
  String name=null;
  String type=null;
  Boolean applicationValue=null;
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    final String value=reader.getAttributeValue(i);
    if (!isNoNamespaceAttribute(reader,i)) {
      throw unexpectedAttribute(reader,i);
    }
 else {
      final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case NAME:
        name=value;
      break;
case TYPE:
    type=value;
  break;
case APPLICATION:
applicationValue=Boolean.valueOf(value);
break;
default :
{
throw unexpectedAttribute(reader,i);
}
}
}
}
if (name == null) {
throw ParseUtils.missingRequired(reader,Collections.singleton(NAME));
}
if (type == null) {
throw ParseUtils.missingRequired(reader,Collections.singleton(Attribute.TYPE));
}
if (applicationValue == null) {
throw ParseUtils.missingRequired(reader,Collections.singleton(Attribute.APPLICATION));
}
ModelNode newAddress=address.clone().add(ApplicationClassificationTypeResourceDefinition.PATH_ELEMENT.getKey(),type).add(ApplicationClassificationConfigResourceDefinition.PATH_ELEMENT.getKey(),name);
list.add(Util.getWriteAttributeOperation(newAddress,ApplicationClassificationConfigResourceDefinition.CONFIGURED_APPLICATION.getName(),applicationValue.toString()));
ParseUtils.requireNoContent(reader);
}

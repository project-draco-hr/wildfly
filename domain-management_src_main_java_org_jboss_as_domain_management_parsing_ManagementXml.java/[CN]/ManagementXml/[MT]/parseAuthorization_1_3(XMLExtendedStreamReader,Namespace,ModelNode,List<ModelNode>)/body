{
  boolean authzFound=false;
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
    requireNamespace(reader,expectedNs);
    final Element element=Element.forName(reader.getLocalName());
    if (authzFound) {
      throw unexpectedElement(reader);
    }
switch (element) {
case PROPERTIES:
{
        parsePropertiesAuthorization(reader,realmAddress,list);
        authzFound=true;
        break;
      }
case PLUG_IN:
{
      ModelNode parentAddress=realmAddress.clone().add(AUTHORIZATION);
      parsePlugIn_Authorization(reader,expectedNs,parentAddress,list);
      authzFound=true;
      break;
    }
default :
{
    throw unexpectedElement(reader);
  }
}
}
}

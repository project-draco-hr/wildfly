{
  String name=null;
  String directory=null;
  String comparison="";
  String metadata="";
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    final String value=reader.getAttributeValue(i);
    final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case NAME:
      name=value;
    break;
case DIRECTORY:
  directory=value;
break;
case COMPARISON_HASH:
comparison=value;
break;
case METADATA_HASH:
metadata=value;
break;
default :
throw unexpectedAttribute(reader,i);
}
}
if (name == null) {
throw missingRequired(reader,"name");
}
final DistributionItemImpl item=new DistributionItemImpl(parent,name,hexStringToByteArray(comparison),hexStringToByteArray(metadata),!Boolean.valueOf(directory));
while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
final Element element=Element.forName(reader.getLocalName());
switch (element) {
case NODE:
readNode(reader,item);
break;
default :
throw unexpectedElement(reader);
}
}
parent.getChildren().add(item);
}

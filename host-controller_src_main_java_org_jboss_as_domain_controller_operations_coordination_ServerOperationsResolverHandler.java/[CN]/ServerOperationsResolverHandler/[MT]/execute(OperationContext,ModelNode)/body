{
  if (context.hasFailureDescription()) {
    localResponse.get(FAILURE_DESCRIPTION).set(context.getFailureDescription());
    context.setRollbackOnly();
  }
 else {
    boolean nullDomainOp=hostControllerExecutionSupport.getDomainOperation() == null;
    HostControllerExecutionSupport.ServerOperationProvider provider=nullDomainOp ? NO_OP_PROVIDER : new HostControllerExecutionSupport.ServerOperationProvider(){
      @Override public Map<Set<ServerIdentity>,ModelNode> getServerOperations(      ModelNode domainOp,      PathAddress address){
        Map<Set<ServerIdentity>,ModelNode> ops=ServerOperationsResolverHandler.this.getServerOperations(context,domainOp,address);
        for (        Map.Entry<Set<ServerIdentity>,ModelNode> entry : ops.entrySet()) {
          ModelNode op=entry.getValue();
          if (op.hasDefined(OPERATION_HEADERS) && op.get(OPERATION_HEADERS).hasDefined(CALLER_TYPE) && op.get(OPERATION_HEADERS,CALLER_TYPE).asString().equals(USER)) {
            op.get(OPERATION_HEADERS).remove(CALLER_TYPE);
          }
        }
        return ops;
      }
    }
;
    Map<Set<ServerIdentity>,ModelNode> serverOps=hostControllerExecutionSupport.getServerOps(provider);
    ModelNode domainOpResult=nullDomainOp ? new ModelNode(IGNORED) : (context.hasResult() ? context.getResult() : new ModelNode());
    ModelNode overallResult=localResponse == null ? context.getResult() : localResponse.get(RESULT);
    createOverallResult(serverOps,domainOpResult,overallResult);
    if (HOST_CONTROLLER_LOGGER.isTraceEnabled()) {
      HOST_CONTROLLER_LOGGER.tracef("%s responseNode is %s",getClass().getSimpleName(),overallResult);
    }
  }
  context.completeStep();
}

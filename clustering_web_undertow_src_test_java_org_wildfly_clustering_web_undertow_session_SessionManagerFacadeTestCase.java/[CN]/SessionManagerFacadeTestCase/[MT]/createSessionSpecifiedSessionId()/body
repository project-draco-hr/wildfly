{
  HttpServerExchange exchange=new HttpServerExchange(null);
  Batcher batcher=mock(Batcher.class);
  SessionConfig config=mock(SessionConfig.class);
  Session<Void> session=mock(Session.class);
  String requestedSessionId="session.route1";
  String sessionId="session";
  String route="route";
  String routingSessionId="session.route";
  when(config.findSessionId(exchange)).thenReturn(requestedSessionId);
  when(this.manager.containsSession(sessionId)).thenReturn(false);
  when(this.manager.createSession(sessionId)).thenReturn(session);
  when(this.manager.locate(sessionId)).thenReturn(route);
  when(this.manager.getBatcher()).thenReturn(batcher);
  when(batcher.startBatch()).thenReturn(true);
  when(session.getId()).thenReturn(sessionId);
  io.undertow.server.session.Session sessionFacade=this.facade.createSession(exchange,config);
  assertNotNull(sessionFacade);
  verify(this.listener).sessionCreated(sessionFacade,exchange);
  verify(config).setSessionId(exchange,routingSessionId);
  String expected="expected";
  when(session.getId()).thenReturn(expected);
  String result=sessionFacade.getId();
  assertSame(expected,result);
}

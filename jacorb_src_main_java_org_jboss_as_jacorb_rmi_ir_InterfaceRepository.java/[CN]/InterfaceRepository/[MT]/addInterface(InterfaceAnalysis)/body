{
  InterfaceDefImpl iDef;
  Class cls=ia.getCls();
  iDef=(InterfaceDefImpl)interfaceMap.get(cls);
  if (iDef != null)   return iDef;
  if (ia.isAbstractInterface())   logger.trace("Adding abstract interface: " + ia.getRepositoryId());
  ModuleDefImpl m=ensurePackageExists(cls.getPackage().getName());
  String[] base_interfaces=addInterfaces(ia);
  String base=cls.getName();
  base=base.substring(base.lastIndexOf('.') + 1);
  base=Util.javaToIDLName(base);
  iDef=new InterfaceDefImpl(ia.getRepositoryId(),base,"1.0",m,base_interfaces,impl);
  addTypeCode(cls,iDef.type());
  m.add(base,iDef);
  interfaceMap.put(cls,iDef);
  addConstants(iDef,ia);
  addAttributes(iDef,ia);
  addOperations(iDef,ia);
  logger.trace("Added interface: " + ia.getRepositoryId());
  return iDef;
}

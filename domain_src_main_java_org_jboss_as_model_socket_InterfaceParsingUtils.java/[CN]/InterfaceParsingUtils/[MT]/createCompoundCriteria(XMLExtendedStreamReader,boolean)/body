{
  final Map<Element,AbstractInterfaceCriteriaElement<?>> interfaceCriteria=new HashMap<Element,AbstractInterfaceCriteriaElement<?>>();
  ParseUtils.requireNoAttributes(reader);
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
switch (Namespace.forUri(reader.getNamespaceURI())) {
case DOMAIN_1_0:
{
        final Element element=Element.forName(reader.getLocalName());
        AbstractInterfaceCriteriaElement<?> aice=InterfaceParsingUtils.parseSimpleInterfaceCriteria(reader,element);
        interfaceCriteria.put(aice.getElement(),aice);
        break;
      }
default :
    throw ParseUtils.unexpectedElement(reader);
}
}
if (interfaceCriteria.isEmpty()) {
throw InterfaceParsingUtils.missingCriteria(reader,InterfaceParsingUtils.SIMPLE_CRITERIA_STRING);
}
return new CompoundCriteriaElement(new HashSet<AbstractInterfaceCriteriaElement<?>>(interfaceCriteria.values()),isAny);
}

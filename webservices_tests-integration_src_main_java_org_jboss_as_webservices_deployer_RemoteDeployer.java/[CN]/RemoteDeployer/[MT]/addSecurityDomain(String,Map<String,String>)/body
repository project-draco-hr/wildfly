{
synchronized (securityDomainUsers) {
    if (securityDomainUsers.containsKey(name)) {
      int count=securityDomainUsers.get(name);
      securityDomainUsers.put(name,(count + 1));
      return;
    }
 else {
      securityDomainUsers.put(name,1);
    }
    final List<ModelNode> updates=new ArrayList<ModelNode>();
    ModelNode op=new ModelNode();
    op.get(OP).set(ADD);
    op.get(OP_ADDR).add(SUBSYSTEM,"security");
    op.get(OP_ADDR).add(SECURITY_DOMAIN,name);
    updates.add(op);
    op=new ModelNode();
    op.get(OP).set(ADD);
    op.get(OP_ADDR).add(SUBSYSTEM,"security");
    op.get(OP_ADDR).add(SECURITY_DOMAIN,name);
    op.get(OP_ADDR).add(AUTHENTICATION,CLASSIC);
    op.get(OP_ADDR).add(LOGIN_MODULE,"UsersRoles");
    op.get(CODE).set("UsersRoles");
    op.get(FLAG).set(REQUIRED);
    op.get(OPERATION_HEADERS).get(ALLOW_RESOURCE_SERVICE_RESTART).set(true);
    updates.add(op);
    final ModelNode moduleOptions=op.get(MODULE_OPTIONS);
    if (authenticationOptions != null) {
      for (      final String k : authenticationOptions.keySet()) {
        moduleOptions.add(k,authenticationOptions.get(k));
      }
    }
    applyUpdates(updates);
  }
}

{
  final Integer maxThreads=EJB3ThreadPoolResourceDefinition.MAX_THREADS.validateResolvedOperation(model).asInt(Runtime.getRuntime().availableProcessors());
  final Integer keepAlive=EJB3ThreadPoolResourceDefinition.KEEPALIVE_TIME.validateResolvedOperation(model).asInt(0);
  final ServiceTarget serviceTarget=context.getServiceTarget();
  final ThreadFactoryService threadFactory=new ThreadFactoryService();
  threadFactory.setThreadGroupName("EJB " + name);
  final ServiceName threadFactoryServiceName=THREAD_FACTORY_BASE_SERVICE_NAME.append(name);
  ServiceBuilder<ThreadFactory> factoryBuilder=serviceTarget.addService(threadFactoryServiceName,threadFactory);
  if (verificationHandler != null) {
    factoryBuilder.addListener(verificationHandler);
  }
  if (newControllers != null) {
    newControllers.add(factoryBuilder.install());
  }
 else {
    factoryBuilder.install();
  }
  final UnboundedQueueThreadPoolService service=new UnboundedQueueThreadPoolService(maxThreads,new TimeSpec(TimeUnit.MILLISECONDS,keepAlive));
  ServiceBuilder<ExecutorService> builder=serviceTarget.addService(BASE_SERVICE_NAME.append(name),service).addDependency(threadFactoryServiceName,ThreadFactory.class,service.getThreadFactoryInjector()).setInitialMode(ServiceController.Mode.ACTIVE);
  if (verificationHandler != null) {
    builder.addListener(verificationHandler);
  }
  if (newControllers != null) {
    newControllers.add(builder.install());
  }
 else {
    builder.install();
  }
}

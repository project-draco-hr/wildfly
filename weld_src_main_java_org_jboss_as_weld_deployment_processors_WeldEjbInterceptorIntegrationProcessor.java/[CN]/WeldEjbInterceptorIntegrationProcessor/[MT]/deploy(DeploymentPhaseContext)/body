{
  final DeploymentUnit deploymentUnit=phaseContext.getDeploymentUnit();
  if (!WeldDeploymentMarker.isPartOfWeldDeployment(deploymentUnit)) {
    return;
  }
  final EEModuleDescription moduleDescription=deploymentUnit.getAttachment(Attachments.EE_MODULE_DESCRIPTION);
  final EEModuleClassDescription cdiInterceptorClass=moduleDescription.getOrAddClassByName(CDI_INTERCEPTOR);
  cdiInterceptorClass.setPostConstructMethod(MethodIdentifier.getIdentifier(void.class,"doPostConstruct",InvocationContext.class));
  cdiInterceptorClass.setPreDestroyMethod(MethodIdentifier.getIdentifier(void.class,"doPreDestroy",InvocationContext.class));
  cdiInterceptorClass.setAroundInvokeMethod(MethodIdentifier.getIdentifier(Object.class,"doAroundInvoke",InvocationContext.class));
  for (  final ComponentDescription component : moduleDescription.getComponentDescriptions()) {
    if (component instanceof SessionBeanComponentDescription) {
      component.addClassInterceptor(new InterceptorDescription(CDI_INTERCEPTOR));
    }
  }
}

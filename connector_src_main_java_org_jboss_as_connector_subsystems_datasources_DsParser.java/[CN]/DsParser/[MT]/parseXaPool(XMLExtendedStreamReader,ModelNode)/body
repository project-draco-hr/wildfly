{
  while (reader.hasNext()) {
switch (reader.nextTag()) {
case END_ELEMENT:
{
        if (XaDataSource.Tag.forName(reader.getLocalName()) == XaDataSource.Tag.XA_POOL) {
          return;
        }
 else {
          if (CommonXaPool.Tag.forName(reader.getLocalName()) == CommonXaPool.Tag.UNKNOWN) {
            throw new ParserException(bundle.unexpectedEndTag(reader.getLocalName()));
          }
        }
        break;
      }
case START_ELEMENT:
{
switch (CommonXaPool.Tag.forName(reader.getLocalName())) {
case MAX_POOL_SIZE:
{
          final Location location=reader.getLocation();
          String value=rawElementText(reader);
          MAX_POOL_SIZE.parseAndSetParameter(value,operation,location);
          break;
        }
case MIN_POOL_SIZE:
{
        final Location location=reader.getLocation();
        String value=rawElementText(reader);
        MIN_POOL_SIZE.parseAndSetParameter(value,operation,location);
        break;
      }
case PREFILL:
{
      final Location location=reader.getLocation();
      String value=rawElementText(reader);
      POOL_PREFILL.parseAndSetParameter(value,operation,location);
      break;
    }
case USE_STRICT_MIN:
{
    final Location location=reader.getLocation();
    String value=rawElementText(reader);
    POOL_USE_STRICT_MIN.parseAndSetParameter(value,operation,location);
    break;
  }
case FLUSH_STRATEGY:
{
  final Location location=reader.getLocation();
  String value=rawElementText(reader);
  POOL_FLUSH_STRATEGY.parseAndSetParameter(value,operation,location);
  break;
}
case INTERLEAVING:
{
final Location location=reader.getLocation();
String value=rawElementText(reader);
INTERLEAVING.parseAndSetParameter(value,operation,location);
break;
}
case IS_SAME_RM_OVERRIDE:
{
final Location location=reader.getLocation();
String value=rawElementText(reader);
SAME_RM_OVERRIDE.parseAndSetParameter(value,operation,location);
break;
}
case NO_TX_SEPARATE_POOLS:
{
final Location location=reader.getLocation();
String value=rawElementText(reader);
NOTXSEPARATEPOOL.parseAndSetParameter(value,operation,location);
break;
}
case PAD_XID:
{
final Location location=reader.getLocation();
String value=rawElementText(reader);
PAD_XID.parseAndSetParameter(value,operation,location);
break;
}
case WRAP_XA_RESOURCE:
{
final Location location=reader.getLocation();
String value=rawElementText(reader);
WRAP_XA_RESOURCE.parseAndSetParameter(value,operation,location);
break;
}
default :
throw new ParserException(bundle.unexpectedElement(reader.getLocalName()));
}
break;
}
}
}
throw new ParserException(bundle.unexpectedEndOfDocument());
}

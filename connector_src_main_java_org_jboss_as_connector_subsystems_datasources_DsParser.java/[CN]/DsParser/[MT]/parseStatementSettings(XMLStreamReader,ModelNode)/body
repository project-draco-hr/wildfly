{
  while (reader.hasNext()) {
switch (reader.nextTag()) {
case END_ELEMENT:
{
        if (DataSource.Tag.forName(reader.getLocalName()) == DataSource.Tag.STATEMENT) {
          return;
        }
 else {
          if (Statement.Tag.forName(reader.getLocalName()) == Statement.Tag.UNKNOWN) {
            throw new ParserException(bundle.unexpectedEndTag(reader.getLocalName()));
          }
        }
        break;
      }
case START_ELEMENT:
{
switch (Statement.Tag.forName(reader.getLocalName())) {
case PREPARED_STATEMENT_CACHE_SIZE:
{
          operation.get(PREPAREDSTATEMENTSCACHESIZE).set(elementAsLong(reader));
          break;
        }
case TRACK_STATEMENTS:
{
        operation.get(TRACKSTATEMENTS).set(elementAsString(reader));
        break;
      }
case SHARE_PREPARED_STATEMENTS:
{
      operation.get(SHAREPREPAREDSTATEMENTS).set(elementAsBoolean(reader));
      break;
    }
default :
  throw new ParserException(bundle.unexpectedElement(reader.getLocalName()));
}
break;
}
}
}
throw new ParserException(bundle.unexpectedEndOfDocument());
}

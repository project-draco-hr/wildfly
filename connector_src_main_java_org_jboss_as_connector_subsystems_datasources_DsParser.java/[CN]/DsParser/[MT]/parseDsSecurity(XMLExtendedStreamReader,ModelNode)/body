{
  while (reader.hasNext()) {
switch (reader.nextTag()) {
case END_ELEMENT:
{
        if (DataSource.Tag.forName(reader.getLocalName()) == DataSource.Tag.SECURITY) {
          return;
        }
 else {
          if (DsSecurity.Tag.forName(reader.getLocalName()) == DsSecurity.Tag.UNKNOWN) {
            throw new ParserException(bundle.unexpectedEndTag(reader.getLocalName()));
          }
        }
        break;
      }
case START_ELEMENT:
{
      DsSecurity.Tag tag=DsSecurity.Tag.forName(reader.getLocalName());
switch (tag) {
case PASSWORD:
{
          final Location location=reader.getLocation();
          String value=rawElementText(reader);
          PASSWORD.parseAndSetParameter(value,operation,location);
          break;
        }
case USER_NAME:
{
        final Location location=reader.getLocation();
        String value=rawElementText(reader);
        USERNAME.parseAndSetParameter(value,operation,location);
        break;
      }
case SECURITY_DOMAIN:
{
      final Location location=reader.getLocation();
      String value=rawElementText(reader);
      SECURITY_DOMAIN.parseAndSetParameter(value,operation,location);
      break;
    }
case REAUTH_PLUGIN:
{
    parseExtension(reader,tag.getLocalName(),operation,REAUTHPLUGIN_CLASSNAME,REAUTHPLUGIN_PROPERTIES);
    break;
  }
default :
throw new ParserException(bundle.unexpectedElement(reader.getLocalName()));
}
break;
}
}
}
throw new ParserException(bundle.unexpectedEndOfDocument());
}

{
  while (reader.hasNext()) {
switch (reader.nextTag()) {
case END_ELEMENT:
{
        if (DataSource.Tag.forName(reader.getLocalName()) == DataSource.Tag.VALIDATION) {
          return;
        }
 else {
          if (Validation.Tag.forName(reader.getLocalName()) == Validation.Tag.UNKNOWN) {
            throw new ParserException(bundle.unexpectedEndTag(reader.getLocalName()));
          }
        }
        break;
      }
case START_ELEMENT:
{
      Validation.Tag currTag=Validation.Tag.forName(reader.getLocalName());
switch (currTag) {
case BACKGROUND_VALIDATION:
{
          final Location location=reader.getLocation();
          String value=rawElementText(reader);
          BACKGROUNDVALIDATION.parseAndSetParameter(value,operation,location);
          break;
        }
case BACKGROUND_VALIDATION_MILLIS:
{
        final Location location=reader.getLocation();
        String value=rawElementText(reader);
        BACKGROUNDVALIDATIONMILLIS.parseAndSetParameter(value,operation,location);
        break;
      }
case CHECK_VALID_CONNECTION_SQL:
{
      final Location location=reader.getLocation();
      String value=rawElementText(reader);
      CHECKVALIDCONNECTIONSQL.parseAndSetParameter(value,operation,location);
      break;
    }
case EXCEPTION_SORTER:
{
    parseExtension(reader,currTag.getLocalName(),operation,EXCEPTIONSORTERCLASSNAME,EXCEPTIONSORTER_PROPERTIES);
    break;
  }
case STALE_CONNECTION_CHECKER:
{
  parseExtension(reader,currTag.getLocalName(),operation,STALECONNECTIONCHECKERCLASSNAME,STALECONNECTIONCHECKER_PROPERTIES);
  break;
}
case USE_FAST_FAIL:
{
final Location location=reader.getLocation();
String value=rawElementText(reader);
USE_FAST_FAIL.parseAndSetParameter(value,operation,location);
break;
}
case VALIDATE_ON_MATCH:
{
final Location location=reader.getLocation();
String value=rawElementText(reader);
VALIDATEONMATCH.parseAndSetParameter(value,operation,location);
break;
}
case VALID_CONNECTION_CHECKER:
{
parseExtension(reader,currTag.getLocalName(),operation,VALIDCONNECTIONCHECKERCLASSNAME,VALIDCONNECTIONCHECKER_PROPERTIES);
break;
}
default :
{
throw new ParserException(bundle.unexpectedElement(reader.getLocalName()));
}
}
break;
}
}
}
throw new ParserException(bundle.unexpectedEndOfDocument());
}

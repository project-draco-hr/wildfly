{
  while (reader.hasNext()) {
switch (reader.nextTag()) {
case END_ELEMENT:
{
        if (DataSource.Tag.forName(reader.getLocalName()) == DataSource.Tag.STATEMENT) {
          return;
        }
 else {
          if (Statement.Tag.forName(reader.getLocalName()) == Statement.Tag.UNKNOWN) {
            throw new ParserException(bundle.unexpectedEndTag(reader.getLocalName()));
          }
        }
        break;
      }
case START_ELEMENT:
{
switch (Statement.Tag.forName(reader.getLocalName())) {
case PREPARED_STATEMENT_CACHE_SIZE:
{
          final Location location=reader.getLocation();
          String value=rawElementText(reader);
          PREPAREDSTATEMENTSCACHESIZE.parseAndSetParameter(value,operation,location);
          break;
        }
case TRACK_STATEMENTS:
{
        final Location location=reader.getLocation();
        String value=rawElementText(reader);
        TRACKSTATEMENTS.parseAndSetParameter(value,operation,location);
        break;
      }
case SHARE_PREPARED_STATEMENTS:
{
      final Location location=reader.getLocation();
      String value=rawElementText(reader);
      SHAREPREPAREDSTATEMENTS.parseAndSetParameter(value,operation,location);
      break;
    }
default :
  throw new ParserException(bundle.unexpectedElement(reader.getLocalName()));
}
break;
}
}
}
throw new ParserException(bundle.unexpectedEndOfDocument());
}

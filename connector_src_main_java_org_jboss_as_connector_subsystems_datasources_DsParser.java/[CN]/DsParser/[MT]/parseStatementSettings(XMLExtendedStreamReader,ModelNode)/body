{
  while (reader.hasNext()) {
switch (reader.nextTag()) {
case END_ELEMENT:
{
        if (DataSource.Tag.forName(reader.getLocalName()) == DataSource.Tag.STATEMENT) {
          return;
        }
 else {
          if (Statement.Tag.forName(reader.getLocalName()) == Statement.Tag.UNKNOWN) {
            throw new ParserException(bundle.unexpectedEndTag(reader.getLocalName()));
          }
        }
        break;
      }
case START_ELEMENT:
{
switch (Statement.Tag.forName(reader.getLocalName())) {
case PREPARED_STATEMENT_CACHE_SIZE:
{
          String value=rawElementText(reader);
          PREPARED_STATEMENTS_CACHE_SIZE.parseAndSetParameter(value,operation,reader);
          break;
        }
case TRACK_STATEMENTS:
{
        String value=rawElementText(reader);
        TRACK_STATEMENTS.parseAndSetParameter(value,operation,reader);
        break;
      }
case SHARE_PREPARED_STATEMENTS:
{
      String value=rawElementText(reader);
      value=value == null ? "true" : value;
      SHARE_PREPARED_STATEMENTS.parseAndSetParameter(value,operation,reader);
      break;
    }
default :
  throw new ParserException(bundle.unexpectedElement(reader.getLocalName()));
}
break;
}
}
}
throw new ParserException(bundle.unexpectedEndOfDocument());
}

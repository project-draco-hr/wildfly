{
  while (reader.hasNext()) {
switch (reader.nextTag()) {
case END_ELEMENT:
{
        if (Tag.forName(reader.getLocalName()) == Tag.DATASOURCES)         return;
      }
case START_ELEMENT:
{
switch (DataSources.Tag.forName(reader.getLocalName())) {
case DATASOURCE:
{
switch (Namespace.forUri(reader.getNamespaceURI())) {
case DATASOURCES_1_0:
case DATASOURCES_1_1:
case DATASOURCES_2_0:
            parseDataSource_1_0(reader,list,parentAddress);
          break;
case DATASOURCES_1_2:
        parseDataSource_1_2(reader,list,parentAddress);
      break;
case DATASOURCES_3_0:
    parseDataSource_3_0(reader,list,parentAddress);
  break;
}
break;
}
case XA_DATASOURCE:
{
switch (Namespace.forUri(reader.getNamespaceURI())) {
case DATASOURCES_1_0:
case DATASOURCES_1_1:
case DATASOURCES_2_0:
parseXADataSource_1_0(reader,list,parentAddress);
break;
case DATASOURCES_1_2:
parseXADataSource_1_2(reader,list,parentAddress);
break;
case DATASOURCES_3_0:
parseXADataSource_3_0(reader,list,parentAddress);
break;
}
break;
}
case DRIVERS:
{
break;
}
case DRIVER:
{
parseDriver(reader,list,parentAddress);
break;
}
default :
throw new ParserException(bundle.unexpectedElement(reader.getLocalName()));
}
break;
}
}
}
throw new ParserException(bundle.unexpectedEndOfDocument());
}

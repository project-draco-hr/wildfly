{
  if (ANONYMOUS.equals(mechanismName) && realm == null) {
    return new CallbackHandler(){
      public void handle(      Callback[] callbacks) throws IOException, UnsupportedCallbackException {
        for (        Callback current : callbacks) {
          System.out.println(current.getClass().getName());
          new Throwable("TRACE").printStackTrace();
        }
      }
    }
;
  }
  if (DIGEST_MD5.equals(mechanismName) && digestMd5Supported()) {
    final CallbackHandler realHandler=realm.getCallbackHandler();
    final CallbackHandler realmNameFix=new CallbackHandler(){
      public void handle(      Callback[] callbacks) throws IOException, UnsupportedCallbackException {
        List<Callback> filteredCallbacks=new ArrayList<Callback>(callbacks.length - 1);
        for (        Callback current : callbacks) {
          if (current instanceof RealmCallback == false) {
            filteredCallbacks.add(current);
          }
        }
        realHandler.handle(filteredCallbacks.toArray(new Callback[filteredCallbacks.size()]));
      }
    }
;
    if (serverCallbackHandler == null) {
      return realmNameFix;
    }
    return new CallbackHandler(){
      public void handle(      Callback[] callbacks) throws IOException, UnsupportedCallbackException {
        serverCallbackHandler.handle(callbacks);
        if (handled(callbacks) == false) {
          realmNameFix.handle(callbacks);
        }
      }
      private boolean handled(      Callback[] callbacks){
        for (        Callback current : callbacks) {
          if (current instanceof PasswordCallback) {
            PasswordCallback pcb=(PasswordCallback)current;
            char[] password=pcb.getPassword();
            return (password != null && password.length > 0);
          }
        }
        return false;
      }
    }
;
  }
  return null;
}

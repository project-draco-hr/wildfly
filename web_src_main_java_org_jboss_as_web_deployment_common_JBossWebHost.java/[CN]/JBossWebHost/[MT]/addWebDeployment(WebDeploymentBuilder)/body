{
  final Host host=injectedHost.getValue().getHost();
  final StandardContext context=new StandardContext();
  context.setPath(webDeploymentBuilder.getContextRoot());
  context.addLifecycleListener(new ContextConfig());
  File docBase=webDeploymentBuilder.getDocumentRoot();
  if (!docBase.exists()) {
    docBase.mkdirs();
  }
  context.setDocBase(docBase.getPath());
  final Loader loader=new WebCtxLoader(webDeploymentBuilder.getClassLoader());
  loader.setContainer(host);
  context.setLoader(loader);
  context.setInstanceManager(new LocalInstanceManager(webDeploymentBuilder.getClassLoader()));
  for (  ServletBuilder servlet : webDeploymentBuilder.getServlets()) {
    final String servletName=servlet.getServletName();
    Map<String,String> params=servlet.getInitParams();
    List<String> urlPatterns=servlet.getUrlMappings();
    Wrapper wsfsWrapper=context.createWrapper();
    wsfsWrapper.setName(servletName);
    wsfsWrapper.setServlet(servlet.getServlet());
    wsfsWrapper.setServletClass(servlet.getServletClass().getName());
    for (    Map.Entry<String,String> param : params.entrySet()) {
      wsfsWrapper.addInitParameter(param.getKey(),param.getValue());
    }
    wsfsWrapper.setParent(context);
    context.addChild(wsfsWrapper);
    for (    String urlPattern : urlPatterns) {
      context.addServletMapping(urlPattern,servletName);
    }
    for (    Map.Entry<String,String> entry : webDeploymentBuilder.getMimeTypes().entrySet()) {
      context.addMimeMapping(entry.getKey(),entry.getValue());
    }
    if (servlet.isForceInit()) {
      wsfsWrapper.allocate();
    }
  }
  return new WebDeploymentControllerImpl(context,host);
}

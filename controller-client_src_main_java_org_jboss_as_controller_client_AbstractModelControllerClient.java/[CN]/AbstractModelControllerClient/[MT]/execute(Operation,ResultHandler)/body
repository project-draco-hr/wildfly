{
  if (operation == null) {
    throw new IllegalArgumentException("Null operation");
  }
  if (handler == null) {
    throw new IllegalArgumentException("Null handler");
  }
  final AsynchronousOperation result=new AsynchronousOperation();
  executorService.execute(new Runnable(){
    @Override public void run(){
      try {
        Future<Void> f=new ExecuteAsynchronousRequest(result,operation,handler).execute(getConnectionStrategy());
        while (true) {
          try {
            f.get(500,TimeUnit.MILLISECONDS);
            break;
          }
 catch (          TimeoutException e) {
            if (executorService.isShutdown()) {
              break;
            }
          }
        }
      }
 catch (      Exception e) {
        throw new RuntimeException("Failed to execute operation ",e);
      }
    }
  }
);
  return new OperationResult(){
    @Override public Cancellable getCancellable(){
      return result;
    }
    @Override public ModelNode getCompensatingOperation(){
      return result.getCompensatingOperation();
    }
  }
;
}

{
  final BatchBuilder batchBuilder=context.getBatchBuilder();
  final ScaledCount coreThreads=this.coreThreads;
  int coreThreadsValue=coreThreads != null ? coreThreads.getScaledCount() : 0;
  final ScaledCount maxThreads=getMaxThreads();
  int maxThreadsValue=maxThreads != null ? maxThreads.getScaledCount() : Integer.MAX_VALUE;
  final ScaledCount queueLength=this.queueLength;
  int queueLengthValue=queueLength != null ? queueLength.getScaledCount() : Integer.MAX_VALUE;
  TimeSpec keepAlive=getKeepaliveTime();
  if (keepAlive == null)   keepAlive=TimeSpec.DEFAULT_KEEPALIVE;
  final BoundedQueueThreadPoolService service=new BoundedQueueThreadPoolService(coreThreadsValue,maxThreadsValue,queueLengthValue,blocking,keepAlive,allowCoreTimeout);
  final ServiceName serviceName=JBOSS_THREAD_EXECUTOR.append(getName());
  final BatchServiceBuilder<ExecutorService> serviceBuilder=batchBuilder.addService(serviceName,service);
  final String threadFactory=getThreadFactory();
  final ServiceName threadFactoryName;
  if (threadFactory == null) {
    threadFactoryName=serviceName.append("thread-factory");
    batchBuilder.addService(threadFactoryName,new ThreadFactoryService());
  }
 else {
    threadFactoryName=JBOSS_THREAD_FACTORY.append(threadFactory);
  }
  serviceBuilder.addDependency(threadFactoryName,ThreadFactory.class,service.getThreadFactoryInjector());
  final String handoffExecutor=this.handoffExecutor;
  if (handoffExecutor == null) {
    final ServiceName handoffExecutorName=JBOSS_THREAD_EXECUTOR.append(handoffExecutor);
    serviceBuilder.addDependency(handoffExecutorName,Executor.class,service.getHandoffExecutorInjector());
  }
}

{
  final DeploymentUnit deploymentUnit=phaseContext.getDeploymentUnit();
  if (!isWarDeployment(deploymentUnit)) {
    return;
  }
  final VirtualFile deploymentRoot=phaseContext.getDeploymentUnit().getAttachment(Attachments.DEPLOYMENT_ROOT).getRoot();
  if (deploymentRoot == null) {
    return;
  }
  final MountHandle mountHandle=phaseContext.getDeploymentUnit().getAttachment(Attachments.DEPLOYMENT_ROOT).getMountHandle();
  try {
    final ClassPathEntry[] entries=createResourceRoots(deploymentRoot,mountHandle);
    final DeploymentStructure structure=new DeploymentStructure(entries);
    deploymentUnit.putAttachment(DeploymentStructure.ATTACHMENT_KEY,structure);
    final ServiceTarget target=phaseContext.getServiceTarget();
    final ServiceName sName=phaseContext.getPhaseServiceName().append("war","structure");
    target.addService(sName,new DeploymentStructureService(structure)).addDependency(phaseContext.getPhaseServiceName()).install();
    target.addDependency(sName);
  }
 catch (  Exception e) {
    throw new DeploymentUnitProcessingException(e);
  }
  final WarMetaData warMetaData=new WarMetaData();
  warMetaData.setSharedWebMetaData(sharedWebMetaData);
  deploymentUnit.putAttachment(WarMetaData.ATTACHMENT_KEY,warMetaData);
  final TldsMetaData tldsMetaData=new TldsMetaData();
  tldsMetaData.setSharedTlds(sharedTldsMetaData);
  deploymentUnit.putAttachment(TldsMetaData.ATTACHMENT_KEY,tldsMetaData);
}

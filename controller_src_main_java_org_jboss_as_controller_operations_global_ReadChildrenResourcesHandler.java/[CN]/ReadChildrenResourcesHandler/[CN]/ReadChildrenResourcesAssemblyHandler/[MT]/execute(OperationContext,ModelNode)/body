{
  context.addStep(new OperationStepHandler(){
    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {
      Map<String,ModelNode> sortedChildren=new TreeMap<String,ModelNode>();
      boolean failed=false;
      for (      Map.Entry<PathElement,ModelNode> entry : resources.entrySet()) {
        PathElement path=entry.getKey();
        ModelNode value=entry.getValue();
        if (!value.has(FAILURE_DESCRIPTION)) {
          sortedChildren.put(path.getValue(),value.get(RESULT));
        }
 else         if (!failed && value.hasDefined(FAILURE_DESCRIPTION)) {
          context.getFailureDescription().set(value.get(FAILURE_DESCRIPTION));
          failed=true;
        }
      }
      if (!failed) {
        boolean hasFilteredData=filteredData.hasFilteredData();
        final ModelNode result=context.getResult();
        result.setEmptyObject();
        for (        Map.Entry<String,ModelNode> entry : sortedChildren.entrySet()) {
          if (!hasFilteredData || !filteredData.isAddressFiltered(address,PathElement.pathElement(childType,entry.getKey()))) {
            result.get(entry.getKey()).set(entry.getValue());
          }
        }
        if (hasFilteredData) {
          context.getResponseHeaders().get(ACCESS_CONTROL).set(filteredData.toModelNode());
        }
      }
      context.stepCompleted();
    }
  }
,OperationContext.Stage.VERIFY);
  context.stepCompleted();
}

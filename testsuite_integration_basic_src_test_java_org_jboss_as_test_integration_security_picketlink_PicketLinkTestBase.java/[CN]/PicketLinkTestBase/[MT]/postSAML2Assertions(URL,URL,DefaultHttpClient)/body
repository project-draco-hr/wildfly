{
  final String canonicalHost=Utils.getDefaultHost(true);
  String httpResponseBody=makeCall(spURL,httpClient,200);
  String[] splitted=httpResponseBody.split("NAME=\"SAMLRequest\" VALUE=\"");
  String samlRequest=splitted[1].substring(0,splitted[1].indexOf("\""));
  List<NameValuePair> pairs=new ArrayList<NameValuePair>();
  pairs.add(new BasicNameValuePair("SAMLRequest",samlRequest));
  HttpPost httpPost=new HttpPost(Utils.replaceHost(idpURL.toURI(),canonicalHost));
  httpPost.setEntity(new UrlEncodedFormEntity(pairs));
  HttpResponse httpResponse=httpClient.execute(httpPost);
  HttpEntity entity=httpResponse.getEntity();
  if (entity != null) {
    httpResponseBody=EntityUtils.toString(httpResponse.getEntity());
    EntityUtils.consume(entity);
  }
  splitted=httpResponseBody.split("NAME=\"SAMLResponse\" VALUE=\"");
  String samlResponse=splitted[1].substring(0,splitted[1].indexOf("\""));
  pairs=new ArrayList<NameValuePair>();
  pairs.add(new BasicNameValuePair("SAMLResponse",samlResponse));
  httpPost=new HttpPost(Utils.replaceHost(spURL.toURI(),canonicalHost));
  httpPost.setEntity(new UrlEncodedFormEntity(pairs));
  httpResponse=httpClient.execute(httpPost);
  entity=httpResponse.getEntity();
  if (entity != null) {
    httpResponseBody=EntityUtils.toString(httpResponse.getEntity());
    EntityUtils.consume(entity);
  }
  return httpResponseBody;
}

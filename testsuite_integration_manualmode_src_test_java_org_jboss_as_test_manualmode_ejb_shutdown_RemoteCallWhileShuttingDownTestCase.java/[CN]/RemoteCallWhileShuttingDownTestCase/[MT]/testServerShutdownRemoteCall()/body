{
  this.container.start(CONTAINER);
  final ModelControllerClient client=TestSuiteEnvironment.getModelControllerClient();
  ManagementClient managementClient=new ManagementClient(client,TestSuiteEnvironment.getServerAddress(),TestSuiteEnvironment.getServerPort());
  try {
    this.deployer.deploy(DEP1);
    RemoteEcho echo=(RemoteEcho)context.lookup("ejb:/dep1/DelegatingEcho!" + RemoteEcho.class.getName());
    Assert.assertEquals("Real Hello",echo.echo("Hello"));
    final ModelNode op=new ModelNode();
    op.get(ModelDescriptionConstants.ADDRESS);
    op.get(ModelDescriptionConstants.OP_ADDR).set(new ModelNode());
    op.get(ModelDescriptionConstants.OP).set(ModelDescriptionConstants.SHUTDOWN);
    ManagementOperations.executeOperation(client,op);
    Thread.sleep(1000);
    Assert.assertEquals("Real Hello2",echo.echo("Hello2"));
    echo.testDone();
    while (managementClient.isServerInRunningState()) {
      Thread.sleep(50);
    }
    container.start(CONTAINER);
  }
  finally {
    try {
      if (!managementClient.isServerInRunningState()) {
        container.start(CONTAINER);
      }
      this.deployer.undeploy(DEP1);
      this.container.stop(CONTAINER);
    }
 catch (    Exception e) {
      logger.debug("Exception during container shutdown",e);
    }
    client.close();
  }
}

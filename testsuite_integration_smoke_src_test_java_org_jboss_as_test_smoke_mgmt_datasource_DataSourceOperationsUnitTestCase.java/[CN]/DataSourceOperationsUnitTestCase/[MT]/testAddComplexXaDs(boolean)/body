{
  final String complexXaDs;
  if (userName) {
    complexXaDs="complexXaDsWithUserName";
  }
 else {
    complexXaDs="complexXaDs";
  }
  final String complexXaDsJndi="java:jboss/xa-datasources/" + complexXaDs;
  final ModelNode address=new ModelNode();
  address.add("subsystem","datasources");
  address.add("xa-data-source",complexXaDs);
  address.protect();
  final ModelNode operation=new ModelNode();
  operation.get(OP).set("add");
  operation.get(OP_ADDR).set(address);
  operation.get("enabled").set(false);
  Properties params=xaDsProperties(complexXaDsJndi,userName);
  setOperationParams(operation,params);
  addExtensionProperties(operation);
  operation.get("recovery-plugin-properties","name").set("Property5");
  operation.get("recovery-plugin-properties","name1").set("Property6");
  executeOperation(operation);
  final ModelNode xaDatasourcePropertiesAddress=address.clone();
  xaDatasourcePropertiesAddress.add("xa-datasource-properties","URL");
  xaDatasourcePropertiesAddress.protect();
  final ModelNode xaDatasourcePropertyOperation=new ModelNode();
  xaDatasourcePropertyOperation.get(OP).set("add");
  xaDatasourcePropertyOperation.get(OP_ADDR).set(xaDatasourcePropertiesAddress);
  xaDatasourcePropertyOperation.get("value").set("jdbc:h2:mem:test");
  executeOperation(xaDatasourcePropertyOperation);
  List<ModelNode> newList=marshalAndReparseDsResources("xa-data-source");
  remove(address);
  Assert.assertNotNull("Reparsing failed:",newList);
  ModelNode rightChild=findNodeWithProperty(newList,"jndi-name",complexXaDsJndi);
  Assert.assertTrue("node:" + rightChild.asString() + ";\nparams"+ params,checkModelParams(rightChild,params));
  Assert.assertEquals(rightChild.asString(),"Property2",rightChild.get("valid-connection-checker-properties","name").asString());
  Assert.assertEquals(rightChild.asString(),"Property4",rightChild.get("exception-sorter-properties","name").asString());
  Assert.assertEquals(rightChild.asString(),"Property3",rightChild.get("stale-connection-checker-properties","name").asString());
  Assert.assertEquals(rightChild.asString(),"Property1",rightChild.get("reauth-plugin-properties","name").asString());
  Assert.assertEquals(rightChild.asString(),"Property5",rightChild.get("recovery-plugin-properties","name").asString());
  Assert.assertEquals(rightChild.asString(),"Property6",rightChild.get("recovery-plugin-properties","name1").asString());
  Assert.assertNotNull("xa-datasource-properties not propagated ",findNodeWithProperty(newList,"value","jdbc:h2:mem:test"));
}

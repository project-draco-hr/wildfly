{
  final ModelNode sasl=new ModelNode();
  sasl.get(TYPE).set(ModelType.OBJECT);
  sasl.get(DESCRIPTION).set(bundle.getString("remoting.sasl"));
  sasl.get(REQUIRED).set(false);
  sasl.get(ATTRIBUTES,REUSE_SESSION,TYPE).set(ModelType.BOOLEAN);
  sasl.get(ATTRIBUTES,REUSE_SESSION,DESCRIPTION).set(bundle.getString("remoting.sasl.reuse-session"));
  sasl.get(ATTRIBUTES,REUSE_SESSION,REQUIRED).set(false);
  sasl.get(ATTRIBUTES,REUSE_SESSION,DEFAULT).set(false);
  sasl.get(ATTRIBUTES,SERVER_AUTH,TYPE).set(ModelType.BOOLEAN);
  sasl.get(ATTRIBUTES,SERVER_AUTH,DESCRIPTION).set(bundle.getString("remoting.sasl.server-auth"));
  sasl.get(ATTRIBUTES,SERVER_AUTH,REQUIRED).set(false);
  sasl.get(ATTRIBUTES,SERVER_AUTH,DEFAULT).set(false);
  sasl.get(CHILDREN,INCLUDE_MECHANISMS,TYPE).set(ModelType.LIST);
  sasl.get(CHILDREN,INCLUDE_MECHANISMS,VALUE_TYPE).set(ModelType.STRING);
  sasl.get(CHILDREN,INCLUDE_MECHANISMS,DESCRIPTION).set(bundle.getString("remoting.sasl.include-mechanisms"));
  sasl.get(CHILDREN,INCLUDE_MECHANISMS,REQUIRED).set(false);
  sasl.get(CHILDREN,QOP,TYPE).set(ModelType.LIST);
  sasl.get(CHILDREN,QOP,VALUE_TYPE).set(ModelType.STRING);
  sasl.get(CHILDREN,QOP,DESCRIPTION).set(bundle.getString("remoting.sasl.qop"));
  sasl.get(CHILDREN,QOP,REQUIRED).set(false);
  sasl.get(CHILDREN,POLICY).set(getPolicyElement(bundle));
  sasl.get(CHILDREN,PROPERTIES,TYPE).set(ModelType.LIST);
  sasl.get(CHILDREN,PROPERTIES,VALUE_TYPE).set(ModelType.PROPERTY);
  return sasl;
}

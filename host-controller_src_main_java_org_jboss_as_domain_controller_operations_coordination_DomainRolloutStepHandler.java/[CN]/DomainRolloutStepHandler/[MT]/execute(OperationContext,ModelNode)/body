{
  if (context.hasFailureDescription()) {
    context.setRollbackOnly();
    context.stepCompleted();
    return;
  }
  context.attachIfAbsent(CompositeOperationHandler.DOMAIN_EXECUTION_KEY,Boolean.TRUE);
  boolean pushToServers=!domainOperationContext.hasHostLevelFailures();
  if (pushToServers) {
    ModelNode ourResult=domainOperationContext.getCoordinatorResult();
    if (ourResult.has(FAILURE_DESCRIPTION)) {
      if (trace) {
        HOST_CONTROLLER_LOGGER.tracef("coordinator failed: %s",ourResult);
      }
      pushToServers=false;
      domainOperationContext.setCompleteRollback(true);
    }
 else {
      if (trace) {
        HOST_CONTROLLER_LOGGER.tracef("coordinator succeeded: %s",ourResult);
      }
      for (      ModelNode hostResult : domainOperationContext.getHostControllerResults().values()) {
        if (hostResult.has(FAILURE_DESCRIPTION)) {
          if (trace) {
            HOST_CONTROLLER_LOGGER.tracef("host failed: %s",hostResult);
          }
          pushToServers=false;
          domainOperationContext.setCompleteRollback(true);
          break;
        }
      }
    }
  }
  if (pushToServers) {
    domainOperationContext.setCompleteRollback(false);
    final Map<ServerIdentity,ServerTaskExecutor.ExecutedServerRequest> submittedTasks=new HashMap<ServerIdentity,ServerTaskExecutor.ExecutedServerRequest>();
    final List<ServerTaskExecutor.ServerPreparedResponse> preparedResults=new ArrayList<ServerTaskExecutor.ServerPreparedResponse>();
    boolean completeStepCalled=false;
    try {
      pushToServers(context,submittedTasks,preparedResults);
      context.completeStep(new OperationContext.ResultHandler(){
        @Override public void handleResult(        OperationContext.ResultAction resultAction,        OperationContext context,        ModelNode operation){
          finalizeOp(submittedTasks,preparedResults);
        }
      }
);
      completeStepCalled=true;
    }
  finally {
      if (!completeStepCalled) {
        finalizeOp(submittedTasks,preparedResults);
      }
    }
  }
 else {
    reportHostFailures(context,operation);
    context.completeStep(OperationContext.ResultHandler.NOOP_RESULT_HANDLER);
  }
}

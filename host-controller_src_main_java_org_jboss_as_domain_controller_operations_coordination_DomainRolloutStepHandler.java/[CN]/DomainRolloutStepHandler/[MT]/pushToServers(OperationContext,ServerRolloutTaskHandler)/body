{
  final String localHostName=domainOperationContext.getLocalHostInfo().getLocalHostName();
  Map<String,ModelNode> hostResults=new HashMap<String,ModelNode>(domainOperationContext.getHostControllerResults());
  if (domainOperationContext.getCoordinatorResult().isDefined()) {
    hostResults.put(localHostName,domainOperationContext.getCoordinatorResult());
  }
  Map<String,Map<ServerIdentity,ModelNode>> opsByGroup=getOpsByGroup(hostResults);
  if (opsByGroup.size() > 0) {
    final ModelNode rolloutPlan=getRolloutPlan(this.providedRolloutPlan,opsByGroup);
    if (trace) {
      HOST_CONTROLLER_LOGGER.tracef("Rollout plan is %s",rolloutPlan);
    }
    final ServerTaskExecutor taskExecutor=new ServerTaskExecutor(context,rolloutHandler){
      @Override protected boolean execute(      TransactionalProtocolClient.TransactionalOperationListener<ServerTaskExecutor.ServerOperation> listener,      ServerIdentity server,      ModelNode original){
        ProxyController proxy=hostProxies.get(server.getHostName());
        if (proxy == null) {
          if (localHostName.equals(server.getHostName())) {
            proxy=serverProxies.get(server.getServerName());
            if (proxy == null) {
              if (trace) {
                HOST_CONTROLLER_LOGGER.tracef("No proxy for %s",server);
              }
              return false;
            }
          }
        }
        final RemoteProxyController remoteProxyController=(RemoteProxyController)proxy;
        final ModelNode transformedOperation=remoteProxyController.translateOperationForProxy(original);
        final TransactionalProtocolClient client=remoteProxyController.getTransactionalProtocolClient();
        return executeOperation(listener,client,server,transformedOperation);
      }
    }
;
    RolloutPlanController rolloutPlanController=new RolloutPlanController(opsByGroup,rolloutPlan,domainOperationContext,taskExecutor,rolloutHandler,executorService);
    RolloutPlanController.Result planResult=rolloutPlanController.execute();
    if (trace) {
      HOST_CONTROLLER_LOGGER.tracef("Rollout plan result is %s",planResult);
    }
    if (planResult == RolloutPlanController.Result.FAILED || (planResult == RolloutPlanController.Result.PARTIAL && domainOperationContext.isCompleteRollback())) {
      domainOperationContext.setCompleteRollback(true);
      context.getResult();
      context.getFailureDescription().set(MESSAGES.operationFailedOrRolledBack());
      domainOperationContext.setFailureReported(true);
    }
  }
}

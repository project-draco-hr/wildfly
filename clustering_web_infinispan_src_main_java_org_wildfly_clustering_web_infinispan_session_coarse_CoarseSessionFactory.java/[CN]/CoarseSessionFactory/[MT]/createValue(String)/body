{
  CoarseSessionCacheEntry<L> entry=new CoarseSessionCacheEntry<>(new SimpleSessionMetaData());
  CoarseSessionCacheEntry<L> existingEntry=this.sessionCache.getAdvancedCache().withFlags(Flag.FORCE_SYNCHRONOUS).putIfAbsent(id,entry);
  if (existingEntry != null) {
    MarshalledValue<Map<String,Object>,MarshallingContext> value=this.attributesCache.get(new SessionAttributesCacheKey(id));
    return new CoarseSessionEntry<>(existingEntry,value);
  }
  Map<String,Object> map=new HashMap<>();
  MarshalledValue<Map<String,Object>,MarshallingContext> value=this.marshaller.write(map);
  MarshalledValue<Map<String,Object>,MarshallingContext> existingValue=this.attributesCache.getAdvancedCache().withFlags(Flag.FORCE_SYNCHRONOUS).putIfAbsent(new SessionAttributesCacheKey(id),value);
  return new CoarseSessionEntry<>(entry,(existingValue != null) ? existingValue : value);
}

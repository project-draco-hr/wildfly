{
  CoarseSessionCacheEntry<L> entry=new CoarseSessionCacheEntry<>(new SimpleSessionMetaData());
  CoarseSessionCacheEntry<L> existingEntry=this.sessionCache.getAdvancedCache().withFlags(Flag.FORCE_SYNCHRONOUS).putIfAbsent(id,entry);
  SessionAttributesCacheKey key=new SessionAttributesCacheKey(id);
  Map<String,Object> attributes=new HashMap<>();
  MutableCacheEntry<Map<String,Object>> attributesEntry=new MutableCacheEntry<>(attributes,Mutator.PASSIVE);
  MarshalledValue<Map<String,Object>,MarshallingContext> value=this.marshaller.write(attributes);
  if (existingEntry == null) {
    this.attributesCache.getAdvancedCache().withFlags(Flag.IGNORE_RETURN_VALUES).put(key,value);
    MutableCacheEntry<CoarseSessionCacheEntry<L>> sessionEntry=new MutableCacheEntry<>(entry,Mutator.PASSIVE);
    return new CoarseSessionEntry<>(sessionEntry,attributesEntry);
  }
  MutableCacheEntry<CoarseSessionCacheEntry<L>> sessionEntry=new MutableCacheEntry<>(existingEntry,new CacheEntryMutator<>(this.sessionCache,id,existingEntry));
  MarshalledValue<Map<String,Object>,MarshallingContext> existingValue=this.attributesCache.getAdvancedCache().withFlags(Flag.FORCE_SYNCHRONOUS).putIfAbsent(key,value);
  if (existingValue != null) {
    try {
      Map<String,Object> existingAttributes=this.marshaller.read(existingValue);
      MutableCacheEntry<Map<String,Object>> existingAttributesEntry=new MutableCacheEntry<>(existingAttributes,new CacheEntryMutator<>(this.attributesCache,key,existingValue));
      return new CoarseSessionEntry<>(sessionEntry,existingAttributesEntry);
    }
 catch (    InvalidSerializedFormException e) {
      InfinispanWebLogger.ROOT_LOGGER.failedToActivateSession(e,id);
      new CacheEntryMutator<>(this.attributesCache,key,value).mutate();
    }
  }
  return new CoarseSessionEntry<>(sessionEntry,attributesEntry);
}

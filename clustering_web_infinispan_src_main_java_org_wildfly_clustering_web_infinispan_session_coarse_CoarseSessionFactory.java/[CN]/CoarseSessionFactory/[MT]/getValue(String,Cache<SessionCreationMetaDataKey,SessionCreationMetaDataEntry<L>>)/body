{
  SessionCreationMetaDataKey creationMetaDataKey=new SessionCreationMetaDataKey(id);
  SessionCreationMetaDataEntry<L> creationMetaDataEntry=creationMetaDataCache.get(creationMetaDataKey);
  if (creationMetaDataEntry != null) {
    SessionAccessMetaDataKey accessMetaDataKey=new SessionAccessMetaDataKey(id);
    SessionAccessMetaData accessMetaData=this.accessMetaDataCache.get(accessMetaDataKey);
    if (accessMetaData != null) {
      SessionAttributesKey attributesKey=new SessionAttributesKey(id);
      MarshalledValue<Map<String,Object>,MarshallingContext> attributesValue=this.attributesCache.get(attributesKey);
      if (attributesValue != null) {
        try {
          Map<String,Object> attributes=this.marshaller.read(attributesValue);
          Mutator creationMetaDataMutator=new CacheEntryMutator<>(this.creationMetaDataCache,creationMetaDataKey,creationMetaDataEntry);
          Mutator accessMetaDataMutator=new CacheEntryMutator<>(this.accessMetaDataCache,accessMetaDataKey,accessMetaData);
          Mutator attributesMutator=new CacheEntryMutator<>(this.attributesCache,attributesKey,attributesValue);
          return new CoarseSessionEntry<>(new MutableCacheEntry<>(creationMetaDataEntry.getMetaData(),creationMetaDataMutator),new MutableCacheEntry<>(accessMetaData,accessMetaDataMutator),new MutableCacheEntry<>(attributes,attributesMutator),creationMetaDataEntry.getLocalContext());
        }
 catch (        InvalidSerializedFormException e) {
          InfinispanWebLogger.ROOT_LOGGER.failedToActivateSession(e,id);
          this.remove(id);
          return null;
        }
      }
      this.accessMetaDataCache.getAdvancedCache().withFlags(Flag.IGNORE_RETURN_VALUES).remove(accessMetaDataKey);
    }
    this.creationMetaDataCache.getAdvancedCache().withFlags(Flag.IGNORE_RETURN_VALUES,Flag.SKIP_LISTENER_NOTIFICATION).remove(creationMetaDataKey);
  }
  return null;
}

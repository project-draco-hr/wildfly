{
  for (  AttributeDefinition def : DeploymentAttributes.REPLACE_DEPLOYMENT_ATTRIBUTES.values()) {
    def.validateOperation(operation);
  }
  String name=DeploymentAttributes.REPLACE_DEPLOYMENT_ATTRIBUTES.get(NAME).resolveModelAttribute(context,operation).asString();
  String toReplace=DeploymentAttributes.REPLACE_DEPLOYMENT_ATTRIBUTES.get(TO_REPLACE).resolveModelAttribute(context,operation).asString();
  if (name.equals(toReplace)) {
    throw ServerMessages.MESSAGES.cannotReplaceDeployment(OPERATION_NAME,NAME,TO_REPLACE,DeploymentRedeployHandler.OPERATION_NAME,DeploymentFullReplaceHandler.OPERATION_NAME);
  }
  final PathElement deployPath=PathElement.pathElement(DEPLOYMENT,name);
  final PathElement replacePath=PathElement.pathElement(DEPLOYMENT,toReplace);
  final Resource root=context.readResource(PathAddress.EMPTY_ADDRESS);
  if (!root.hasChild(replacePath)) {
    throw ServerMessages.MESSAGES.noSuchDeployment(toReplace);
  }
  final ModelNode replaceNode=context.readResourceForUpdate(PathAddress.pathAddress(replacePath)).getModel();
  final String replacedName=DeploymentAttributes.REPLACE_DEPLOYMENT_ATTRIBUTES.get(RUNTIME_NAME).resolveModelAttribute(context,replaceNode).asString();
  ModelNode deployNode;
  String runtimeName;
  if (!root.hasChild(deployPath)) {
    if (!operation.hasDefined(CONTENT)) {
      throw ServerMessages.MESSAGES.noSuchDeployment(name);
    }
    final ModelNode content=operation.require(CONTENT);
    final ModelNode contentItemNode=content.require(0);
    if (contentItemNode.hasDefined(HASH)) {
      byte[] hash=contentItemNode.require(HASH).asBytes();
      addFromHash(hash);
    }
 else {
    }
    runtimeName=operation.hasDefined(RUNTIME_NAME) ? DeploymentAttributes.REPLACE_DEPLOYMENT_ATTRIBUTES.get(RUNTIME_NAME).resolveModelAttribute(context,operation).asString() : replacedName;
    final Resource deployResource=context.createResource(PathAddress.pathAddress(deployPath));
    deployNode=deployResource.getModel();
    deployNode.get(RUNTIME_NAME).set(runtimeName);
    deployNode.get(ModelDescriptionConstants.PERSISTENT).set(true);
    deployNode.get(CONTENT).set(content);
  }
 else {
    deployNode=context.readResourceForUpdate(PathAddress.pathAddress(deployPath)).getModel();
    if (ENABLED.resolveModelAttribute(context,deployNode).asBoolean()) {
      throw ServerMessages.MESSAGES.deploymentAlreadyStarted(toReplace);
    }
    runtimeName=deployNode.require(RUNTIME_NAME).asString();
  }
  deployNode.get(ENABLED.getName()).set(true);
  replaceNode.get(ENABLED.getName()).set(false);
  final DeploymentHandlerUtil.ContentItem[] contents=getContents(deployNode.require(CONTENT));
  DeploymentHandlerUtil.replace(context,replaceNode,runtimeName,name,replacedName,vaultReader,contents);
  context.completeStep();
}

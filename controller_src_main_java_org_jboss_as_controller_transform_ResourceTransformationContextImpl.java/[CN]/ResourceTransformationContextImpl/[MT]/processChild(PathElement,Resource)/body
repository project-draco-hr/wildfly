{
  final PathAddress childAddress=read.append(element);
  final TransformerEntry entry=resolveTransformerEntry(childAddress);
  final PathAddressTransformer path=entry.getPathTransformation();
  final PathAddress currentAddress=path.transform(element,new PathAddressTransformer.Builder(){
    @Override public PathAddress getOriginal(){
      return childAddress;
    }
    @Override public PathAddress getCurrent(){
      return current;
    }
    @Override public PathAddress getRemaining(){
      return PathAddress.EMPTY_ADDRESS.append(element);
    }
    @Override public PathAddress next(    PathElement... elements){
      return current.append(elements);
    }
  }
);
  final ResourceTransformer transformer=resolveTransformer(entry,childAddress);
  final ResourceTransformationContext childContext=new ResourceTransformationContextImpl(root,currentAddress,childAddress,originalModel);
  transformer.transformResource(childContext,currentAddress,child);
}

{
  Resource model=this.root;
  if (absoluteAddress.size() > 0) {
    final Iterator<PathElement> i=absoluteAddress.iterator();
    while (i.hasNext()) {
      final PathElement element=i.next();
      if (element.isMultiTarget()) {
        throw MESSAGES.cannotWriteTo("*");
      }
      if (!i.hasNext()) {
        if (model.hasChild(element)) {
          throw MESSAGES.duplicateResourceAddress(absoluteAddress);
        }
 else {
          model.registerChild(element,toAdd);
          model=toAdd;
        }
      }
 else {
        model=model.getChild(element);
        if (model == null) {
          PathAddress ancestor=PathAddress.EMPTY_ADDRESS;
          for (          PathElement pe : absoluteAddress) {
            ancestor=ancestor.append(pe);
            if (element.equals(pe)) {
              break;
            }
          }
          throw MESSAGES.resourceNotFound(ancestor,absoluteAddress);
        }
      }
    }
  }
 else {
    model.writeModel(toAdd.getModel());
  }
  return new ResourceTransformationContextImpl(root,absoluteAddress,read,originalModel);
}

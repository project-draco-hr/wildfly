def _set_tunables(self):
    if self.config.has_section('tunables'):
        if (not self.opts.plugopts):
            self.opts.plugopts = deque()
        for (opt, val) in self.config.items('tunables'):
            if (not (opt.split('.')[0] in self.disabled)):
                self.opts.plugopts.append(((opt + '=') + val))
    if self.opts.plugopts:
        opts = {}
        for opt in self.opts.plugopts:
            try:
                (opt, val) = opt.split('=')
            except:
                val = True
            else:
                if (val.lower() in ['off', 'disable', 'disabled', 'false']):
                    val = False
                else:
                    try:
                        val = int(val)
                    except:
                        pass
            try:
                (plug, opt) = opt.split('.')
            except:
                plug = opt
                opt = True
            try:
                opts[plug]
            except KeyError:
                opts[plug] = deque()
            opts[plug].append((opt, val))
        for (plugname, plug) in self.loaded_plugins:
            if (plugname in opts):
                for (opt, val) in opts[plugname]:
                    if (not plug.setOption(opt, val)):
                        self.soslog.error(('no such option "%s" for plugin (%s)' % (opt, plugname)))
                        self._exit(1)
                del opts[plugname]
        for plugname in opts.keys():
            self.soslog.error(('unable to set option for disabled or non-existing plugin (%s)' % plugname))

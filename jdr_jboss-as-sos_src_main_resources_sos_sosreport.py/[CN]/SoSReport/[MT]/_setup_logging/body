def _setup_logging(self):
    if (not sys.stdin.isatty()):
        self.opts.nocolors = True
        self.opts.batch = True
    self.soslog = logging.getLogger('sos')
    self.soslog.setLevel(logging.DEBUG)
    self.sos_log_file = self.get_temp_file()
    self.sos_log_file.close()
    flog = logging.FileHandler(self.sos_log_file.name)
    flog.setFormatter(logging.Formatter('%(asctime)s %(levelname)s: %(message)s'))
    flog.setLevel(logging.INFO)
    self.soslog.addHandler(flog)
    if (not self.opts.silent):
        console = logging.StreamHandler(sys.stderr)
        console.setFormatter(logging.Formatter('%(message)s'))
        if (self.opts.verbosity > 1):
            console.setLevel(logging.DEBUG)
        elif (self.opts.verbosity > 0):
            console.setLevel(logging.INFO)
        else:
            console.setLevel(logging.FATAL)
        self.soslog.addHandler(console)
    self.ui_log = logging.getLogger('sos.ui')
    self.ui_log.setLevel(logging.INFO)
    self.sos_ui_log_file = self.get_temp_file()
    self.sos_ui_log_file.close()
    ui_fhandler = logging.FileHandler(self.sos_ui_log_file.name)
    ui_fhandler.setFormatter(logging.Formatter('%(asctime)s %(levelname)s: %(message)s'))
    self.ui_log.addHandler(ui_fhandler)
    if (not self.opts.silent):
        ui_console = logging.StreamHandler(sys.stdout)
        ui_console.setFormatter(logging.Formatter('%(message)s'))
        ui_console.setLevel(logging.INFO)
        self.ui_log.addHandler(ui_console)
    if self.opts.profiler:
        self.proflog = logging.getLogger('sosprofile')
        self.proflog.setLevel(logging.DEBUG)
        self.sos_profile_log_file = self.get_temp_file()
        plog = logging.FileHandler(self.sos_profile_log_file.name)
        plog.setFormatter(logging.Formatter('%(message)s'))
        plog.setLevel(logging.DEBUG)
        self.proflog.addHandler(plog)

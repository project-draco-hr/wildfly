{
  expectHeader(input,ModelControllerProtocol.PARAM_INPUTSTREAM_INDEX);
  final int index=input.readInt();
  context.executeAsync(new ManagementRequestContext.AsyncTask<OperationExecutionContext>(){
    @Override public void execute(    final ManagementRequestContext<OperationExecutionContext> context) throws Exception {
      final OperationExecutionContext exec=context.getAttachment();
      final ManagementRequestHeader header=ManagementRequestHeader.class.cast(context.getRequestHeader());
      final ManagementResponseHeader response=new ManagementResponseHeader(header.getVersion(),header.getRequestId(),null);
      final InputStream is=exec.getOperation().getInputStreams().get(index);
      try {
        final ByteArrayOutputStream bout=copyStream(is);
        final FlushableDataOutput output=context.writeMessage(response);
        try {
          output.writeByte(ModelControllerProtocol.PARAM_INPUTSTREAM_LENGTH);
          output.writeInt(bout.size());
          output.writeByte(ModelControllerProtocol.PARAM_INPUTSTREAM_CONTENTS);
          output.write(bout.toByteArray());
          output.writeByte(ManagementProtocol.RESPONSE_END);
          output.close();
        }
  finally {
          StreamUtils.safeClose(output);
        }
      }
  finally {
        StreamUtils.safeClose(is);
      }
    }
  }
);
}

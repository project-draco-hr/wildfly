{
  try {
    IiopUrl parsedUrl=new IiopUrl(url);
    Vector addrs=parsedUrl.getAddresses();
    IiopUrl.Address addr;
    NamingException savedException=null;
    for (int i=0; i < addrs.size(); i++) {
      addr=(IiopUrl.Address)addrs.elementAt(i);
      try {
        if (defOrb != null) {
          try {
            String tmpUrl="corbaloc:iiop:" + addr.host + ":"+ addr.port+ "/NameService";
            if (debug) {
              System.err.println("Using url: " + tmpUrl);
            }
            org.omg.CORBA.Object rootCtx=defOrb.string_to_object(tmpUrl);
            setOrbAndRootContext(defOrb,rootCtx);
            return parsedUrl.getStringName();
          }
 catch (          Exception e) {
          }
        }
        if (debug) {
          System.err.println("Getting ORB for " + addr.host + " and port "+ addr.port);
        }
        ORB orb=CorbaUtils.getOrb(addr.host,addr.port,env);
        setOrbAndRootContext(orb,(String)null);
        return parsedUrl.getStringName();
      }
 catch (      NamingException ne) {
        savedException=ne;
      }
    }
    if (savedException != null) {
      throw savedException;
    }
 else {
      throw new ConfigurationException("Problem with URL: " + url);
    }
  }
 catch (  MalformedURLException e) {
    throw new ConfigurationException(e.getMessage());
  }
}

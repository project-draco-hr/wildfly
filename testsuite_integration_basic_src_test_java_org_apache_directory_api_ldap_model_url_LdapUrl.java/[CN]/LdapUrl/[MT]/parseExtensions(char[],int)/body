{
  int start=pos;
  boolean isCritical=false;
  boolean isNewExtension=true;
  boolean hasValue=false;
  String extension=null;
  String value=null;
  if (pos == chars.length) {
    return pos;
  }
  try {
    for (int i=pos; (i < chars.length); i++) {
      if (Chars.isCharASCII(chars,i,',')) {
        if (isNewExtension) {
          return -1;
        }
 else {
          if (extension == null) {
            extension=decode(new String(chars,start,i - start)).trim();
          }
 else {
            value=decode(new String(chars,start,i - start)).trim();
          }
          Extension ext=new Extension(isCritical,extension,value);
          extensionList.add(ext);
          isNewExtension=true;
          hasValue=false;
          isCritical=false;
          start=i + 1;
          extension=null;
          value=null;
        }
      }
 else       if (Chars.isCharASCII(chars,i,'=')) {
        if (hasValue) {
          continue;
        }
        extension=decode(new String(chars,start,i - start)).trim();
        if (extension.length() == 0) {
          return -1;
        }
        hasValue=true;
        start=i + 1;
      }
 else       if (Chars.isCharASCII(chars,i,'!')) {
        if (hasValue) {
          continue;
        }
        if (!isNewExtension) {
          return -1;
        }
        isCritical=true;
        start++;
      }
 else {
        isNewExtension=false;
      }
    }
    if (extension == null) {
      extension=decode(new String(chars,start,chars.length - start)).trim();
    }
 else {
      value=decode(new String(chars,start,chars.length - start)).trim();
    }
    Extension ext=new Extension(isCritical,extension,value);
    extensionList.add(ext);
    return chars.length;
  }
 catch (  LdapUriException ue) {
    return -1;
  }
}

{
  final RuntimeOperationContext runtimeContext=context.getRuntimeContext();
  final String name=operation.require(DRIVER_NAME).asString();
  if (runtimeContext != null) {
    runtimeContext.setRuntimeTask(new RuntimeTask(){
      @Override public void execute(      RuntimeTaskContext context) throws OperationFailedException {
        ServiceController<?> sc=context.getServiceRegistry().getRequiredService(ConnectorServices.JDBC_DRIVER_REGISTRY_SERVICE);
        DriverRegistry driverRegistry=DriverRegistry.class.cast(sc.getValue());
        ModelNode result=new ModelNode();
        InstalledDriver driver=driverRegistry.getInstalledDriver(name);
        ModelNode driverNode=new ModelNode();
        driverNode.get(DRIVER_NAME).set(driver.getDriverName());
        if (driver.isFromDeployment()) {
          driverNode.get(DEPLOYMENT_NAME).set(driver.getDriverName());
          driverNode.get(DRIVER_MODULE_NAME);
          driverNode.get(MODULE_SLOT);
        }
 else {
          driverNode.get(DEPLOYMENT_NAME);
          driverNode.get(DRIVER_MODULE_NAME).set(driver.getModuleName().getName());
          driverNode.get(MODULE_SLOT).set(driver.getModuleName().getSlot());
        }
        driverNode.get(DRIVER_CLASS_NAME).set(driver.getDriverClassName());
        driverNode.get(DRIVER_XA_DATASOURCE_CLASS_NAME).set(driver.getXaDataSourceClassName());
        driverNode.get(DRIVER_MAJOR_VERSION).set(driver.getMajorVersion());
        driverNode.get(DRIVER_MINOR_VERSION).set(driver.getMinorVersion());
        driverNode.get(JDBC_COMPLIANT).set(driver.isJdbcCompliant());
        result.add(driverNode);
        resultHandler.handleResultFragment(ResultHandler.EMPTY_LOCATION,result);
      }
    }
);
  }
  resultHandler.handleResultComplete();
  return new BasicOperationResult();
}

{
  validator.validate(operation);
  final String name=operation.require(DRIVER_NAME.getName()).asString();
  if (context.isNormalServer()) {
    context.addStep(new OperationStepHandler(){
      @Override public void execute(      final OperationContext context,      final ModelNode operation) throws OperationFailedException {
        Resource rootNode=context.readResourceFromRoot(PathAddress.EMPTY_ADDRESS,false);
        ModelNode rootModel=rootNode.getModel();
        String profile=rootModel.hasDefined("profile-name") ? rootModel.get("profile-name").asString() : null;
        ServiceController<?> sc=context.getServiceRegistry(false).getRequiredService(ConnectorServices.JDBC_DRIVER_REGISTRY_SERVICE);
        DriverRegistry driverRegistry=DriverRegistry.class.cast(sc.getValue());
        ModelNode result=new ModelNode();
        InstalledDriver driver=driverRegistry.getInstalledDriver(name,profile);
        ModelNode driverNode=new ModelNode();
        driverNode.get(DRIVER_NAME.getName()).set(driver.getDriverName());
        if (driver.isFromDeployment()) {
          driverNode.get(DEPLOYMENT_NAME.getName()).set(driver.getDriverName());
          driverNode.get(DRIVER_MODULE_NAME.getName());
          driverNode.get(MODULE_SLOT.getName());
          driverNode.get(DRIVER_XA_DATASOURCE_CLASS_NAME.getName());
        }
 else {
          driverNode.get(DEPLOYMENT_NAME.getName());
          driverNode.get(DRIVER_MODULE_NAME.getName()).set(driver.getModuleName().getName());
          driverNode.get(MODULE_SLOT.getName()).set(driver.getModuleName() != null ? driver.getModuleName().getSlot() : "");
          driverNode.get(DRIVER_XA_DATASOURCE_CLASS_NAME.getName()).set(driver.getXaDataSourceClassName());
        }
        driverNode.get(DRIVER_CLASS_NAME.getName()).set(driver.getDriverClassName());
        driverNode.get(DRIVER_MAJOR_VERSION.getName()).set(driver.getMajorVersion());
        driverNode.get(DRIVER_MINOR_VERSION.getName()).set(driver.getMinorVersion());
        driverNode.get(JDBC_COMPLIANT.getName()).set(driver.isJdbcCompliant());
        result.add(driverNode);
        context.getResult().set(result);
        context.stepCompleted();
      }
    }
,OperationContext.Stage.RUNTIME);
  }
  context.stepCompleted();
}

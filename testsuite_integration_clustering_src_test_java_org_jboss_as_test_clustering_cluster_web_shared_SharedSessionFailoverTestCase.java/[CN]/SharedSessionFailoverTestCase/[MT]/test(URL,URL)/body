{
  URI uri11=SimpleServlet.createURI(baseURL1.toURI().resolve(MODULE_1).toURL());
  URI uri12=SimpleServlet.createURI(baseURL1.toURI().resolve(MODULE_2).toURL());
  URI uri21=SimpleServlet.createURI(baseURL2.toURI().resolve(MODULE_1).toURL());
  URI uri22=SimpleServlet.createURI(baseURL2.toURI().resolve(MODULE_2).toURL());
  HttpClient client=HttpClients.createDefault();
  try {
    HttpResponse response=client.execute(new HttpGet(uri11));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertEquals(1,Integer.parseInt(response.getFirstHeader(SimpleServlet.VALUE_HEADER).getValue()));
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    response=client.execute(new HttpGet(uri12));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertEquals(2,Integer.parseInt(response.getFirstHeader(SimpleServlet.VALUE_HEADER).getValue()));
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    response=client.execute(new HttpGet(uri21));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertEquals(3,Integer.parseInt(response.getFirstHeader(SimpleServlet.VALUE_HEADER).getValue()));
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    response=client.execute(new HttpGet(uri22));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertEquals(4,Integer.parseInt(response.getFirstHeader(SimpleServlet.VALUE_HEADER).getValue()));
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
  }
  finally {
    HttpClientUtils.closeQuietly(client);
  }
}

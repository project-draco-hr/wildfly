{
  InitialContext ctx=new InitialContext();
  String lookupStr="java:module/" + StatefulBean.class.getSimpleName() + "!"+ LocalInterface.class.getName();
  LocalInterface stateful1=(LocalInterface)ctx.lookup(lookupStr);
  LocalInterface stateful2=(LocalInterface)ctx.lookup(lookupStr);
  lookupStr="java:module/" + StatefulClusteredBean.class.getSimpleName() + "!"+ RemoteInterface.class.getName();
  RemoteInterface statefulClustered1=(RemoteInterface)ctx.lookup(lookupStr);
  RemoteInterface statefulClustered2=(RemoteInterface)ctx.lookup(lookupStr);
  lookupStr="java:module/" + StatelessBean.class.getSimpleName() + "!"+ LocalInterface.class.getName();
  LocalInterface stateless1=(LocalInterface)ctx.lookup(lookupStr);
  LocalInterface stateless2=(LocalInterface)ctx.lookup(lookupStr);
  lookupStr="java:module/" + StatelessClusteredBean.class.getSimpleName() + "!"+ RemoteInterface.class.getName();
  RemoteInterface statelessClustered1=(RemoteInterface)ctx.lookup(lookupStr);
  RemoteInterface statelessClustered2=(RemoteInterface)ctx.lookup(lookupStr);
  lookupStr="java:module/" + ServiceBean.class.getSimpleName() + "!"+ ServiceLocalInterface.class.getName();
  ServiceLocalInterface service1=(ServiceLocalInterface)ctx.lookup(lookupStr);
  ServiceLocalInterface service2=(ServiceLocalInterface)ctx.lookup(lookupStr);
  stateful1.test();
  stateful2.test();
  statefulClustered1.test();
  statefulClustered2.test();
  stateless1.test();
  stateless2.test();
  statelessClustered1.test();
  statelessClustered2.test();
  service1.test();
  service2.test();
  assertFalse(stateful1.hashCode() == stateful2.hashCode());
  assertFalse(statefulClustered1.hashCode() == statefulClustered2.hashCode());
  assertTrue(stateless1.hashCode() == stateless2.hashCode());
  assertTrue(statelessClustered1.hashCode() == statelessClustered2.hashCode());
  assertTrue(service1.hashCode() == service2.hashCode());
  assertFalse(stateful1.equals(stateful2));
  assertFalse(statefulClustered1.equals(statefulClustered2));
  assertTrue(stateless1.equals(stateless2));
  assertTrue(statelessClustered1.equals(statelessClustered2));
  assertTrue(service1.equals(service2));
}

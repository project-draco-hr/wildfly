{
  this.contentRepository=contentRepository;
  this.remoteRepository=remoteRepository;
  final ParametersValidator contentValidator=new ParametersValidator();
  contentValidator.registerValidator(HASH,new ModelTypeValidator(ModelType.BYTES,true));
  contentValidator.registerValidator(INPUT_STREAM_INDEX,new ModelTypeValidator(ModelType.INT,true));
  contentValidator.registerValidator(BYTES,new ModelTypeValidator(ModelType.BYTES,true));
  contentValidator.registerValidator(URL,new StringLengthValidator(1,true));
  this.validator.registerValidator(CONTENT,chain(new ListValidator(new ParametersOfValidator(contentValidator)),new AbstractParameterValidator(){
    @Override public void validateParameter(    String parameterName,    ModelNode value) throws OperationFailedException {
      validateOnePieceOfContent(value);
    }
  }
));
  this.managedContentValidator.registerValidator(HASH,new ModelTypeValidator(ModelType.BYTES));
}

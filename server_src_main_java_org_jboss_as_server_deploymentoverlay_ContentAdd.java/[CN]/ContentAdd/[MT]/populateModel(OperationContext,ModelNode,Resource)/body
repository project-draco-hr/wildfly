{
  final PathAddress address=PathAddress.pathAddress(operation.get(OP_ADDR));
  final String path=address.getLastElement().getValue();
  final String name=address.getElement(address.size() - 2).getValue();
  final ModelNode content=operation.get(CONTENT);
  final byte[] hash;
  if (content.hasDefined(HASH)) {
    managedContentValidator.validate(content);
    hash=content.require(HASH).asBytes();
    addFromHash(hash,name,path,context);
  }
 else {
    hash=addFromContentAdditionParameter(context,content);
    final ModelNode slave=operation.clone();
    slave.get(CONTENT).clear();
    slave.get(CONTENT).get(HASH).set(hash);
    List<DomainOperationTransformer> transformers=context.getAttachment(OperationAttachments.SLAVE_SERVER_OPERATION_TRANSFORMERS);
    if (transformers == null) {
      context.attach(OperationAttachments.SLAVE_SERVER_OPERATION_TRANSFORMERS,transformers=new ArrayList<DomainOperationTransformer>());
    }
    transformers.add(new CompositeOperationAwareTransformer(slave));
  }
  ModelNode modified=operation.clone();
  modified.get(CONTENT).clone();
  modified.get(CONTENT).set(hash);
  for (  AttributeDefinition attr : ContentDefinition.attributes()) {
    attr.validateAndSet(modified,resource.getModel());
  }
  if (!contentRepository.syncContent(hash)) {
    throw ServerLogger.ROOT_LOGGER.noSuchDeploymentContent(Arrays.toString(hash));
  }
}

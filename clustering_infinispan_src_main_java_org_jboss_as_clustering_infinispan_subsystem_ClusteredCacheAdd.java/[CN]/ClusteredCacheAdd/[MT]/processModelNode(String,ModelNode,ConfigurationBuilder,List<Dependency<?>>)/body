{
  super.processModelNode(containerName,cache,builder,dependencies);
  if (CacheMode.valueOf(cache.get(ModelKeys.MODE).asString()).isSynchronous()) {
    if (cache.hasDefined(ModelKeys.REMOTE_TIMEOUT)) {
      builder.clustering().sync().replTimeout(cache.get(ModelKeys.REMOTE_TIMEOUT).asLong());
    }
  }
 else {
    if (cache.hasDefined(ModelKeys.QUEUE_SIZE)) {
      builder.clustering().async().replQueueMaxElements(cache.get(ModelKeys.QUEUE_SIZE).asInt());
    }
    if (cache.hasDefined(ModelKeys.QUEUE_FLUSH_INTERVAL)) {
      builder.clustering().async().replQueueInterval(cache.get(ModelKeys.QUEUE_FLUSH_INTERVAL).asLong());
    }
  }
}

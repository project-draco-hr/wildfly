{
  int maxThreads=this.definition.getMaxThreads().getDefinition().resolveModelAttribute(context,model).asInt();
  long keepAliveTime=this.definition.getKeepAliveTime().getDefinition().resolveModelAttribute(context,model).asLong();
  ThreadPoolExecutorFactory<?> factory=new ThreadPoolExecutorFactory<ScheduledExecutorService>(){
    @Override public ScheduledExecutorService createExecutor(    ThreadFactory factory){
      ScheduledThreadPoolExecutor executor=new ScheduledThreadPoolExecutor(maxThreads,factory);
      executor.setKeepAliveTime(keepAliveTime,TimeUnit.MILLISECONDS);
      executor.setRemoveOnCancelPolicy(true);
      executor.setExecuteExistingDelayedTasksAfterShutdownPolicy(false);
      return executor;
    }
    @Override public void validate(){
    }
  }
;
  this.builder.threadPoolFactory(factory);
  return this;
}

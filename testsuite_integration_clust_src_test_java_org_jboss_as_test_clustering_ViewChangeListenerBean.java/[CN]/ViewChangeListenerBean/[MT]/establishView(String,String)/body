{
  Set<String> expectedMembers=new TreeSet<String>();
  if (names != null) {
    for (    String name : names) {
      expectedMembers.add(name + "/" + cluster);
    }
  }
  ServiceRegistry registry=ServiceContainerHelper.getCurrentServiceContainer();
  ServiceController<?> controller=registry.getService(ServiceName.JBOSS.append("infinispan",cluster));
  if (controller == null) {
    throw new IllegalStateException(String.format("Failed to locate service for cluster '%s'",cluster));
  }
  try {
    EmbeddedCacheManager manager=ServiceContainerHelper.getValue(controller,EmbeddedCacheManager.class);
    manager.addListener(this);
    try {
      long start=System.currentTimeMillis();
      long now=start;
      long timeout=start + TIMEOUT;
synchronized (this) {
        Set<String> members=this.getMembers(manager);
        while (!expectedMembers.equals(members)) {
          System.out.println(String.format("%s != %s, waiting for a view change event...",expectedMembers,members));
          this.wait(timeout - now);
          now=System.currentTimeMillis();
          if (now >= timeout) {
            throw new InterruptedException(String.format("Cluster '%s' failed to establish view %s within %d ms.  Current view is: %s",cluster,expectedMembers,TIMEOUT,members));
          }
          members=this.getMembers(manager);
        }
        System.out.println(String.format("Cluster '%s' successfully established view %s within %d ms.",cluster,expectedMembers,now - start));
      }
    }
  finally {
      manager.removeListener(this);
    }
  }
 catch (  StartException e) {
    throw new IllegalStateException(e);
  }
}

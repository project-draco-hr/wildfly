{
  final InvocationType invocationType=context.getPrivateData(InvocationType.class);
  if (invocationType == null) {
    return context.proceed();
  }
switch (invocationType) {
case TIMER:
case ASYNC:
case REMOTE:
case MESSAGE_DELIVERY:
    try {
      for (      SetupAction action : actions) {
        action.setup(Collections.<String,Object>emptyMap());
      }
      return context.proceed();
    }
  finally {
      final ListIterator<SetupAction> iterator=actions.listIterator(actions.size());
      Throwable error=null;
      while (iterator.hasPrevious()) {
        SetupAction action=iterator.previous();
        try {
          action.teardown(Collections.<String,Object>emptyMap());
        }
 catch (        Throwable e) {
          error=e;
        }
      }
      if (error != null) {
        throw new RuntimeException(error);
      }
    }
default :
  return context.proceed();
}
}

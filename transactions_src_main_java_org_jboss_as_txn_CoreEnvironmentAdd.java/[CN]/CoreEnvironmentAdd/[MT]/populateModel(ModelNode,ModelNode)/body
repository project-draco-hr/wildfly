{
  NODE_IDENTIFIER.validateAndSet(operation,coreEnvModel);
  PATH.validateAndSet(operation,coreEnvModel);
  RELATIVE_TO.validateAndSet(operation,coreEnvModel);
  if (operation.hasDefined(PROCESS_ID_UUID.getName()) && operation.get(PROCESS_ID_UUID.getName()).asBoolean()) {
    PROCESS_ID_UUID.validateAndSet(operation,coreEnvModel);
    if (operation.hasDefined(PROCESS_ID_SOCKET_BINDING.getName())) {
      throw new OperationFailedException(new ModelNode().set(String.format("%s must be undefined if %s is 'true'.",PROCESS_ID_SOCKET_BINDING.getName(),PROCESS_ID_UUID.getName())));
    }
 else     if (operation.hasDefined(PROCESS_ID_SOCKET_MAX_PORTS.getName())) {
      throw new OperationFailedException(new ModelNode().set(String.format("%s must be undefined if %s is 'true'.",PROCESS_ID_SOCKET_MAX_PORTS.getName(),PROCESS_ID_UUID.getName())));
    }
    coreEnvModel.get(PROCESS_ID_SOCKET_BINDING.getName());
    coreEnvModel.get(PROCESS_ID_SOCKET_MAX_PORTS.getName());
  }
 else   if (operation.hasDefined(PROCESS_ID_SOCKET_BINDING.getName())) {
    PROCESS_ID_SOCKET_BINDING.validateAndSet(operation,coreEnvModel);
    PROCESS_ID_SOCKET_MAX_PORTS.validateAndSet(operation,coreEnvModel);
    coreEnvModel.get(PROCESS_ID_UUID.getName()).set(false);
  }
 else   if (operation.hasDefined(PROCESS_ID_SOCKET_MAX_PORTS.getName())) {
    throw new OperationFailedException(new ModelNode().set(String.format("%s must be defined if %s is defined.",PROCESS_ID_SOCKET_BINDING.getName(),PROCESS_ID_SOCKET_MAX_PORTS.getName())));
  }
 else {
    throw new OperationFailedException(new ModelNode().set(String.format("Either %s must be 'true' or  %s must be defined.",PROCESS_ID_UUID.getName(),PROCESS_ID_SOCKET_BINDING.getName())));
  }
}

{
  final String name=beanClass.getSimpleName();
  final ModelNode address=componentAddress(EjbJarRuntimeResourcesTestCase.BASE_ADDRESS,type,name).toModelNode();
  address.protect();
{
    final ModelNode result=executeOperation(managementClient,ModelDescriptionConstants.READ_RESOURCE_OPERATION,address);
    assertEquals(0L,result.get("execution-time").asLong());
    assertEquals(0L,result.get("invocations").asLong());
    assertEquals(0L,result.get("peak-concurrent-invocations").asLong());
    assertEquals(0L,result.get("wait-time").asLong());
    assertEquals(0L,result.get("methods").asInt());
    if (type.equals(EJBComponentType.STATEFUL)) {
      assertEquals(0L,result.get("cache-size").asLong());
      assertEquals(0L,result.get("passivated-count").asLong());
      assertEquals(0L,result.get("total-size").asLong());
    }
  }
  final BusinessInterface bean=(BusinessInterface)context.lookup("ejb:/" + MODULE_NAME + "//"+ name+ "!"+ BusinessInterface.class.getName()+ (type == EJBComponentType.STATEFUL ? "?stateful" : ""));
  bean.doIt();
{
    ModelNode result=executeOperation(managementClient,ModelDescriptionConstants.READ_RESOURCE_OPERATION,address);
    assertTrue(result.get("execution-time").asLong() >= 50L);
    assertEquals(1L,result.get("invocations").asLong());
    assertEquals(1L,result.get("peak-concurrent-invocations").asLong());
    assertTrue(result.get("wait-time").asLong() >= 0L);
    assertEquals(1L,result.get("methods").asInt());
    final List<Property> methods=result.get("methods").asPropertyList();
    assertEquals("doIt",methods.get(0).getName());
    final ModelNode invocationValues=methods.get(0).getValue();
    assertTrue(invocationValues.get("execution-time").asLong() >= 50L);
    assertEquals(1L,invocationValues.get("invocations").asLong());
    assertTrue(invocationValues.get("wait-time").asLong() >= 0L);
    if (type.equals(EJBComponentType.STATEFUL)) {
      assertEquals(1L,result.get("cache-size").asLong());
      assertEquals(0L,result.get("passivated-count").asLong());
      assertEquals(1L,result.get("total-size").asLong());
      BusinessInterface bean2=(BusinessInterface)context.lookup("ejb:/" + MODULE_NAME + "//"+ name+ "!"+ BusinessInterface.class.getName()+ (type == EJBComponentType.STATEFUL ? "?stateful" : ""));
      bean2.doIt();
      Thread.sleep(500);
      result=executeOperation(managementClient,ModelDescriptionConstants.READ_RESOURCE_OPERATION,address);
      assertEquals(1L,result.get("cache-size").asLong());
      assertEquals(1L,result.get("passivated-count").asLong());
      assertEquals(2L,result.get("total-size").asLong());
      bean.remove();
      bean2.remove();
      result=executeOperation(managementClient,ModelDescriptionConstants.READ_RESOURCE_OPERATION,address);
      assertEquals(0L,result.get("cache-size").asLong());
      assertEquals(0L,result.get("passivated-count").asLong());
      assertEquals(0L,result.get("total-size").asLong());
    }
  }
}

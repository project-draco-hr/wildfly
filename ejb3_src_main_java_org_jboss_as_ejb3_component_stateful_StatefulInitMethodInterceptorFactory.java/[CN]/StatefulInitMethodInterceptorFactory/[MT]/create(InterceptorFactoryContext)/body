{
  final Method method=SessionBeanHomeInterceptorFactory.INIT_METHOD.get();
  final Object[] params=SessionBeanHomeInterceptorFactory.INIT_PARAMETERS.get();
  SessionBeanHomeInterceptorFactory.INIT_METHOD.remove();
  SessionBeanHomeInterceptorFactory.INIT_PARAMETERS.remove();
  return new AbstractEJBInterceptor(){
    @Override public Object processInvocation(    final InterceptorContext context) throws Exception {
      if (method != null) {
        final InvocationType invocationType=context.getPrivateData(InvocationType.class);
        try {
          context.putPrivateData(InvocationType.class,InvocationType.SFSB_INIT_METHOD);
          method.invoke(context.getTarget(),params);
        }
 catch (        InvocationTargetException e) {
          if (CreateException.class.isAssignableFrom(e.getCause().getClass())) {
            EjbExceptionTransformingInterceptorFactories.setCreateException((CreateException)e.getCause());
          }
          throw Interceptors.rethrow(e.getCause());
        }
 finally {
          context.putPrivateData(InvocationType.class,invocationType);
        }
      }
      return context.proceed();
    }
  }
;
}

{
  String name=null;
  String aliases=null;
  for (int i=0; i < reader.getAttributeCount(); i++) {
switch (reader.getAttributeLocalName(i)) {
case Constants.NAME:
      name=reader.getAttributeValue(i);
    break;
case Constants.ALIAS:
  aliases=reader.getAttributeValue(i);
break;
default :
throw ParseUtils.unexpectedAttribute(reader,i);
}
}
if (name == null) {
throw ParseUtils.missingRequired(reader,Constants.NAME);
}
PathAddress address=parentAddress.append(Constants.HOST,name);
ModelNode op=Util.createAddOperation(address);
if (aliases != null) {
for (String alias : aliases.split(",")) {
ALIAS.parseAndAddParameterElement(alias,op,reader);
}
}
list.add(op);
while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
switch (reader.getLocalName()) {
case Constants.HANDLERS:
{
HandlerFactory.parseHandlers(reader,address,list);
break;
}
case Constants.LOCATION:
{
LocationDefinition.INSTANCE.parse(reader,address,list);
break;
}
default :
{
throw unexpectedElement(reader);
}
}
}
}

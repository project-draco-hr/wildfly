{
  this.properties=properties;
  this.fieldType=fieldType;
  int propNum=properties.length;
  columnNames=new String[propNum];
  javaTypes=new Class[propNum];
  jdbcTypes=new int[propNum];
  sqlTypes=new String[propNum];
  notNull=new boolean[propNum];
  resultSetReaders=new JDBCResultSetReader[propNum];
  paramSetters=new JDBCParameterSetter[propNum];
  for (int i=0; i < properties.length; i++) {
    JDBCTypeComplexProperty property=properties[i];
    columnNames[i]=property.getColumnName();
    javaTypes[i]=property.getJavaType();
    jdbcTypes[i]=property.getJDBCType();
    sqlTypes[i]=property.getSQLType();
    notNull[i]=property.isNotNull();
    resultSetReaders[i]=property.getResulSetReader();
    paramSetters[i]=property.getParameterSetter();
    propertiesByName.put(property.getPropertyName(),property);
  }
}

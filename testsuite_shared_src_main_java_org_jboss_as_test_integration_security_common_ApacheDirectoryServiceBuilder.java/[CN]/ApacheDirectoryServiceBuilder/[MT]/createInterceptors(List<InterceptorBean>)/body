{
  List<Interceptor> interceptors=new ArrayList<Interceptor>(interceptorBeans.size());
  Set<InterceptorBean> orderedInterceptorBeans=new TreeSet<InterceptorBean>();
  for (  InterceptorBean interceptorBean : interceptorBeans) {
    if (interceptorBean.isEnabled()) {
      orderedInterceptorBeans.add(interceptorBean);
    }
  }
  for (  InterceptorBean interceptorBean : orderedInterceptorBeans) {
    try {
      LOG.debug("loading the interceptor class and instantiating: " + interceptorBean.getInterceptorClassName());
      Interceptor interceptor=(Interceptor)Class.forName(interceptorBean.getInterceptorClassName()).newInstance();
      if (interceptorBean instanceof AuthenticationInterceptorBean) {
        Authenticator[] authenticators=createAuthenticators(((AuthenticationInterceptorBean)interceptorBean).getAuthenticators());
        ((AuthenticationInterceptor)interceptor).setAuthenticators(authenticators);
        List<PasswordPolicyBean> ppolicyBeans=((AuthenticationInterceptorBean)interceptorBean).getPasswordPolicies();
        PpolicyConfigContainer ppolicyContainer=new PpolicyConfigContainer();
        for (        PasswordPolicyBean ppolicyBean : ppolicyBeans) {
          PasswordPolicyConfiguration ppolicyConfig=createPwdPolicyConfig(ppolicyBean);
          if (ppolicyConfig != null) {
            if (ppolicyBean.getPwdId().equalsIgnoreCase("default")) {
              ppolicyContainer.setDefaultPolicy(ppolicyConfig);
            }
 else {
              ppolicyContainer.addPolicy(ppolicyBean.getDn(),ppolicyConfig);
            }
          }
        }
        ((AuthenticationInterceptor)interceptor).setPwdPolicies(ppolicyContainer);
      }
      interceptors.add(interceptor);
    }
 catch (    Exception e) {
      e.printStackTrace();
      String message="Cannot initialize the " + interceptorBean.getInterceptorClassName() + ", error : "+ e;
      LOG.error(message);
      throw new ConfigurationException(message);
    }
  }
  return interceptors;
}

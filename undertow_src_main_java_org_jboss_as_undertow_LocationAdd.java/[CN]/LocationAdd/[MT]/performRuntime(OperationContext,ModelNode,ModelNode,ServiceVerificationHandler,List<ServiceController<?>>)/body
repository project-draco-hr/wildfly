{
  final PathAddress address=PathAddress.pathAddress(operation.get(OP_ADDR));
  final PathAddress hostAddress=address.subAddress(0,address.size() - 1);
  final PathAddress serverAddress=hostAddress.subAddress(0,hostAddress.size() - 1);
  final String name=address.getLastElement().getValue();
  ModelNode fullModel=Resource.Tools.readModel(context.readResource(PathAddress.EMPTY_ADDRESS));
  HttpHandler handlerChain=HandlerFactory.getHandlerChain(fullModel,context);
  final LocationService service=new LocationService(name,handlerChain);
  final String serverName=serverAddress.getLastElement().getValue();
  final String hostName=hostAddress.getLastElement().getValue();
  final ServiceName hostServiceName=UndertowService.virtualHostName(serverName,hostName);
  final ServiceName serviceName=UndertowService.locationServiceName(serverName,hostName,name);
  final ServiceBuilder<LocationService> builder=context.getServiceTarget().addService(serviceName,service).addDependency(hostServiceName,Host.class,service.getHost()).addAliases(WebHost.SERVICE_NAME.append(name));
  builder.setInitialMode(ServiceController.Mode.ACTIVE);
  final ServiceController<LocationService> serviceController=builder.install();
  if (newControllers != null) {
    newControllers.add(serviceController);
  }
}

{
  context.removeService(ProtocolDefaultsService.SERVICE_NAME);
  String defaultStack=ModelNodes.asString(JGroupsSubsystemResourceDefinition.DEFAULT_STACK.resolveModelAttribute(context,model));
  if ((defaultStack != null) && !defaultStack.equals(ChannelFactoryService.DEFAULT)) {
    context.removeService(ChannelFactoryService.getServiceName(ChannelFactoryService.DEFAULT));
  }
  String defaultChannel=ModelNodes.asString(JGroupsSubsystemResourceDefinition.DEFAULT_CHANNEL.resolveModelAttribute(context,model));
  if ((defaultChannel != null) && !defaultChannel.equals(ChannelServiceNameFactory.DEFAULT_CHANNEL)) {
    for (    ChannelServiceNameFactory factory : ChannelServiceName.values()) {
      context.removeService(factory.getServiceName());
    }
    for (    GroupServiceInstaller installer : ServiceLoader.load(ClusteredGroupServiceInstaller.class,ClusteredGroupServiceInstaller.class.getClassLoader())) {
      for (      ServiceName name : installer.getServiceNames(ChannelServiceNameFactory.DEFAULT_CHANNEL)) {
        context.removeService(name);
      }
    }
  }
}

{
  context.removeService(ProtocolDefaultsBuilder.SERVICE_NAME);
  String defaultStack=ModelNodes.asString(JGroupsSubsystemResourceDefinition.DEFAULT_STACK.resolveModelAttribute(context,model));
  if ((defaultStack != null) && !defaultStack.equals(ProtocolStackServiceNameFactory.DEFAULT_STACK)) {
    context.removeService(ProtocolStackServiceName.CHANNEL_FACTORY.getServiceName());
  }
  String defaultChannel=ModelNodes.asString(JGroupsSubsystemResourceDefinition.DEFAULT_CHANNEL.resolveModelAttribute(context,model));
  if ((defaultChannel != null) && !defaultChannel.equals(ChannelServiceNameFactory.DEFAULT_CHANNEL)) {
    for (    GroupServiceInstaller installer : ServiceLoader.load(ClusteredGroupServiceInstaller.class,ClusteredGroupServiceInstaller.class.getClassLoader())) {
      for (      ServiceName name : installer.getServiceNames(ChannelServiceNameFactory.DEFAULT_CHANNEL)) {
        context.removeService(name);
      }
    }
    context.removeService(JGroupsBindingFactory.createChannelFactoryBinding(ChannelServiceNameFactory.DEFAULT_CHANNEL).getBinderServiceName());
    context.removeService(ProtocolStackServiceName.CHANNEL_FACTORY.getServiceName(ChannelServiceNameFactory.DEFAULT_CHANNEL));
    context.removeService(JGroupsBindingFactory.createChannelBinding(ChannelServiceNameFactory.DEFAULT_CHANNEL).getBinderServiceName());
    for (    ChannelServiceNameFactory factory : ChannelServiceName.values()) {
      context.removeService(factory.getServiceName());
    }
  }
}

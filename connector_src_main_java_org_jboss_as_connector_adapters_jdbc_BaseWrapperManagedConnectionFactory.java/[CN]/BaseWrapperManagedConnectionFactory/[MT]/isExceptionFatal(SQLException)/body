{
  try {
    if (exceptionSorter != null)     return exceptionSorter.isExceptionFatal(e);
    if (exceptionSorterClassName != null) {
      try {
        ClassLoader cl=Thread.currentThread().getContextClassLoader();
        Class<?> clazz=cl.loadClass(exceptionSorterClassName);
        exceptionSorter=(ExceptionSorter)clazz.newInstance();
        Injection injection=new Injection();
        for (        Entry<Object,Object> prop : exceptionSorterProps.entrySet()) {
          injection.inject(exceptionSorter,(String)prop.getKey(),(String)prop.getValue());
        }
        return exceptionSorter.isExceptionFatal(e);
      }
 catch (      Exception e2) {
        log.warn("exception trying to create exception sorter (disabling):",e2);
        exceptionSorter=new NullExceptionSorter();
      }
    }
  }
 catch (  Throwable t) {
    log.warn("Error checking exception fatality: ",t);
  }
  return false;
}

{
  if (view.created == null) {
    if (log.isTraceEnabled()) {
      log.trace("no rows to insert");
    }
    return;
  }
  Connection con=null;
  PreparedStatement ps=null;
  try {
    if (log.isDebugEnabled()) {
      log.debug("executing : " + insertSql);
    }
    con=ds.getConnection();
    ps=con.prepareStatement(insertSql);
    int batchCount=0;
    while (view.created != null) {
      RelationKeys keys=view.created;
      JDBCCMPFieldBridge2[] keyFields=(JDBCCMPFieldBridge2[])leftField.getTableKeyFields();
      int paramInd=1;
      for (int fInd=0; fInd < keyFields.length; ++fInd) {
        JDBCCMPFieldBridge2 field=keyFields[fInd];
        Object fieldValue=field.getPrimaryKeyValue(keys.leftKey);
        paramInd=field.setArgumentParameters(ps,paramInd,fieldValue);
      }
      keyFields=(JDBCCMPFieldBridge2[])rightField.getTableKeyFields();
      for (int fInd=0; fInd < keyFields.length; ++fInd) {
        JDBCCMPFieldBridge2 field=keyFields[fInd];
        Object fieldValue=field.getPrimaryKeyValue(keys.rightKey);
        paramInd=field.setArgumentParameters(ps,paramInd,fieldValue);
      }
      ps.addBatch();
      ++batchCount;
      keys.dereference();
    }
    ps.executeBatch();
    if (log.isTraceEnabled()) {
      log.trace("inserted rows: " + batchCount);
    }
  }
 catch (  SQLException e) {
    throw CmpMessages.MESSAGES.failedToInsertNewRows(e);
  }
 finally {
    JDBCUtil.safeClose(ps);
    JDBCUtil.safeClose(con);
  }
}

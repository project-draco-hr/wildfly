{
  Set<PathEntry> allEntries=null;
synchronized (pathEntries) {
    if (event == Event.UPDATED) {
      allEntries=new LinkedHashSet<PathEntry>();
      allEntries.add(pathEntry);
      getAllDependents(allEntries,pathEntry.getName());
    }
 else {
      allEntries=Collections.singleton(pathEntry);
    }
  }
  Map<PathEntry,Set<Callback>> triggerCallbacks=new LinkedHashMap<PathEntry,Set<Callback>>();
synchronized (callbacks) {
    for (    PathEntry pe : allEntries) {
      Map<Event,Set<Callback>> callbacksByEvent=callbacks.get(pe.getName());
      if (callbacksByEvent != null) {
        Set<Callback> callbacksForEntry=callbacksByEvent.get(event);
        if (callbacksForEntry != null) {
          triggerCallbacks.put(pe,new LinkedHashSet<Callback>(callbacksForEntry));
        }
      }
    }
  }
  for (  Map.Entry<PathEntry,Set<Callback>> entry : triggerCallbacks.entrySet()) {
    for (    Callback cb : entry.getValue()) {
      cb.pathEvent(event,entry.getKey());
    }
  }
}

{
  sysContext=injectedFramework.getValue().getBundleContext();
  BundleListener uninstallListener=new BundleListener(){
    @Override public void bundleChanged(    BundleEvent event){
      if (event.getType() == BundleEvent.INSTALLED) {
        AbstractUserBundle userBundle;
        try {
          userBundle=AbstractUserBundle.assertBundleState(event.getBundle());
        }
 catch (        RuntimeException ex) {
          return;
        }
        Deployment dep=userBundle.getDeployment();
        String contextName=InstallBundleInitiatorService.getContextName(dep);
        ServiceContainer container=context.getController().getServiceContainer();
        ServiceName osgiDeploymentService=OSGiDeploymentService.getServiceName(contextName);
        ServiceName deploymentService=Services.JBOSS_DEPLOYMENT.append(contextName);
        if (container.getService(deploymentService) != null && container.getService(osgiDeploymentService) == null) {
          ServiceName serviceName=ModuleRegistrationService.getServiceName(contextName);
          try {
            log.tracef("Register service: %s",serviceName);
            BatchBuilder batchBuilder=container.batchBuilder();
            ModuleRegistrationService.addService(batchBuilder,dep,contextName);
            batchBuilder.install();
          }
 catch (          ServiceRegistryException ex) {
            throw new IllegalStateException("Cannot register service: " + serviceName,ex);
          }
        }
      }
    }
  }
;
  sysContext.addBundleListener(uninstallListener);
}

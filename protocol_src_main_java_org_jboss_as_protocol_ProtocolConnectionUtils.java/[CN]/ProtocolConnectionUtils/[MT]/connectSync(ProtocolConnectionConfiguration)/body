{
  long timeoutMillis=configuration.getConnectionTimeout();
  CallbackHandler handler=configuration.getCallbackHandler();
  final CallbackHandler actualHandler;
  ProtocolTimeoutHandler timeoutHandler=configuration.getTimeoutHandler();
  if (timeoutHandler == null) {
    GeneralTimeoutHandler defaultTimeoutHandler=new GeneralTimeoutHandler();
    actualHandler=handler != null ? new WrapperCallbackHandler(defaultTimeoutHandler,handler) : new AnonymousCallbackHandler();
    timeoutHandler=defaultTimeoutHandler;
  }
 else {
    actualHandler=handler != null ? handler : new AnonymousCallbackHandler();
  }
  final IoFuture<Connection> future=connect(actualHandler,configuration);
  IoFuture.Status status=timeoutHandler.await(future,timeoutMillis);
  if (status == IoFuture.Status.DONE) {
    return future.get();
  }
  if (status == IoFuture.Status.FAILED) {
    throw ProtocolLogger.ROOT_LOGGER.failedToConnect(configuration.getUri(),future.getException());
  }
  throw ProtocolLogger.ROOT_LOGGER.couldNotConnect(configuration.getUri());
}

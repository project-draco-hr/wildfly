{
  txOperationHandler=new SlaveDomainControllerOperationHandler(slave);
  ProtocolChannelClient<ManagementChannel> client;
  try {
    ProtocolChannelClient.Configuration<ManagementChannel> configuration=new ProtocolChannelClient.Configuration<ManagementChannel>();
    configuration.setEndpointName("endpoint");
    configuration.setUriScheme("remote");
    configuration.setUri(new URI("remote://" + host.getHostAddress() + ":"+ port));
    configuration.setExecutor(executor);
    configuration.setChannelFactory(new ManagementChannelFactory(txOperationHandler));
    client=ProtocolChannelClient.create(configuration);
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
  try {
    client.connect();
    this.channelClient=client;
    if (reconnectInfo != null) {
      unregister();
    }
    ManagementChannel channel=client.openChannel("domain");
    this.channel=channel;
    channel.startReceiving();
    masterProxy=new ModelControllerClientToModelControllerAdapter(channel,executor);
  }
 catch (  IOException e) {
    log.warnf("Could not connect to remote domain controller %s:%d",host.getHostAddress(),port);
    e.printStackTrace();
    throw new IllegalStateException(e);
  }
  try {
    ModelNode node=new RegisterModelControllerRequest().executeForResult(executor,ManagementClientChannelStrategy.create(channel));
    if (reconnectInfo == null) {
      slave.setInitialDomainModel(node);
    }
  }
 catch (  Exception e) {
    log.warnf("Error retrieving domain model from remote domain controller %s:%d: %s",host.getHostAddress(),port,e.getMessage());
    throw new IllegalStateException(e);
  }
}

{
  final ThreadFactory threadFactory=new JBossThreadFactory(new ThreadGroup("RemoteDomainConnection-threads"),Boolean.FALSE,null,"%G - %t",null,null,AccessController.getContext());
  final ProtocolClient.Configuration config=new ProtocolClient.Configuration();
  config.setMessageHandler(initialMessageHandler);
  config.setConnectTimeout(CONNECTION_TIMEOUT);
  config.setReadExecutor(Executors.newCachedThreadPool(threadFactory));
  config.setSocketFactory(SocketFactory.getDefault());
  config.setServerAddress(new InetSocketAddress(host,port));
  config.setThreadFactory(threadFactory);
  config.setClosedCallback(this);
  final InetAddress callbackAddress=getCallbackAddress(ourAddress,host);
  final ProtocolClient protocolClient=new ProtocolClient(config);
  try {
    connection=protocolClient.connect();
    if (reconnectInfo != null) {
      unregister();
    }
    masterProxy=new ModelControllerClientToModelControllerAdapter(connection);
    txOperationHandler=new SlaveDomainControllerOperationHandler(slave);
    managementCommunicationService.getValue().addHandler(txOperationHandler);
  }
 catch (  IOException e) {
    log.warnf("Could not connect to remote domain controller %s:%d",host.getHostAddress(),port);
    throw new IllegalStateException(e);
  }
  try {
    ModelNode node=new RegisterModelControllerRequest(callbackAddress,ourPort).executeForResult(new ManagementRequestConnectionStrategy.ExistingConnectionStrategy(connection));
    if (reconnectInfo == null) {
      slave.setInitialDomainModel(node);
    }
  }
 catch (  Exception e) {
    log.warnf("Error retrieving domain model from remote domain controller %s:%d: %s",host.getHostAddress(),port,e.getMessage());
    throw new IllegalStateException(e);
  }
}

{
  final ProtocolClient.Configuration config=new ProtocolClient.Configuration();
  config.setMessageHandler(initialMessageHandler);
  config.setConnectTimeout(CONNECTION_TIMEOUT);
  config.setReadExecutor(Executors.newCachedThreadPool());
  config.setSocketFactory(SocketFactory.getDefault());
  config.setServerAddress(new InetSocketAddress(host,port));
  config.setThreadFactory(Executors.defaultThreadFactory());
  final ProtocolClient protocolClient=new ProtocolClient(config);
  try {
    connection=protocolClient.connect();
    client=ModelControllerClient.Factory.create(ModelControllerClient.Type.DOMAIN,connection);
    operationHandler=ModelControllerOperationHandler.Factory.create(ModelControllerClient.Type.HOST,hostController,initialMessageHandler);
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
  try {
    return new RegisterModelControllerRequest().executeForResult(new ManagementRequestConnectionStrategy.ExistingConnectionStrategy(connection));
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
}

{
  final ProtocolClient.Configuration config=new ProtocolClient.Configuration();
  config.setMessageHandler(initialMessageHandler);
  config.setConnectTimeout(CONNECTION_TIMEOUT);
  config.setReadExecutor(Executors.newCachedThreadPool());
  config.setSocketFactory(SocketFactory.getDefault());
  config.setServerAddress(new InetSocketAddress(host,port));
  config.setThreadFactory(Executors.defaultThreadFactory());
  final ProtocolClient protocolClient=new ProtocolClient(config);
  try {
    connection=protocolClient.connect();
    client=RemoteProxyController.create(connection,PathAddress.EMPTY_ADDRESS);
    operationHandler=ModelControllerOperationHandler.Factory.create(slave,initialMessageHandler);
    txOperationHandler=new TransactionalModelControllerOperationHandler(slave,initialMessageHandler);
  }
 catch (  IOException e) {
    log.warnf("Could not connect to remote domain controller %s:%d",host.getHostAddress(),port);
    throw new IllegalStateException(e);
  }
  try {
    ModelNode node=new RegisterModelControllerRequest().executeForResult(new ManagementRequestConnectionStrategy.ExistingConnectionStrategy(connection));
    slave.setInitialDomainModel(node);
  }
 catch (  Exception e) {
    log.warnf("Error retrieving domain model from remote domain controller %s:%d: %s",host.getHostAddress(),port,e.getMessage());
    throw new IllegalStateException(e);
  }
}

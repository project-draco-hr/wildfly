{
  PatchInfo info=new LocalPatchInfo(randomString(),PatchInfo.BASE,Collections.<String>emptyList(),env);
  File binDir=mkdir(env.getInstalledImage().getJbossHome(),"bin");
  String fileName="standalone.sh";
  File standaloneShellFile=touch(binDir,fileName);
  dump(standaloneShellFile,"original script to run standalone AS7");
  byte[] existingHash=calculateHash(standaloneShellFile);
  String patchID=randomString();
  File patchDir=mkdir(tempDir,patchID);
  File updatedFile=touch(patchDir,"misc","bin",fileName);
  dump(updatedFile,"updated script");
  byte[] updatedHash=calculateHash(updatedFile);
  ContentModification fileUpdated=new ContentModification(new MiscContentItem(fileName,new String[]{"bin"},updatedHash),existingHash,MODIFY);
  Patch patch=PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setPatchType(PatchType.ONE_OFF).addAppliesTo(info.getVersion()).addContentModification(fileUpdated).build();
  createPatchXMLFile(patchDir,patch);
  File zippedPatch=createZippedPatchFile(patchDir,patch.getPatchId());
  PatchingTaskRunner runner=new PatchingTaskRunner(info,env);
  PatchingResult result=runner.executeDirect(new FileInputStream(zippedPatch),ContentVerificationPolicy.STRICT);
  assertPatchHasBeenApplied(result,patch);
  assertFileExists(standaloneShellFile);
  assertArrayEquals(updatedHash,calculateHash(standaloneShellFile));
  File backupFile=assertFileExists(env.getHistoryDir(patchID),"misc","bin",fileName);
  assertArrayEquals(existingHash,calculateHash(backupFile));
}

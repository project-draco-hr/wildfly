{
  InputStream in=null;
  if (contentItem.hasDefined(DeploymentAttributes.CONTENT_INPUT_STREAM_INDEX.getName())) {
    int streamIndex=DeploymentAttributes.CONTENT_INPUT_STREAM_INDEX.resolveModelAttribute(context,contentItem).asInt();
    int maxIndex=context.getAttachmentStreamCount();
    if (streamIndex > maxIndex) {
      throw ServerLogger.ROOT_LOGGER.invalidStreamIndex(DeploymentAttributes.CONTENT_INPUT_STREAM_INDEX.getName(),streamIndex,maxIndex);
    }
    in=context.getAttachmentStream(streamIndex);
  }
 else   if (contentItem.hasDefined(DeploymentAttributes.CONTENT_BYTES.getName())) {
    try {
      in=new ByteArrayInputStream(DeploymentAttributes.CONTENT_BYTES.resolveModelAttribute(context,contentItem).asBytes());
    }
 catch (    IllegalArgumentException iae) {
      throw ServerLogger.ROOT_LOGGER.invalidStreamBytes(DeploymentAttributes.CONTENT_BYTES.getName());
    }
  }
 else   if (contentItem.hasDefined(DeploymentAttributes.CONTENT_URL.getName())) {
    final String urlSpec=DeploymentAttributes.CONTENT_URL.resolveModelAttribute(context,contentItem).asString();
    try {
      in=new URL(urlSpec).openStream();
    }
 catch (    MalformedURLException e) {
      throw ServerLogger.ROOT_LOGGER.invalidStreamURL(e,urlSpec);
    }
catch (    IOException e) {
      throw ServerLogger.ROOT_LOGGER.invalidStreamURL(e,urlSpec);
    }
  }
  if (in == null) {
    throw new IllegalStateException();
  }
  return in;
}

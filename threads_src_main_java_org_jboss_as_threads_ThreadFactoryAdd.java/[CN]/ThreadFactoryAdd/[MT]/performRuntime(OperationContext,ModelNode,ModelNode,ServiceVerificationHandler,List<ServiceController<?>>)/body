{
  ModelNode priorityModelNode=PoolAttributeDefinitions.PRIORITY.resolveModelAttribute(context,model);
  final String threadNamePattern=PoolAttributeDefinitions.THREAD_NAME_PATTERN.resolveModelAttribute(context,model).asString();
  final Integer priority=priorityModelNode.isDefined() ? new Integer(priorityModelNode.asInt()) : null;
  final String groupName=PoolAttributeDefinitions.GROUP_NAME.resolveModelAttribute(context,model).asString();
  final PathAddress address=PathAddress.pathAddress(operation.require(OP_ADDR));
  final String name=address.getLastElement().getValue();
  final ServiceTarget target=context.getServiceTarget();
  final ThreadFactoryService service=new ThreadFactoryService();
  service.setNamePattern(threadNamePattern);
  service.setPriority(priority);
  service.setThreadGroupName(groupName);
  ServiceBuilder<?> serviceBuilder=target.addService(ThreadsServices.threadFactoryName(name),service).setInitialMode(ServiceController.Mode.ACTIVE);
  if (verificationHandler != null) {
    serviceBuilder.addListener(verificationHandler);
  }
  ServiceController<?> sc=serviceBuilder.install();
  if (newControllers != null) {
    newControllers.add(sc);
  }
}

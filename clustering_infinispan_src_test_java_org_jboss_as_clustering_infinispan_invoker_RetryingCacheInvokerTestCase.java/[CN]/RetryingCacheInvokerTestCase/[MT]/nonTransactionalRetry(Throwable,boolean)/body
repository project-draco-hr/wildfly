{
  Flag flag=Flag.FORCE_SYNCHRONOUS;
  Object expected=new Object();
  Configuration config=new ConfigurationBuilder().transaction().transactionMode(TransactionMode.NON_TRANSACTIONAL).build();
  when(this.cache.getCacheConfiguration()).thenReturn(config);
  when(this.invoker.invoke(this.cache,this.operation,flag)).thenThrow(exception).thenReturn(expected);
  try {
    Object result=this.subject.invoke(this.cache,this.operation,flag);
    if (allowsRetry) {
      assertSame(expected,result);
    }
 else {
      fail("Retry should not have been allowed for exception: " + exception.getClass().getName());
    }
  }
 catch (  RuntimeException e) {
    if (!allowsRetry) {
      assertSame(exception,e);
    }
 else {
      fail("Retry should have been allowed for exception: " + exception.getClass().getName());
    }
  }
}

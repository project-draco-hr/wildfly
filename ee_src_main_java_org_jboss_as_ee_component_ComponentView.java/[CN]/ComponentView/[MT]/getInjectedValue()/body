{
  final Interceptor clientInterceptor=component.createClientInterceptor(viewClass);
  final Interceptor componentInterceptor=component.getComponentInterceptor();
  final InterceptorInvocationHandler handler=new InterceptorInvocationHandler(Interceptors.getChainedInterceptor(clientInterceptor,componentInterceptor));
  try {
    return viewClass.cast(proxyFactory.newInstance(handler));
  }
 catch (  InstantiationException e) {
    throw new InstantiationError(e.getMessage());
  }
catch (  IllegalAccessException e) {
    throw new IllegalAccessError(e.getMessage());
  }
}

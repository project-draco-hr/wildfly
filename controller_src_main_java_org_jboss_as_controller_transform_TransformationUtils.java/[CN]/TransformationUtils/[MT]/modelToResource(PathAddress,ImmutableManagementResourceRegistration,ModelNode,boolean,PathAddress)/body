{
  Resource res=Resource.Factory.create();
  ModelNode value=new ModelNode();
  Set<String> allFields=new HashSet<String>(model.keys());
  for (  String name : reg.getAttributeNames(PathAddress.EMPTY_ADDRESS)) {
    AttributeAccess aa=reg.getAttributeAccess(PathAddress.EMPTY_ADDRESS,name);
    if (aa.getStorageType() == AttributeAccess.Storage.RUNTIME) {
      allFields.remove(name);
      continue;
    }
    if (includeUndefined) {
      value.get(name).set(model.get(name));
    }
 else {
      if (model.hasDefined(name)) {
        value.get(name).set(model.get(name));
      }
    }
    allFields.remove(name);
  }
  if (!value.isDefined() && model.isDefined() && reg.getChildAddresses(PathAddress.EMPTY_ADDRESS).size() == 0) {
    value.setEmptyObject();
  }
  res.writeModel(value);
  for (  PathElement path : reg.getChildAddresses(PathAddress.EMPTY_ADDRESS)) {
    ImmutableManagementResourceRegistration sub=reg.getSubModel(PathAddress.pathAddress(path));
    if (path.isWildcard()) {
      ModelNode subModel=model.get(path.getKey());
      if (subModel.isDefined()) {
        for (        Property p : subModel.asPropertyList()) {
          if (p.getValue().isDefined()) {
            res.registerChild(PathElement.pathElement(path.getKey(),p.getName()),modelToResource(startAddress,sub,p.getValue(),includeUndefined,fullPath.append(path)));
          }
        }
      }
    }
 else {
      ModelNode subModel=model.get(path.getKeyValuePair());
      if (subModel.isDefined()) {
        res.registerChild(path,modelToResource(startAddress,sub,subModel,includeUndefined,fullPath.append(path)));
      }
    }
    allFields.remove(path.getKey());
  }
  if (!allFields.isEmpty()) {
    throw ControllerLogger.ROOT_LOGGER.modelFieldsNotKnown(allFields,startAddress.append(fullPath));
  }
  return res;
}

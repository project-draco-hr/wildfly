{
  final ServiceTarget serviceTarget=context.getServiceTarget();
  final String socketBindingRef=LocalDestinationOutboundSocketBindingResourceDefinition.SOCKET_BINDING_REF.validateResolvedOperation(model).asString();
  final ModelNode sourceInterfaceModelNode=OutboundSocketBindingResourceDefinition.SOURCE_INTERFACE.validateResolvedOperation(model);
  final String sourceInterfaceName=sourceInterfaceModelNode.isDefined() ? sourceInterfaceModelNode.asString() : null;
  final ModelNode sourcePortModelNode=OutboundSocketBindingResourceDefinition.SOURCE_PORT.validateResolvedOperation(model);
  final Integer sourcePort=sourcePortModelNode.isDefined() ? sourcePortModelNode.asInt() : null;
  final ModelNode fixedSourcePortModelNode=OutboundSocketBindingResourceDefinition.FIXED_SOURCE_PORT.validateResolvedOperation(model);
  final boolean fixedSourcePort=fixedSourcePortModelNode.isDefined() ? fixedSourcePortModelNode.asBoolean() : false;
  final LocalDestinationOutboundSocketBindingService outboundSocketBindingService=new LocalDestinationOutboundSocketBindingService(outboundSocketName,sourcePort,fixedSourcePort);
  final ServiceBuilder<OutboundSocketBinding> serviceBuilder=serviceTarget.addService(OutboundSocketBinding.OUTBOUND_SOCKET_BINDING_BASE_SERVICE_NAME.append(outboundSocketName),outboundSocketBindingService);
  serviceBuilder.addDependency(SocketBinding.JBOSS_BINDING_NAME.append(socketBindingRef),SocketBinding.class,outboundSocketBindingService.getLocalDestinationSocketBindingInjector());
  if (sourceInterfaceName != null) {
    serviceBuilder.addDependency(NetworkInterfaceService.JBOSS_NETWORK_INTERFACE.append(sourceInterfaceName),NetworkInterfaceBinding.class,outboundSocketBindingService.getSourceNetworkInterfaceBindingInjector());
  }
  serviceBuilder.addDependency(SocketBindingManager.SOCKET_BINDING_MANAGER,SocketBindingManager.class,outboundSocketBindingService.getSocketBindingManagerInjector());
  return serviceBuilder.setInitialMode(ServiceController.Mode.ON_DEMAND).install();
}

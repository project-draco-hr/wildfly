{
  final PersistenceResource[] delegates=new PersistenceResource[2];
  for (  PathAddress addr : affectedAddresses) {
    if (delegates[0] == null && addr.size() > 0 && HOST.equals(addr.getElement(0).getKey()) && addr.getElement(0).getValue().equals(hostControllerInfo.getLocalHostName())) {
      ModelNode hostModel=new ModelNode();
      hostModel.set(model.get(HOST,hostControllerInfo.getLocalHostName()));
      delegates[0]=hostPersister.store(hostModel,affectedAddresses);
    }
 else     if (delegates[1] == null && (addr.size() == 0 || !HOST.equals(addr.getElement(0).getKey()))) {
      delegates[1]=getDomainPersister().store(model,affectedAddresses);
    }
    if (delegates[0] != null && delegates[1] != null) {
      break;
    }
  }
  return new PersistenceResource(){
    @Override public void commit(){
      if (delegates[0] != null) {
        delegates[0].commit();
      }
      if (delegates[1] != null) {
        delegates[1].commit();
      }
    }
    @Override public void rollback(){
      if (delegates[0] != null) {
        delegates[0].rollback();
      }
      if (delegates[1] != null) {
        delegates[1].rollback();
      }
    }
  }
;
}

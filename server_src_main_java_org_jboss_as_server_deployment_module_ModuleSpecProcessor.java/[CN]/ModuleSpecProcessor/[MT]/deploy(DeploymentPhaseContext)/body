{
  final DeploymentUnit deploymentUnit=phaseContext.getDeploymentUnit();
  if (deploymentUnit.hasAttachment(Attachments.MODULE))   return;
  final ResourceRoot mainRoot=deploymentUnit.getAttachment(Attachments.DEPLOYMENT_ROOT);
  if (mainRoot == null)   return;
  if (deploymentUnit.hasAttachment(Attachments.OSGI_MANIFEST))   return;
  if (deploymentUnit.hasAttachment(MARKER))   return;
  deploymentUnit.putAttachment(MARKER,true);
  final ModuleSpecification moduleSpec=deploymentUnit.getAttachment(Attachments.MODULE_SPECIFICATION);
  final List<ResourceRoot> resourceRoots=new ArrayList<ResourceRoot>();
  if (ModuleRootMarker.isModuleRoot(mainRoot)) {
    resourceRoots.add(mainRoot);
  }
  final List<ResourceRoot> additionalRoots=deploymentUnit.getAttachmentList(Attachments.RESOURCE_ROOTS);
  for (  final ResourceRoot additionalRoot : additionalRoots) {
    if (ModuleRootMarker.isModuleRoot(additionalRoot) && !SubDeploymentMarker.isSubDeployment(additionalRoot)) {
      resourceRoots.add(additionalRoot);
    }
  }
  final ModuleIdentifier moduleIdentifier=deploymentUnit.getAttachment(Attachments.MODULE_IDENTIFIER);
  if (moduleIdentifier == null) {
    throw ServerMessages.MESSAGES.noModuleIdentifier(deploymentUnit.getName());
  }
  final ServiceName moduleServiceName=createModuleService(phaseContext,deploymentUnit,resourceRoots,moduleSpec,moduleIdentifier);
  phaseContext.addDeploymentDependency(moduleServiceName,Attachments.MODULE);
  for (  final DeploymentUnit subDeployment : deploymentUnit.getAttachmentList(Attachments.SUB_DEPLOYMENTS)) {
    ModuleIdentifier moduleId=subDeployment.getAttachment(Attachments.MODULE_IDENTIFIER);
    if (moduleId != null) {
      phaseContext.addToAttachmentList(Attachments.NEXT_PHASE_DEPS,ServiceModuleLoader.moduleSpecServiceName(moduleId));
    }
  }
  final List<AdditionalModuleSpecification> additionalModules=deploymentUnit.getAttachment(Attachments.ADDITIONAL_MODULES);
  if (additionalModules == null) {
    return;
  }
  for (  final AdditionalModuleSpecification module : additionalModules) {
    addSystemDependencies(moduleSpec,module);
    List<ResourceRoot> roots=module.getResourceRoots();
    ServiceName serviceName=createModuleService(phaseContext,deploymentUnit,roots,module,module.getModuleIdentifier());
    phaseContext.addToAttachmentList(Attachments.NEXT_PHASE_DEPS,serviceName);
  }
}

{
  try {
    final VirtualFile root=resource.getRoot();
    if (resource.getExportFilters().isEmpty()) {
      specBuilder.addResourceRoot(ResourceLoaderSpec.createResourceLoaderSpec(new VFSResourceLoader(resource.getRootName(),root,resource.isUsePhysicalCodeSource())));
    }
 else {
      final MultiplePathFilterBuilder filterBuilder=PathFilters.multiplePathFilterBuilder(true);
      for (      final FilterSpecification filter : resource.getExportFilters()) {
        filterBuilder.addFilter(filter.getPathFilter(),filter.isInclude());
      }
      specBuilder.addResourceRoot(ResourceLoaderSpec.createResourceLoaderSpec(new VFSResourceLoader(resource.getRootName(),root,resource.isUsePhysicalCodeSource()),filterBuilder.create()));
    }
    permissions.add(new VirtualFilePermission(root.getChild("-").getPathName(),VirtualFilePermission.FLAG_READ));
  }
 catch (  IOException e) {
    throw ServerMessages.MESSAGES.failedToCreateVFSResourceLoader(resource.getRootName(),e);
  }
}

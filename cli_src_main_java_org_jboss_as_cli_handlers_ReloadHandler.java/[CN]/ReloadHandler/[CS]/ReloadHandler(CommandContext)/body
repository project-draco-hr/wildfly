{
  super(ctx,"reload",true);
  adminOnly=new ArgumentWithValue(this,SimpleTabCompleter.BOOLEAN,"--admin-only");
  useCurrentServerConfig=new ArgumentWithValue(this,SimpleTabCompleter.BOOLEAN,"--use-current-server-config"){
    @Override public boolean canAppearNext(    CommandContext ctx) throws CommandFormatException {
      if (ctx.isDomainMode()) {
        return false;
      }
      return super.canAppearNext(ctx);
    }
  }
;
  restartServers=new ArgumentWithValue(this,SimpleTabCompleter.BOOLEAN,"--restart-servers"){
    @Override public boolean canAppearNext(    CommandContext ctx) throws CommandFormatException {
      if (!ctx.isDomainMode()) {
        return false;
      }
      return super.canAppearNext(ctx);
    }
  }
;
  useCurrentDomainConfig=new ArgumentWithValue(this,SimpleTabCompleter.BOOLEAN,"--use-current-domain-config"){
    @Override public boolean canAppearNext(    CommandContext ctx) throws CommandFormatException {
      if (!ctx.isDomainMode()) {
        return false;
      }
      return super.canAppearNext(ctx);
    }
  }
;
  useCurrentHostConfig=new ArgumentWithValue(this,SimpleTabCompleter.BOOLEAN,"--use-current-host-config"){
    @Override public boolean canAppearNext(    CommandContext ctx) throws CommandFormatException {
      if (!ctx.isDomainMode()) {
        return false;
      }
      return super.canAppearNext(ctx);
    }
  }
;
  host=new ArgumentWithValue(this,new CommaSeparatedCompleter(){
    @Override protected Collection<String> getAllCandidates(    CommandContext ctx){
      return hostReloadPermission.getAllowedOn(ctx);
    }
  }
,"--host"){
    @Override public boolean canAppearNext(    CommandContext ctx) throws CommandFormatException {
      if (!ctx.isDomainMode()) {
        return false;
      }
      return super.canAppearNext(ctx);
    }
  }
;
}

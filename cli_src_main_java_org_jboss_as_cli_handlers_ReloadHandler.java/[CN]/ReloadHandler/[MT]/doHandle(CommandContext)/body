{
  final ModelControllerClient client=ctx.getModelControllerClient();
  if (client == null) {
    throw new CommandLineException("Connection is now available.");
  }
  if (!(client instanceof CLIModelControllerClient)) {
    throw new CommandLineException("Unsupported ModelControllerClient implementation " + client.getClass().getName());
  }
  final CLIModelControllerClient cliClient=(CLIModelControllerClient)client;
  final ModelNode op=this.buildRequestWithoutHeaders(ctx);
  try {
    final ModelNode response=cliClient.execute(op,true);
    if (!Util.isSuccess(response)) {
      throw new CommandLineException(Util.getFailureDescription(response));
    }
  }
 catch (  IOException e) {
    if (cliClient.isConnected()) {
      StreamUtils.safeClose(cliClient);
      throw new CommandLineException("Failed to execute :reload",e);
    }
  }
  try {
    Thread.sleep(500);
  }
 catch (  InterruptedException e) {
    throw new CommandLineException("Interrupted while pausing before reconnecting.",e);
  }
  try {
    cliClient.ensureConnected(ctx.getConfig().getConnectionTimeout() + 1000);
  }
 catch (  CommandLineException e) {
    ctx.disconnectController();
    throw e;
  }
}

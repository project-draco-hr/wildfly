{
  ROOT_LOGGER.creatingSecurityConstraints();
  final SecurityMetaDataAccessorEJB ejbMDAccessor=getEjbSecurityMetaDataAccessor(dep);
  for (  final Endpoint ejbEndpoint : dep.getService().getEndpoints()) {
    final boolean secureWsdlAccess=ejbMDAccessor.isSecureWsdlAccess(ejbEndpoint);
    final String transportGuarantee=ejbMDAccessor.getTransportGuarantee(ejbEndpoint);
    final boolean hasTransportGuarantee=transportGuarantee != null;
    final String authMethod=ejbMDAccessor.getAuthMethod(ejbEndpoint);
    final boolean hasAuthMethod=authMethod != null;
    if (ejbEndpoint instanceof HttpEndpoint && (hasAuthMethod || hasTransportGuarantee)) {
      final List<SecurityConstraintMetaData> securityConstraints=WebMetaDataHelper.getSecurityConstraints(jbossWebMD);
      final SecurityConstraintMetaData securityConstraint=WebMetaDataHelper.newSecurityConstraint(securityConstraints);
      final WebResourceCollectionsMetaData webResourceCollections=WebMetaDataHelper.getWebResourceCollections(securityConstraint);
      final String endpointName=ejbEndpoint.getShortName();
      final String urlPattern=((HttpEndpoint)ejbEndpoint).getURLPattern();
      ROOT_LOGGER.creatingWebResourceCollection(endpointName,urlPattern);
      WebMetaDataHelper.newWebResourceCollection(endpointName,urlPattern,secureWsdlAccess,webResourceCollections);
      if (hasAuthMethod) {
        ROOT_LOGGER.creatingAuthConstraint(endpointName);
        WebMetaDataHelper.newAuthConstraint(WebMetaDataHelper.getAllRoles(),securityConstraint);
      }
      if (hasTransportGuarantee) {
        ROOT_LOGGER.creatingUserDataConstraint(endpointName,transportGuarantee);
        WebMetaDataHelper.newUserDataConstraint(transportGuarantee,securityConstraint);
      }
    }
  }
}

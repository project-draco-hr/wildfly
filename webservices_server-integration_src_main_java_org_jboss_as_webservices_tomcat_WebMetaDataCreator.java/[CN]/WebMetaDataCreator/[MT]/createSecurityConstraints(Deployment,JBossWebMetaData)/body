{
  this.log.debug("Creating security constraints");
  final SecurityMetaDataAccessorEJB ejbMDAccessor=this.getEjbSecurityMetaDataAccessor(dep);
  if (ejbMDAccessor != null) {
    for (    final Endpoint ejbEndpoint : dep.getService().getEndpoints()) {
      final boolean secureWsdlAccess=ejbMDAccessor.isSecureWsdlAccess(ejbEndpoint);
      final String transportGuarantee=ejbMDAccessor.getTransportGuarantee(ejbEndpoint);
      final boolean hasTransportGuarantee=transportGuarantee != null;
      final String authMethod=ejbMDAccessor.getAuthMethod(ejbEndpoint);
      final boolean hasAuthMethod=authMethod != null;
      if (hasAuthMethod || hasTransportGuarantee) {
        final List<SecurityConstraintMetaData> securityConstraints=WebMetaDataHelper.getSecurityConstraints(jbossWebMD);
        final SecurityConstraintMetaData securityConstraint=WebMetaDataHelper.newSecurityConstraint(securityConstraints);
        final WebResourceCollectionsMetaData webResourceCollections=WebMetaDataHelper.getWebResourceCollections(securityConstraint);
        final String endpointName=ejbEndpoint.getShortName();
        final String urlPattern=ejbEndpoint.getURLPattern();
        this.log.debug("Creating web resource collection for endpoint: " + endpointName + ", URL pattern: "+ urlPattern);
        WebMetaDataHelper.newWebResourceCollection(endpointName,urlPattern,secureWsdlAccess,webResourceCollections);
        if (hasAuthMethod) {
          this.log.debug("Creating auth constraint for endpoint: " + endpointName);
          WebMetaDataHelper.newAuthConstraint(WebMetaDataHelper.getAllRoles(),securityConstraint);
        }
        if (hasTransportGuarantee) {
          this.log.debug("Creating new user data constraint for endpoint: " + endpointName + ", transport guarantee: "+ transportGuarantee);
          WebMetaDataHelper.newUserDataConstraint(transportGuarantee,securityConstraint);
        }
      }
    }
  }
}

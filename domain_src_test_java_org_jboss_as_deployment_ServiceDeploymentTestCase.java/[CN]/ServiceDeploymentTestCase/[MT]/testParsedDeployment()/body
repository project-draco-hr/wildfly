{
  final BatchBuilder batchBuilder=serviceContainer.batchBuilder();
  final CountDownLatch latch=new CountDownLatch(1);
  final AtomicBoolean completed=new AtomicBoolean(false);
  final DeploymentServiceListener listener=new DeploymentServiceListener(new DeploymentServiceListener.Callback(){
    public void run(    Map<ServiceName,StartException> serviceFailures,    long elapsedTime,    int numberServices){
      completed.set(true);
      if (serviceFailures.size() > 0)       fail("Service failures: " + serviceFailures);
      latch.countDown();
    }
  }
);
  batchBuilder.addListener(listener);
  final VirtualFile deploymentFile=initializeDeployment("/test/serviceXmlDeployment.jar");
  final ServerGroupAddDeploymentUpdate update=new ServerGroupAddDeploymentUpdate(deploymentFile.getPathName(),BLANK_SHA1);
  executeUpdate(update);
  listener.startBatch();
  new ServerGroupDeploymentElement(null,deploymentFile.getPathName(),BLANK_SHA1,true,DeploymentItemRegistry.getDeploymentItems(new DeploymentUnitKey(deploymentFile.getPathName(),BLANK_SHA1))).activate(new ServiceActivatorContextImpl(batchBuilder));
  batchBuilder.install();
  listener.finishBatch();
  listener.finishDeployment();
  latch.await(10L,TimeUnit.SECONDS);
  if (!completed.get())   fail("Services were not installed within a second");
  final ServiceController<?> testServiceController=serviceContainer.getService(TEST_SERVICE_NAME);
  assertNotNull(testServiceController);
  assertEquals(ServiceController.State.UP,testServiceController.getState());
  final LegacyService legacyService=(LegacyService)testServiceController.getValue();
  assertNotNull(legacyService);
  assertEquals("Test Value",legacyService.getSomethingElse());
  final ServiceController<?> testServiceControllerTwo=serviceContainer.getService(TEST_SERVICE_NAME.append("second"));
  assertNotNull(testServiceControllerTwo);
  assertEquals(ServiceController.State.UP,testServiceControllerTwo.getState());
  final LegacyService legacyServiceTwo=(LegacyService)testServiceControllerTwo.getValue();
  assertNotNull(legacyServiceTwo);
  assertEquals(legacyService,legacyServiceTwo.getOther());
  assertEquals("Test Value - more value",legacyServiceTwo.getSomethingElse());
  final ServiceController<?> testServiceControllerThree=serviceContainer.getService(TEST_SERVICE_NAME.append("third"));
  assertNotNull(testServiceControllerThree);
  assertEquals(ServiceController.State.UP,testServiceControllerThree.getState());
  final LegacyService legacyServiceThree=(LegacyService)testServiceControllerThree.getValue();
  assertNotNull(legacyServiceThree);
  assertEquals(legacyService,legacyServiceThree.getOther());
  assertEquals("Another test value",legacyServiceThree.getSomethingElse());
  serviceContainer.shutdown();
}

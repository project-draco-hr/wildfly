{
  final File resource=getResourceFile(inputResource);
  final File outputDirectory=new File(getResourceFile(outputBase),outputPath);
  if (!resource.exists())   throw new IllegalArgumentException("Resource does not exist");
  if (outputDirectory.exists() && outputDirectory.isFile())   throw new IllegalArgumentException("OutputDirectory must be a directory");
  if (!outputDirectory.exists()) {
    if (!outputDirectory.mkdirs())     throw new RuntimeException("Failed to create output directory");
  }
  final File outputFile=new File(outputDirectory,resource.getName());
  final InputStream in=new FileInputStream(resource);
  try {
    final OutputStream out=new FileOutputStream(outputFile);
    try {
      final byte[] b=new byte[8192];
      int c;
      while ((c=in.read(b)) != -1) {
        out.write(b,0,c);
      }
      out.close();
      in.close();
    }
  finally {
      VFSUtils.safeClose(out);
    }
  }
  finally {
    VFSUtils.safeClose(in);
  }
}

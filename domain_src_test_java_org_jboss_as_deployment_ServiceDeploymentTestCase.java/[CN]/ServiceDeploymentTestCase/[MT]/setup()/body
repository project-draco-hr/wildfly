{
  Module.setModuleLoaderSelector(new DeploymentModuleLoaderSelector());
  serviceContainer=ServiceContainer.Factory.create();
  final DeploymentChain deploymentChain=new DeploymentChainImpl("deployment.chain.service");
  final BatchBuilder builder=serviceContainer.batchBuilder();
  final CountDownLatch latch=new CountDownLatch(1);
  final TimingServiceListener listener=new TimingServiceListener(new Runnable(){
    @Override public void run(){
      latch.countDown();
    }
  }
);
  builder.addListener(listener);
  final ServiceActivatorContext serviceActivatorContext=new ServiceActivatorContextImpl(builder);
  new DeploymentActivator().activate(serviceActivatorContext);
  new ServiceDeploymentActivator().activate(serviceActivatorContext);
  final DeploymentUnitProcessorService<TestModuleDependencyProcessor> deploymentUnitProcessorService=new DeploymentUnitProcessorService<TestModuleDependencyProcessor>(new TestModuleDependencyProcessor());
  builder.addService(ServiceName.JBOSS.append("deployment","processor","module","dependency","test"),deploymentUnitProcessorService).addDependency(ServiceDeploymentActivator.SERVICE_DEPLOYMENT_CHAIN_NAME,DeploymentChain.class,new DeploymentChainProcessorInjector<TestModuleDependencyProcessor>(deploymentUnitProcessorService,TestModuleDependencyProcessor.PRIORITY));
  builder.install();
  listener.finishBatch();
  latch.await(1L,TimeUnit.SECONDS);
  if (!listener.finished())   fail("Did not install service deployment components within 1 second.");
}

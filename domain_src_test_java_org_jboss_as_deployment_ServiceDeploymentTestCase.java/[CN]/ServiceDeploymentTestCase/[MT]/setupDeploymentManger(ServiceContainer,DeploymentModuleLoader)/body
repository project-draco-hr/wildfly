{
  final DeploymentManagerImpl deploymentManager=new DeploymentManagerImpl(serviceContainer){
    @Override protected ServiceName determineDeploymentChain(){
      return CHAIN_SERVICE_NAME;
    }
    @Override protected ServiceName determineDeploymentModuleLoader(){
      return DEPLOYMENT_MODULE_LOADER_SERVICE_NAME;
    }
  }
;
  final DeploymentChain deploymentChain=new DeploymentChainImpl("deployment.chain.service");
  final BatchBuilder builder=serviceContainer.batchBuilder();
  final DeploymentServiceListener listener=new DeploymentServiceListener();
  builder.addListener(listener);
  builder.addService(CHAIN_SERVICE_NAME,new DeploymentChainService(deploymentChain));
  builder.addService(DEPLOYMENT_MODULE_LOADER_SERVICE_NAME,new PassthroughService(deploymentModuleLoader));
  final BatchServiceBuilder deploymentManagerServiceBuilder=builder.addService(DEPLOYMENT_MANAGER_NAME,deploymentManager);
  deploymentManagerServiceBuilder.addDependency(CHAIN_SERVICE_NAME);
  deploymentManagerServiceBuilder.addDependency(DEPLOYMENT_MODULE_LOADER_SERVICE_NAME);
  builder.install();
  listener.waitForCompletion();
  assertEquals(ServiceController.State.UP,serviceContainer.getService(DEPLOYMENT_MANAGER_NAME).getState());
  return deploymentManager;
}

{
  ModelNode ourContainerConfig=new ModelNode();
  ModelNode ourStaticResources=DefaultStaticResources.getDefaultStaticResource();
  ourContainerConfig.get(Constants.STATIC_RESOURCES).set(ourStaticResources);
  ModelNode ourJspConfig=DefaultJspConfig.getDefaultStaticResource();
  ourContainerConfig.get(Constants.JSP_CONFIGURATION).set(ourJspConfig);
  final ModelNode opConfig=operation.get(Constants.CONTAINER_CONFIG);
  if (opConfig.hasDefined(Constants.STATIC_RESOURCES)) {
    for (    Property prop : opConfig.get(Constants.STATIC_RESOURCES).asPropertyList()) {
      ModelNode val=DefaultStaticResources.getDefaultIfUndefined(prop.getName(),prop.getValue());
      ourStaticResources.get(prop.getName()).set(val);
    }
  }
  if (opConfig.hasDefined(Constants.JSP_CONFIGURATION)) {
    for (    Property prop : opConfig.get(Constants.JSP_CONFIGURATION).asPropertyList()) {
      ModelNode val=DefaultStaticResources.getDefaultIfUndefined(prop.getName(),prop.getValue());
      ourStaticResources.get(prop.getName()).set(val);
    }
  }
  if (opConfig.hasDefined(Constants.MIME_MAPPING)) {
    ourContainerConfig.get(Constants.MIME_MAPPING).set(opConfig.get(Constants.MIME_MAPPING));
  }
  if (opConfig.hasDefined(Constants.WELCOME_FILE)) {
    ourContainerConfig.get(Constants.WELCOME_FILE).set(opConfig.get(Constants.WELCOME_FILE));
  }
  model.get(Constants.CONTAINER_CONFIG).set(ourContainerConfig);
  model.get(Constants.CONNECTOR).setEmptyObject();
  model.get(Constants.VIRTUAL_SERVER).setEmptyObject();
}

{
  final PatchableTarget.TargetInfo identityInfo=modification.getModifiedState();
  final Identity identity=new Identity(){
    @Override public String getVersion(){
      return modification.getVersion();
    }
    @Override public String getName(){
      return name;
    }
    @Override public TargetInfo loadTargetInfo() throws IOException {
      return identityInfo;
    }
    @Override public DirectoryStructure getDirectoryStructure(){
      return modification.getDirectoryStructure();
    }
  }
;
  final InstalledIdentityImpl installedIdentity=new InstalledIdentityImpl(identity);
  for (  final Map.Entry<String,MutableTargetImpl> entry : state.getLayers().entrySet()) {
    final String layerName=entry.getKey();
    final MutableTargetImpl target=entry.getValue();
    installedIdentity.putLayer(layerName,new LayerInfo(layerName,target.getModifiedState(),target.getDirectoryStructure()));
  }
  for (  final Map.Entry<String,MutableTargetImpl> entry : state.getAddOns().entrySet()) {
    final String addOnName=entry.getKey();
    final MutableTargetImpl target=entry.getValue();
    installedIdentity.putAddOn(addOnName,new LayerInfo(addOnName,target.getModifiedState(),target.getDirectoryStructure()));
  }
  return installedIdentity;
}

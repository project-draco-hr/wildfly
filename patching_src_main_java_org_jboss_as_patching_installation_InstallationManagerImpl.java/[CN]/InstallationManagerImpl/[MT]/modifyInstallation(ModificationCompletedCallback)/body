{
  if (!writable.compareAndSet(true,false)) {
    throw new IllegalStateException();
  }
  try {
    final PatchableTarget.TargetInfo identityInfo=identity.loadTargetInfo();
    final InstallationModificationImpl.InstallationState state=this.state;
    return new InstallationModificationImpl(identityInfo,identity.getVersion(),state){
      @Override public void commit(){
        try {
          final InstallationState newState=internalCommit();
          callback.committed();
          InstallationManagerImpl.this.state=newState;
          writable.set(true);
        }
 catch (        Exception e) {
          rollback();
          throw new RuntimeException(e);
        }
      }
      @Override public void rollback(){
        try {
          callback.rolledback();
        }
  finally {
          writable.set(true);
        }
      }
    }
;
  }
 catch (  Exception e) {
    writable.set(true);
    throw new RuntimeException(e);
  }
}

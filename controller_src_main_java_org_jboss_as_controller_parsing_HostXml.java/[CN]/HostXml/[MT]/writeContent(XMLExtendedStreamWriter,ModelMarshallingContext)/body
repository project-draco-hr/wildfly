{
  final ModelNode modelNode=context.getModelNode();
  writer.writeStartDocument();
  writer.writeStartElement(Element.HOST.getLocalName());
  if (modelNode.hasDefined(NAME)) {
    writeAttribute(writer,Attribute.NAME,modelNode.get(NAME).asString());
  }
  writer.writeDefaultNamespace(Namespace.CURRENT.getUriString());
  writeNamespaces(writer,modelNode);
  writeSchemaLocation(writer,modelNode);
  if (modelNode.hasDefined(EXTENSION)) {
    writeExtensions(writer,modelNode.get(EXTENSION));
  }
  if (modelNode.hasDefined(PATH)) {
    writePaths(writer,modelNode.get(PATH));
  }
  if (modelNode.hasDefined(SYSTEM_PROPERTIES)) {
    writeProperties(writer,modelNode.get(SYSTEM_PROPERTIES),Element.SYSTEM_PROPERTIES);
  }
  if (modelNode.hasDefined(MANAGEMENT_INTERFACES)) {
    writeManagement(writer,modelNode.get(MANAGEMENT_INTERFACES));
  }
  if (modelNode.hasDefined(DOMAIN_CONTROLLER)) {
    writeDomainController(writer,modelNode.get(DOMAIN_CONTROLLER));
  }
  if (modelNode.hasDefined(INTERFACE)) {
    writeInterfaces(writer,modelNode.get(INTERFACE));
  }
  if (modelNode.hasDefined(JVM)) {
    writer.writeStartElement(Element.JVMS.getLocalName());
    for (    final Property jvm : modelNode.get(JVM).asPropertyList()) {
      writeJVMElement(writer,jvm.getName(),jvm.getValue());
    }
    writer.writeEndElement();
  }
  if (modelNode.hasDefined(SERVER_CONFIG)) {
    writeServers(writer,modelNode.get(SERVER_CONFIG));
  }
  writer.writeEndElement();
  writer.writeEndDocument();
}

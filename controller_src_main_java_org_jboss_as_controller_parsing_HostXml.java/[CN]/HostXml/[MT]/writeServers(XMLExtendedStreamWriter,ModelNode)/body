{
  writer.writeStartElement(Element.SERVERS.getLocalName());
  for (  Property prop : modelNode.asPropertyList()) {
    final ModelNode server=prop.getValue();
    writer.writeStartElement(Element.SERVER.getLocalName());
    writeAttribute(writer,Attribute.NAME,prop.getName());
    if (server.hasDefined(GROUP)) {
      writeAttribute(writer,Attribute.GROUP,server.get(GROUP).asString());
    }
    if (server.hasDefined(AUTO_START)) {
      writeAttribute(writer,Attribute.AUTO_START,server.get(AUTO_START).asString());
    }
    if (server.hasDefined(PATH)) {
      writePaths(writer,server.get(PATH));
    }
    if (server.hasDefined(SYSTEM_PROPERTY)) {
      writeProperties(writer,modelNode.get(SYSTEM_PROPERTY),Element.SYSTEM_PROPERTIES);
    }
    if (server.hasDefined(INTERFACE)) {
      writeInterfaces(writer,server.get(INTERFACE));
    }
    if (server.hasDefined(JVM)) {
      for (      final Property jvm : server.get(JVM).asPropertyList()) {
        writeJVMElement(writer,jvm.getName(),jvm.getValue());
        break;
      }
    }
    if (server.hasDefined(SOCKET_BINDING_GROUP)) {
      writer.writeStartElement(Element.SOCKET_BINDING_GROUP.getLocalName());
      writeAttribute(writer,Attribute.REF,server.get(SOCKET_BINDING_GROUP).asString());
      if (server.has(SOCKET_BINDING_PORT_OFFSET)) {
        writeAttribute(writer,Attribute.PORT_OFFSET,server.get(SOCKET_BINDING_PORT_OFFSET).asString());
      }
      writer.writeEndElement();
    }
    writer.writeEndElement();
  }
  writer.writeEndElement();
}

{
  String name=null;
  final ModelNode bindingAdd=Util.createAddOperation();
  bindingAdd.get(BINDING_TYPE).set(SIMPLE);
  final EnumSet<NamingSubsystemXMLAttribute> required=EnumSet.of(NamingSubsystemXMLAttribute.NAME,NamingSubsystemXMLAttribute.VALUE);
  for (int i=0; i < reader.getAttributeCount(); i++) {
    requireNoNamespaceAttribute(reader,i);
    final String value=reader.getAttributeValue(i);
    final NamingSubsystemXMLAttribute attribute=NamingSubsystemXMLAttribute.forName(reader.getAttributeLocalName(i));
    required.remove(attribute);
switch (attribute) {
case NAME:
      name=value.trim();
    break;
case VALUE:
  NamingBindingResourceDefinition.VALUE.parseAndSetParameter(value,bindingAdd,reader);
break;
case TYPE:
NamingBindingResourceDefinition.TYPE.parseAndSetParameter(value,bindingAdd,reader);
break;
default :
throw unexpectedAttribute(reader,i);
}
}
if (!required.isEmpty()) {
throw missingRequired(reader,required);
}
requireNoContent(reader);
final PathAddress address=parentAddress.append(BINDING,name);
bindingAdd.get(OP_ADDR).set(address.toModelNode());
operations.add(bindingAdd);
}

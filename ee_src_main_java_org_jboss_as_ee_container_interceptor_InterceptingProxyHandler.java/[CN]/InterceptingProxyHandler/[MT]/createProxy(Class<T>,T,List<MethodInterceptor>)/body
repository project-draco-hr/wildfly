{
  final InterceptingProxyHandler<T> proxyHandler=new InterceptingProxyHandler<T>(instance,interceptors);
  final ProxyFactory proxyFactory=new ProxyFactory();
  proxyFactory.setSuperclass(beanClass);
  final Class<? extends T> type=castClass(proxyFactory.createClass(),beanClass);
  T proxy=null;
  try {
    proxy=type.newInstance();
  }
 catch (  Throwable t) {
    throw new RuntimeException("Failed to create proxy instance",t);
  }
  ProxyObject.class.cast(proxy).setHandler(proxyHandler);
  return proxy;
}

{
  Map<String,Object> vaultOptions=new HashMap<String,Object>(options);
  SecurityVault vault=null;
  try {
    vault=AccessController.doPrivileged(new PrivilegedExceptionAction<SecurityVault>(){
      @Override public SecurityVault run() throws Exception {
        if (fqn == null || fqn.isEmpty()) {
          return SecurityVaultFactory.get();
        }
 else {
          return SecurityVaultFactory.get(fqn);
        }
      }
    }
);
  }
 catch (  PrivilegedActionException e) {
    Throwable t=e.getCause();
    if (t instanceof SecurityVaultException) {
      throw (SecurityVaultException)t;
    }
    if (t instanceof RuntimeException) {
      throw (RuntimeException)t;
    }
    throw new RuntimeException(t);
  }
  vault.init(vaultOptions);
  this.vault=vault;
}

{
  final ModelNode mainModel=mainServices.readWholeModel();
  final ModelNode securityDomainParent=mainModel.get(SUBSYSTEM,getMainSubsystemName(),Constants.SECURITY_DOMAIN);
  for (  String domainName : securityDomainParent.keys()) {
    ModelNode securityDomain=securityDomainParent.get(domainName);
    if (securityDomain.hasDefined(Constants.AUDIT)) {
      securityDomain.get(Constants.AUDIT).require(Constants.CLASSIC);
      testAddAndRemove_1_1_0(mainServices,version,mainModel,getSecurityDomainAddress(domainName).append(PathElement.pathElement(Constants.AUDIT,Constants.CLASSIC)),Constants.PROVIDER_MODULES,Constants.PROVIDER_MODULE);
    }
    if (securityDomain.hasDefined(Constants.ACL)) {
      securityDomain.get(Constants.ACL).require(Constants.CLASSIC);
      testAddAndRemove_1_1_0(mainServices,version,mainModel,getSecurityDomainAddress(domainName).append(PathElement.pathElement(Constants.ACL,Constants.CLASSIC)),Constants.ACL_MODULES,Constants.ACL_MODULE);
    }
    if (securityDomain.hasDefined(Constants.AUTHENTICATION)) {
      if (securityDomain.get(Constants.AUTHENTICATION).hasDefined(Constants.CLASSIC)) {
        securityDomain.get(Constants.AUTHENTICATION).require(Constants.CLASSIC);
        testAddAndRemove_1_1_0(mainServices,version,mainModel,getSecurityDomainAddress(domainName).append(PathElement.pathElement(Constants.AUTHENTICATION,Constants.CLASSIC)),Constants.LOGIN_MODULES,Constants.LOGIN_MODULE);
      }
      if (securityDomain.get(Constants.AUTHENTICATION).hasDefined(Constants.JASPI)) {
        securityDomain.get(Constants.AUTHENTICATION).require(Constants.JASPI);
        testAddAndRemove_1_1_0(mainServices,version,mainModel,getSecurityDomainAddress(domainName).append(PathElement.pathElement(Constants.AUTHENTICATION,Constants.JASPI)),Constants.AUTH_MODULES,Constants.AUTH_MODULE);
      }
    }
    if (securityDomain.hasDefined(Constants.AUTHORIZATION)) {
      securityDomain.get(Constants.AUTHORIZATION).require(Constants.CLASSIC);
      testAddAndRemove_1_1_0(mainServices,version,mainModel,getSecurityDomainAddress(domainName).append(PathElement.pathElement(Constants.AUTHORIZATION,Constants.CLASSIC)),Constants.POLICY_MODULES,Constants.POLICY_MODULE);
    }
    if (securityDomain.hasDefined(Constants.IDENTITY_TRUST)) {
      securityDomain.get(Constants.IDENTITY_TRUST).require(Constants.CLASSIC);
      testAddAndRemove_1_1_0(mainServices,version,mainModel,getSecurityDomainAddress(domainName).append(PathElement.pathElement(Constants.IDENTITY_TRUST,Constants.CLASSIC)),Constants.TRUST_MODULES,Constants.TRUST_MODULE);
    }
    if (securityDomain.hasDefined(Constants.MAPPING)) {
      securityDomain.get(Constants.MAPPING).require(Constants.CLASSIC);
      testAddAndRemove_1_1_0(mainServices,version,mainModel,getSecurityDomainAddress(domainName).append(PathElement.pathElement(Constants.MAPPING,Constants.CLASSIC)),Constants.MAPPING_MODULES,Constants.MAPPING_MODULE);
    }
  }
  testAddAndRemoveJaspi_1_1(mainServices,version);
}

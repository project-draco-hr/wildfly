{
  final String name=reader.getAttributeValue(0);
  if (name == null) {
    ParseUtils.missingRequired(reader,Collections.singleton("name"));
  }
  final Set<String> bindings=new HashSet<String>();
  String selector=null;
  Boolean durable=null;
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
    final Element element=Element.forName(reader.getLocalName());
switch (element) {
case ENTRY:
{
        final String entry=reader.getAttributeValue(0);
        bindings.add(entry.trim());
        ParseUtils.requireNoContent(reader);
        break;
      }
case SELECTOR:
{
      if (selector != null) {
        throw ParseUtils.duplicateNamedElement(reader,Element.SELECTOR.getLocalName());
      }
      selector=reader.getElementText().trim();
      break;
    }
case DURABLE:
{
    if (durable != null) {
      throw ParseUtils.duplicateNamedElement(reader,Element.DURABLE.getLocalName());
    }
    durable=Boolean.valueOf(reader.getElementText());
    break;
  }
default :
{
  throw ParseUtils.unexpectedElement(reader);
}
}
}
final JMSQueueAdd action=new JMSQueueAdd(name);
action.setSelector(selector);
action.setBindings(bindings);
action.setDurable(durable);
updates.add(action);
}

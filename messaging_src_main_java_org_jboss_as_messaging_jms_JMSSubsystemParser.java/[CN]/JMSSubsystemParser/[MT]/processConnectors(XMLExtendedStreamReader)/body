{
  final List<ConnectionFactoryConnectorRef> connectors=new ArrayList<ConnectionFactoryConnectorRef>();
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
    String connector=null;
    String backup=null;
    int count=reader.getAttributeCount();
    for (int i=0; i < count; i++) {
      final String value=reader.getAttributeValue(i);
      final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case CONNECTOR_NAME:
{
          connector=value.trim();
          break;
        }
case CONNECTOR_BACKUP_NAME:
{
        backup=value.trim();
        break;
      }
default :
{
      throw ParseUtils.unexpectedAttribute(reader,i);
    }
}
}
if (connector == null) {
throw ParseUtils.missingRequired(reader,Collections.singleton(Attribute.CONNECTOR_NAME));
}
final Element element=Element.forName(reader.getLocalName());
if (element != Element.CONNECTOR_REF) {
throw ParseUtils.unexpectedElement(reader);
}
ParseUtils.requireNoContent(reader);
final ConnectionFactoryConnectorRef ref=new ConnectionFactoryConnectorRef();
ref.setConnectorName(connector);
if (backup != null) {
ref.setBackupName(backup);
}
connectors.add(ref);
}
return connectors;
}

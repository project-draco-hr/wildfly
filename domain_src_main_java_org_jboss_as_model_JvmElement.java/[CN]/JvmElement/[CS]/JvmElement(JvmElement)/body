{
  super();
  this.name=toCombine[0].getName();
  for (  JvmElement element : toCombine) {
    if (!this.name.equals(element.getName())) {
      throw new IllegalArgumentException("Jvm " + element.getName() + " has a different name from the other jvm elements; all must have the same name");
    }
    if (element.getJavaHome() != null) {
      this.javaHome=element.getJavaHome();
    }
    if (element.getDebugOptions() != null) {
      this.debugOptions=element.getDebugOptions();
    }
    if (element.isDebugEnabled() != null) {
      this.debugEnabled=element.isDebugEnabled();
    }
    if (element.isEnvClasspathIgnored() != null) {
      this.envClasspathIgnored=element.isEnvClasspathIgnored();
    }
    if (element.getPermgenSize() != null) {
      this.permgenSize=element.getPermgenSize();
    }
    if (element.getMaxPermgen() != null) {
      this.maxPermgen=element.getMaxPermgen();
    }
    if (element.getHeapSize() != null) {
      this.heapSize=element.getHeapSize();
    }
    if (element.getMaxHeap() != null) {
      this.maxHeap=element.getMaxHeap();
    }
    if (element.getStack() != null) {
      this.stack=element.getStack();
    }
    if (element.getAgentLib() != null) {
      this.agentLib=element.getAgentLib();
    }
    if (element.getAgentPath() != null) {
      this.agentPath=element.getAgentPath();
    }
    if (element.getJavaagent() != null) {
      this.javaagent=element.getJavaagent();
    }
  }
  PropertiesElement[] combinedEnv=new PropertiesElement[toCombine.length];
  for (int i=0; i < toCombine.length; i++) {
    combinedEnv[i]=toCombine[i].getEnvironmentVariables();
  }
  this.environmentVariables=new PropertiesElement(Element.ENVIRONMENT_VARIABLES,true,combinedEnv);
  PropertiesElement[] combinedSysp=new PropertiesElement[toCombine.length];
  for (int i=0; i < toCombine.length; i++) {
    combinedSysp[i]=toCombine[i].getSystemProperties();
  }
  this.systemProperties=new PropertiesElement(Element.SYSTEM_PROPERTIES,true,combinedSysp);
}

{
  Properties properties=new Properties();
  properties.setProperty(ORBConstants.PERSISTENT_SERVER_PORT_PROPERTY,"15151");
  properties.setProperty(ORBConstants.ORB_SERVER_ID_PROPERTY,"1");
  System.setProperty("org.omg.PortableInterceptor.ORBInitializerClass.com.arjuna.ats.jts.orbspecific.jacorb.interceptors.interposition.InterpositionORBInitializerImpl","com.arjuna.ats.jts.orbspecific.jacorb.interceptors.interposition.InterpositionORBInitializerImpl");
  org.omg.CORBA.ORB sunOrb=org.omg.CORBA.ORB.init(new String[0],properties);
  orb=com.arjuna.orbportability.ORB.getInstance("ClientSide");
  orb.setOrb(sunOrb);
  OA oa=OA.getRootOA(orb);
  org.omg.PortableServer.POA rootPOA=org.omg.PortableServer.POAHelper.narrow(sunOrb.resolve_initial_references("RootPOA"));
  oa.setPOA(rootPOA);
  oa.initOA();
  ORBManager.setORB(orb);
  ORBManager.setPOA(oa);
  recoveryManagerPool=Executors.newFixedThreadPool(1);
  recoveryManagerPool.submit(new Callable<String>(){
    @Override public String call() throws Exception {
      RecoveryManager.main(new String[]{"-test"});
      return "Running recovery manager";
    }
  }
);
}

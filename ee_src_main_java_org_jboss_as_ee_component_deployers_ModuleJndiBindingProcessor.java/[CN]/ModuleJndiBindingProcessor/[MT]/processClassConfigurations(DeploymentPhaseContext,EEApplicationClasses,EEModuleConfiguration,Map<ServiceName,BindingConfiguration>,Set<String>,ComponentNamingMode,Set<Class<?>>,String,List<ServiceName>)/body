{
  for (  final Class<?> clazz : classes) {
    new ClassDescriptionTraversal(clazz,applicationClasses){
      @Override protected void handle(      final Class<?> currentClass,      final EEModuleClassDescription classDescription) throws DeploymentUnitProcessingException {
        if (classDescription == null) {
          return;
        }
        if (classDescription.isInvalid()) {
          throw EeLogger.ROOT_LOGGER.componentClassHasErrors(classDescription.getClassName(),componentName,classDescription.getInvalidMessage());
        }
        if (handledClasses.contains(classDescription.getClassName())) {
          return;
        }
        handledClasses.add(classDescription.getClassName());
        if (!MetadataCompleteMarker.isMetadataComplete(phaseContext.getDeploymentUnit())) {
          final Set<BindingConfiguration> classLevelBindings=new HashSet<BindingConfiguration>(classDescription.getBindingConfigurations());
          for (          BindingConfiguration binding : classLevelBindings) {
            final String bindingName=binding.getName();
            final boolean compBinding=bindingName.startsWith("java:comp") || !bindingName.startsWith("java:");
            if (namingMode == ComponentNamingMode.CREATE && compBinding) {
              continue;
            }
            final ContextNames.BindInfo bindInfo=ContextNames.bindInfoForEnvEntry(moduleConfiguration.getApplicationName(),moduleConfiguration.getModuleName(),null,false,binding.getName());
            ROOT_LOGGER.tracef("Binding %s using service %s",binding.getName(),bindInfo.getBinderServiceName());
            if (deploymentDescriptorBindings.containsKey(bindInfo.getBinderServiceName())) {
              continue;
            }
            addJndiBinding(moduleConfiguration,binding,phaseContext,dependencies);
          }
        }
      }
    }
.run();
  }
}

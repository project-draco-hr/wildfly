{
  final DeploymentUnit deploymentUnit=phaseContext.getDeploymentUnit();
  final EEApplicationDescription applicationDescription=deploymentUnit.getAttachment(Attachments.EE_APPLICATION_DESCRIPTION);
  final EEModuleConfiguration moduleConfiguration=deploymentUnit.getAttachment(Attachments.EE_MODULE_CONFIGURATION);
  if (moduleConfiguration == null) {
    return;
  }
  final DeploymentUnit parent=deploymentUnit.getParent() == null ? deploymentUnit : deploymentUnit.getParent();
  final Set<ServiceName> dependencies=parent.getAttachment(org.jboss.as.server.deployment.Attachments.JNDI_DEPENDENCIES);
  final Map<ServiceName,BindingConfiguration> deploymentDescriptorBindings=new HashMap<ServiceName,BindingConfiguration>();
  IntHolder moduleCount=new IntHolder();
  final List<BindingConfiguration> bindingConfigurations=moduleConfiguration.getBindingConfigurations();
  final ServiceName moduleOwnerName=deploymentUnit.getServiceName().append("module").append(moduleConfiguration.getApplicationName()).append(moduleConfiguration.getModuleName());
  for (  BindingConfiguration binding : bindingConfigurations) {
    final ServiceName serviceName=ContextNames.serviceNameOfEnvEntry(moduleConfiguration.getApplicationName(),moduleConfiguration.getModuleName(),null,false,binding.getName());
    deploymentDescriptorBindings.put(serviceName,binding);
    addJndiBinding(moduleConfiguration,binding,phaseContext,serviceName,moduleOwnerName,moduleCount,dependencies);
  }
  for (  final ComponentConfiguration componentConfiguration : moduleConfiguration.getComponentConfigurations()) {
    for (    BindingConfiguration binding : componentConfiguration.getComponentDescription().getBindingConfigurations()) {
      final String bindingName=binding.getName();
      final boolean compBinding=bindingName.startsWith("java:comp") || !bindingName.startsWith("java:");
      if (componentConfiguration.getComponentDescription().getNamingMode() == ComponentNamingMode.CREATE && compBinding) {
        continue;
      }
      final ServiceName serviceName=ContextNames.serviceNameOfEnvEntry(moduleConfiguration.getApplicationName(),moduleConfiguration.getModuleName(),null,false,binding.getName());
      deploymentDescriptorBindings.put(serviceName,binding);
      addJndiBinding(moduleConfiguration,binding,phaseContext,serviceName,moduleOwnerName,moduleCount,dependencies);
    }
  }
  final Set<String> handledClasses=new HashSet<String>();
  for (  final ComponentConfiguration componentConfiguration : moduleConfiguration.getComponentConfigurations()) {
    final Set<EEModuleClassConfiguration> classConfigurations=new HashSet<EEModuleClassConfiguration>();
    classConfigurations.add(componentConfiguration.getModuleClassConfiguration());
    for (    final InterceptorDescription interceptor : componentConfiguration.getComponentDescription().getAllInterceptors()) {
      final EEModuleClassConfiguration interceptorClass=applicationDescription.getClassConfiguration(interceptor.getInterceptorClassName());
      if (interceptorClass != null) {
        classConfigurations.add(interceptorClass);
      }
    }
    processClassConfigurations(phaseContext,applicationDescription,moduleConfiguration,deploymentDescriptorBindings,handledClasses,componentConfiguration.getComponentDescription().getNamingMode(),classConfigurations,componentConfiguration.getComponentName(),moduleOwnerName,moduleCount,dependencies);
  }
}

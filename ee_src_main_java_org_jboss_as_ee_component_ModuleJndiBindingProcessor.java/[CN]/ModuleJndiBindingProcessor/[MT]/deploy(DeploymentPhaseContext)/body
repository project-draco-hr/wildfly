{
  final DeploymentUnit deploymentUnit=phaseContext.getDeploymentUnit();
  final EEApplicationDescription applicationDescription=deploymentUnit.getAttachment(Attachments.EE_APPLICATION_DESCRIPTION);
  final EEModuleConfiguration moduleConfiguration=deploymentUnit.getAttachment(Attachments.EE_MODULE_CONFIGURATION);
  if (moduleConfiguration == null) {
    return;
  }
  final Map<ServiceName,BindingConfiguration> existingBindings=new HashMap<ServiceName,BindingConfiguration>();
  final Map<ServiceName,BindingConfiguration> deploymentDescriptorBindings=new HashMap<ServiceName,BindingConfiguration>();
  final Set<BindingConfiguration> bindingConfigurations=new HashSet<BindingConfiguration>(moduleConfiguration.getBindingConfigurations());
  for (  BindingConfiguration binding : bindingConfigurations) {
    final ServiceName serviceName=ContextNames.serviceNameOfEnvEntry(moduleConfiguration.getApplicationName(),moduleConfiguration.getModuleName(),null,false,binding.getName());
    final BindingConfiguration existingConfiguration=existingBindings.get(serviceName);
    if (existingConfiguration != null) {
      if (!existingConfiguration.equalTo(binding,phaseContext)) {
        throw new DeploymentUnitProcessingException("Bindings with the same name at " + binding.getName() + " "+ binding+ " and "+ existingConfiguration);
      }
 else {
        continue;
      }
    }
    existingBindings.put(serviceName,binding);
    deploymentDescriptorBindings.put(serviceName,binding);
    addJndiBinding(moduleConfiguration,binding,phaseContext,serviceName);
  }
  for (  final ComponentConfiguration componentConfiguration : moduleConfiguration.getComponentConfigurations()) {
    for (    BindingConfiguration binding : componentConfiguration.getComponentDescription().getBindingConfigurations()) {
      final String bindingName=binding.getName();
      final boolean compBinding=bindingName.startsWith("java:comp") || !bindingName.startsWith("java:");
      if (componentConfiguration.getComponentDescription().getNamingMode() == ComponentNamingMode.CREATE && compBinding) {
        continue;
      }
      final ServiceName serviceName=ContextNames.serviceNameOfEnvEntry(moduleConfiguration.getApplicationName(),moduleConfiguration.getModuleName(),null,false,binding.getName());
      final BindingConfiguration existingConfiguration=existingBindings.get(serviceName);
      if (existingConfiguration != null) {
        if (!existingConfiguration.equalTo(binding,phaseContext)) {
          throw new DeploymentUnitProcessingException("Bindings with the same name at " + binding.getName() + " "+ binding+ " and "+ existingConfiguration);
        }
 else {
          continue;
        }
      }
      existingBindings.put(serviceName,binding);
      deploymentDescriptorBindings.put(serviceName,binding);
      addJndiBinding(moduleConfiguration,binding,phaseContext,serviceName);
    }
  }
  final Set<String> handledClasses=new HashSet<String>();
  for (  final ComponentConfiguration componentConfiguration : moduleConfiguration.getComponentConfigurations()) {
    final Set<EEModuleClassConfiguration> classConfigurations=new HashSet<EEModuleClassConfiguration>();
    classConfigurations.add(componentConfiguration.getModuleClassConfiguration());
    for (    final InterceptorDescription interceptor : componentConfiguration.getComponentDescription().getAllInterceptors()) {
      final EEModuleClassConfiguration interceptorClass=applicationDescription.getClassConfiguration(interceptor.getInterceptorClassName());
      if (interceptorClass != null) {
        classConfigurations.add(interceptorClass);
      }
    }
    processClassConfigurations(phaseContext,applicationDescription,moduleConfiguration,existingBindings,deploymentDescriptorBindings,handledClasses,componentConfiguration.getComponentDescription().getNamingMode(),classConfigurations);
  }
}

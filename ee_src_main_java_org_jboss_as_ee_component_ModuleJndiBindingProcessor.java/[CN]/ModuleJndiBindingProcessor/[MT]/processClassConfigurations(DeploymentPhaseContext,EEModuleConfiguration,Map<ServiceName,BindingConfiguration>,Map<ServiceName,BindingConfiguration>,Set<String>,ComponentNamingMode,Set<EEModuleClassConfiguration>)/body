{
  for (  final EEModuleClassConfiguration classConfiguration : classConfigurations) {
    new ClassDescriptionTraversal(classConfiguration,moduleConfiguration){
      @Override protected void handle(      final EEModuleClassConfiguration configuration,      final EEModuleClassDescription classDescription) throws DeploymentUnitProcessingException {
        if (handledClasses.contains(classDescription.getClassName())) {
          return;
        }
        handledClasses.add(classDescription.getClassName());
        final Set<BindingConfiguration> classLevelBindings=new HashSet(configuration.getBindingConfigurations());
        for (        BindingConfiguration binding : classLevelBindings) {
          final String bindingName=binding.getName();
          final boolean compBinding=bindingName.startsWith("java:comp") || !bindingName.startsWith("java:");
          if (namingMode == ComponentNamingMode.CREATE && compBinding) {
            continue;
          }
          final ServiceName serviceName=ContextNames.serviceNameOfEnvEntry(moduleConfiguration.getApplicationName(),moduleConfiguration.getModuleName(),null,false,binding.getName());
          if (deploymentDescriptorBindings.containsKey(serviceName)) {
            continue;
          }
          final BindingConfiguration existingConfiguration=existingBindings.get(serviceName);
          if (existingConfiguration != null) {
            if (!existingConfiguration.equalTo(binding,phaseContext)) {
              throw new DeploymentUnitProcessingException("Bindings with the same name at " + binding.getName() + " "+ binding+ " and "+ existingConfiguration);
            }
 else {
              continue;
            }
          }
          existingBindings.put(serviceName,binding);
          addJndiBinding(moduleConfiguration,binding,phaseContext,serviceName);
        }
      }
    }
.run();
  }
}

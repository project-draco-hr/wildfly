{
  final String jbossDist=System.getProperty("jboss.dist");
  if (jbossDist == null) {
    fail("jboss.dist system property is not set");
  }
  final String modulePath=System.getProperty("module.path");
  if (modulePath == null) {
    fail("module.path system property is not set");
  }
  final ProcessBuilder builder=new ProcessBuilder();
  final List<String> command=new ArrayList<String>();
  command.add("java");
  TestSuiteEnvironment.getIpv6Args(command);
  command.add("-jar");
  command.add(jbossDist + File.separatorChar + "jboss-modules.jar");
  command.add("-mp");
  command.add(modulePath);
  command.add("org.jboss.as.cli");
  command.add("-c");
  command.add(cmd);
  builder.command(command);
  Process cliProc=null;
  try {
    cliProc=builder.start();
  }
 catch (  IOException e) {
    fail("Failed to start CLI process: " + e.getLocalizedMessage());
  }
  int exitCode=0;
  try {
    exitCode=cliProc.waitFor();
  }
 catch (  InterruptedException e) {
    fail("Interrupted waiting for the CLI process.");
  }
  if (logFailure && exitCode != 0) {
    System.out.println("Failed to execute '" + cmd + "'");
    try {
      int bytesTotal=cliProc.getInputStream().available();
      if (bytesTotal > 0) {
        final byte[] bytes=new byte[bytesTotal];
        cliProc.getInputStream().read(bytes);
        System.out.println("Command's output: '" + new String(bytes) + "'");
      }
    }
 catch (    IOException e) {
      fail("Failed to read command's output: " + e.getLocalizedMessage());
    }
    try {
      int bytesTotal=cliProc.getErrorStream().available();
      if (bytesTotal > 0) {
        final byte[] bytes=new byte[bytesTotal];
        cliProc.getErrorStream().read(bytes);
        System.out.println("Command's error log: '" + new String(bytes) + "'");
      }
 else {
        System.out.println("No output data for the command.");
      }
    }
 catch (    IOException e) {
      fail("Failed to read command's error output: " + e.getLocalizedMessage());
    }
  }
  return exitCode;
}

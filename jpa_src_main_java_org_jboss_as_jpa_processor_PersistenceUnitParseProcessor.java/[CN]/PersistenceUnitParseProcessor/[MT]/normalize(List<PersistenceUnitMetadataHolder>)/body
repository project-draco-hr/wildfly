{
  Map<String,PersistenceUnitMetadata> flattened=new HashMap<String,PersistenceUnitMetadata>();
  for (  PersistenceUnitMetadataHolder puHolder : listPUHolders) {
    for (    PersistenceUnitMetadata pu : puHolder.getPersistenceUnits()) {
      if (!flattened.containsKey(pu.getPersistenceUnitName())) {
        flattened.put(pu.getPersistenceUnitName(),pu);
      }
 else {
        PersistenceUnitMetadata first=flattened.get(pu.getPersistenceUnitName());
        PersistenceUnitMetadata duplicate=pu;
        log.warn("duplicate Persistence Unit definition for " + duplicate.getPersistenceUnitName() + " in application.  One of the duplicate persistence.xml should be removed from the application."+ " Application deployment will continue with the persistence.xml definitions from "+ first.getScopedPersistenceUnitName()+ " used.  The persistence.xml definitions from "+ duplicate.getScopedPersistenceUnitName()+ " will be ignored.");
      }
    }
  }
  PersistenceUnitMetadataHolder holder=new PersistenceUnitMetadataHolder();
  holder.setPersistenceUnits(new ArrayList<PersistenceUnitMetadata>(flattened.values()));
  return holder;
}

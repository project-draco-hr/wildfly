{
  Class[] intfs=cls.getInterfaces();
  ArrayList a=new ArrayList();
  ArrayList b=new ArrayList();
  for (int i=0; i < intfs.length; ++i) {
    if (intfs[i] == java.rmi.Remote.class)     continue;
    if (intfs[i] == java.io.Serializable.class)     continue;
    if (intfs[i] == java.io.Externalizable.class)     continue;
    if (!RmiIdlUtil.isAbstractValueType(intfs[i])) {
      a.add(InterfaceAnalysis.getInterfaceAnalysis(intfs[i]));
    }
 else {
      b.add(ValueAnalysis.getValueAnalysis(intfs[i]));
    }
  }
  interfaces=new InterfaceAnalysis[a.size()];
  interfaces=(InterfaceAnalysis[])a.toArray(interfaces);
  abstractBaseValuetypes=new ValueAnalysis[b.size()];
  abstractBaseValuetypes=(ValueAnalysis[])b.toArray(abstractBaseValuetypes);
}

{
  for (  AttributeDefinition attribute : CacheResourceDefinition.ATTRIBUTES) {
    sharedAttributeResolver.put(attribute.getName(),"cache");
  }
  for (  AttributeDefinition attribute : ClusteredCacheResourceDefinition.ATTRIBUTES) {
    sharedAttributeResolver.put(attribute.getName(),"clustered-cache");
  }
  for (  AttributeDefinition attribute : StoreResourceDefinition.ATTRIBUTES) {
    sharedAttributeResolver.put(attribute.getName(),"store");
  }
  for (  AttributeDefinition attribute : JDBCStoreResourceDefinition.ATTRIBUTES) {
    sharedAttributeResolver.put(attribute.getName(),"jdbc-store");
  }
  this.initMetric(CacheMetric.class,"cache");
  this.initMetric(ClusteredCacheMetric.class,"clustered-cache");
  this.initMetric(EvictionMetric.class,"eviction");
  this.initMetric(LockingMetric.class,"locking");
  this.initMetric(StoreMetric.class,"store");
  this.initMetric(TransactionMetric.class,"transaction");
  sharedAttributeResolver.put(ModelKeys.TRANSPORT,null);
  sharedAttributeResolver.put(ModelKeys.LOCKING,null);
  sharedAttributeResolver.put(ModelKeys.TRANSACTION,null);
  sharedAttributeResolver.put(ModelKeys.EVICTION,null);
  sharedAttributeResolver.put(ModelKeys.EXPIRATION,null);
  sharedAttributeResolver.put(ModelKeys.STATE_TRANSFER,null);
  sharedAttributeResolver.put(ModelKeys.STORE,null);
  sharedAttributeResolver.put(ModelKeys.FILE_STORE,null);
  sharedAttributeResolver.put(ModelKeys.REMOTE_STORE,null);
  sharedAttributeResolver.put(ModelKeys.STRING_KEYED_JDBC_STORE,null);
  sharedAttributeResolver.put(ModelKeys.BINARY_KEYED_JDBC_STORE,null);
  sharedAttributeResolver.put(ModelKeys.MIXED_KEYED_JDBC_STORE,null);
  sharedAttributeResolver.put(ModelKeys.WRITE_BEHIND,null);
  sharedAttributeResolver.put(ModelKeys.PROPERTY,null);
  sharedAttributeResolver.put(ModelKeys.BACKUP_FOR,null);
}

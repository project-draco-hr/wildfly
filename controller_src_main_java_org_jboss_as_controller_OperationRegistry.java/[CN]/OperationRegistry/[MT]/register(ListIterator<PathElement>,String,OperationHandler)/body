{
  if (!iterator.hasNext()) {
    if (handlersUpdater.putIfAbsent(this,operationName,handler) != null) {
      throw new IllegalArgumentException("A handler named '" + operationName + "' is already registered at location '"+ getLocationString()+ "'");
    }
  }
  final PathElement element=iterator.next();
  for (; ; ) {
    final String key=element.getKey();
    final Map<String,Subregistry> snapshot=childrenUpdater.get(this);
    final Subregistry subregistry=snapshot.get(key);
    if (subregistry != null) {
      subregistry.register(element.getValue(),iterator,operationName,handler);
    }
 else {
      final Subregistry newRegistry=new Subregistry(key,this);
      final Subregistry appearing=childrenUpdater.putAtomic(this,key,newRegistry,snapshot);
      if (appearing == null) {
        newRegistry.register(element.getValue(),iterator,operationName,handler);
        return;
      }
 else       if (appearing != newRegistry) {
        appearing.register(element.getValue(),iterator,operationName,handler);
      }
    }
  }
}

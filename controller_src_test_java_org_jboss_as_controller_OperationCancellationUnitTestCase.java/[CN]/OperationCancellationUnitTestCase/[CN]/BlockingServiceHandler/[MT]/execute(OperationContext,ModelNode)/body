{
  context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS);
  context.addStep(new OperationStepHandler(){
    @Override public void execute(    final OperationContext context,    ModelNode operation){
      Service<Void> bad=new Service<Void>(){
        @Override public Void getValue() throws IllegalStateException, IllegalArgumentException {
          return null;
        }
        @Override public void start(        StartContext context) throws StartException {
          block();
        }
        @Override public void stop(        StopContext context){
          releaseBlockingThreads();
        }
      }
;
      final ServiceName svcName=ServiceName.JBOSS.append("bad-service");
      ServiceVerificationHandler verificationHandler=new ServiceVerificationHandler();
      context.getServiceTarget().addService(svcName,bad).addListener(verificationHandler).install();
      context.addStep(verificationHandler,OperationContext.Stage.VERIFY);
      context.completeStep(new OperationContext.RollbackHandler(){
        @Override public void handleRollback(        OperationContext context,        ModelNode operation){
          context.removeService(svcName);
        }
      }
);
    }
  }
,OperationContext.Stage.RUNTIME);
  context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);
}

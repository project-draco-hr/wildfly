{
  KernelServices legacyServices=kernelServices.getLegacyServices(modelVersion);
  ModelNode op=new ModelNode();
  op.get(OP_ADDR).setEmptyList();
  op.get(OP).set(READ_RESOURCE_OPERATION);
  op.get(RECURSIVE).set(true);
  op.get(INCLUDE_DEFAULTS).set(false);
  ModelNode legacyModel;
  try {
    legacyModel=legacyServices.executeForResult(op);
  }
 catch (  OperationFailedException e) {
    throw new RuntimeException(e);
  }
  removeDefaultAttributesWronglyShowingInRecursiveReadResource(modelVersion,legacyServices,legacyModel);
  ModelNode transformed=kernelServices.readTransformedModel(modelVersion);
  adjustUndefinedInTransformedToEmpty(modelVersion,legacyModel,transformed);
  if (legacyModelFixer != null) {
    legacyModel=legacyModelFixer.fixModel(legacyModel);
  }
  if (transformedModelFixer != null) {
    transformed=transformedModelFixer.fixModel(transformed);
  }
  temporaryHack(transformed,legacyModel);
  ModelTestUtils.compare(legacyModel,transformed,true);
  return legacyModel;
}

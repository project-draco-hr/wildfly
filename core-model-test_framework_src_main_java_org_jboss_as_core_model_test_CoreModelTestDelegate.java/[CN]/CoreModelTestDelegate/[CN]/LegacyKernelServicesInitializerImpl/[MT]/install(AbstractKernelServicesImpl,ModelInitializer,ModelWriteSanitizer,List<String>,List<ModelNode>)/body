{
  if (testControllerVersion == null) {
    throw new IllegalStateException();
  }
  if (!skipReverseCheck) {
    bootCurrentVersionWithLegacyBootOperations(bootOperations,modelInitializer,modelWriteSanitizer,contentRepositoryContents,mainServices);
  }
  classLoaderBuilder.addParentFirstClassPattern("org.jboss.as.core.model.bridge.shared.*");
  classLoaderBuilder.addMavenResourceURL("org.jboss.as:jboss-as-core-model-test-framework:" + ModelTestControllerVersion.CurrentVersion.VERSION);
  classLoaderBuilder.addMavenResourceURL("org.jboss.as:jboss-as-model-test:" + ModelTestControllerVersion.CurrentVersion.VERSION);
  if (testControllerVersion != ModelTestControllerVersion.MASTER) {
    classLoaderBuilder.addRecursiveMavenResourceURL("org.jboss.as:jboss-as-host-controller:" + testControllerVersion.getMavenGavVersion());
    classLoaderBuilder.addMavenResourceURL("org.jboss.as:jboss-as-core-model-test-controller-" + testControllerVersion.getTestControllerVersion() + ":"+ ModelTestControllerVersion.CurrentVersion.VERSION);
  }
  ClassLoader legacyCl=classLoaderBuilder.build();
  ScopedKernelServicesBootstrap scopedBootstrap=new ScopedKernelServicesBootstrap(legacyCl);
  LegacyControllerKernelServicesProxy legacyServices=scopedBootstrap.createKernelServices(bootOperations,getOperationValidationFilter(),modelVersion,modelInitializerEntries);
  return legacyServices;
}

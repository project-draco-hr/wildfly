{
  KernelServicesBuilder reverseServicesBuilder=createKernelServicesBuilder(TestModelType.DOMAIN).setBootOperations(bootOperations).setModelInitializer(modelInitializer,modelWriteSanitizer);
  for (  String hash : contentRepositoryHashes) {
    reverseServicesBuilder.createContentRepositoryContent(hash);
  }
  KernelServices reverseServices=reverseServicesBuilder.build();
  if (reverseServices.getBootError() != null) {
    Throwable t=reverseServices.getBootError();
    if (t instanceof Exception) {
      throw (Exception)t;
    }
    throw new Exception(t);
  }
  Assert.assertTrue(reverseServices.getBootError() == null ? "error" : reverseServices.getBootError().getMessage(),reverseServices.isSuccessfulBoot());
  ModelNode reverseSubsystem=reverseServices.readWholeModel();
  if (reverseCheckModelFixer != null) {
    reverseCheckModelFixer.fixModel(reverseSubsystem);
  }
  ModelTestUtils.compare(mainServices.readWholeModel(),reverseSubsystem);
  return reverseServices;
}

{
  bootOperationBuilder.validateNotAlreadyBuilt();
  List<ModelNode> bootOperations=bootOperationBuilder.build();
  AbstractKernelServicesImpl kernelServices=AbstractKernelServicesImpl.create(processType,runningModeControl,validateOperations,bootOperations,testParser,null,type,modelInitializer,extensionRegistry);
  CoreModelTestDelegate.this.kernelServices.add(kernelServices);
  if (validateDescription) {
    validateDescriptionProviders(type,kernelServices);
  }
  ModelTestUtils.validateModelDescriptions(PathAddress.EMPTY_ADDRESS,kernelServices.getRootRegistration());
  for (  Map.Entry<ModelVersion,LegacyKernelServicesInitializerImpl> entry : legacyControllerInitializers.entrySet()) {
    LegacyKernelServicesInitializerImpl legacyInitializer=entry.getValue();
    List<ModelNode> transformedBootOperations=new ArrayList<ModelNode>();
    for (    ModelNode op : bootOperations) {
      ModelNode transformed=kernelServices.transformOperation(entry.getKey(),op).getTransformedOperation();
      if (transformed != null) {
        transformedBootOperations.add(transformed);
      }
    }
    KernelServices legacyServices=legacyInitializer.install(transformedBootOperations);
    kernelServices.addLegacyKernelService(entry.getKey(),legacyServices);
  }
  return kernelServices;
}

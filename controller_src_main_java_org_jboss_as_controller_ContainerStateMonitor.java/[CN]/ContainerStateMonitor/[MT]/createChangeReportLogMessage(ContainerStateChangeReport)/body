{
  final StringBuilder msg=new StringBuilder();
  msg.append(ControllerLogger.ROOT_LOGGER.serviceStatusReportHeader());
  if (!changeReport.getMissingServices().isEmpty()) {
    msg.append(ControllerLogger.ROOT_LOGGER.serviceStatusReportDependencies());
    for (    Map.Entry<ServiceName,MissingDependencyInfo> entry : changeReport.getMissingServices().entrySet()) {
      if (!entry.getValue().isUnavailable()) {
        msg.append(ControllerLogger.ROOT_LOGGER.serviceStatusReportMissing(entry.getKey(),createDependentsString(entry.getValue().getDependents())));
      }
 else {
        msg.append(ControllerLogger.ROOT_LOGGER.serviceStatusReportUnavailable(entry.getKey(),createDependentsString(entry.getValue().getDependents())));
      }
    }
  }
  if (!changeReport.getNoLongerMissingServices().isEmpty()) {
    msg.append(ControllerLogger.ROOT_LOGGER.serviceStatusReportCorrected());
    for (    Map.Entry<ServiceName,Boolean> entry : changeReport.getNoLongerMissingServices().entrySet()) {
      if (entry.getValue()) {
        msg.append(ControllerLogger.ROOT_LOGGER.serviceStatusReportAvailable(entry.getKey()));
      }
 else {
        msg.append(ControllerLogger.ROOT_LOGGER.serviceStatusReportNoLongerRequired(entry.getKey()));
      }
    }
  }
  if (!changeReport.getFailedControllers().isEmpty()) {
    msg.append(ControllerLogger.ROOT_LOGGER.serviceStatusReportFailed());
    for (    ServiceController<?> controller : changeReport.getFailedControllers()) {
      msg.append("      ").append(controller.getName());
      final StartException startException=controller.getStartException();
      if (startException != null) {
        msg.append(": ").append(startException.toString());
      }
      msg.append('\n');
    }
  }
  return msg.toString();
}

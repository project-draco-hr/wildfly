{
  final StringBuilder msg=new StringBuilder();
  msg.append(MESSAGES.serviceStatusReportHeader());
  if (!changeReport.getMissingServices().isEmpty()) {
    msg.append(MESSAGES.serviceStatusReportDependencies());
    for (    Map.Entry<ServiceName,MissingDependencyInfo> entry : changeReport.getMissingServices().entrySet()) {
      if (!entry.getValue().isUnavailable()) {
        msg.append(MESSAGES.serviceStatusReportMissing(entry.getKey(),createDependentsString(entry.getValue().getDependents())));
      }
 else {
        msg.append(MESSAGES.serviceStatusReportUnavailable(entry.getKey(),createDependentsString(entry.getValue().getDependents())));
      }
    }
  }
  if (!changeReport.getNoLongerMissingServices().isEmpty()) {
    msg.append(MESSAGES.serviceStatusReportCorrected());
    for (    Map.Entry<ServiceName,Boolean> entry : changeReport.getNoLongerMissingServices().entrySet()) {
      if (entry.getValue()) {
        msg.append(MESSAGES.serviceStatusReportAvailable(entry.getKey()));
      }
 else {
        msg.append(MESSAGES.serviceStatusReportNoLongerRequired(entry.getKey()));
      }
    }
  }
  if (!changeReport.getFailedControllers().isEmpty()) {
    msg.append(MESSAGES.serviceStatusReportFailed());
    for (    Map.Entry<ServiceController<?>,String> entry : changeReport.getFailedControllers().entrySet()) {
      msg.append("      ").append(entry.getKey().getName()).append(": ").append(entry.getValue()).append('\n');
    }
  }
  return msg.toString();
}

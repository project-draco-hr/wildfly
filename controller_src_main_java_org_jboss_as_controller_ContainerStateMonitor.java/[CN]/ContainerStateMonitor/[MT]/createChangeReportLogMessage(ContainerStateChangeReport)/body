{
  final StringBuilder msg=new StringBuilder();
  msg.append("Service status report\n");
  if (!changeReport.getMissingServices().isEmpty()) {
    msg.append("   New missing/unsatisfied dependencies:\n");
    for (    Map.Entry<ServiceName,MissingDependencyInfo> entry : changeReport.getMissingServices().entrySet()) {
      if (!entry.getValue().isUnavailable()) {
        msg.append("      ").append(entry.getKey()).append(" (missing)\n");
      }
 else {
        msg.append("      ").append(entry.getKey()).append(" (unavailable)\n");
      }
    }
  }
  if (!changeReport.getNoLongerMissingServices().isEmpty()) {
    msg.append("   Newly corrected services:\n");
    for (    Map.Entry<ServiceName,Boolean> entry : changeReport.getNoLongerMissingServices().entrySet()) {
      if (!entry.getValue()) {
        msg.append("      ").append(entry.getKey()).append(" (no longer required)\n");
      }
 else {
        msg.append("      ").append(entry.getKey()).append(" (now available)\n");
      }
    }
  }
  if (!changeReport.getFailedControllers().isEmpty()) {
    msg.append("  Services which failed to start:\n");
    for (    Map.Entry<ServiceController<?>,String> entry : changeReport.getFailedControllers().entrySet()) {
      msg.append("      ").append(entry.getKey().getName()).append(": ").append(entry.getValue()).append('\n');
    }
  }
  return msg.toString();
}

{
  ModelNode op=new ModelNode();
  op.get("operation").set("composite");
  op.get("address").setEmptyList();
  ModelNode steps=op.get("steps");
  steps.setEmptyList();
  op.get("rollback-on-runtime-failure").set(plan.isGlobalRollback());
  for (  DeploymentActionImpl action : plan.getDeploymentActionImpls()) {
    ModelNode step=new ModelNode();
    String uniqueName=action.getDeploymentUnitUniqueName();
switch (action.getType()) {
case ADD:
{
        configureDeploymentOperation(step,"add",uniqueName);
        step.get("runtime-name").set(action.getNewContentFileName());
        step.get("hash").set(action.getNewContentHash());
        break;
      }
case DEPLOY:
{
      configureDeploymentOperation(step,"deploy",uniqueName);
      break;
    }
case FULL_REPLACE:
{
    step.get("operation").set("full-replace-deployment");
    step.get("address").setEmptyList();
    step.get("name").set(uniqueName);
    step.get("runtime-name").set(action.getNewContentFileName());
    step.get("hash").set(action.getNewContentHash());
    break;
  }
case REDEPLOY:
{
  configureDeploymentOperation(step,"redeploy",uniqueName);
  break;
}
case REMOVE:
{
configureDeploymentOperation(step,"remove",uniqueName);
break;
}
case REPLACE:
{
step.get("operation").set("replace-deployment");
step.get("address").setEmptyList();
step.get("name").set(uniqueName);
step.get("to-replace").set(action.getReplacedDeploymentUnitUniqueName());
break;
}
case UNDEPLOY:
{
configureDeploymentOperation(step,"undeploy",uniqueName);
break;
}
default :
{
throw new IllegalStateException("Unknown action type " + action.getType());
}
}
steps.add(step);
}
return op;
}

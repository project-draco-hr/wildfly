{
  GroupRpcDispatcher rpcDispatcher=mock(GroupRpcDispatcher.class);
  GroupMembershipNotifier notifier=mock(GroupMembershipNotifier.class);
  LocalLockHandler handler=mock(LocalLockHandler.class);
  when(rpcDispatcher.isConsistentWith(notifier)).thenReturn(true);
  when(rpcDispatcher.getClusterNode()).thenReturn(node);
  when(rpcDispatcher.getGroupName()).thenReturn("TestPartition");
  ArgumentCaptor<RpcTarget> c=ArgumentCaptor.forClass(RpcTarget.class);
  List<ClusterNode> view=getView(node,viewPos,viewSize);
  when(rpcDispatcher.getClusterNodes()).thenReturn(view);
  when(rpcDispatcher.isConsistentWith(notifier)).thenReturn(true);
  T testee=createClusteredLockManager("test",rpcDispatcher,notifier,handler);
  testee.start();
  verify(rpcDispatcher).registerRPCHandler(eq("test"),c.capture());
  verify(notifier).registerGroupMembershipListener(same(testee));
  verify(handler).setLocalNode(same(node));
  return new TesteeSet<T>(testee,c.getValue());
}

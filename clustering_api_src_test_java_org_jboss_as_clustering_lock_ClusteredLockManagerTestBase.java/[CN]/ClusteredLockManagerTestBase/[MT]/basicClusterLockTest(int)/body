{
  int viewPos=viewSize == 1 ? 0 : 1;
  TesteeSet<T> testeeSet=getTesteeSet(node1,viewPos,viewSize);
  AbstractClusterLockSupport testee=testeeSet.impl;
  GroupRpcDispatcher rpcDispatcher=testee.getGroupRpcDispatcher();
  LocalLockHandler handler=testee.getLocalHandler();
  List<RemoteLockResponse> rspList=new ArrayList<RemoteLockResponse>();
  for (int i=0; i < viewSize - 1; i++) {
    rspList.add(new RemoteLockResponse(null,RemoteLockResponse.Flag.OK));
  }
  when(rpcDispatcher.getMethodCallTimeout()).thenReturn(60000l);
  when(rpcDispatcher.callMethodOnCluster(eq("test"),eq("remoteLock"),LockParamsMatcher.eqLockParams(node1,200000),AdditionalMatchers.aryEq(AbstractClusterLockSupport.REMOTE_LOCK_TYPES),eq(RemoteLockResponse.class),eq(true),eq(NULL_FILTER),anyInt(),eq(false))).thenReturn(rspList);
  assertTrue(testee.lock("test",200000));
  verify(handler).lockFromCluster(eq("test"),eq(node1),anyLong());
}

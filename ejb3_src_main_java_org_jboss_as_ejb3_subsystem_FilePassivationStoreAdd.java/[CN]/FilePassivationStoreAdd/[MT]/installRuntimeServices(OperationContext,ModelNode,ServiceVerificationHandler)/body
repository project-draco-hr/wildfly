{
  String name=model.require(EJB3SubsystemModel.NAME).asString();
  NonClusteredBackingCacheEntryStoreSourceService<?,?,?> service=new NonClusteredBackingCacheEntryStoreSourceService<Serializable,Cacheable<Serializable>,Serializable>(name);
  NonClusteredBackingCacheEntryStoreSource<?,?,?> source=service.getValue();
  if (model.hasDefined(EJB3SubsystemModel.RELATIVE_TO)) {
    source.setRelativeTo(model.get(EJB3SubsystemModel.RELATIVE_TO).asString());
  }
  if (model.hasDefined(EJB3SubsystemModel.GROUPS_PATH)) {
    source.setGroupDirectoryName(model.get(EJB3SubsystemModel.GROUPS_PATH).asString());
  }
  if (model.hasDefined(EJB3SubsystemModel.SESSIONS_PATH)) {
    source.setSessionDirectoryName(model.get(EJB3SubsystemModel.SESSIONS_PATH).asString());
  }
  if (model.hasDefined(EJB3SubsystemModel.SUBDIRECTORY_COUNT)) {
    source.setSubdirectoryCount(model.get(EJB3SubsystemModel.SUBDIRECTORY_COUNT).asInt());
  }
  return Collections.<ServiceController<?>>singleton(this.installBackingCacheEntryStoreSourceService(service,context,model,verificationHandler));
}

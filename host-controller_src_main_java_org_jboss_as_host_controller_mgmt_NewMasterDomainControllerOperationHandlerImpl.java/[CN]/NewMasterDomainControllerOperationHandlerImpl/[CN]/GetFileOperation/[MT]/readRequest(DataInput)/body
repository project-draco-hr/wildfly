{
  final byte rootId;
  final String filePath;
  final FileRepository localFileRepository=domainController.getFileRepository();
  expectHeader(input,NewDomainControllerProtocol.PARAM_ROOT_ID);
  rootId=input.readByte();
  expectHeader(input,NewDomainControllerProtocol.PARAM_FILE_PATH);
  filePath=input.readUTF();
switch (rootId) {
case NewDomainControllerProtocol.PARAM_ROOT_ID_FILE:
{
      localPath=localFileRepository.getFile(filePath);
      break;
    }
case NewDomainControllerProtocol.PARAM_ROOT_ID_CONFIGURATION:
{
    localPath=localFileRepository.getConfigurationFile(filePath);
    break;
  }
case NewDomainControllerProtocol.PARAM_ROOT_ID_DEPLOYMENT:
{
  byte[] hash=HashUtil.hexStringToByteArray(filePath);
  localPath=localFileRepository.getDeploymentRoot(hash);
  break;
}
default :
{
throw new IOException(String.format("Invalid root id [%d]",rootId));
}
}
}

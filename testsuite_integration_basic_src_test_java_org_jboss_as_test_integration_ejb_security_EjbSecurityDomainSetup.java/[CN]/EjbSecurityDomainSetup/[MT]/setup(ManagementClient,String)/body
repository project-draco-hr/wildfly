{
  final List<ModelNode> updates=new ArrayList<ModelNode>();
  ModelNode op=new ModelNode();
  op.get(OP).set(ADD);
  op.get(OP_ADDR).add(SUBSYSTEM,"security");
  op.get(OP_ADDR).add(SECURITY_DOMAIN,getSecurityDomainName());
  updates.add(op);
  op=new ModelNode();
  op.get(OP).set(ADD);
  op.get(OP_ADDR).add(SUBSYSTEM,"security");
  op.get(OP_ADDR).add(SECURITY_DOMAIN,getSecurityDomainName());
  op.get(OP_ADDR).add(AUTHENTICATION,Constants.CLASSIC);
  ModelNode loginModule=op.get(Constants.LOGIN_MODULES).add();
  loginModule.get(CODE).set("Remoting");
  if (isUsersRolesRequired()) {
    loginModule.get(FLAG).set("optional");
  }
 else {
    loginModule.get(FLAG).set("required");
  }
  loginModule.get(Constants.MODULE_OPTIONS).add("password-stacking","useFirstPass");
  if (isUsersRolesRequired()) {
    loginModule=op.get(Constants.LOGIN_MODULES).add();
    loginModule.get(CODE).set("UsersRoles");
    loginModule.get(FLAG).set("required");
    loginModule.get(Constants.MODULE_OPTIONS).add("password-stacking","useFirstPass");
  }
  op.get(OPERATION_HEADERS).get(ALLOW_RESOURCE_SERVICE_RESTART).set(true);
  updates.add(op);
  applyUpdates(managementClient.getControllerClient(),updates);
}

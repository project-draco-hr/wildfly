{
  final ManagementChannelHandler handler=new ManagementChannelHandler(ManagementClientChannelStrategy.create(channel),getExecutor());
  UserInfo userInfo=channel.getConnection().getUserInfo();
  if (userInfo instanceof SubjectUserInfo) {
    handler.addHandlerFactory(new ModelControllerClientOperationHandler(getController(),handler,((SubjectUserInfo)userInfo).getSubject()));
  }
 else {
    handler.addHandlerFactory(new ModelControllerClientOperationHandler(getController(),handler));
  }
  final HandleableCloseable.Key key=channel.addCloseHandler(new CloseHandler<Channel>(){
    @Override public void handleClose(    Channel closed,    IOException exception){
      handler.shutdown();
      boolean interrupted=false;
      try {
        if (!handler.awaitCompletion(CHANNEL_SHUTDOWN_TIMEOUT,TimeUnit.MILLISECONDS)) {
          ControllerLogger.ROOT_LOGGER.gracefulManagementChannelHandlerShutdownTimedOut(CHANNEL_SHUTDOWN_TIMEOUT);
        }
      }
 catch (      InterruptedException e) {
        interrupted=true;
        ControllerLogger.ROOT_LOGGER.gracefulManagementChannelHandlerShutdownFailed(e);
      }
catch (      Exception e) {
        ControllerLogger.ROOT_LOGGER.gracefulManagementChannelHandlerShutdownFailed(e);
      }
 finally {
        handler.shutdownNow();
        if (interrupted) {
          Thread.currentThread().interrupt();
        }
      }
    }
  }
);
  channel.receiveMessage(handler.getReceiver());
  return key;
}

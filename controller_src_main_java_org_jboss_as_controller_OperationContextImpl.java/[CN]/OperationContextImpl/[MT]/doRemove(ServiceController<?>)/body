{
  controller.addListener(new AbstractServiceListener<Object>(){
    public void listenerAdded(    final ServiceController<?> controller){
      final Map<ServiceName,ServiceController<?>> map=realRemovingControllers;
synchronized (map) {
        map.put(controller.getName(),controller);
        controller.setMode(ServiceController.Mode.REMOVE);
      }
    }
    public void transition(    final ServiceController<?> controller,    final ServiceController.Transition transition){
switch (transition) {
case REMOVING_to_REMOVED:
case REMOVING_to_DOWN:
{
          final Map<ServiceName,ServiceController<?>> map=realRemovingControllers;
synchronized (map) {
            if (map.get(controller.getName()) == controller) {
              map.remove(controller.getName());
              map.notifyAll();
            }
          }
          break;
        }
    }
  }
}
);
}

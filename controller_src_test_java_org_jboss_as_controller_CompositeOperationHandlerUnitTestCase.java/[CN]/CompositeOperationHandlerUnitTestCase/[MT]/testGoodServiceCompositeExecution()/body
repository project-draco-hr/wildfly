{
  assertTrue(sharedState.get());
  ModelNode step1=getOperation("good","attr1",2);
  ModelNode step2=getOperation("good-service","attr2",1);
  ModelNode result=controller.execute(getCompositeOperation(null,step1,step2),null,null,null);
  Assert.assertEquals("success",result.get("outcome").asString());
  Assert.assertEquals(2,result.get("result").asInt());
  Assert.assertEquals("success",result.get("result","step-1","outcome").asString());
  Assert.assertEquals("success",result.get("result","step-2","outcome").asString());
  Assert.assertEquals(1,result.get("result","step-1","result").asInt());
  Assert.assertEquals(2,result.get("result","step-2","result").asInt());
  Assert.assertEquals("good",result.get("result","step-1","compensating-operation","operation").asString());
  Assert.assertEquals("good-service",result.get("result","step-2","compensating-operation","operation").asString());
  Assert.assertEquals(new ModelNode().setEmptyList(),result.get("result","step-1","compensating-operation","address"));
  Assert.assertEquals(new ModelNode().setEmptyList(),result.get("result","step-2","compensating-operation","address"));
  Assert.assertEquals("composite",result.get("compensating-operation","operation").asString());
  Assert.assertEquals(new ModelNode().setEmptyList(),result.get("compensating-operation","address"));
  Assert.assertEquals(2,result.get("compensating-operation","steps").asInt());
  assertFalse(sharedState.get());
  ServiceController<?> sc=container.getService(ServiceName.JBOSS.append("good-service"));
  assertNotNull(sc);
  Assert.assertEquals(ServiceController.State.UP,sc.getState());
  Assert.assertEquals(2,controller.execute(getOperation("good","attr1",3),null,null,null).get("result").asInt());
  Assert.assertEquals(1,controller.execute(getOperation("good","attr2",3),null,null,null).get("result").asInt());
}

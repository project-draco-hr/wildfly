{
  File war=createFile("foo.war");
  File dodeploy=createFile("foo.war" + FileSystemDeploymentService.DO_DEPLOY);
  File deployed=new File(tmpDir,"foo.war" + FileSystemDeploymentService.DEPLOYED);
  TesteeSet ts=createTestee("foo.war");
  ts.controller.addCompositeSuccessResponse(1);
  ts.testee.scan();
  assertEquals(1,ts.repo.content.size());
  assertTrue(war.exists());
  assertFalse(dodeploy.exists());
  assertTrue(deployed.exists());
  assertEquals(1,ts.controller.added.size());
  assertEquals(1,ts.controller.deployed.size());
  byte[] bytes=ts.controller.deployed.get("foo.war");
  assertTrue(Arrays.equals(bytes,ts.repo.content.iterator().next()));
  dodeploy=createFile("foo.war" + FileSystemDeploymentService.DO_DEPLOY);
  ts.controller.addCompositeSuccessResponse(1);
  ts.testee.scan();
  assertEquals(2,ts.repo.content.size());
  assertTrue(war.exists());
  assertFalse(dodeploy.exists());
  assertTrue(deployed.exists());
  assertEquals(1,ts.controller.added.size());
  assertEquals(1,ts.controller.deployed.size());
  byte[] newbytes=ts.controller.deployed.get("foo.war");
  assertFalse(Arrays.equals(newbytes,bytes));
  boolean installed=false;
  for (  byte[] content : ts.repo.content) {
    if (Arrays.equals(newbytes,content)) {
      installed=true;
      break;
    }
  }
  assertTrue(installed);
}

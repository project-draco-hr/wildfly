{
  File war=new File(tmpDir,"foo.war");
  war.mkdirs();
  File dodeploy=createFile("foo.war" + FileSystemDeploymentService.DO_DEPLOY);
  File deployed=new File(tmpDir,"foo.war" + FileSystemDeploymentService.DEPLOYED);
  TesteeSet ts=createTestee();
  ts.testee.setAutoDeployExplodedContent(true);
  ts.controller.addCompositeSuccessResponse(1);
  ts.testee.scan();
  assertTrue(war.exists());
  assertFalse(dodeploy.exists());
  assertTrue(deployed.exists());
  assertEquals(1,ts.controller.added.size());
  assertEquals(1,ts.controller.deployed.size());
  assertTrue(war.delete());
  ts.controller.addCompositeSuccessResponse(1);
  ts.testee.scan();
  assertFalse(war.exists());
  assertFalse(dodeploy.exists());
  assertFalse(deployed.exists());
  assertEquals(0,ts.controller.added.size());
  assertEquals(0,ts.controller.deployed.size());
  war=new File(tmpDir,"foo.war");
  war.mkdirs();
  dodeploy=createFile("foo.war" + FileSystemDeploymentService.DO_DEPLOY);
  deployed=new File(tmpDir,"foo.war" + FileSystemDeploymentService.DEPLOYED);
  ts=createTestee();
  ts.testee.setAutoDeployExplodedContent(false);
  ts.controller.addCompositeSuccessResponse(1);
  ts.testee.scan();
  assertTrue(war.exists());
  assertFalse(dodeploy.exists());
  assertTrue(deployed.exists());
  assertEquals(1,ts.controller.added.size());
  assertEquals(1,ts.controller.deployed.size());
  assertTrue(war.delete());
  ts.testee.scan();
  assertFalse(war.exists());
  assertFalse(dodeploy.exists());
  assertTrue(deployed.exists());
  assertEquals(1,ts.controller.added.size());
  assertEquals(1,ts.controller.deployed.size());
  war=new File(tmpDir,"foo.war");
  war.mkdirs();
  dodeploy=createFile("foo.war" + FileSystemDeploymentService.DO_DEPLOY);
  deployed=new File(tmpDir,"foo.war" + FileSystemDeploymentService.DEPLOYED);
  ts=createTestee();
  ts.testee.setAutoDeployExplodedContent(true);
  ts.controller.addCompositeSuccessResponse(1);
  ts.testee.scan();
  assertTrue(war.exists());
  assertFalse(dodeploy.exists());
  assertTrue(deployed.exists());
  assertEquals(1,ts.controller.added.size());
  assertEquals(1,ts.controller.deployed.size());
  assertTrue(war.delete());
  ts.controller.addCompositeSuccessResponse(1);
  ts.testee.scan();
  assertFalse(war.exists());
  assertFalse(dodeploy.exists());
  assertFalse(deployed.exists());
  assertEquals(0,ts.controller.added.size());
  assertEquals(0,ts.controller.deployed.size());
}

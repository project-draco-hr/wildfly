{
  File f1=createFile("undeployed" + FileSystemDeploymentService.DEPLOYED);
  File f2=new File(tmpDir,"undeployed" + FileSystemDeploymentService.UNDEPLOYED);
  File f3=createFile(new File(tmpDir,"nested"),"nested-undeployed" + FileSystemDeploymentService.DEPLOYED);
  File f4=new File(new File(tmpDir,"nested"),"nested-undeployed" + FileSystemDeploymentService.UNDEPLOYED);
  File f5=createFile("removed" + FileSystemDeploymentService.DEPLOYED);
  File f6=new File(tmpDir,"removed" + FileSystemDeploymentService.UNDEPLOYED);
  File f7=createFile(new File(tmpDir,"nested"),"nested-removed" + FileSystemDeploymentService.DEPLOYED);
  File f8=new File(new File(tmpDir,"nested"),"nested-removed" + FileSystemDeploymentService.UNDEPLOYED);
  File undeployed=createFile("undeployed");
  File nestedUndeployed=createFile(new File(tmpDir,"nested"),"nested-undeployed");
  File removed=createFile("removed");
  File nestedRemoved=createFile(new File(tmpDir,"nested"),"nested-removed");
  MockServerController sc=new MockServerController("undeployed","nested-undeployed","removed","nested-removed");
  TesteeSet ts=createTestee(sc);
  Assert.assertTrue(f1.exists());
  Assert.assertFalse(f2.exists());
  Assert.assertTrue(f3.exists());
  Assert.assertFalse(f4.exists());
  Assert.assertTrue(f5.exists());
  Assert.assertFalse(f6.exists());
  Assert.assertTrue(undeployed.exists());
  Assert.assertTrue(nestedUndeployed.exists());
  Assert.assertTrue(removed.exists());
  Assert.assertTrue(nestedRemoved.exists());
  sc.deployed.remove("undeployed");
  sc.deployed.remove("nested-undeployed");
  sc.added.remove("removed");
  sc.added.remove("nested-removed");
  sc.deployed.remove("removed");
  sc.deployed.remove("nested-removed");
  ts.testee.scan();
  Assert.assertFalse(f1.exists());
  Assert.assertTrue(f2.exists());
  Assert.assertFalse(f3.exists());
  Assert.assertTrue(f4.exists());
  Assert.assertFalse(f5.exists());
  Assert.assertTrue(f6.exists());
  Assert.assertTrue(undeployed.exists());
  Assert.assertTrue(nestedUndeployed.exists());
  Assert.assertTrue(removed.exists());
  Assert.assertTrue(nestedRemoved.exists());
  Assert.assertEquals(0,sc.deployed.size());
  ts.testee.scan();
  Assert.assertFalse(f1.exists());
  Assert.assertTrue(f2.exists());
  Assert.assertFalse(f3.exists());
  Assert.assertTrue(f4.exists());
  Assert.assertFalse(f5.exists());
  Assert.assertTrue(f6.exists());
  Assert.assertTrue(undeployed.exists());
  Assert.assertTrue(nestedUndeployed.exists());
  Assert.assertTrue(removed.exists());
  Assert.assertTrue(nestedRemoved.exists());
  Assert.assertEquals(0,sc.deployed.size());
}

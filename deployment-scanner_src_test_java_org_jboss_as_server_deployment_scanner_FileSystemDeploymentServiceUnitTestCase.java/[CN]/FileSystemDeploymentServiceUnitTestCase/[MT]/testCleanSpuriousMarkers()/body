{
  File f1=createFile("spurious" + FileSystemDeploymentService.DEPLOYED);
  File f2=createFile(new File(tmpDir,"nested"),"nested" + FileSystemDeploymentService.DEPLOYED);
  File f3=createFile("ok" + FileSystemDeploymentService.DEPLOYED);
  File f4=createFile(new File(tmpDir,"nested"),"nested-ok" + FileSystemDeploymentService.DEPLOYED);
  File f5=createFile("spurious" + FileSystemDeploymentService.FAILED_DEPLOY);
  File f6=createFile(new File(tmpDir,"nested"),"nested" + FileSystemDeploymentService.FAILED_DEPLOY);
  File f7=createFile("spurious" + FileSystemDeploymentService.DEPLOYING);
  File f8=createFile(new File(tmpDir,"nested"),"nested" + FileSystemDeploymentService.DEPLOYING);
  File f9=createFile("spurious" + FileSystemDeploymentService.UNDEPLOYING);
  File f10=createFile(new File(tmpDir,"nested"),"nested" + FileSystemDeploymentService.UNDEPLOYING);
  File f11=createFile("spurious" + FileSystemDeploymentService.PENDING);
  File f12=createFile(new File(tmpDir,"nested"),"nested" + FileSystemDeploymentService.PENDING);
  File ok=createFile("ok");
  File nestedOK=createFile(new File(tmpDir,"nested"),"nested-ok");
  MockServerController sc=new MockServerController("ok","nested-ok");
  TesteeSet ts=createTestee(sc);
  Assert.assertFalse(f1.exists());
  Assert.assertFalse(f2.exists());
  Assert.assertTrue(f3.exists());
  Assert.assertTrue(f4.exists());
  Assert.assertTrue(ok.exists());
  Assert.assertTrue(nestedOK.exists());
  ts.testee.scan();
  Assert.assertTrue(f5.exists());
  Assert.assertTrue(f6.exists());
  Assert.assertFalse(f7.exists());
  Assert.assertFalse(f8.exists());
  Assert.assertFalse(f9.exists());
  Assert.assertFalse(f10.exists());
  Assert.assertFalse(f11.exists());
  Assert.assertFalse(f12.exists());
  Assert.assertTrue(ok.exists());
  Assert.assertTrue(nestedOK.exists());
  f1=createFile("spurious" + FileSystemDeploymentService.DEPLOYED);
  f2=createFile(new File(tmpDir,"nested"),"nested" + FileSystemDeploymentService.DEPLOYED);
  ts.testee.scan();
  Assert.assertFalse(f5.exists());
  Assert.assertFalse(f6.exists());
  Assert.assertFalse(f1.exists());
  Assert.assertFalse(f2.exists());
  Assert.assertTrue(ok.exists());
  Assert.assertTrue(nestedOK.exists());
}

{
  File war1=createFile("foo.war");
  File dodeploy1=createFile("foo.war" + FileSystemDeploymentService.DO_DEPLOY);
  File war2=createFile("bar.war");
  File dodeploy2=createFile("bar.war" + FileSystemDeploymentService.DO_DEPLOY);
  TesteeSet ts=createTestee();
  ts.controller.addPartialCompositeFailureResultResponse(2,2);
  ts.testee.scan();
  String[] list=tmpDir.list(new FilenameFilter(){
    @Override public boolean accept(    File dir,    String name){
      return name.endsWith(".war");
    }
  }
);
  assertEquals(2,list.length);
  assertTrue(war1.exists());
  assertFalse(dodeploy1.exists());
  assertTrue(war2.exists());
  assertFalse(dodeploy2.exists());
  File deployed1=new File(tmpDir,list[0] + FileSystemDeploymentService.DEPLOYED);
  File failed1=new File(tmpDir,list[0] + FileSystemDeploymentService.FAILED_DEPLOY);
  File deployed2=new File(tmpDir,list[1] + FileSystemDeploymentService.DEPLOYED);
  File failed2=new File(tmpDir,list[1] + FileSystemDeploymentService.FAILED_DEPLOY);
  assertTrue(deployed1.getAbsolutePath(),deployed1.exists());
  assertFalse(failed1.getAbsolutePath(),failed1.exists());
  assertFalse(deployed2.exists());
  assertTrue(failed2.exists());
  dodeploy2=createFile("bar.war" + FileSystemDeploymentService.DO_DEPLOY);
  ts.controller.addCompositeSuccessResponse(1);
  ts.testee.scan();
  deployed2=new File(tmpDir,"bar.war" + FileSystemDeploymentService.DEPLOYED);
  failed2=new File(tmpDir,"bar.war" + FileSystemDeploymentService.FAILED_DEPLOY);
  assertFalse(dodeploy2.exists());
  assertTrue(deployed2.exists());
  assertFalse(failed2.exists());
}

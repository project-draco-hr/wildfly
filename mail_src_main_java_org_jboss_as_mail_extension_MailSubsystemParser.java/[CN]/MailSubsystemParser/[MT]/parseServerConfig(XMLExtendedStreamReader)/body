{
  String socketBindingRef=null;
  String username=null;
  String password=null;
  boolean ssl=false;
  for (int i=0; i < reader.getAttributeCount(); i++) {
    Attribute attr=Attribute.forName(reader.getAttributeLocalName(i));
    String value=reader.getAttributeValue(i);
    if (attr == Attribute.OUTBOUND_SOCKET_BINDING_REF) {
      socketBindingRef=value;
    }
    if (attr == Attribute.SSL) {
      ssl=Boolean.parseBoolean(value.trim());
    }
  }
  if (socketBindingRef == null) {
    throw ParseUtils.missingRequired(reader,Collections.singleton(Attribute.OUTBOUND_SOCKET_BINDING_REF.getLocalName()));
  }
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
    final Element element=Element.forName(reader.getLocalName());
switch (element) {
case LOGIN:
{
        for (int i=0; i < reader.getAttributeCount(); i++) {
          String att=reader.getAttributeLocalName(i);
          if (att.equals(Attribute.USERNAME.getLocalName())) {
            username=reader.getAttributeValue(i);
          }
 else           if (att.equals(Attribute.PASSWORD.getLocalName())) {
            password=reader.getAttributeValue(i);
          }
        }
        ParseUtils.requireNoContent(reader);
        break;
      }
  }
}
return new MailSessionServer(socketBindingRef,username,password,ssl);
}

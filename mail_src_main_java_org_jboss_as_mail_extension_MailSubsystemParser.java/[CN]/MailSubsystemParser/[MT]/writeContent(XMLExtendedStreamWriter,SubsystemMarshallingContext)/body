{
  context.startSubsystemElement(Namespace.CURRENT.getUriString(),false);
  log.tracef("model node: %s",context.getModelNode());
  ModelNode model=context.getModelNode();
  List<Property> sessions=model.get(MAIL_SESSION).asPropertyList();
  for (  Property mailSession : sessions) {
    String jndi=mailSession.getName();
    log.tracef("jndi: %s",jndi);
    ModelNode sessionData=mailSession.getValue();
    writer.writeStartElement(Element.MAIL_SESSION.getLocalName());
    JNDI_NAME.marshallAsAttribute(sessionData,writer);
    DEBUG.marshallAsAttribute(sessionData,false,writer);
    FROM.marshallAsAttribute(sessionData,false,writer);
    ModelNode server=sessionData.get(SERVER_TYPE);
    if (server.hasDefined(SMTP)) {
      writeServerModel(writer,server.get(SMTP),SMTP_SERVER);
    }
    if (server.hasDefined(POP3)) {
      writeServerModel(writer,server.get(POP3),POP3_SERVER);
    }
    if (server.hasDefined(IMAP)) {
      writeServerModel(writer,server.get(IMAP),IMAP_SERVER);
    }
    writer.writeEndElement();
  }
  writer.writeEndElement();
}

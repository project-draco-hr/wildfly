{
  context.startSubsystemElement(Namespace.CURRENT.getUriString(),false);
  log.tracef("model node: %s",context.getModelNode());
  ModelNode model=context.getModelNode();
  List<Property> sessions=model.get(MailSubsystemModel.MAIL_SESSION).asPropertyList();
  for (  Property mailSession : sessions) {
    String jndi=mailSession.getName();
    log.tracef("jndi: %s",jndi);
    ModelNode sessionData=mailSession.getValue();
    writer.writeStartElement(Element.MAIL_SESSION.getLocalName());
    writer.writeAttribute(Attribute.JNDI_NAME.getLocalName(),jndi);
    boolean debug=sessionData.get(DEBUG).asBoolean(false);
    if (debug) {
      writer.writeAttribute(Attribute.DEBUG.getLocalName(),sessionData.get(MailSubsystemModel.DEBUG).asString());
    }
    if (sessionData.hasDefined(MailSubsystemModel.FROM)) {
      writer.writeAttribute(Attribute.FROM.getLocalName(),sessionData.get(MailSubsystemModel.FROM).asString());
    }
    ModelNode server=sessionData.get(SERVER_TYPE);
    if (server.hasDefined(SMTP)) {
      writeServerModel(writer,server,SMTP,SMTP_SERVER);
    }
    if (server.hasDefined(POP3)) {
      writeServerModel(writer,server,POP3,POP3_SERVER);
    }
    if (server.hasDefined(IMAP)) {
      writeServerModel(writer,server,IMAP,IMAP_SERVER);
    }
    writer.writeEndElement();
  }
  writer.writeEndElement();
}

{
  context.startSubsystemElement(Namespace.CURRENT.getUriString(),false);
  log.trace("model node: " + context.getModelNode());
  ModelNode model=context.getModelNode();
  List<Property> sessions=model.get(ModelKeys.MAIL_SESSION).asPropertyList();
  for (  Property mailSession : sessions) {
    String jndi=mailSession.getName();
    log.info("jndi: " + jndi);
    ModelNode sessionData=mailSession.getValue();
    writer.writeStartElement(Element.MAIL_SESSION.getLocalName());
    writer.writeAttribute(Attribute.JNDI_NAME.getLocalName(),jndi);
    if (sessionData.hasDefined(ModelKeys.DEBUG)) {
      writer.writeAttribute(Attribute.DEBUG.getLocalName(),sessionData.get(ModelKeys.DEBUG).asString());
    }
    writer.writeEmptyElement(Element.LOGIN.getLocalName());
    writer.writeAttribute(Attribute.USERNAME.getLocalName(),sessionData.get(ModelKeys.USERNAME).asString());
    writer.writeAttribute(Attribute.PASSWORD.getLocalName(),sessionData.get(ModelKeys.PASSWORD).asString());
    if (sessionData.hasDefined(ModelKeys.SMTP_SERVER)) {
      ModelNode server=sessionData.get(ModelKeys.SMTP_SERVER);
      writer.writeEmptyElement(Element.SMTP_SERVER.getLocalName());
      writer.writeAttribute(Attribute.SERVER_ADDRESS.getLocalName(),server.get(ModelKeys.SERVER_ADDRESS).asString());
      writer.writeAttribute(Attribute.SERVER_PORT.getLocalName(),server.get(ModelKeys.SERVER_PORT).asString());
    }
    if (sessionData.hasDefined(ModelKeys.POP3_SERVER)) {
      ModelNode server=sessionData.get(ModelKeys.POP3_SERVER);
      writer.writeEmptyElement(Element.POP3_SERVER.getLocalName());
      writer.writeAttribute(Attribute.SERVER_ADDRESS.getLocalName(),server.get(ModelKeys.SERVER_ADDRESS).asString());
      writer.writeAttribute(Attribute.SERVER_PORT.getLocalName(),server.get(ModelKeys.SERVER_PORT).asString());
    }
    if (sessionData.hasDefined(ModelKeys.IMAP_SERVER)) {
      ModelNode server=sessionData.get(ModelKeys.IMAP_SERVER);
      writer.writeEmptyElement(Element.IMAP_SERVER.getLocalName());
      writer.writeAttribute(Attribute.SERVER_ADDRESS.getLocalName(),server.get(ModelKeys.SERVER_ADDRESS).asString());
      writer.writeAttribute(Attribute.SERVER_PORT.getLocalName(),server.get(ModelKeys.SERVER_PORT).asString());
    }
    writer.writeEndElement();
  }
  writer.writeEndElement();
}

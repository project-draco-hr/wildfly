{
  log.info("parsing mail session");
  MailSessionConfig cfg=new MailSessionConfig();
  String jndiName=ParseUtils.requireAttributes(reader,"jndi-name")[0];
  log.trace("jndi name: " + jndiName);
  cfg.setJndiName(jndiName);
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
switch (Namespace.forUri(reader.getNamespaceURI())) {
case MAIL_1_0:
{
        final Element element=Element.forName(reader.getLocalName());
switch (element) {
case LOGIN:
{
            for (int i=0; i < reader.getAttributeCount(); i++) {
              String att=reader.getAttributeLocalName(i);
              if (att.equals("name")) {
                cfg.setUsername(reader.getAttributeValue(i));
              }
 else               if (att.equals("password")) {
                cfg.setPassword(reader.getAttributeValue(i));
              }
            }
            ParseUtils.requireNoContent(reader);
            break;
          }
case SMTP_SERVER:
{
          String[] attributes=ParseUtils.requireAttributes(reader,"address","port");
          cfg.setSmtpServerAddress(attributes[0]);
          cfg.setSmtpServerPort(attributes[1]);
          ParseUtils.requireNoContent(reader);
          break;
        }
default :
{
        reader.handleAny(list);
        break;
      }
  }
  break;
}
default :
{
throw unexpectedElement(reader);
}
}
}
return cfg;
}

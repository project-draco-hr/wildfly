{
  log.debug("parsing mail session");
  MailSessionConfig cfg=new MailSessionConfig();
  for (int i=0; i < reader.getAttributeCount(); i++) {
    Attribute attr=Attribute.forName(reader.getAttributeLocalName(i));
    String value=reader.getAttributeValue(i);
    if (attr == Attribute.JNDI_NAME) {
      String jndiName=value;
      log.trace("jndi name: " + jndiName);
      cfg.setJndiName(jndiName);
    }
    if (attr == Attribute.DEBUG) {
      boolean debug=Boolean.parseBoolean(value.trim());
      cfg.setDebug(debug);
    }
  }
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
switch (Namespace.forUri(reader.getNamespaceURI())) {
case MAIL_1_0:
{
        final Element element=Element.forName(reader.getLocalName());
switch (element) {
case SMTP_SERVER:
{
            cfg.setSmtpServer(parseServerConfig(reader));
            break;
          }
case POP3_SERVER:
{
          cfg.setPop3Server(parseServerConfig(reader));
          break;
        }
case IMAP_SERVER:
{
        cfg.setImapServer(parseServerConfig(reader));
        break;
      }
default :
{
      reader.handleAny(list);
      break;
    }
}
break;
}
default :
{
throw unexpectedElement(reader);
}
}
}
return cfg;
}

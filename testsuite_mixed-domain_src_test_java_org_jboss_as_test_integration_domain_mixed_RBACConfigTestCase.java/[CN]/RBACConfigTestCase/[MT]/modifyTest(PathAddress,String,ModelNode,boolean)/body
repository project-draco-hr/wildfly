{
  ModelNode masterValue=executeForResult(Util.getReadAttributeOperation(base,attribute),masterClient);
  if (expectSlaveEffect) {
    ModelNode slaveValue=executeForResult(Util.getReadAttributeOperation(base,attribute),slaveClient);
    assertEquals(masterValue,slaveValue);
    ModelNode serverValue=executeForResult(Util.getReadAttributeOperation(SERVER_ONE.append(base),attribute),masterClient);
    assertEquals(masterValue,serverValue);
  }
 else {
    executeForFailure(Util.getReadAttributeOperation(base,attribute),slaveClient);
    executeForFailure(Util.getReadAttributeOperation(SERVER_ONE.append(base),attribute),masterClient);
  }
  Throwable caught=null;
  executeForResult(Util.getWriteAttributeOperation(base,attribute,newValue),masterClient);
  try {
    ModelNode newMasterValue=executeForResult(Util.getReadAttributeOperation(base,attribute),masterClient);
    assertEquals(newValue,newMasterValue);
    if (expectSlaveEffect) {
      ModelNode slaveValue=executeForResult(Util.getReadAttributeOperation(base,attribute),slaveClient);
      assertEquals(newValue,slaveValue);
      ModelNode serverValue=executeForResult(Util.getReadAttributeOperation(SERVER_ONE.append(base),attribute),masterClient);
      assertEquals(newValue,serverValue);
    }
 else {
      executeForFailure(Util.getReadAttributeOperation(base,attribute),slaveClient);
      executeForFailure(Util.getReadAttributeOperation(SERVER_ONE.append(base),attribute),masterClient);
    }
  }
 catch (  Exception|Error e) {
    caught=e;
    throw e;
  }
 finally {
    if (!newValue.equals(masterValue)) {
      try {
        executeForResult(Util.getWriteAttributeOperation(base,attribute,masterValue),masterClient);
      }
 catch (      RuntimeException e) {
        if (caught == null) {
          throw e;
        }
 else {
          e.printStackTrace(System.out);
        }
      }
    }
  }
}

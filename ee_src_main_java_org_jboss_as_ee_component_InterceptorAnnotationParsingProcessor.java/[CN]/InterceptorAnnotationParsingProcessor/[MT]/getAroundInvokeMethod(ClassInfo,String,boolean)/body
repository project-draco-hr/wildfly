{
  if (classInfo == null) {
    return null;
  }
  final Map<DotName,List<AnnotationInstance>> classAnnotations=classInfo.annotations();
  final List<AnnotationInstance> instances=classAnnotations.get(AROUND_INVOKE_ANNOTATION_NAME);
  if (instances == null || instances.isEmpty()) {
    return null;
  }
  if (instances.size() > 1) {
    throw new IllegalArgumentException("Only one method may be annotated with @AroundInvoke per bean.");
  }
  final AnnotationTarget target=instances.get(0).target();
  if (!(target instanceof MethodInfo)) {
    throw new IllegalArgumentException("@AroundInvoke is only valid on method targets.");
  }
  final MethodInfo methodInfo=MethodInfo.class.cast(target);
  validateArgumentType(classInfo,methodInfo);
  return InterceptorMethodDescription.create(classInfo.name().toString(),methodInfo);
}

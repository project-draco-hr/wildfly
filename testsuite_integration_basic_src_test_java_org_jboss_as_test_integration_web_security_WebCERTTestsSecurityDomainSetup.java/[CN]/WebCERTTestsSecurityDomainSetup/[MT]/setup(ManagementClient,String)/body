{
  log.debug("start of the domain creation");
  final List<ModelNode> updates=new ArrayList<ModelNode>();
  ModelNode op=new ModelNode();
  op.get(OP).set(ADD);
  op.get(OP_ADDR).add(SUBSYSTEM,"security");
  op.get(OP_ADDR).add(SECURITY_DOMAIN,APP_SECURITY_DOMAIN);
  updates.add(op);
  op=new ModelNode();
  op.get(OP).set(ADD);
  op.get(OP_ADDR).add(SUBSYSTEM,"security");
  op.get(OP_ADDR).add(SECURITY_DOMAIN,APP_SECURITY_DOMAIN);
  op.get(OP_ADDR).add(AUTHENTICATION,Constants.CLASSIC);
  ModelNode loginModule=op.get(Constants.LOGIN_MODULES).add();
  loginModule.get(CODE).set("CertificateRoles");
  loginModule.get(FLAG).set("required");
  ModelNode moduleOptions=loginModule.get(MODULE_OPTIONS);
  moduleOptions.add("securityDomain",JSSE_SECURITY_DOMAIN);
  op.get(OPERATION_HEADERS).get(ALLOW_RESOURCE_SERVICE_RESTART).set(true);
  updates.add(op);
  op=new ModelNode();
  op.get(OP).set(ADD);
  op.get(OP_ADDR).add(SUBSYSTEM,"security");
  op.get(OP_ADDR).add(SECURITY_DOMAIN,JSSE_SECURITY_DOMAIN);
  updates.add(op);
  op=new ModelNode();
  op.get(OP).set(ADD);
  op.get(OP_ADDR).add(SUBSYSTEM,"security");
  op.get(OP_ADDR).add(SECURITY_DOMAIN,JSSE_SECURITY_DOMAIN);
  op.get(OP_ADDR).add(JSSE,Constants.CLASSIC);
  op.get(TRUSTSTORE,PASSWORD).set("changeit");
  ClassLoader tccl=Thread.currentThread().getContextClassLoader();
  URL keystore=tccl.getResource("security/jsse.keystore");
  op.get(TRUSTSTORE,URL).set(keystore.getPath());
  op.get(OPERATION_HEADERS).get(ALLOW_RESOURCE_SERVICE_RESTART).set(true);
  updates.add(op);
  op=new ModelNode();
  op.get(OP).set(ADD);
  op.get(OP_ADDR).add("socket-binding-group","standard-sockets");
  op.get(OP_ADDR).add("socket-binding","https-test");
  op.get("interface").set("public");
  op.get("port").set(8380);
  updates.add(op);
  final ModelNode composite=Util.getEmptyOperation(COMPOSITE,new ModelNode());
  final ModelNode steps=composite.get(STEPS);
  op=new ModelNode();
  op.get(OP).set(ADD);
  op.get(OP_ADDR).add(SUBSYSTEM,"web");
  op.get(OP_ADDR).add("connector","testConnector");
  op.get("socket-binding").set("https-test");
  op.get("enabled").set(true);
  op.get("protocol").set("HTTP/1.1");
  op.get("scheme").set("https");
  op.get("secure").set(true);
  steps.add(op);
  ModelNode ssl=createOpNode("subsystem=web/connector=testConnector/ssl=configuration","add");
  ssl.get("name").set("https-test");
  ssl.get("key-alias").set("test");
  ssl.get("password").set("changeit");
  keystore=tccl.getResource("security/server.keystore");
  ssl.get("certificate-key-file").set(keystore.getPath());
  ssl.get("ca-certificate-file").set(keystore.getPath());
  ssl.get("verify-client").set("want");
  steps.add(ssl);
  updates.add(composite);
  applyUpdates(managementClient.getControllerClient(),updates);
  log.debug("end of the domain creation");
}

{
  calculateDifference(target,extensions,other.extensions,new DifferenceHandler<String,ExtensionElement,Domain>(){
    public void handleAdd(    final Collection<AbstractModelUpdate<Domain>> target,    final String name,    final ExtensionElement newElement){
    }
    public void handleRemove(    final Collection<AbstractModelUpdate<Domain>> target,    final String name,    final ExtensionElement oldElement){
    }
    public void handleChange(    final Collection<AbstractModelUpdate<Domain>> target,    final String name,    final ExtensionElement oldElement,    final ExtensionElement newElement){
      throw new IllegalStateException();
    }
  }
);
  calculateDifference(target,serverGroups,other.serverGroups,new DifferenceHandler<String,ServerGroupElement,Domain>(){
    public void handleAdd(    final Collection<AbstractModelUpdate<Domain>> target,    final String name,    final ServerGroupElement newElement){
    }
    public void handleRemove(    final Collection<AbstractModelUpdate<Domain>> target,    final String name,    final ServerGroupElement oldElement){
    }
    public void handleChange(    final Collection<AbstractModelUpdate<Domain>> target,    final String name,    final ServerGroupElement oldElement,    final ServerGroupElement newElement){
      oldElement.appendDifference(null,newElement);
    }
  }
);
  calculateDifference(target,deployments,other.deployments,new DifferenceHandler<String,DeploymentUnitElement,Domain>(){
    public void handleAdd(    final Collection<AbstractModelUpdate<Domain>> target,    final String name,    final DeploymentUnitElement newElement){
    }
    public void handleRemove(    final Collection<AbstractModelUpdate<Domain>> target,    final String name,    final DeploymentUnitElement oldElement){
    }
    public void handleChange(    final Collection<AbstractModelUpdate<Domain>> target,    final String name,    final DeploymentUnitElement oldElement,    final DeploymentUnitElement newElement){
    }
  }
);
  systemProperties.appendDifference(null,systemProperties);
}

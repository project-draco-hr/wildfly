{
  final PathAddress address=PathAddress.pathAddress(operation.require(OP_ADDR));
  final String name=address.getLastElement().getValue();
  final ModelNode compensatingOperation=new ModelNode();
  compensatingOperation.get(OP).set("enable");
  compensatingOperation.get(OP_ADDR).set(operation.require(OP_ADDR));
  context.getSubModel().get(CommonAttributes.SCAN_ENABLED).set(false);
  if (context.getRuntimeContext() != null) {
    final ServiceController<?> controller=context.getRuntimeContext().getServiceRegistry().getService(DeploymentScannerService.getServiceName(name));
    if (controller == null) {
      throw new OperationFailedException(new ModelNode().set("scanner not configured"));
    }
 else {
      try {
        final DeploymentScanner scanner=(DeploymentScanner)controller.getValue();
        scanner.stopScanner();
        resultHandler.handleResultComplete();
      }
 catch (      Throwable t) {
        throw new OperationFailedException(getFailureResult(t));
      }
    }
  }
 else {
    resultHandler.handleResultComplete();
  }
  return new BasicOperationResult(compensatingOperation);
}

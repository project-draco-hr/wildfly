{
  log=Logger.getLogger(getClass().getName() + '.' + manager.getMetaData().getName());
  debug=log.isDebugEnabled();
  trace=log.isTraceEnabled();
  entity=(JDBCEntityBridge)manager.getEntityBridge();
  insertAfterEjbPostCreate=manager.getCmpConfig().isInsertAfterEjbPostCreate();
  createAllowed=true;
  JDBCFieldBridge[] pkFields=entity.getPrimaryKeyFields();
  for (int i=0; i < pkFields.length; i++) {
    if (pkFields[i].isReadOnly()) {
      createAllowed=false;
      log.debug("Create will not be allowed because pk field " + pkFields[i].getFieldName() + "is read only.");
      break;
    }
  }
  initGeneratedFields();
  JDBCEntityCommandMetaData entityCommand=manager.getMetaData().getEntityCommand();
  if (entityCommand == null) {
    throw new RuntimeException("entity-command is null");
  }
  initEntityCommand(entityCommand);
  initInsertFields();
  initInsertSQL();
}

{
  final DataInputStream input=new DataInputStream(inputStream);
  final short invocationId=input.readShort();
  final int transactionIDBytesLength=PackedInteger.readPackedInteger(input);
  final byte[] transactionIDBytes=new byte[transactionIDBytesLength];
  input.read(transactionIDBytes);
  final TransactionID transactionID=TransactionID.createTransactionID(transactionIDBytes);
  boolean onePhaseCommit=false;
  if (this.txRequestType == TransactionRequestType.COMMIT) {
    onePhaseCommit=input.readBoolean();
  }
  if (transactionID instanceof UserTransactionID) {
    final UserTransactionManagementTask userTransactionManagementTask;
switch (this.txRequestType) {
case COMMIT:
      userTransactionManagementTask=new UserTransactionCommitTask(this,this.transactionsRepository,this.marshallerFactory,(UserTransactionID)transactionID,channelAssociation,invocationId);
    break;
case ROLLBACK:
  userTransactionManagementTask=new UserTransactionRollbackTask(this,this.transactionsRepository,this.marshallerFactory,(UserTransactionID)transactionID,channelAssociation,invocationId);
break;
default :
throw EjbLogger.ROOT_LOGGER.unknownTransactionRequestType(this.txRequestType.name());
}
if (this.executorService != null) {
this.executorService.submit(userTransactionManagementTask);
}
 else {
userTransactionManagementTask.run();
}
}
 else if (transactionID instanceof XidTransactionID) {
final XidTransactionID xidTransactionID=(XidTransactionID)transactionID;
final XidTransactionManagementTask xidTransactionManagementTask;
switch (this.txRequestType) {
case COMMIT:
xidTransactionManagementTask=new XidTransactionCommitTask(this,this.transactionsRepository,this.marshallerFactory,xidTransactionID,channelAssociation,invocationId,onePhaseCommit);
break;
case PREPARE:
xidTransactionManagementTask=new XidTransactionPrepareTask(this,this.transactionsRepository,this.marshallerFactory,xidTransactionID,channelAssociation,invocationId);
break;
case ROLLBACK:
xidTransactionManagementTask=new XidTransactionRollbackTask(this,this.transactionsRepository,this.marshallerFactory,xidTransactionID,channelAssociation,invocationId);
break;
case FORGET:
xidTransactionManagementTask=new XidTransactionForgetTask(this,this.transactionsRepository,this.marshallerFactory,xidTransactionID,channelAssociation,invocationId);
break;
case BEFORE_COMPLETION:
xidTransactionManagementTask=new XidTransactionBeforeCompletionTask(this,this.transactionsRepository,this.marshallerFactory,xidTransactionID,channelAssociation,invocationId);
break;
default :
throw EjbLogger.ROOT_LOGGER.unknownTransactionRequestType(this.txRequestType.name());
}
if (this.executorService != null) {
this.executorService.submit(xidTransactionManagementTask);
}
 else {
xidTransactionManagementTask.run();
}
}
}

{
  CompressedMethodsInformation info=componentView.getPrivateData(CompressedMethodsInformation.class);
  CompressionHint compressionHint=null;
  if (info != null) {
    compressionHint=info.getCompressedMethods().get(invokedMethod);
    if (compressionHint == null) {
      compressionHint=info.getClassLevelCompressionHint();
    }
  }
  if (compressionHint != null && compressionHint.compressResponse()) {
    final int compressionLevel=compressionHint.compressionLevel();
    messageOutputStream.write(HEADER_COMPRESSED_MESSAGE);
    final Deflater deflater=new Deflater(compressionLevel);
    final DeflaterOutputStream deflaterOutputStream=new DeflaterOutputStream(messageOutputStream,deflater);
    if (EjbLogger.EJB3_INVOCATION_LOGGER.isTraceEnabled()) {
      EjbLogger.EJB3_INVOCATION_LOGGER.trace("Using a compressing stream with compression level = " + compressionLevel + " for response data for EJB invocation on method "+ invokedMethod);
    }
    return new DataOutputStream(deflaterOutputStream);
  }
  return new DataOutputStream(messageOutputStream);
}

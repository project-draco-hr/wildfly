{
  PatchInfo info=new LocalPatchInfo(randomString(),PatchInfo.BASE,Collections.<String>emptyList(),env);
  String bundleName=randomString();
  createBundle(env.getInstalledImage().getJbossHome(),bundleName,true);
  byte[] existingHash=hashFile(new File(env.getInstalledImage().getBundlesDir(),bundleName));
  String patchID=randomString();
  File patchDir=mkdir(tempDir,patchID);
  File bundleDir=createBundle(patchDir,bundleName,true);
  byte[] newHash=hashFile(bundleDir);
  ContentModification bundleModify=new ContentModification(new BundleItem(bundleName,null,newHash),existingHash,MODIFY);
  PatchBuilder1_1 builder=PatchBuilder1_1.create().setPatchId(patchID).setDescription(randomString()).setIdentity(new IdentityImpl("eap",info.getVersion())).setNoUpgrade();
  PatchElementImpl element=new PatchElementImpl("patch element 01");
  builder.addElement(element);
  element.setDescription("patch element 01 description");
  element.setNoUpgrade();
  PatchElementProviderImpl provider=new PatchElementProviderImpl("base","4.5.6",false);
  provider.require("patch element 02");
  element.setProvider(provider);
  element.addContentModification(bundleModify);
  createPatchXMLFile(patchDir,builder.build());
  File zippedPatch=createZippedPatchFile(patchDir,patchID);
  PatchingResult result=executePatch(info,zippedPatch);
  assertPatchHasBeenApplied(result,builder.build());
  File bundlesPatchingDirectory=env.getBundlesPatchDirectory(patchID);
  assertDirExists(bundlesPatchingDirectory);
  assertContains(bundlesPatchingDirectory,getBundlePath(env,result.getPatchInfo()));
  assertDefinedBundle(getBundlePath(env,result.getPatchInfo()),bundleName,newHash);
}

{
  ModelVersion version=ModelVersion.create(1,3);
  KernelServicesBuilder builder=createKernelServicesBuilder(AdditionalInitialization.MANAGEMENT).setSubsystemXml(getSubsystemXml());
  builder.createLegacyKernelServicesBuilder(null,controllerVersion,version).addMavenResourceURL("org.jboss.as:jboss-as-clustering-infinispan:" + controllerVersion.getMavenGavVersion()).addMavenResourceURL("org.infinispan:infinispan-core:5.2.6.Final").dontPersistXml();
  KernelServices mainServices=builder.build();
  Assert.assertTrue("main services did not boot",mainServices.isSuccessfulBoot());
  Assert.assertTrue(mainServices.getLegacyServices(version).isSuccessfulBoot());
  checkSubsystemModelTransformation(mainServices,version);
  ModelNode model=mainServices.readTransformedModel(version);
  ModelNode distCache=model.get(SUBSYSTEM,"infinispan",ModelKeys.CACHE_CONTAINER,"maximal",ModelKeys.DISTRIBUTED_CACHE,"dist");
  Assert.assertFalse(distCache.has(ModelKeys.INDEXING_PROPERTIES));
  Assert.assertFalse(distCache.has(ModelKeys.SEGMENTS));
  Assert.assertTrue(distCache.get(ModelKeys.VIRTUAL_NODES).isDefined());
}

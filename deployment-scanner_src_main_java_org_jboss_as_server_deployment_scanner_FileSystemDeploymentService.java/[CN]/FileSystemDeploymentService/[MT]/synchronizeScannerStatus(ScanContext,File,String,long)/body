{
  if (isRegisteredDeployment(scanContext,fileName)) {
    final File undeployedMarker=new File(directory,fileName + UNDEPLOYED);
    if (isMarkedUndeployed(undeployedMarker,timestamp) && !scanContext.persistentDeployments.contains(fileName)) {
      try {
        ROOT_LOGGER.scannerDeploymentRedeployedButNotByScanner(fileName,undeployedMarker);
        undeployedMarker.delete();
        final File deployedMarker=new File(directory,fileName + DEPLOYED);
        deployedMarker.createNewFile();
        boolean isArchive=false;
        if (deployed.containsKey(fileName)) {
          isArchive=deployed.get(fileName).archive;
          deployedMarker.setLastModified(deployed.get(fileName).lastModified);
        }
 else {
          final File deploymentFile=new File(directory,fileName);
          isArchive=deploymentFile.exists() && deploymentFile.isFile();
          if (deploymentFile.exists()) {
            deployedMarker.setLastModified(deploymentFile.lastModified());
          }
        }
        deployed.put(fileName,new DeploymentMarker(deployedMarker.lastModified(),isArchive,directory));
      }
 catch (      IOException ex) {
        ROOT_LOGGER.failedStatusSynchronization(ex,fileName);
      }
    }
  }
}

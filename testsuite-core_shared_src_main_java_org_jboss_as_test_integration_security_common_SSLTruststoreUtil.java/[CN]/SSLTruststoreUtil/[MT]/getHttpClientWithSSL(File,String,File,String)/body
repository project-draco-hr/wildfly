{
  try {
    final KeyStore truststore=loadKeyStore(trustStoreFile,trustStorePassword.toCharArray());
    final KeyStore keystore=keyStoreFile != null ? loadKeyStore(keyStoreFile,keyStorePassword.toCharArray()) : null;
    final SSLSocketFactory ssf=new SSLSocketFactory(SSLSocketFactory.TLS,keystore,keyStorePassword,truststore,null,SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER);
    HttpParams params=new BasicHttpParams();
    SchemeRegistry registry=new SchemeRegistry();
    registry.register(new Scheme("http",CustomCLIExecutor.MANAGEMENT_HTTP_PORT,PlainSocketFactory.getSocketFactory()));
    registry.register(new Scheme("https",CustomCLIExecutor.MANAGEMENT_HTTPS_PORT,ssf));
    for (    int port : HTTPS_PORTS) {
      registry.register(new Scheme("https",port,ssf));
    }
    ClientConnectionManager ccm=new PoolingClientConnectionManager(registry);
    return new DefaultHttpClient(ccm,params);
  }
 catch (  Exception e) {
    LOGGER.error("Creating HttpClient with customized SSL failed. We are returning the default one instead.",e);
    return new DefaultHttpClient();
  }
}

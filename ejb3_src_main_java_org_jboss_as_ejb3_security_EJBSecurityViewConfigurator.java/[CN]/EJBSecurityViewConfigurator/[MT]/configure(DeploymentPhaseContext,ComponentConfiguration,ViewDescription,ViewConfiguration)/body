{
  if (componentConfiguration.getComponentDescription() instanceof EJBComponentDescription == false) {
    throw MESSAGES.invalidEjbComponent(componentConfiguration.getComponentName(),componentConfiguration.getComponentClass());
  }
  final DeploymentReflectionIndex deploymentReflectionIndex=context.getDeploymentUnit().getAttachment(org.jboss.as.server.deployment.Attachments.REFLECTION_INDEX);
  final EJBComponentDescription ejbComponentDescription=(EJBComponentDescription)componentConfiguration.getComponentDescription();
  if (!ejbComponentDescription.isSecurityEnabled()) {
    ROOT_LOGGER.debug("Security is *not* enabled on EJB: " + ejbComponentDescription.getEJBName() + ", no security interceptors will apply");
    return;
  }
  final String viewClassName=viewDescription.getViewClassName();
  viewConfiguration.addViewInterceptor(new SecurityContextInterceptorFactory(),InterceptorOrder.View.SECURITY_CONTEXT);
  final EJBViewDescription ejbViewDescription=(EJBViewDescription)viewDescription;
  final List<Method> viewMethods=viewConfiguration.getProxyFactory().getCachedMethods();
  for (  final Method viewMethod : viewMethods) {
    if (!Modifier.isPublic(viewMethod.getModifiers())) {
      continue;
    }
    if (viewMethod.getDeclaringClass() == WriteReplaceInterface.class) {
      continue;
    }
    ApplicableMethodInformation<EJBMethodSecurityAttribute> permissions=ejbComponentDescription.getDescriptorMethodPermissions();
    if (!handlePermissions(componentConfiguration,viewConfiguration,deploymentReflectionIndex,viewClassName,ejbViewDescription,viewMethod,permissions,false)) {
      handlePermissions(componentConfiguration,viewConfiguration,deploymentReflectionIndex,viewClassName,ejbViewDescription,viewMethod,ejbComponentDescription.getAnnotationMethodPermissions(),true);
    }
  }
}

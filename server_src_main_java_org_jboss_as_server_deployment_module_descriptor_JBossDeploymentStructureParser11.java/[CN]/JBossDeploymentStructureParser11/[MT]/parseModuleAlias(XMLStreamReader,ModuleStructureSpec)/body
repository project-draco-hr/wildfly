{
  final int count=reader.getAttributeCount();
  String name=null;
  String slot=null;
  final Set<Attribute> required=EnumSet.of(Attribute.NAME);
  for (int i=0; i < count; i++) {
    final Attribute attribute=Attribute.of(reader.getAttributeName(i));
    required.remove(attribute);
switch (attribute) {
case NAME:
      name=reader.getAttributeValue(i);
    break;
case SLOT:
  slot=reader.getAttributeValue(i);
break;
default :
throw unexpectedContent(reader);
}
}
if (!required.isEmpty()) {
throw missingAttributes(reader.getLocation(),required);
}
if (!moduleSpec.getModuleIdentifier().equals(ModuleIdentifier.create(name,slot))) {
throw new XMLStreamException("Module alias " + moduleSpec.getModuleIdentifier() + " is the same as the module name",reader.getLocation());
}
while (reader.hasNext()) {
switch (reader.nextTag()) {
case END_ELEMENT:
{
moduleSpec.addAlias(ModuleIdentifier.create(name,slot));
return;
}
default :
{
throw unexpectedContent(reader);
}
}
}
throw endOfDocument(reader.getLocation());
}

{
  final DeploymentUnit deploymentUnit=phaseContext.getDeploymentUnit();
  final EEModuleDescription moduleDescription=deploymentUnit.getAttachment(org.jboss.as.ee.component.Attachments.EE_MODULE_DESCRIPTION);
  final CompositeIndex compositeIndex=deploymentUnit.getAttachment(Attachments.COMPOSITE_ANNOTATION_INDEX);
  final EEApplicationClasses applicationClassesDescription=deploymentUnit.getAttachment(org.jboss.as.ee.component.Attachments.EE_APPLICATION_CLASSES_DESCRIPTION);
  if (compositeIndex == null) {
    return;
  }
  final List<AnnotationInstance> instances=compositeIndex.getAnnotations(MESSAGE_DRIVEN_ANNOTATION_NAME);
  if (instances == null || instances.isEmpty()) {
    return;
  }
  EjbDeploymentMarker.mark(deploymentUnit);
  EjbJarDescription ejbJarDescription=deploymentUnit.getAttachment(EjbDeploymentAttachmentKeys.EJB_JAR_DESCRIPTION);
  if (ejbJarDescription == null) {
    ejbJarDescription=new EjbJarDescription(moduleDescription,applicationClassesDescription,deploymentUnit.getName().endsWith(".war"));
    deploymentUnit.putAttachment(EjbDeploymentAttachmentKeys.EJB_JAR_DESCRIPTION,ejbJarDescription);
  }
  for (  final AnnotationInstance instance : instances) {
    final AnnotationTarget target=instance.target();
    if (!(target instanceof ClassInfo)) {
      throw new DeploymentUnitProcessingException("The @MessageDriven annotation is only allowed at the class level: " + target);
    }
    final ClassInfo beanClassInfo=(ClassInfo)target;
    final String beanClassName=beanClassInfo.name().toString();
    final String ejbName=beanClassInfo.name().local();
    final AnnotationValue nameValue=instance.value("name");
    final String beanName=nameValue == null || nameValue.asString().isEmpty() ? ejbName : nameValue.asString();
    final String messageListenerInterfaceName=instance.value("messageListenerInterface").asClass().name().toString();
    MessageDrivenComponentDescription messageDrivenComponentDescription=new MessageDrivenComponentDescription(beanName,beanClassName,ejbJarDescription,deploymentUnit.getServiceName());
    messageDrivenComponentDescription.setMessageListenerInterfaceName(messageListenerInterfaceName);
    if (moduleDescription.getComponentByName(messageDrivenComponentDescription.getComponentName()) == null) {
      moduleDescription.addComponent(messageDrivenComponentDescription);
    }
  }
}

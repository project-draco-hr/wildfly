{
  if (config == null) {
    throw new IllegalArgumentException("null standalone config");
  }
  this.config=config;
  log.infof("Starting server '%s'",environment.getProcessName());
  serviceContainer=ServiceContainer.Factory.create();
  final ServerStartupListener listener=new ServerStartupListener(createListenerCallback());
  try {
    final ServerStartBatchBuilder subsystemBatchBuilder=new ServerStartBatchBuilder(serviceContainer.batchBuilder(),listener);
    subsystemBatchBuilder.addListener(listener);
    final ServiceActivatorContext subsystemActivatorContext=new ServiceActivatorContextImpl(subsystemBatchBuilder);
    config.activateSubsystems(subsystemActivatorContext);
    listener.startBatch(new Runnable(){
      @Override public void run(){
        final ServerStartBatchBuilder deploymentBatchBuilder=new ServerStartBatchBuilder(serviceContainer.batchBuilder(),listener);
        deploymentBatchBuilder.addListener(listener);
        final ServiceActivatorContext deploymentActivatorContext=new ServiceActivatorContextImpl(deploymentBatchBuilder);
        listener.startBatch(null);
        config.activateDeployments(deploymentActivatorContext);
        listener.finish();
        try {
          deploymentBatchBuilder.install();
          listener.finishBatch();
        }
 catch (        ServiceRegistryException e) {
          throw new RuntimeException(e);
        }
      }
    }
);
    subsystemBatchBuilder.install();
    listener.finishBatch();
  }
 catch (  Throwable t) {
    throw new ServerStartException("Failed to start server",t);
  }
}

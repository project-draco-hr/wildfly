{
  int attributeSize=reader.getAttributeCount();
  ModelNode adminObjectNode=new ModelNode();
  String jndiName=null;
  for (int i=0; i < attributeSize; i++) {
    CommonAdminObject.Attribute attribute=CommonAdminObject.Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case ENABLED:
{
        final Location location=reader.getLocation();
        String value=rawAttributeText(reader,ENABLED.getXmlName());
        ENABLED.parseAndSetParameter(value,adminObjectNode,location);
        break;
      }
case JNDI_NAME:
{
      final Location location=reader.getLocation();
      jndiName=rawAttributeText(reader,JNDINAME.getXmlName());
      JNDINAME.parseAndSetParameter(jndiName,adminObjectNode,location);
      break;
    }
case POOL_NAME:
{
    final Location location=reader.getLocation();
    String value=rawAttributeText(reader,POOL_NAME.getXmlName());
    POOL_NAME.parseAndSetParameter(value,adminObjectNode,location);
    break;
  }
case USE_JAVA_CONTEXT:
{
  final Location location=reader.getLocation();
  String value=rawAttributeText(reader,USE_JAVA_CONTEXT.getXmlName());
  USE_JAVA_CONTEXT.parseAndSetParameter(value,adminObjectNode,location);
  break;
}
case CLASS_NAME:
{
final Location location=reader.getLocation();
String value=rawAttributeText(reader,CLASS_NAME.getXmlName());
CLASS_NAME.parseAndSetParameter(value,adminObjectNode,location);
break;
}
default :
throw new ParserException(bundle.unexpectedAttribute(attribute.getLocalName(),reader.getLocalName()));
}
}
if (jndiName == null || jndiName.trim().equals("")) throw new ParserException(bundle.missingJndiName(reader.getLocalName()));
while (reader.hasNext()) {
switch (reader.nextTag()) {
case END_ELEMENT:
{
if (ResourceAdapter.Tag.forName(reader.getLocalName()) == ResourceAdapter.Tag.ADMIN_OBJECT) {
operation.get(ADMIN_OBJECTS_NAME).add(adminObjectNode);
return;
}
 else {
if (CommonAdminObject.Tag.forName(reader.getLocalName()) == CommonAdminObject.Tag.UNKNOWN) {
throw new ParserException(bundle.unexpectedEndTag(reader.getLocalName()));
}
}
break;
}
case START_ELEMENT:
{
switch (CommonAdminObject.Tag.forName(reader.getLocalName())) {
case CONFIG_PROPERTY:
{
final Location location=reader.getLocation();
String name=rawAttributeText(reader,"name");
String value=rawElementText(reader);
ModelNode node=CONFIG_PROPERTIES.parse(value,location);
adminObjectNode.get(CONFIG_PROPERTIES.getName(),name).set(node);
break;
}
default :
throw new ParserException(bundle.unexpectedElement(reader.getLocalName()));
}
break;
}
}
}
throw new ParserException(bundle.unexpectedEndOfDocument());
}

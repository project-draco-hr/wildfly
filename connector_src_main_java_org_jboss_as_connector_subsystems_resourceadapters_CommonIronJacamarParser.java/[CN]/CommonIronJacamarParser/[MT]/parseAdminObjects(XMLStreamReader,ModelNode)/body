{
  int attributeSize=reader.getAttributeCount();
  ModelNode adminObjectNode=new ModelNode();
  String jndiName=null;
  for (int i=0; i < attributeSize; i++) {
    CommonAdminObject.Attribute attribute=CommonAdminObject.Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case ENABLED:
{
        final Boolean value=attributeAsBoolean(reader,attribute.getLocalName());
        if (value != null)         adminObjectNode.get(ENABLED).set(value);
        break;
      }
case JNDI_NAME:
{
      jndiName=attributeAsString(reader,attribute.getLocalName());
      if (jndiName != null && jndiName.trim().length() != 0)       adminObjectNode.get(JNDINAME).set(jndiName);
      break;
    }
case CLASS_NAME:
{
    String className=attributeAsString(reader,attribute.getLocalName());
    if (className != null && className.trim().length() != 0)     adminObjectNode.get(CLASS_NAME).set(className);
    break;
  }
case USE_JAVA_CONTEXT:
{
  final Boolean value=attributeAsBoolean(reader,attribute.getLocalName());
  if (value != null)   adminObjectNode.get(USE_JAVA_CONTEXT).set(value);
  break;
}
case POOL_NAME:
{
final String value=attributeAsString(reader,attribute.getLocalName());
if (value != null && value.trim().length() != 0) adminObjectNode.get(POOL_NAME).set(value);
break;
}
default :
throw new ParserException(bundle.unexpectedAttribute(attribute.getLocalName(),reader.getLocalName()));
}
}
if (jndiName == null || jndiName.trim().equals("")) throw new ParserException(bundle.missingJndiName(reader.getLocalName()));
while (reader.hasNext()) {
switch (reader.nextTag()) {
case END_ELEMENT:
{
if (ResourceAdapter.Tag.forName(reader.getLocalName()) == ResourceAdapter.Tag.ADMIN_OBJECT) {
operation.get(ADMIN_OBJECTS).add(adminObjectNode);
return;
}
 else {
if (CommonAdminObject.Tag.forName(reader.getLocalName()) == CommonAdminObject.Tag.UNKNOWN) {
throw new ParserException(bundle.unexpectedEndTag(reader.getLocalName()));
}
}
break;
}
case START_ELEMENT:
{
switch (CommonAdminObject.Tag.forName(reader.getLocalName())) {
case CONFIG_PROPERTY:
{
adminObjectNode.get(CONFIG_PROPERTIES,attributeAsString(reader,"name")).set(elementAsString(reader));
break;
}
default :
throw new ParserException(bundle.unexpectedElement(reader.getLocalName()));
}
break;
}
}
}
throw new ParserException(bundle.unexpectedEndOfDocument());
}

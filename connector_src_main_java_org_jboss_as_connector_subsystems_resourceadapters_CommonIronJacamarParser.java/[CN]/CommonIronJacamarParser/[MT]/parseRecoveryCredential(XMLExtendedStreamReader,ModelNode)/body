{
  while (reader.hasNext()) {
switch (reader.nextTag()) {
case END_ELEMENT:
{
        if (DataSource.Tag.forName(reader.getLocalName()) == DataSource.Tag.SECURITY || Recovery.Tag.forName(reader.getLocalName()) == Recovery.Tag.RECOVER_CREDENTIAL) {
          return;
        }
 else {
          if (Credential.Tag.forName(reader.getLocalName()) == Credential.Tag.UNKNOWN) {
            throw ParseUtils.unexpectedEndElement(reader);
          }
        }
        break;
      }
case START_ELEMENT:
{
switch (Credential.Tag.forName(reader.getLocalName())) {
case PASSWORD:
{
          String value=rawElementText(reader);
          RECOVERY_PASSWORD.parseAndSetParameter(value,node,reader);
          break;
        }
case USER_NAME:
{
        String value=rawElementText(reader);
        RECOVERY_USERNAME.parseAndSetParameter(value,node,reader);
        break;
      }
case SECURITY_DOMAIN:
{
      String value=rawElementText(reader);
      RECOVERY_SECURITY_DOMAIN.parseAndSetParameter(value,node,reader);
      break;
    }
default :
  throw ParseUtils.unexpectedElement(reader);
}
break;
}
}
}
throw ParseUtils.unexpectedEndElement(reader);
}

{
  for (  final VirtualFile facesConfig : getConfigurationFiles(deploymentUnit)) {
    InputStream is=null;
    try {
      is=facesConfig.openStream();
      final XMLInputFactory inputFactory=XMLInputFactory.newInstance();
      inputFactory.setXMLResolver(NoopXMLResolver.create());
      XMLStreamReader parser=inputFactory.createXMLStreamReader(is);
      StringBuilder className=null;
      int indent=0;
      boolean managedBean=false;
      boolean managedBeanClass=false;
      while (true) {
        int event=parser.next();
        if (event == XMLStreamConstants.END_DOCUMENT) {
          parser.close();
          break;
        }
        if (event == XMLStreamConstants.START_ELEMENT) {
          indent++;
          if (indent == 2) {
            if (parser.getLocalName().equals(MANAGED_BEAN)) {
              managedBean=true;
            }
          }
 else           if (indent == 3 && managedBean) {
            if (parser.getLocalName().equals(MANAGED_BEAN_CLASS)) {
              managedBeanClass=true;
              className=new StringBuilder();
            }
          }
        }
 else         if (event == XMLStreamConstants.END_ELEMENT) {
          indent--;
          managedBeanClass=false;
          if (indent == 1) {
            managedBean=false;
          }
          if (className != null) {
            managedBeanClasses.add(className.toString().trim());
            className=null;
          }
        }
 else         if (managedBeanClass && event == XMLStreamConstants.CHARACTERS) {
          className.append(parser.getText());
        }
      }
    }
 catch (    Exception e) {
      WebLogger.WEB_LOGGER.managedBeansConfigParseFailed(facesConfig);
    }
 finally {
      try {
        if (is != null) {
          is.close();
        }
      }
 catch (      IOException e) {
      }
    }
  }
}

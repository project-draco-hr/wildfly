{
  Set<ModuleDependency> nextPhaseIdentifiers=new HashSet<>();
  final Set<ModuleIdentifier> nextAlreadySeen=new HashSet<>(alreadyResolvedModules);
  for (  final ModuleDefinition spec : moduleSpecs) {
    if (spec != null) {
      for (      ModuleDependency dep : spec.getDependencies()) {
        if (ServiceModuleLoader.isDynamicModule(dep.getIdentifier())) {
          if (!alreadyResolvedModules.contains(dep.getIdentifier())) {
            nextAlreadySeen.add(dep.getIdentifier());
            nextPhaseIdentifiers.add(dep);
          }
        }
      }
    }
  }
  if (nextPhaseIdentifiers.isEmpty()) {
    ServiceModuleLoader.installModuleResolvedService(startContext.getChildTarget(),moduleIdentifier);
  }
 else {
    installService(startContext.getChildTarget(),moduleIdentifier,phaseNumber + 1,nextPhaseIdentifiers,nextAlreadySeen);
  }
}

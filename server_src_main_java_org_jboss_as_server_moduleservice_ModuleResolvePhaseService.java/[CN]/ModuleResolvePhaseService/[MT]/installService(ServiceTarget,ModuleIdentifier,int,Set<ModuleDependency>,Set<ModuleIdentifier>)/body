{
  final ModuleResolvePhaseService nextPhaseService=new ModuleResolvePhaseService(moduleIdentifier,nextAlreadySeen,phaseNumber);
  ServiceBuilder<ModuleResolvePhaseService> builder=serviceTarget.addService(moduleSpecServiceName(moduleIdentifier,phaseNumber),nextPhaseService);
  for (  ModuleDependency module : nextPhaseIdentifiers) {
    builder.addDependency(module.isOptional() ? OPTIONAL : REQUIRED,ServiceModuleLoader.moduleSpecServiceName(module.getIdentifier()),ModuleDefinition.class,new Injector<ModuleDefinition>(){
      ModuleDefinition definition;
      @Override public synchronized void inject(      final ModuleDefinition o) throws InjectionException {
        nextPhaseService.getModuleSpecs().add(o);
        this.definition=o;
      }
      @Override public synchronized void uninject(){
        nextPhaseService.getModuleSpecs().remove(definition);
        this.definition=null;
      }
    }
);
  }
  builder.install();
}

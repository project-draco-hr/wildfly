{
  Map<DotName,List<AnnotationInstance>> annotationsOnBean=beanClass.annotations();
  if (annotationsOnBean == null || annotationsOnBean.isEmpty()) {
    return;
  }
  List<AnnotationInstance> removeAnnotations=annotationsOnBean.get(REMOVE_ANNOTATION_DOT_NAME);
  if (removeAnnotations == null || removeAnnotations.isEmpty()) {
    return;
  }
  for (  AnnotationInstance removeAnnotation : removeAnnotations) {
    final MethodInfo targetMethod=(MethodInfo)removeAnnotation.target();
    final MethodIdentifier removeMethod=MethodIdentifier.getIdentifier(targetMethod.returnType().toString(),targetMethod.name(),toString(targetMethod.args()));
    final AnnotationValue retainIfExceptionAnnValue=removeAnnotation.value("retainIfException");
    boolean retainIfException=false;
    if (retainIfExceptionAnnValue != null) {
      retainIfException=retainIfExceptionAnnValue.asBoolean();
    }
    componentDescription.addRemoveMethod(removeMethod,retainIfException);
  }
}

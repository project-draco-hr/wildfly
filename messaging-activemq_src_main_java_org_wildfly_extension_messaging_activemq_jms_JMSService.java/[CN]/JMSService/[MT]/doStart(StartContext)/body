{
  final ServiceContainer serviceContainer=context.getController().getServiceContainer();
  ClassLoader oldTccl=WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(getClass());
  try {
    jmsServer=new JMSServerManagerImpl(activeMQServer.getValue(),new WildFlyBindingRegistry(context.getController().getServiceContainer()));
    activeMQServer.getValue().registerActivateCallback(new ActivateCallback(){
      private volatile ServiceController<Void> activeMQActivationController;
      public void preActivate(){
      }
      public void activated(){
        if (overrideInVMSecurity) {
          activeMQServer.getValue().getRemotingService().allowInvmSecurityOverride(new ActiveMQPrincipal(DefaultCredentials.getUsername(),DefaultCredentials.getPassword()));
        }
        if (activeMQActivationController == null) {
          activeMQActivationController=serviceContainer.addService(ActiveMQActivationService.getServiceName(serverServiceName),new ActiveMQActivationService()).setInitialMode(Mode.ACTIVE).install();
        }
 else {
          activeMQActivationController.setMode(ACTIVE);
        }
      }
      @Override public void activationComplete(){
      }
      public void deActivate(){
        if (activeMQActivationController != null) {
          if (!activeMQActivationController.getState().in(STOPPING,REMOVED)) {
            final CountDownLatch latch=new CountDownLatch(1);
            activeMQActivationController.compareAndSetMode(ACTIVE,REMOVE);
            activeMQActivationController.addListener(new AbstractServiceListener<Void>(){
              @Override public void transition(              ServiceController<? extends Void> controller,              ServiceController.Transition transition){
                if (transition.enters(REMOVED)) {
                  latch.countDown();
                }
              }
            }
);
            try {
              latch.await(5,TimeUnit.SECONDS);
            }
 catch (            InterruptedException e) {
            }
            activeMQActivationController=null;
          }
        }
      }
    }
);
    jmsServer.start();
  }
 catch (  StartException e) {
    throw e;
  }
catch (  Throwable t) {
    throw MessagingLogger.ROOT_LOGGER.failedToStartService(t);
  }
 finally {
    WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(oldTccl);
  }
}

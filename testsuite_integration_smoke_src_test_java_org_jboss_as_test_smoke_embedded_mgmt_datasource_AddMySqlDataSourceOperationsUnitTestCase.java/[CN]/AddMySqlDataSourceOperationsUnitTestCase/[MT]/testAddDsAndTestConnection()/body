{
  final ModelNode address=new ModelNode();
  address.add("subsystem","datasources");
  address.add("data-source","MySqlDs");
  address.protect();
  final ModelNode operation=new ModelNode();
  operation.get(OP).set("add");
  operation.get(OP_ADDR).set(address);
  operation.get("name").set("MySqlDs");
  operation.get("jndi-name").set("java:jboss/datasources/MySqlDs");
  operation.get("enabled").set(true);
  operation.get("driver-name").set("mysql-connector-java-5.1.15.jar");
  operation.get("pool-name").set("MySqlDs_Pool");
  operation.get("connection-url").set("dont_care");
  operation.get("user-name").set("sa");
  operation.get("password").set("sa");
  final ModelNode result=getModelControllerClient().execute(operation);
  List<ModelNode> newList=marshalAndReparseDsResources();
  Assert.assertNotNull(newList);
  boolean containsRightJndiname=false;
  for (  ModelNode res : newList) {
    final Map<String,ModelNode> parseChildren=getChildren(res);
    if (!parseChildren.isEmpty() && parseChildren.get("jndi-name") != null && parseChildren.get("jndi-name").asString().equals("java:jboss/datasources/MySqlDs")) {
      containsRightJndiname=true;
    }
  }
  final ModelNode compensatingOperation=new ModelNode();
  compensatingOperation.get(OP).set("remove");
  compensatingOperation.get(OP_ADDR).set(address);
  getModelControllerClient().execute(compensatingOperation);
  Assert.assertTrue(containsRightJndiname);
}

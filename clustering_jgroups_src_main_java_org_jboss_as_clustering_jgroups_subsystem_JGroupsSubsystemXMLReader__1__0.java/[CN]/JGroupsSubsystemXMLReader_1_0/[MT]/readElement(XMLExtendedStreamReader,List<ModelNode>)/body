{
  PathAddress subsystemAddress=PathAddress.pathAddress(JGroupsSubsystemResourceDefinition.PATH);
  ModelNode subsystem=Util.createAddOperation(subsystemAddress);
  operations.add(subsystem);
  String defaultStack=null;
  for (int i=0; i < reader.getAttributeCount(); i++) {
    ParseUtils.requireNoNamespaceAttribute(reader,i);
    String value=reader.getAttributeValue(i);
    Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case DEFAULT_STACK:
{
        defaultStack=value;
        break;
      }
default :
{
      throw ParseUtils.unexpectedAttribute(reader,i);
    }
}
}
if (defaultStack == null) {
throw ParseUtils.missingRequired(reader,EnumSet.of(Attribute.DEFAULT_STACK));
}
JGroupsSubsystemResourceDefinition.DEFAULT_STACK.parseAndSetParameter(defaultStack,subsystem,reader);
while (reader.hasNext() && (reader.nextTag() != XMLStreamConstants.END_ELEMENT)) {
switch (Namespace.forUri(reader.getNamespaceURI())) {
case JGROUPS_1_0:
{
    Element element=Element.forName(reader.getLocalName());
switch (element) {
case STACK:
{
        parseStack(reader,subsystemAddress,operations);
        break;
      }
default :
{
      throw ParseUtils.unexpectedElement(reader);
    }
}
break;
}
default :
{
throw ParseUtils.unexpectedElement(reader);
}
}
}
}

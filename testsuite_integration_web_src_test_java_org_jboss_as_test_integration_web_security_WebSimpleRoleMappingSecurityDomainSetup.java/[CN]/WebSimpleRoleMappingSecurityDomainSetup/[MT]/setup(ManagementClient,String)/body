{
  log.debug("start of the domain creation");
  final ModelNode compositeOp=new ModelNode();
  compositeOp.get(OP).set(COMPOSITE);
  compositeOp.get(OP_ADDR).setEmptyList();
  ModelNode steps=compositeOp.get(STEPS);
  PathAddress addressSD=PathAddress.pathAddress().append(SUBSYSTEM,"security").append(SECURITY_DOMAIN,getSecurityDomainName());
  steps.add(Util.createAddOperation(addressSD));
  PathAddress address=addressSD.append(Constants.AUTHENTICATION,Constants.CLASSIC);
  steps.add(Util.createAddOperation(address));
  ModelNode loginModule=Util.createAddOperation(address.append(LOGIN_MODULE,"UsersRoles"));
  loginModule.get(CODE).set("UsersRoles");
  loginModule.get(FLAG).set("required");
  steps.add(loginModule);
  address=addressSD.append(MAPPING,CLASSIC);
  steps.add(Util.createAddOperation(address));
  ModelNode mappingModule=Util.createAddOperation(address.append(MAPPING_MODULE,"SimpleRoles"));
  mappingModule.get(CODE).set("SimpleRoles");
  mappingModule.get(TYPE).set("role");
  ModelNode mappingOptions=mappingModule.get(MODULE_OPTIONS);
  mappingOptions.get("peter").set("superuser,gooduser");
  mappingModule.get(OPERATION_HEADERS).get(ALLOW_RESOURCE_SERVICE_RESTART).set(true);
  steps.add(mappingModule);
  applyUpdates(managementClient.getControllerClient(),Arrays.asList(compositeOp));
  log.debug("end of the domain creation");
}

{
  try {
    TextMessage message=(TextMessage)m;
    String text=message.getText();
    TextMessage replyMessage;
    if (message instanceof TextMessage) {
      if (text.equals("await") && !message.getJMSRedelivered()) {
        log.infof("Message [%s, %s] contains text 'await'",message,text);
        HelperSingletonImpl.barrier.await(WAIT_S,SECONDS);
        HelperSingletonImpl.barrier.reset();
        try {
          Thread.sleep(SECONDS.toMillis(WAIT_S));
        }
 catch (        InterruptedException ie) {
          log.info("Sleeping for transaction timeout was interrupted." + "This is expected at least for JTS transaction.");
        }
        HelperSingletonImpl.barrier.await(WAIT_S,SECONDS);
      }
      replyMessage=session.createTextMessage("Reply: " + text);
    }
 else {
      replyMessage=session.createTextMessage("Unknown message");
    }
    Destination destination=message.getJMSReplyTo();
    message.setJMSDeliveryMode(NON_PERSISTENT);
    sender.send(destination,replyMessage);
    log.infof("onMessage method [OK], msg: [%s] with id [%s]. Replying to destination [%s].",text,message,destination);
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
}

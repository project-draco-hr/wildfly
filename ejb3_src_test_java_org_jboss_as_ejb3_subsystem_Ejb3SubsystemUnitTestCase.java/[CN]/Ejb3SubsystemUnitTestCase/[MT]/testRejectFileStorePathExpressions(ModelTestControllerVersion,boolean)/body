{
  KernelServicesBuilder builder=createKernelServicesBuilder(createAdditionalInitialization());
  ModelVersion version_1_1_0=ModelVersion.create(1,1,0);
  builder.createLegacyKernelServicesBuilder(null,controllerVersion,version_1_1_0).addMavenResourceURL("org.jboss.as:jboss-as-ejb3:" + controllerVersion.getMavenGavVersion()).addMavenResourceURL("org.jboss.as:jboss-as-threads:" + controllerVersion.getMavenGavVersion()).addMavenResourceURL("org.jboss.as:jboss-as-clustering-registry:" + controllerVersion.getMavenGavVersion());
  KernelServices mainServices=builder.build();
  KernelServices legacyServices=mainServices.getLegacyServices(version_1_1_0);
  Assert.assertNotNull(legacyServices);
  Assert.assertTrue("main services did not boot",mainServices.isSuccessfulBoot());
  Assert.assertTrue(legacyServices.isSuccessfulBoot());
  List<ModelNode> xmlOps=builder.parseXmlResource("timer_path_expr.xml");
  FailedOperationTransformationConfig failedConfig=expectReject ? getFileStorePathConfig() : new FailedOperationTransformationConfig();
  ModelTestUtils.checkFailedTransformedBootOperations(mainServices,version_1_1_0,xmlOps,failedConfig);
}

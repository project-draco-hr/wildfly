{
  String conversation=null;
  establishTopology(baseURL1,NODES);
  try (CloseableHttpClient client=TestHttpClientUtils.relaxedCookieHttpClient()){
    HttpResponse response=client.execute(new HttpGet(ConversationServlet.createURI(baseURL1)));
    try {
      assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      assertTrue(response.containsHeader(ConversationServlet.COUNT_HEADER));
      assertEquals(1,Integer.parseInt(response.getFirstHeader(ConversationServlet.COUNT_HEADER).getValue()));
      conversation=response.getFirstHeader(ConversationServlet.CONVERSATION_ID).getValue();
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    response=client.execute(new HttpGet(ConversationServlet.createURI(baseURL2,conversation)));
    try {
      assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      assertTrue(response.containsHeader(ConversationServlet.COUNT_HEADER));
      assertEquals(2,Integer.parseInt(response.getFirstHeader(ConversationServlet.COUNT_HEADER).getValue()));
      assertEquals(conversation,response.getFirstHeader(ConversationServlet.CONVERSATION_ID).getValue());
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    response=client.execute(new HttpGet(LogoutServlet.createURI(baseURL1,conversation)));
    try {
      assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      assertTrue(response.containsHeader(ConversationServlet.COUNT_HEADER));
      assertEquals(3,Integer.parseInt(response.getFirstHeader(ConversationServlet.COUNT_HEADER).getValue()));
      assertEquals(conversation,response.getFirstHeader(ConversationServlet.CONVERSATION_ID).getValue());
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
  }
 }

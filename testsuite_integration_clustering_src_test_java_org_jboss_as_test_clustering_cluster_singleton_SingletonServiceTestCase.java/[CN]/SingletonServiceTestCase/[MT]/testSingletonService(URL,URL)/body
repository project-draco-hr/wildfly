{
  stop(CONTAINER_2);
  HttpClient client=HttpClients.createDefault();
  URI defaultURI1=MyServiceServlet.createURI(baseURL1,MyService.DEFAULT_SERVICE_NAME);
  URI defaultURI2=MyServiceServlet.createURI(baseURL2,MyService.DEFAULT_SERVICE_NAME);
  log.info("URLs are: " + defaultURI1 + ", "+ defaultURI2);
  URI quorumURI1=MyServiceServlet.createURI(baseURL1,MyService.QUORUM_SERVICE_NAME);
  URI quorumURI2=MyServiceServlet.createURI(baseURL2,MyService.QUORUM_SERVICE_NAME);
  try {
    HttpResponse response=client.execute(new HttpGet(defaultURI1));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertEquals(NODE_1,response.getFirstHeader("node").getValue());
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    response=client.execute(new HttpGet(quorumURI1));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertNull(response.getFirstHeader("node"));
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    start(CONTAINER_2);
    response=client.execute(new HttpGet(defaultURI1));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertEquals(MyServiceActivator.PREFERRED_NODE,response.getFirstHeader("node").getValue());
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    response=client.execute(new HttpGet(quorumURI1));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertEquals(MyServiceActivator.PREFERRED_NODE,response.getFirstHeader("node").getValue());
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    response=client.execute(new HttpGet(defaultURI2));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertEquals(MyServiceActivator.PREFERRED_NODE,response.getFirstHeader("node").getValue());
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    response=client.execute(new HttpGet(quorumURI2));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertEquals(MyServiceActivator.PREFERRED_NODE,response.getFirstHeader("node").getValue());
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    stop(CONTAINER_2);
    response=client.execute(new HttpGet(defaultURI1));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertEquals(NODE_1,response.getFirstHeader("node").getValue());
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    response=client.execute(new HttpGet(quorumURI1));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertNull(response.getFirstHeader("node"));
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    start(CONTAINER_2);
    response=client.execute(new HttpGet(defaultURI1));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertEquals(MyServiceActivator.PREFERRED_NODE,response.getFirstHeader("node").getValue());
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    response=client.execute(new HttpGet(quorumURI1));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertEquals(MyServiceActivator.PREFERRED_NODE,response.getFirstHeader("node").getValue());
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    response=client.execute(new HttpGet(defaultURI2));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertEquals(MyServiceActivator.PREFERRED_NODE,response.getFirstHeader("node").getValue());
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    response=client.execute(new HttpGet(quorumURI2));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertEquals(MyServiceActivator.PREFERRED_NODE,response.getFirstHeader("node").getValue());
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    stop(CONTAINER_1);
    response=client.execute(new HttpGet(defaultURI2));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertEquals(NODE_2,response.getFirstHeader("node").getValue());
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    response=client.execute(new HttpGet(quorumURI2));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertNull(response.getFirstHeader("node"));
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    start(CONTAINER_1);
    response=client.execute(new HttpGet(defaultURI1));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertEquals(MyServiceActivator.PREFERRED_NODE,response.getFirstHeader("node").getValue());
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    response=client.execute(new HttpGet(quorumURI1));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertEquals(MyServiceActivator.PREFERRED_NODE,response.getFirstHeader("node").getValue());
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    response=client.execute(new HttpGet(defaultURI2));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertEquals(MyServiceActivator.PREFERRED_NODE,response.getFirstHeader("node").getValue());
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    response=client.execute(new HttpGet(quorumURI2));
    try {
      Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());
      Assert.assertEquals(MyServiceActivator.PREFERRED_NODE,response.getFirstHeader("node").getValue());
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
  }
  finally {
    HttpClientUtils.closeQuietly(client);
  }
}

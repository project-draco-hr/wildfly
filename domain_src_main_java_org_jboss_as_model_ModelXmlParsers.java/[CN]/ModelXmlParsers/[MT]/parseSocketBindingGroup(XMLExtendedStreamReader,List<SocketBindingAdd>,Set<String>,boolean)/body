{
  String name=null;
  String defIntf=null;
  Set<String> includedGroups=new HashSet<String>();
  Set<String> socketBindings=new HashSet<String>();
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    final String value=reader.getAttributeValue(i);
    if (reader.getAttributeNamespace(i) != null) {
      throw ParseUtils.unexpectedAttribute(reader,i);
    }
 else {
      final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case NAME:
{
          name=value;
          break;
        }
case DEFAULT_INTERFACE:
{
        if (!interfaces.contains(value)) {
          throw new XMLStreamException("Unknown interface " + value + " "+ attribute.getLocalName()+ " must be declared in element "+ Element.INTERFACES.getLocalName(),reader.getLocation());
        }
        defIntf=value;
        break;
      }
default :
    throw ParseUtils.unexpectedAttribute(reader,i);
}
}
}
if (name == null) {
throw ParseUtils.missingRequired(reader,Collections.singleton(Attribute.NAME));
}
if (defIntf == null) {
throw ParseUtils.missingRequired(reader,Collections.singleton(Attribute.DEFAULT_INTERFACE));
}
while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
switch (Namespace.forUri(reader.getNamespaceURI())) {
case DOMAIN_1_0:
{
  final Element element=Element.forName(reader.getLocalName());
switch (element) {
case INCLUDE:
{
      if (!allowInclude) {
        throw ParseUtils.unexpectedElement(reader);
      }
      final String includedGroup=ParseUtils.readStringAttributeElement(reader,Attribute.SOCKET_BINDING_GROUP.getLocalName());
      if (includedGroups.contains(includedGroup)) {
        throw new XMLStreamException("Included socket-binding-group " + includedGroup + " already declared",reader.getLocation());
      }
      includedGroups.add(includedGroup);
      break;
    }
case SOCKET_BINDING:
{
    final String bindingName=parseSocketBinding(reader,interfaces,bindingUpdates,defIntf);
    if (socketBindings.contains(bindingName)) {
      throw new XMLStreamException("socket-binding " + bindingName + " already declared",reader.getLocation());
    }
    socketBindings.add(bindingName);
    break;
  }
default :
throw ParseUtils.unexpectedElement(reader);
}
break;
}
default :
throw ParseUtils.unexpectedElement(reader);
}
}
return new SocketBindingGroupUpdate(name,defIntf,includedGroups);
}

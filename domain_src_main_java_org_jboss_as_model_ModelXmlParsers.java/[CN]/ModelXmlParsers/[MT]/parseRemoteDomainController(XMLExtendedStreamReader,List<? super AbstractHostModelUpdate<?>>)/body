{
  String host=null;
  Integer port=null;
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    final String value=reader.getAttributeValue(i);
    if (reader.getAttributeNamespace(i) != null) {
      throw unexpectedAttribute(reader,i);
    }
 else {
      final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case HOST:
{
          host=value;
          break;
        }
case PORT:
{
        port=Integer.valueOf(value);
        if (port < 1) {
          throw new XMLStreamException("Illegal '" + attribute.getLocalName() + "' value "+ port+ " -- cannot be less than one",reader.getLocation());
        }
        break;
      }
default :
    throw unexpectedAttribute(reader,i);
}
}
}
if (host == null) {
throw ParseUtils.missingRequired(reader,Collections.singleton(Attribute.HOST.getLocalName()));
}
if (port == null) {
throw ParseUtils.missingRequired(reader,Collections.singleton(Attribute.PORT.getLocalName()));
}
list.add(new HostRemoteDomainControllerAdd(host,port.intValue()));
reader.discardRemainder();
}

{
  requireNoAttributes(reader);
  final Set<String> names=new HashSet<String>();
  while (reader.nextTag() != END_ELEMENT) {
    requireSingleAttribute(reader,Attribute.NAME.getLocalName());
    final String name=reader.getAttributeValue(0);
    if (!names.add(name)) {
      throw new XMLStreamException("Duplicate profile declaration " + name,reader.getLocation());
    }
    list.add(new DomainProfileAdd(name));
    final Set<String> includes=new LinkedHashSet<String>();
    final Set<String> configuredSubsystemTypes=new HashSet<String>();
    while (reader.nextTag() != END_ELEMENT) {
switch (Namespace.forUri(reader.getNamespaceURI())) {
case UNKNOWN:
{
          if (Element.forName(reader.getLocalName()) != Element.SUBSYSTEM) {
            throw unexpectedElement(reader);
          }
          if (!configuredSubsystemTypes.add(reader.getNamespaceURI())) {
            throw new XMLStreamException("Duplicate subsystem declaration",reader.getLocation());
          }
          final ParseResult<ExtensionContext.SubsystemConfiguration<?>> result=new ParseResult<ExtensionContext.SubsystemConfiguration<?>>();
          reader.handleAny(result);
          list.add(new DomainSubsystemAdd(name,result.getResult().getSubsystemAdd()));
          for (          AbstractSubsystemUpdate<?,?> update : result.getResult().getUpdates()) {
            list.add(DomainSubsystemUpdate.create(name,update));
          }
          break;
        }
case DOMAIN_1_0:
{
        if (configuredSubsystemTypes.size() > 0) {
          throw unexpectedElement(reader);
        }
        if (Element.forName(reader.getLocalName()) != Element.INCLUDE) {
          throw unexpectedElement(reader);
        }
        final String includedName=readStringAttributeElement(reader,Attribute.PROFILE.getLocalName());
        if (!names.contains(includedName)) {
          throw new XMLStreamException("No profile found for inclusion",reader.getLocation());
        }
        if (!includes.add(includedName)) {
          throw new XMLStreamException("Duplicate profile include",reader.getLocation());
        }
        list.add(new DomainProfileIncludeAdd(name,includedName));
        break;
      }
default :
{
      throw unexpectedElement(reader);
    }
}
}
if (configuredSubsystemTypes.size() == 0) {
throw new XMLStreamException("Profile has no subsystem configurations",reader.getLocation());
}
}
}

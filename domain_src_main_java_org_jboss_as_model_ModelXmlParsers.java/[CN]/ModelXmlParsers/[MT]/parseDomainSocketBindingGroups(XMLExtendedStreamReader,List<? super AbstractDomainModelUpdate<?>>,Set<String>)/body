{
  final Set<String> groupNames=new HashSet<String>();
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
switch (Namespace.forUri(reader.getNamespaceURI())) {
case DOMAIN_1_0:
{
        final Element element=Element.forName(reader.getLocalName());
switch (element) {
case SOCKET_BINDING_GROUP:
{
            final List<SocketBindingAdd> bindingUpdates=new ArrayList<SocketBindingAdd>();
            final SocketBindingGroupUpdate group=parseSocketBindingGroup(reader,bindingUpdates,interfaces,true);
            final String name=group.getName();
            if (groupNames.add(name)) {
              ParseUtils.unexpectedElement(reader);
            }
            list.add(new DomainSocketBindingGroupAdd(group));
            for (            final SocketBindingAdd bindingUpdate : bindingUpdates) {
              list.add(new DomainSocketBindingUpdate(name,bindingUpdate));
            }
            break;
          }
default :
{
          throw ParseUtils.unexpectedElement(reader);
        }
    }
    break;
  }
default :
{
  throw ParseUtils.unexpectedElement(reader);
}
}
}
}

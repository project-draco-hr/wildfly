{
  final ModelNode model=context.getSubModel();
  final ModelNode compensatingOp=DeploymentAddHandler.getOperation(operation.get(OP_ADDR),model);
  final String deploymentName=PathAddress.pathAddress(operation.require(OP_ADDR)).getLastElement().getValue();
  final ModelNode root=context.getSubModel(PathAddress.EMPTY_ADDRESS);
  if (root.hasDefined(SERVER_GROUP)) {
    List<String> badGroups=new ArrayList<String>();
    for (    Property prop : root.get(SERVER_GROUP).asPropertyList()) {
      ModelNode sg=prop.getValue();
      if (sg.hasDefined(DEPLOYMENT) && sg.get(DEPLOYMENT).has(deploymentName)) {
        badGroups.add(prop.getName());
      }
    }
    if (badGroups.size() > 0) {
      String msg=String.format("Cannot remove deployment %s from the domain as it is still used by server groups %s",deploymentName,badGroups);
      throw new OperationFailedException(new ModelNode().set(msg));
    }
  }
  resultHandler.handleResultComplete();
  return new BasicOperationResult(compensatingOp);
}

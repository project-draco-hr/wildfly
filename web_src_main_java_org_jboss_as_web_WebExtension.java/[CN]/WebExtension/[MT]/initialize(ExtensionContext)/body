{
  log.debugf("Activating Web Extension");
  final SubsystemRegistration subsystem=context.registerSubsystem(SUBSYSTEM_NAME);
  final ManagementResourceRegistration registration=subsystem.registerSubsystemModel(WebSubsystemDescriptionProviders.SUBSYSTEM);
  registration.registerOperationHandler(ADD,WebSubsystemAdd.INSTANCE,WebSubsystemAdd.INSTANCE,false);
  registration.registerOperationHandler(DESCRIBE,WebSubsystemDescribe.INSTANCE,WebSubsystemDescribe.INSTANCE,false,OperationEntry.EntryType.PRIVATE);
  subsystem.registerXMLElementWriter(WebSubsystemParser.getInstance());
  final ManagementResourceRegistration connectors=registration.registerSubModel(connectorPath,WebSubsystemDescriptionProviders.CONNECTOR);
  connectors.registerOperationHandler(ADD,WebConnectorAdd.INSTANCE,WebConnectorAdd.INSTANCE,false);
  connectors.registerOperationHandler(REMOVE,WebConnectorRemove.INSTANCE,WebConnectorRemove.INSTANCE,false);
  for (  final String attributeName : WebConnectorMetrics.ATTRIBUTES) {
    connectors.registerMetric(attributeName,WebConnectorMetrics.INSTANCE);
  }
  final ManagementResourceRegistration hosts=registration.registerSubModel(hostPath,WebSubsystemDescriptionProviders.VIRTUAL_SERVER);
  hosts.registerOperationHandler(ADD,WebVirtualHostAdd.INSTANCE,WebVirtualHostAdd.INSTANCE,false);
  hosts.registerOperationHandler(REMOVE,WebVirtualHostRemove.INSTANCE,WebVirtualHostRemove.INSTANCE,false);
  final ManagementResourceRegistration deployments=subsystem.registerDeploymentModel(WebSubsystemDescriptionProviders.DEPLOYMENT);
  final ManagementResourceRegistration servlets=deployments.registerSubModel(PathElement.pathElement("servlet"),WebSubsystemDescriptionProviders.SERVLET);
  ServletDeploymentStats.register(servlets);
}

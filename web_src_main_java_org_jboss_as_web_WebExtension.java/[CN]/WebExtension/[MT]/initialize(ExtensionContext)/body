{
  final SubsystemRegistration subsystem=context.registerSubsystem(SUBSYSTEM_NAME,MANAGEMENT_API_MAJOR_VERSION,MANAGEMENT_API_MINOR_VERSION,MANAGEMENT_API_MICRO_VERSION);
  final ManagementResourceRegistration registration=subsystem.registerSubsystemModel(WebDefinition.INSTANCE);
  registration.registerOperationHandler(GenericSubsystemDescribeHandler.DEFINITION,GenericSubsystemDescribeHandler.INSTANCE);
  subsystem.registerXMLElementWriter(WebSubsystemParser.getInstance());
  final ManagementResourceRegistration connectors=registration.registerSubModel(WebConnectorDefinition.INSTANCE);
  final ManagementResourceRegistration ssl=connectors.registerSubModel(WebSSLDefinition.INSTANCE);
  connectors.registerAlias(SSL_ALIAS,new StandardWebExtensionAliasEntry(ssl));
  final ManagementResourceRegistration hosts=registration.registerSubModel(WebVirtualHostDefinition.INSTANCE);
  final ManagementResourceRegistration accesslog=hosts.registerSubModel(WebAccessLogDefinition.INSTANCE);
  hosts.registerAlias(ACCESS_LOG_ALIAS,new StandardWebExtensionAliasEntry(accesslog));
  final ManagementResourceRegistration accessLogDir=accesslog.registerSubModel(WebAccessLogDirectoryDefinition.INSTANCE);
  accesslog.registerAlias(DIRECTORY_ALIAS,new StandardWebExtensionAliasEntry(accessLogDir));
  final ManagementResourceRegistration sso=hosts.registerSubModel(WebSSODefinition.INSTANCE);
  hosts.registerAlias(SSO_ALIAS,new StandardWebExtensionAliasEntry(sso));
  final ManagementResourceRegistration rewrite=hosts.registerSubModel(WebReWriteDefinition.INSTANCE);
  rewrite.registerSubModel(WebReWriteConditionDefinition.INSTANCE);
  registration.registerSubModel(WebJSPDefinition.INSTANCE);
  registration.registerSubModel(WebStaticResources.INSTANCE);
  registration.registerSubModel(WebContainerDefinition.INSTANCE);
  final ManagementResourceRegistration deployments=subsystem.registerDeploymentModel(WebDeploymentDefinition.INSTANCE);
  deployments.registerSubModel(WebDeploymentServletDefinition.INSTANCE);
  registration.registerSubModel(WebValveDefinition.INSTANCE);
  registerTransformers_1_1_0(subsystem);
}

{
  final RemoteEnvironment remoteEnvironment=environment.getEnvironment();
  List<BindingConfiguration> bindingDescriptions=new ArrayList<BindingConfiguration>();
  EJBReferencesMetaData ejbRefs=remoteEnvironment.getEjbReferences();
  if (ejbRefs != null) {
    for (    EJBReferenceMetaData ejbRef : ejbRefs) {
      String name=ejbRef.getEjbRefName();
      String ejbName=ejbRef.getLink();
      String lookup=ejbRef.getLookupName() != null ? ejbRef.getLookupName() : ejbRef.getMappedName();
      String remoteInterface=ejbRef.getRemote();
      String home=ejbRef.getHome();
      Class<?> remoteInterfaceType=null;
      if (!isEmpty(home)) {
        try {
          remoteInterfaceType=ClassLoadingUtils.loadClass(home,deploymentUnit);
        }
 catch (        ClassNotFoundException e) {
          throw EjbLogger.ROOT_LOGGER.failedToLoadViewClass(e,home);
        }
      }
 else       if (!isEmpty(remoteInterface)) {
        try {
          remoteInterfaceType=ClassLoadingUtils.loadClass(remoteInterface,deploymentUnit);
        }
 catch (        ClassNotFoundException e) {
          throw EjbLogger.ROOT_LOGGER.failedToLoadViewClass(e,remoteInterface);
        }
      }
      if (!name.startsWith("java:")) {
        name=environment.getDefaultContext() + name;
      }
      LookupInjectionSource injectionSource=new LookupInjectionSource(name);
      remoteInterfaceType=processInjectionTargets(resourceInjectionTarget,injectionSource,classLoader,deploymentReflectionIndex,ejbRef,remoteInterfaceType);
      final BindingConfiguration bindingConfiguration;
      EjbInjectionSource ejbInjectionSource=null;
      if (!isEmpty(lookup)) {
        if (!lookup.startsWith("java:")) {
          bindingConfiguration=new BindingConfiguration(name,new EjbLookupInjectionSource(lookup,remoteInterfaceType));
        }
 else {
          bindingConfiguration=new BindingConfiguration(name,new LookupInjectionSource(lookup));
        }
      }
 else {
        if (remoteInterfaceType == null) {
          throw EjbLogger.ROOT_LOGGER.couldNotDetermineEjbRefForInjectionTarget(name,resourceInjectionTarget);
        }
        if (!isEmpty(ejbName)) {
          bindingConfiguration=new BindingConfiguration(name,ejbInjectionSource=new EjbInjectionSource(ejbName,remoteInterfaceType.getName(),name,deploymentUnit,appclient));
        }
 else {
          bindingConfiguration=new BindingConfiguration(name,ejbInjectionSource=new EjbInjectionSource(remoteInterfaceType.getName(),name,deploymentUnit,appclient));
        }
      }
      if (ejbInjectionSource != null) {
        deploymentUnit.addToAttachmentList(EjbDeploymentAttachmentKeys.EJB_INJECTIONS,ejbInjectionSource);
      }
      bindingDescriptions.add(bindingConfiguration);
    }
  }
  if (remoteEnvironment instanceof Environment && !appclient) {
    EJBLocalReferencesMetaData ejbLocalRefs=((Environment)remoteEnvironment).getEjbLocalReferences();
    if (ejbLocalRefs != null) {
      for (      EJBLocalReferenceMetaData ejbRef : ejbLocalRefs) {
        String name=ejbRef.getEjbRefName();
        String ejbName=ejbRef.getLink();
        String lookup=ejbRef.getLookupName() != null ? ejbRef.getLookupName() : ejbRef.getMappedName();
        String localInterface=ejbRef.getLocal();
        String localHome=ejbRef.getLocalHome();
        Class<?> localInterfaceType=null;
        if (!isEmpty(localHome)) {
          try {
            localInterfaceType=ClassLoadingUtils.loadClass(localHome,deploymentUnit);
          }
 catch (          ClassNotFoundException e) {
            throw EjbLogger.ROOT_LOGGER.failedToLoadViewClass(e,localHome);
          }
        }
 else         if (!isEmpty(localInterface)) {
          try {
            localInterfaceType=ClassLoadingUtils.loadClass(localInterface,deploymentUnit);
          }
 catch (          ClassNotFoundException e) {
            throw EjbLogger.ROOT_LOGGER.failedToLoadViewClass(e,localInterface);
          }
        }
        if (!name.startsWith("java:")) {
          name=environment.getDefaultContext() + name;
        }
        LookupInjectionSource injectionSource=new LookupInjectionSource(name);
        localInterfaceType=processInjectionTargets(resourceInjectionTarget,injectionSource,classLoader,deploymentReflectionIndex,ejbRef,localInterfaceType);
        if (localInterfaceType == null) {
          throw EjbLogger.ROOT_LOGGER.couldNotDetermineEjbLocalRefForInjectionTarget(name,resourceInjectionTarget);
        }
        final BindingConfiguration bindingConfiguration;
        EjbInjectionSource ejbInjectionSource=null;
        if (!isEmpty(lookup)) {
          if (!lookup.startsWith("java:")) {
            bindingConfiguration=new BindingConfiguration(name,new EjbLookupInjectionSource(lookup,localInterfaceType));
          }
 else {
            bindingConfiguration=new BindingConfiguration(name,new LookupInjectionSource(lookup));
          }
        }
 else         if (!isEmpty(ejbName)) {
          bindingConfiguration=new BindingConfiguration(name,ejbInjectionSource=new EjbInjectionSource(ejbName,localInterfaceType.getName(),name,deploymentUnit,appclient));
        }
 else {
          bindingConfiguration=new BindingConfiguration(name,ejbInjectionSource=new EjbInjectionSource(localInterfaceType.getName(),name,deploymentUnit,appclient));
        }
        if (ejbInjectionSource != null) {
          deploymentUnit.addToAttachmentList(EjbDeploymentAttachmentKeys.EJB_INJECTIONS,ejbInjectionSource);
        }
        bindingDescriptions.add(bindingConfiguration);
      }
    }
  }
  return bindingDescriptions;
}

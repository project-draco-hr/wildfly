{
  EJBLocalReferencesMetaData ejbLocalRefs=environment.getEnvironment().getEjbLocalReferences();
  List<BindingConfiguration> bindingDescriptions=new ArrayList<BindingConfiguration>();
  if (ejbLocalRefs != null) {
    for (    EJBLocalReferenceMetaData ejbRef : ejbLocalRefs) {
      String name=ejbRef.getEjbRefName();
      String ejbName=ejbRef.getLink();
      String lookup=ejbRef.getLookupName();
      String localInterface=ejbRef.getLocal();
      Class<?> localInterfaceType=null;
      if (!isEmpty(localInterface)) {
        try {
          classLoader.loadClass(localInterface);
        }
 catch (        ClassNotFoundException e) {
          throw new DeploymentUnitProcessingException("Could not load local interface type " + localInterface,e);
        }
      }
      if (!name.startsWith("java:")) {
        name=environment.getDefaultContext() + name;
      }
      LookupInjectionSource injectionSource=new LookupInjectionSource(name);
      localInterfaceType=processInjectionTargets(moduleDescription,injectionSource,classLoader,deploymentReflectionIndex,ejbRef,localInterfaceType);
      if (localInterfaceType == null) {
        throw new DeploymentUnitProcessingException("Could not determine type of ejb-local-ref " + name + " for component "+ componentDescription);
      }
      final BindingConfiguration bindingConfiguration;
      if (!isEmpty(lookup)) {
        bindingConfiguration=new BindingConfiguration(name,new LookupInjectionSource(lookup));
      }
 else       if (!isEmpty(ejbName)) {
        final ServiceName beanServiceName=deploymentUnit.getServiceName().append("component").append(ejbName).append("VIEW").append(localInterfaceType.getName());
        bindingConfiguration=new BindingConfiguration(name,new ViewBindingInjectionSource(beanServiceName));
      }
 else {
        throw new RuntimeException("Support for ejb-local-ref without lookup or ejb-link isn't yet implemented");
      }
      bindingDescriptions.add(bindingConfiguration);
    }
  }
  return bindingDescriptions;
}

{
  String name=null;
  final Properties properties=new Properties();
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    final String value=reader.getAttributeValue(i);
    final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case NAME:
      name=value;
    break;
case PATCHES:
  properties.put(Constants.PATCHES,value);
break;
case RELEASE_ID:
properties.put(Constants.CUMULATIVE,value);
break;
default :
throw unexpectedAttribute(reader,i);
}
}
requireNoContent(reader);
final DirectoryStructure dirStructure;
if (originalIdentity != null) {
switch (target) {
case LAYER:
dirStructure=originalIdentity.getLayer(name).getDirectoryStructure();
break;
case ADD_ON:
dirStructure=originalIdentity.getAddOn(name).getDirectoryStructure();
break;
default :
dirStructure=originalIdentity.getIdentity().getDirectoryStructure();
}
}
 else {
dirStructure=null;
}
final LayerInfo.TargetInfo info=LayerInfo.loadTargetInfo(properties,dirStructure);
return new LayerInfo(name,info,dirStructure);
}

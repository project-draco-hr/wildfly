{
  final ModelNode config=operation.get(REQUEST_PROPERTIES,CommonAttributes.CONTAINER_CONFIG);
  final ModelNode compensatingOperation=new ModelNode();
  compensatingOperation.get(OP).set(REMOVE);
  compensatingOperation.get(OP_ADDR).set(operation.require(OP_ADDR));
  if (updateContext instanceof NewBootOperationContext) {
    final NewBootOperationContext ctx=(NewBootOperationContext)updateContext;
    final String defaultHost=operation.get(REQUEST_PROPERTIES).has(CommonAttributes.DEFAULT_HOST) ? operation.get(REQUEST_PROPERTIES).get(CommonAttributes.DEFAULT_HOST).asString() : DEFAULT_HOST;
    final NewSharedWebMetaDataBuilder sharedWebBuilder=new NewSharedWebMetaDataBuilder(config.clone());
    final NewSharedTldsMetaDataBuilder sharedTldsBuilder=new NewSharedTldsMetaDataBuilder(config.clone());
    ctx.addDeploymentProcessor(Phase.STRUCTURE,Phase.STRUCTURE_WAR_DEPLOYMENT_INIT,new WarDeploymentInitializingProcessor());
    ctx.addDeploymentProcessor(Phase.STRUCTURE,Phase.STRUCTURE_WAR_DEPLOYMENT,new WarStructureDeploymentProcessor(sharedWebBuilder.create(),sharedTldsBuilder.create()));
    ctx.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_WEB_DEPLOYMENT,new WebParsingDeploymentProcessor());
    ctx.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_WEB_DEPLOYMENT_FRAGMENT,new WebFragmentParsingDeploymentProcessor());
    ctx.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_JBOSS_WEB_DEPLOYMENT,new JBossWebParsingDeploymentProcessor());
    ctx.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_TLD_DEPLOYMENT,new TldParsingDeploymentProcessor());
    ctx.addDeploymentProcessor(Phase.DEPENDENCIES,Phase.DEPENDENCIES_WAR_MODULE,new WarClassloadingDependencyProcessor());
    ctx.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_ANNOTATION_WAR,new WarAnnotationDeploymentProcessor());
    ctx.addDeploymentProcessor(Phase.INSTALL,Phase.INSTALL_SERVLET_INIT_DEPLOYMENT,new ServletContainerInitializerDeploymentProcessor());
    ctx.addDeploymentProcessor(Phase.INSTALL,Phase.INSTALL_WAR_METADATA,new WarMetaDataProcessor());
    ctx.addDeploymentProcessor(Phase.INSTALL,Phase.INSTALL_WAR_DEPLOYMENT,new WarDeploymentProcessor(defaultHost));
  }
  updateContext.getSubModel().get(CommonAttributes.CONTAINER_CONFIG).set(config);
  resultHandler.handleResultComplete(compensatingOperation);
  return Cancellable.NULL;
}

{
  final File deploymentOne=new File(deployDir,"deployment-one.jar");
  final File deploymentTwo=new File(deployDir,"deployment-two.jar");
  createDeployment(deploymentOne,"org.jboss.modules");
  createDeployment(deploymentTwo,"non.existing.dependency");
  final ModelNode composite=new ModelNode();
  composite.get(OP).set(COMPOSITE);
  composite.get(OPERATION_HEADERS).get(ROLLBACK_ON_RUNTIME_FAILURE).set(false);
  final ModelNode steps=composite.get(STEPS).setEmptyList();
  final ModelNode deployOne=steps.add();
  deployOne.get(OP).set(ADD);
  deployOne.get(OP_ADDR).set(DEPLOYMENT_ONE.toModelNode());
  deployOne.get(ENABLED).set(true);
  deployOne.get(CONTENT).add().get(INPUT_STREAM_INDEX).set(0);
  final ModelNode deployTwo=steps.add();
  deployTwo.get(OP).set(ADD);
  deployTwo.get(OP_ADDR).set(DEPLOYMENT_TWO.toModelNode());
  deployTwo.get(ENABLED).set(true);
  deployTwo.get(CONTENT).add().get(INPUT_STREAM_INDEX).set(1);
  final Operation operation=OperationBuilder.create(composite,true).addFileAsAttachment(deploymentOne).addFileAsAttachment(deploymentTwo).build();
  final ModelControllerClient client=getModelControllerClient();
  try {
    final ModelNode result=client.execute(operation);
    Assert.assertTrue(result.asString(),SUCCESS.equals(result.get(OUTCOME).asString()));
    final ModelNode step1=result.get(RESULT,"step-1");
    Assert.assertEquals(SUCCESS,step1.get(OUTCOME).asString());
    final ModelNode step2=result.get(RESULT,"step-2");
    Assert.assertEquals(FAILED,step2.get(OUTCOME).asString());
  }
  finally {
    safeClose(operation);
  }
  executeOperation(Util.createEmptyOperation(READ_RESOURCE_OPERATION,DEPLOYMENT_ONE));
  executeOperation(Util.createEmptyOperation(READ_RESOURCE_OPERATION,DEPLOYMENT_TWO));
}

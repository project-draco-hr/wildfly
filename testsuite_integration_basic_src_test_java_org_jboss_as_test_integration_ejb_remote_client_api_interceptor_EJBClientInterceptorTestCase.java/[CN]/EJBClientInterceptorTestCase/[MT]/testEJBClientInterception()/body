{
  final EJBClientContext ejbClientContext=EJBClientContext.requireCurrent();
  final Map<String,Object> interceptorData=new HashMap<String,Object>();
  final String keyOne="foo";
  final Object valueOne="bar";
  final String keyTwo="blah";
  final Object valueTwo=new Integer("12");
  interceptorData.put(keyOne,valueOne);
  interceptorData.put(keyTwo,valueTwo);
  final SimpleEJBClientInterceptor clientInterceptor=new SimpleEJBClientInterceptor(interceptorData);
  ejbClientContext.registerInterceptor(CLIENT_INTERCEPTOR_ORDER,clientInterceptor);
  final RemoteSFSB remoteSFSB=(RemoteSFSB)context.lookup("ejb:" + APP_NAME + "/"+ MODULE_NAME+ "/"+ DISTINCT_NAME+ "/"+ SimpleSFSB.class.getSimpleName()+ "!"+ RemoteSFSB.class.getName()+ "?stateful");
  final Map<String,Object> valuesSeenOnServerSide=remoteSFSB.getInvocationData(keyOne,keyTwo);
  Assert.assertNotNull("Server side context data was expected to be non-null",valuesSeenOnServerSide);
  Assert.assertFalse("Server side context data was expected to be non-empty",valuesSeenOnServerSide.isEmpty());
  for (  final Map.Entry<String,Object> clientInterceptorDataEntry : interceptorData.entrySet()) {
    final String key=clientInterceptorDataEntry.getKey();
    final Object expectedValue=clientInterceptorDataEntry.getValue();
    Assert.assertEquals("Unexpected value in bean, on server side, via InvocationContext.getContextData() for key " + key,expectedValue,valuesSeenOnServerSide.get(key));
  }
}

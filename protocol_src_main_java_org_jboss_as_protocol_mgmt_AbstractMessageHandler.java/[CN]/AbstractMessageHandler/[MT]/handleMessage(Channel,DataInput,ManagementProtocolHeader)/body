{
  final byte type=header.getType();
  if (type == ManagementProtocol.TYPE_RESPONSE) {
    final ManagementResponseHeader response=(ManagementResponseHeader)header;
    final ActiveRequest<?,?> request=requests.remove(response.getResponseId());
    if (request == null) {
      ProtocolLogger.CONNECTION_LOGGER.noSuchRequest(response.getResponseId(),channel);
      safeWriteErrorResponse(channel,header,ProtocolMessages.MESSAGES.responseHandlerNotFound(response.getResponseId()));
    }
 else     if (response.getError() != null) {
      request.context.getResultHandler().failed(new IOException(response.getError()));
    }
 else {
      handleRequest(channel,input,header,request);
    }
  }
 else {
    try {
      final ManagementRequestHeader requestHeader=validateRequest(header);
      final ManagementRequestHandler<?,?> handler=getRequestHandler(requestHeader);
      if (handler == null) {
        safeWriteErrorResponse(channel,header,ProtocolMessages.MESSAGES.responseHandlerNotFound(requestHeader.getBatchId()));
      }
 else {
        handleMessage(channel,input,requestHeader,handler);
      }
    }
 catch (    Exception e) {
      safeWriteErrorResponse(channel,header,e);
    }
  }
}

{
  final byte type=header.getType();
  if (type == ManagementProtocol.TYPE_RESPONSE) {
    final ManagementResponseHeader response=(ManagementResponseHeader)header;
    final ActiveRequest request=requests.remove(response.getResponseId());
    if (request == null) {
      ProtocolLogger.CONNECTION_LOGGER.noSuchRequest(response.getResponseId(),channel);
    }
 else     if (response.getError() != null) {
      request.context.getResultHandler().failed(new IOException(response.getError()));
    }
 else {
      handleMessage(channel,input,header,request.context,request.handler);
    }
  }
 else {
    final ManagementRequestHeader requestHeader=validateRequest(header);
    final ActiveOperation<T,A> support=getActiveOperation(requestHeader);
    if (support == null) {
      safeWriteErrorResponse(channel,header,ProtocolMessages.MESSAGES.responseHandlerNotFound(requestHeader.getBatchId()));
      return;
    }
    final ManagementRequestHandler<T,A> handler=getRequestHandler(requestHeader.getOperationId());
    if (handler == null) {
      safeWriteErrorResponse(channel,header,ProtocolMessages.MESSAGES.responseHandlerNotFound(requestHeader.getBatchId()));
      return;
    }
 else {
      handleMessage(channel,input,requestHeader,support,handler);
    }
  }
}

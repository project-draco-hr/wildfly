{
  InfinispanBeanManagerFactory<G,I,T> factory=new InfinispanBeanManagerFactory<>(context,config);
  String containerName=config.getContainerName();
  ServiceName deploymentUnitServiceName=context.getDeploymentUnitServiceName();
  return target.addService(serviceName,factory).addDependency(CacheService.getServiceName(containerName,BeanCacheConfigurationService.getCacheName(context.getDeploymentUnitServiceName())),Cache.class,factory.cache).addDependency(KeyAffinityServiceFactoryService.getServiceName(containerName),KeyAffinityServiceFactory.class,factory.affinityFactory).addDependency(deploymentUnitServiceName.append("marshalling"),VersionedMarshallingConfiguration.class,factory.config).addDependency(deploymentUnitServiceName.append(name,"expiration"),ScheduledExecutorService.class,factory.scheduler).addDependency(deploymentUnitServiceName.append(name,"eviction"),Executor.class,factory.executor).addDependency(ServiceBuilder.DependencyType.OPTIONAL,ServiceName.JBOSS.append("clustering","registry",containerName,"default"),Registry.class,factory.registry).addDependency(ServiceBuilder.DependencyType.OPTIONAL,ServiceName.JBOSS.append("clustering","nodes",containerName,"default"),NodeFactory.class,factory.nodeFactory);
}

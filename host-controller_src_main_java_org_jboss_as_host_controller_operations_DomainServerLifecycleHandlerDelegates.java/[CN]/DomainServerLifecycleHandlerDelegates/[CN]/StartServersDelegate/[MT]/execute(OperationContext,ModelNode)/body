{
  final ModelNode model=Resource.Tools.readModel(context.getRootResource());
  final String group=getServerGroupName(operation);
  context.addStep(new OperationStepHandler(){
    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {
      final String hostName=model.get(HOST).keys().iterator().next();
      final ModelNode serverConfig=model.get(HOST,hostName).get(SERVER_CONFIG);
      final Set<String> serversInGroup=getServersForGroup(model,group);
      for (      Property config : serverConfig.asPropertyList()) {
        final ServerStatus status=serverInventory.determineServerStatus(config.getName());
        if (status != ServerStatus.STARTING && status != ServerStatus.STARTED) {
          if (group == null || serversInGroup.contains(config.getName())) {
            if (status != ServerStatus.STOPPED) {
              serverInventory.stopServer(config.getName(),TIMEOUT);
            }
            serverInventory.startServer(config.getName(),model);
          }
        }
      }
      context.completeStep();
    }
  }
,Stage.RUNTIME);
  context.completeStep();
}

{
  Batcher<TransactionBatch> batcher=mock(Batcher.class);
  TransactionBatch batch=mock(TransactionBatch.class);
  Remover<String> remover=mock(Remover.class);
  ImmutableSession immortalSession=mock(ImmutableSession.class);
  ImmutableSession expiringSession=mock(ImmutableSession.class);
  ImmutableSession canceledSession=mock(ImmutableSession.class);
  SessionMetaData immortalMetaData=mock(SessionMetaData.class);
  SessionMetaData shortTimeoutMetaData=mock(SessionMetaData.class);
  SessionMetaData longTimeoutMetaData=mock(SessionMetaData.class);
  String immortalSessionId="immortal";
  String expiringSessionId="expiring";
  String canceledSessionId="canceled";
  when(batcher.createBatch()).thenReturn(batch);
  when(immortalSession.isValid()).thenReturn(true);
  when(expiringSession.isValid()).thenReturn(true);
  when(canceledSession.isValid()).thenReturn(true);
  when(immortalSession.getMetaData()).thenReturn(immortalMetaData);
  when(expiringSession.getMetaData()).thenReturn(shortTimeoutMetaData);
  when(canceledSession.getMetaData()).thenReturn(longTimeoutMetaData);
  when(immortalMetaData.getMaxInactiveInterval()).thenReturn(Duration.ZERO);
  when(shortTimeoutMetaData.getMaxInactiveInterval()).thenReturn(Duration.ofMillis(1L));
  when(longTimeoutMetaData.getMaxInactiveInterval()).thenReturn(Duration.ofSeconds(100L));
  Instant now=Instant.now();
  when(shortTimeoutMetaData.getLastAccessedTime()).thenReturn(now);
  when(longTimeoutMetaData.getLastAccessedTime()).thenReturn(now);
  when(immortalSession.getId()).thenReturn(immortalSessionId);
  when(expiringSession.getId()).thenReturn(expiringSessionId);
  when(canceledSession.getId()).thenReturn(canceledSessionId);
  try (Scheduler scheduler=new SessionExpirationScheduler(batcher,remover)){
    scheduler.schedule(immortalSession);
    scheduler.schedule(canceledSession);
    scheduler.schedule(expiringSession);
    TimeUnit.SECONDS.sleep(1L);
    scheduler.cancel(canceledSessionId);
    scheduler.schedule(canceledSession);
  }
   verify(remover,never()).remove(immortalSessionId);
  verify(remover).remove(expiringSessionId);
  verify(remover,never()).remove(canceledSessionId);
  verify(batch).close();
}

{
  DefaultHttpClient client=new DefaultHttpClient();
  try {
    String jsfViewState=null;
    String requestUrl=url.toString() + "register.jsf";
    HttpGet getRequest=new HttpGet(requestUrl);
    HttpResponse response=client.execute(getRequest);
    try {
      String responseString=IOUtils.toString(response.getEntity().getContent(),"UTF-8");
      Matcher jsfViewMatcher=viewStatePattern.matcher(responseString);
      if (jsfViewMatcher.find()) {
        jsfViewState=jsfViewMatcher.group(1);
      }
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
    HttpPost post=new HttpPost(requestUrl);
    List<NameValuePair> list=new ArrayList<NameValuePair>();
    list.add(new BasicNameValuePair("javax.faces.ViewState",jsfViewState));
    list.add(new BasicNameValuePair("register","register"));
    list.add(new BasicNameValuePair("register:inputName",name));
    list.add(new BasicNameValuePair("register:inputNumber",Integer.toString(numberOfPeople)));
    list.add(new BasicNameValuePair("register:registerButton","Register"));
    post.setEntity(new StringEntity(URLEncodedUtils.format(list,"UTF-8"),ContentType.APPLICATION_FORM_URLENCODED));
    response=client.execute(post);
    try {
      return IOUtils.toString(response.getEntity().getContent(),"UTF-8");
    }
  finally {
      HttpClientUtils.closeQuietly(response);
    }
  }
  finally {
    HttpClientUtils.closeQuietly(client);
  }
}

{
  final DeploymentRepository deploymentRepository=deploymentRepositoryInjectedValue.getOptionalValue();
  if (deploymentRepository == null) {
    return object;
  }
  if (EJBClient.isEJBProxy(object)) {
    EJBLocator<? extends Object> locator;
    try {
      locator=EJBClient.getLocatorFor(object);
    }
 catch (    Exception e) {
      locator=null;
    }
    if (locator != null) {
      final ModuleDeployment module=deploymentRepository.getModules().get(new DeploymentModuleIdentifier(locator.getAppName(),locator.getModuleName(),locator.getDistinctName()));
      if (module == null) {
        EjbLogger.ROOT_LOGGER.couldNotFindEjbForLocatorIIOP(locator);
        return object;
      }
      final EjbDeploymentInformation ejb=module.getEjbs().get(locator.getBeanName());
      if (ejb == null) {
        EjbLogger.ROOT_LOGGER.couldNotFindEjbForLocatorIIOP(locator);
        return object;
      }
      final EjbIIOPService factory=ejb.getIorFactory();
      if (factory == null) {
        EjbLogger.ROOT_LOGGER.ejbNotExposedOverIIOP(locator);
        return object;
      }
      return factory.referenceForLocator(locator);
    }
  }
 else   if (object instanceof EJBHandle) {
    EJBHandle handle=(EJBHandle)object;
  }
 else   if (object instanceof EJBHomeHandle) {
  }
 else   if (object instanceof EJBMetaDataImpl) {
  }
  return object;
}

{
  DeploymentUnit deploymentUnit=deploymentPhase.getDeploymentUnit();
  VirtualFile deploymentRoot=deploymentUnit.getAttachment(Attachments.DEPLOYMENT_ROOT).getRoot();
  final EEModuleDescription eeModuleDescription=deploymentUnit.getAttachment(org.jboss.as.ee.component.Attachments.EE_MODULE_DESCRIPTION);
  final EEApplicationClasses applicationClassesDescription=deploymentUnit.getAttachment(org.jboss.as.ee.component.Attachments.EE_APPLICATION_CLASSES_DESCRIPTION);
  final EjbJarMetaData ejbJarMetaData;
  final EjbJarMetaData specMetaData=parseEjbJarXml(deploymentUnit);
  final EjbJarMetaData jbossMetaData=parseJBossEjb3Xml(deploymentUnit);
  if (specMetaData == null) {
    if (jbossMetaData == null)     return;
    ejbJarMetaData=jbossMetaData;
  }
 else   if (jbossMetaData == null) {
    ejbJarMetaData=specMetaData;
  }
 else {
    throw new UnsupportedOperationException("NYI: descriptor merging");
  }
  EjbDeploymentMarker.mark(deploymentUnit);
  if (!deploymentUnit.hasAttachment(EjbDeploymentAttachmentKeys.EJB_JAR_DESCRIPTION)) {
    final EEModuleDescription moduleDescription=deploymentUnit.getAttachment(org.jboss.as.ee.component.Attachments.EE_MODULE_DESCRIPTION);
    final EjbJarDescription ejbModuleDescription=new EjbJarDescription(moduleDescription,applicationClassesDescription,deploymentUnit.getName().endsWith(".war"));
    deploymentUnit.putAttachment(EjbDeploymentAttachmentKeys.EJB_JAR_DESCRIPTION,ejbModuleDescription);
  }
  deploymentUnit.putAttachment(EjbDeploymentAttachmentKeys.EJB_JAR_METADATA,ejbJarMetaData);
  if (ejbJarMetaData instanceof EjbJar31MetaData) {
    EjbJar31MetaData ejbJar31MetaData=(EjbJar31MetaData)ejbJarMetaData;
    if (ejbJar31MetaData.getModuleName() != null) {
      eeModuleDescription.setModuleName(ejbJar31MetaData.getModuleName());
    }
    if (ejbJar31MetaData.isMetadataComplete()) {
      MetadataCompleteMarker.setMetadataComplete(deploymentUnit,true);
    }
  }
 else   if (!ejbJarMetaData.isEJB3x()) {
    MetadataCompleteMarker.setMetadataComplete(deploymentUnit,true);
  }
}

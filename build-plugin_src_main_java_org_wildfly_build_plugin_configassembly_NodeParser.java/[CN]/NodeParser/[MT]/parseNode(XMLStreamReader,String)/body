{
  if (reader.getEventType() != START_ELEMENT) {
    throw new XMLStreamException("Expected START_ELEMENT",reader.getLocation());
  }
  if (!reader.getLocalName().equals(nodeName)) {
    throw new XMLStreamException("Expected <" + nodeName + ">",reader.getLocation());
  }
  ElementNode rootNode=createNodeWithAttributesAndNs(reader,null);
  ElementNode currentNode=rootNode;
  while (reader.hasNext()) {
    int type=reader.next();
switch (type) {
case END_ELEMENT:
      currentNode=currentNode.getParent();
    String name=reader.getLocalName();
  if (name.equals(nodeName)) {
    return rootNode;
  }
break;
case START_ELEMENT:
ElementNode childNode=createNodeWithAttributesAndNs(reader,currentNode);
currentNode.addChild(childNode);
currentNode=childNode;
break;
case COMMENT:
String comment=reader.getText();
currentNode.addChild(new CommentNode(comment));
break;
case CDATA:
currentNode.addChild(new CDataNode(reader.getText()));
break;
case CHARACTERS:
if (!reader.isWhiteSpace()) {
currentNode.addChild(new TextNode(reader.getText()));
}
break;
case PROCESSING_INSTRUCTION:
ProcessingInstructionNode node=parseProcessingInstruction(reader,currentNode);
if (node != null) {
currentNode.addChild(node);
}
break;
default :
break;
}
}
throw new XMLStreamException("Element was not terminated",reader.getLocation());
}

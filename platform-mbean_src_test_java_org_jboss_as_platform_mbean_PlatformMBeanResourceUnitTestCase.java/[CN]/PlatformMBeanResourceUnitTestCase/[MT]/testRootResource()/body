{
  ModelNode op=getOperation(READ_RESOURCE_DESCRIPTION_OPERATION,null,null);
  op.get(RECURSIVE).set(true);
  op.get(OPERATIONS).set(true);
  ModelNode result=executeOp(op,false);
  Assert.assertTrue(result.isDefined());
  int baseTypeCount=PlatformMBeanConstants.JDK_NOCOMPILATION_TYPES.size();
  if (ManagementFactory.getCompilationMXBean() != null) {
    baseTypeCount++;
  }
  baseTypeCount+=1;
  final ModelNode childTypes=result.get(CHILDREN,TYPE,MODEL_DESCRIPTION);
  Assert.assertEquals(baseTypeCount,childTypes.asPropertyList().size());
  op=getOperation(READ_CHILDREN_NAMES_OPERATION,null,null);
  op.get(CHILD_TYPE).set(PlatformMBeanConstants.TYPE);
  result=executeOp(op,false);
  Assert.assertTrue(result.isDefined());
  Assert.assertEquals(baseTypeCount,result.asList().size());
  op=getOperation(READ_CHILDREN_RESOURCES_OPERATION,null,null);
  op.get(CHILD_TYPE).set(PlatformMBeanConstants.TYPE);
  result=executeOp(op,false);
  Assert.assertTrue(result.isDefined());
  Assert.assertEquals(baseTypeCount,result.asPropertyList().size());
  op=getOperation(READ_CHILDREN_TYPES_OPERATION,null,null);
  result=executeOp(op,false);
  Assert.assertTrue(result.isDefined());
  Assert.assertEquals(1,result.asList().size());
  Assert.assertEquals(TYPE,result.get(0).asString());
  op=getOperation(READ_RESOURCE_OPERATION,null,null);
  op.get(INCLUDE_RUNTIME).set(true);
  result=executeOp(op,false);
  Assert.assertTrue(result.isDefined());
}

{
  final List<Property> attrDescs=description.get(ATTRIBUTES).asPropertyList();
  final List<Property> attributes=resource.asPropertyList();
  Assert.assertEquals("Correct number of attributes",attrDescs.size(),attributes.size());
  for (  Property prop : attributes) {
    final ModelNode desc=description.get(ATTRIBUTES,prop.getName());
    Assert.assertTrue(desc.isDefined());
    final ModelNode attrVal=prop.getValue();
    if (attrVal.isDefined()) {
      Assert.assertEquals(prop.getName() + " has incorrect ModelType",desc.get(TYPE).asType(),attrVal.getType());
    }
 else {
      System.out.println(prop.getName());
      System.out.println(prop.getValue());
      System.out.println(desc.get(NILLABLE));
      if (!prop.getName().equals("thread-cpu-time-enabled") && !prop.getName().equals("current-thread-cpu-time") && !prop.getName().equals("current-thread-user-time"))       Assert.assertTrue(prop.getName() + " is undefined",desc.get(NILLABLE).asBoolean());
    }
  }
}

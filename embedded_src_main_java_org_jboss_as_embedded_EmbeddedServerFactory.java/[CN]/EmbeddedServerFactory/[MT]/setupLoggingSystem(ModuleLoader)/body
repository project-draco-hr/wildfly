{
  final ModuleIdentifier logModuleId=ModuleIdentifier.create(MODULE_ID_LOGMANAGER);
  final Module logModule;
  try {
    logModule=moduleLoader.loadModule(logModuleId);
  }
 catch (  final ModuleLoadException mle) {
    throw MESSAGES.moduleLoaderError(mle,MODULE_ID_LOGMANAGER,moduleLoader);
  }
  final ModuleClassLoader logModuleClassLoader=logModule.getClassLoader();
  final ClassLoader tccl=SecurityActions.getContextClassLoader();
  try {
    SecurityActions.setContextClassLoader(logModuleClassLoader);
    SecurityActions.setSystemProperty(SYSPROP_KEY_LOGMANAGER,SYSPROP_VALUE_JBOSS_LOGMANAGER);
    final Class<?> actualLogManagerClass=LogManager.getLogManager().getClass();
    if (actualLogManagerClass == LogManager.class) {
      System.err.println("Cannot not load JBoss LogManager. The LogManager has likely been accessed prior to this initialization.");
    }
 else {
      Module.setModuleLogger(new JDKModuleLogger());
    }
  }
  finally {
    SecurityActions.setContextClassLoader(tccl);
  }
}

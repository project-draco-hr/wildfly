{
  final Subject subject=SecurityActions.getSubject();
  final ExecuteRequestContext context=new ExecuteRequestContext(new OperationWrapper<T>(listener,operation),subject);
  final ActiveOperation<ModelNode,ExecuteRequestContext> op=channelAssociation.initializeOperation(context,context);
  final AsyncFuture<ModelNode> result=new AbstractDelegatingAsyncFuture<ModelNode>(op.getResult()){
    @Override public void asyncCancel(    boolean interruptionDesired){
      try {
        channelAssociation.executeRequest(op,new CompleteTxRequest(ModelControllerProtocol.PARAM_ROLLBACK));
      }
 catch (      Exception e) {
        throw new RuntimeException(e);
      }
    }
  }
;
  context.initialize(result);
  channelAssociation.executeRequest(op,new ExecuteRequest());
  return result;
}

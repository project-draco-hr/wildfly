{
  if (SessionBean.class.isAssignableFrom(componentClass)) {
    description.getConfigurators().add(new ComponentConfigurator(){
      @Override public void configure(      DeploymentPhaseContext context,      ComponentDescription description,      ComponentConfiguration configuration) throws DeploymentUnitProcessingException {
        if (SessionBean.class.isAssignableFrom(configuration.getComponentClass())) {
          configuration.addPostConstructInterceptor(SessionBeanSetSessionContextMethodInvocationInterceptor.FACTORY,InterceptorOrder.ComponentPostConstruct.EJB_SET_CONTEXT_METHOD_INVOCATION_INTERCEPTOR);
        }
      }
    }
);
    final MethodIdentifier ejbRemoveIdentifier=MethodIdentifier.getIdentifier(void.class,"ejbRemove");
    final MethodIdentifier ejbActivateIdentifier=MethodIdentifier.getIdentifier(void.class,"ejbActivate");
    final MethodIdentifier ejbPassivateIdentifier=MethodIdentifier.getIdentifier(void.class,"ejbPassivate");
    boolean ejbActivate=false, ejbPassivate=false, ejbRemove=false;
    Class<?> c=componentClass;
    while (c != null && c != Object.class) {
      final ClassReflectionIndex<?> index=deploymentReflectionIndex.getClassIndex(c);
      if (!ejbActivate) {
        final Method method=index.getMethod(ejbActivateIdentifier);
        if (method != null) {
          final InterceptorClassDescription.Builder builder=InterceptorClassDescription.builder();
          builder.setPostActivate(ejbActivateIdentifier);
          description.addInterceptorMethodOverride(c.getName(),builder.build());
          ejbActivate=true;
        }
      }
      if (!ejbPassivate) {
        final Method method=index.getMethod(ejbPassivateIdentifier);
        if (method != null) {
          final InterceptorClassDescription.Builder builder=InterceptorClassDescription.builder();
          builder.setPrePassivate(ejbPassivateIdentifier);
          description.addInterceptorMethodOverride(c.getName(),builder.build());
          ejbPassivate=true;
        }
      }
      if (!ejbRemove) {
        final Method method=index.getMethod(ejbRemoveIdentifier);
        if (method != null) {
          final InterceptorClassDescription.Builder builder=InterceptorClassDescription.builder();
          builder.setPreDestroy(ejbRemoveIdentifier);
          description.addInterceptorMethodOverride(c.getName(),builder.build());
          ejbRemove=true;
        }
      }
      c=c.getSuperclass();
    }
  }
}

{
  super.registerAttributes(resourceRegistration);
  OperationStepHandler readAttributeHandler=useDefaultReadAttributeHandler ? null : new TestReadAttributeHandler(new ModelNode(VALUE_OF_UNCONSTRAINED_READONLY_ATTRIBUTE));
  ModelNode defaultValue=useDefaultReadAttributeHandler ? new ModelNode(VALUE_OF_UNCONSTRAINED_READONLY_ATTRIBUTE) : null;
  AttributeDefinition attributeDefinition=SimpleAttributeDefinitionBuilder.create(UNCONSTRAINED_READONLY_ATTRIBUTE,ModelType.STRING).setDefaultValue(defaultValue).build();
  resourceRegistration.registerReadOnlyAttribute(attributeDefinition,readAttributeHandler);
  readAttributeHandler=useDefaultReadAttributeHandler ? null : new TestReadAttributeHandler(new ModelNode(VALUE_OF_SENSITIVE_CONSTRAINED_READONLY_ATTRIBUTE));
  defaultValue=useDefaultReadAttributeHandler ? new ModelNode(VALUE_OF_SENSITIVE_CONSTRAINED_READONLY_ATTRIBUTE) : null;
  attributeDefinition=SimpleAttributeDefinitionBuilder.create(SENSITIVE_CONSTRAINED_READONLY_ATTRIBUTE,ModelType.STRING).setDefaultValue(defaultValue).setAccessConstraints(MY_SENSITIVE_CONSTRAINT).build();
  resourceRegistration.registerReadOnlyAttribute(attributeDefinition,readAttributeHandler);
  readAttributeHandler=useDefaultReadAttributeHandler ? null : new TestReadAttributeHandler(new ModelNode(VALUE_OF_APPLICATION_CONSTRAINED_READONLY_ATTRIBUTE));
  defaultValue=useDefaultReadAttributeHandler ? new ModelNode(VALUE_OF_APPLICATION_CONSTRAINED_READONLY_ATTRIBUTE) : null;
  attributeDefinition=SimpleAttributeDefinitionBuilder.create(APPLICATION_CONSTRAINED_READONLY_ATTRIBUTE,ModelType.STRING).setDefaultValue(defaultValue).setAccessConstraints(MY_APPLICATION_CONSTRAINT).build();
  resourceRegistration.registerReadOnlyAttribute(attributeDefinition,readAttributeHandler);
}

{
  final Unmarshaller unmarshaller=getUnmarshaller();
  unmarshaller.start(createByteInput(input));
  try {
    LOOP:     while (true) {
      byte command=unmarshaller.readByte();
switch (command) {
case ModelControllerClientProtocol.PARAM_HANDLE_RESULT_FRAGMENT:
        expectHeader(unmarshaller,ModelControllerClientProtocol.PARAM_LOCATION);
      String[] location=unmarshal(unmarshaller,String[].class);
    expectHeader(unmarshaller,ModelControllerClientProtocol.PARAM_OPERATION);
  ModelNode node=unmarshal(unmarshaller,ModelNode.class);
handler.handleResultFragment(location,node);
break;
case ModelControllerClientProtocol.PARAM_HANDLE_CANCELLATION:
handler.handleCancellation();
break LOOP;
case ModelControllerClientProtocol.PARAM_HANDLE_RESULT_COMPLETE:
handler.handleResultComplete();
break LOOP;
case ModelControllerClientProtocol.PARAM_REQUEST_ID:
result.setAsynchronousId(unmarshaller.readInt());
break;
default :
throw new IllegalStateException("Unknown response code " + command);
}
}
}
  finally {
safeFinish(unmarshaller);
}
return null;
}

{
  final DeploymentUnit deploymentUnit=phaseContext.getDeploymentUnit();
  final EEModuleDescription moduleDescription=deploymentUnit.getAttachment(Attachments.EE_MODULE_DESCRIPTION);
  if (moduleDescription == null) {
    return;
  }
  final CompositeIndex index=deploymentUnit.getAttachment(org.jboss.as.server.deployment.Attachments.COMPOSITE_ANNOTATION_INDEX);
  if (index == null) {
    return;
  }
  final PropertyReplacer propertyReplacer=EJBAnnotationPropertyReplacement.propertyReplacer(deploymentUnit);
  final DotName annotationName=getAnnotationDotName();
  for (  AnnotationInstance annotationInstance : index.getAnnotations(annotationName)) {
    final List<BindingConfiguration> bindingConfigurations=getAnnotatedClassBindingConfigurations(moduleDescription,annotationInstance);
    final ResourceDefinitionInjectionSource injectionSource=processAnnotation(annotationInstance,propertyReplacer);
    bindingConfigurations.add(new BindingConfiguration(injectionSource.getJndiName(),injectionSource));
  }
  final DotName collectionAnnotationName=getAnnotationCollectionDotName();
  if (collectionAnnotationName != null) {
    for (    AnnotationInstance annotationInstance : index.getAnnotations(collectionAnnotationName)) {
      final AnnotationInstance[] nestedAnnotationInstances=annotationInstance.value().asNestedArray();
      if (nestedAnnotationInstances != null && nestedAnnotationInstances.length > 0) {
        final List<BindingConfiguration> bindingConfigurations=getAnnotatedClassBindingConfigurations(moduleDescription,annotationInstance);
        for (        AnnotationInstance nestedAnnotationInstance : nestedAnnotationInstances) {
          final ResourceDefinitionInjectionSource injectionSource=processAnnotation(nestedAnnotationInstance,propertyReplacer);
          bindingConfigurations.add(new BindingConfiguration(injectionSource.getJndiName(),injectionSource));
        }
      }
    }
  }
}

{
  final Type[] args=methodInfo.args();
switch (args.length) {
case 0:
    return false;
case 1:
  if (!InvocationContext.class.getName().equals(args[0].name().toString())) {
    throw new IllegalArgumentException("Invalid argument type.  Methods annotated with " + AROUND_INVOKE_ANNOTATION_NAME + " must have either no parameter or a single InvocationContext argument.");
  }
return true;
default :
throw new IllegalArgumentException("Invalid number of arguments for method " + methodInfo.name() + " annotated with "+ AROUND_INVOKE_ANNOTATION_NAME+ " on class "+ classInfo.name());
}
}

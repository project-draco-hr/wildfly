{
  final ModelNode address=new ModelNode();
  address.add(ModelDescriptionConstants.SUBSYSTEM,TransactionExtension.SUBSYSTEM_NAME);
  address.protect();
  final ModelNode cmrAddress=address.clone();
  final ModelNode cmrOperation=new ModelNode();
  cmrOperation.get(OP).set(ADD);
  String jndiName=null;
  for (  Attribute attribute : Attribute.values()) {
switch (attribute) {
case JNDI_NAME:
{
        jndiName=rawAttributeText(reader,CMResourceResourceDefinition.JNDI_NAME.getXmlName(),null);
        CMResourceResourceDefinition.JNDI_NAME.parseAndSetParameter(jndiName,cmrOperation,reader);
        break;
      }
default :
    break;
}
}
if (jndiName == null) {
throw missingRequired(reader,CMResourceResourceDefinition.JNDI_NAME.getXmlName());
}
cmrAddress.add(CommonAttributes.CM_RESOURCE,jndiName);
while (reader.hasNext()) {
switch (reader.nextTag()) {
case END_ELEMENT:
{
    if (Element.CM_RESPOURCE.forName(reader.getLocalName()) == Element.CM_RESPOURCE) {
      cmrAddress.protect();
      cmrOperation.get(OP_ADDR).set(cmrAddress);
      operations.add(cmrOperation);
      return;
    }
 else {
      if (Element.CM_RESPOURCE.forName(reader.getLocalName()) == Element.UNKNOWN) {
        throw unexpectedElement(reader);
      }
    }
    break;
  }
case START_ELEMENT:
{
switch (Element.forName(reader.getLocalName())) {
case CM_TABLE:
{
      for (      Attribute attribute : Attribute.values()) {
switch (attribute) {
case NAME:
{
            addAttribute(reader,cmrOperation,CMResourceResourceDefinition.CM_TABLE_NAME);
            break;
          }
case CM_TABLE_BATCH_SIZE:
        addAttribute(reader,cmrOperation,CMResourceResourceDefinition.CM_TABLE_BATCH_SIZE);
      break;
case CM_TABLE_IMMEDIATE_CLEANUP:
    addAttribute(reader,cmrOperation,CMResourceResourceDefinition.CM_TABLE_IMMEDIATE_CLEANUP);
  break;
default :
break;
}
}
break;
}
}
}
}
}
}

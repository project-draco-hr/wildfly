{
  addTestResources();
  Map<PathAddress,Map<String,ModelNode>> expectedValues=new HashMap<PathAddress,Map<String,ModelNode>>();
  setExpressions(PathAddress.EMPTY_ADDRESS,"master",expectedValues);
  System.out.println();
  System.out.println("Update statistics:");
  System.out.println("==================");
  System.out.println("conflicts: " + conflicts);
  System.out.println("no expression simple: " + noSimple);
  System.out.println("no expression simple collection: " + noSimpleCollection);
  System.out.println("no expression complex list: " + noComplexList);
  System.out.println("no expression object: " + noObject);
  System.out.println("no expression complex property: " + noComplexProperty);
  System.out.println("supported but undefined: " + supportedUndefined);
  System.out.println("simple: " + simple);
  System.out.println("simple collection: " + simpleCollection);
  System.out.println("complex list: " + complexList);
  System.out.println("object: " + object);
  System.out.println("complex property: " + complexProperty);
  System.out.println();
  ModelNode op=new ModelNode();
  op.get(OP_ADDR).add(HOST,"master");
  op.get(OP).set("reload");
  op.get("admin-only").set(false);
  domainMasterLifecycleUtil.executeAwaitConnectionClosed(op);
  domainMasterLifecycleUtil.connect();
  domainMasterLifecycleUtil.awaitServers(System.currentTimeMillis());
  validateExpectedValues(PathAddress.EMPTY_ADDRESS,expectedValues,"master");
}

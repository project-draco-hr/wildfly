{
  Map<String,ModelNode> expectedModel=expectedValues.get(address);
  if (expectedModel != null && isValidatable(address)) {
    ModelNode resource=readResource(address,true,true);
    for (    Map.Entry<String,ModelNode> entry : expectedModel.entrySet()) {
      String attrName=entry.getKey();
      ModelNode expectedValue=entry.getValue();
      ModelNode modVal=resource.get(entry.getKey());
      validateAttributeValue(address,attrName,expectedValue,modVal);
    }
  }
  ModelNode description=readResourceDescription(address);
  boolean isHost=address.size() == 1 && HOST.equals(address.getLastElement().getKey());
  for (  Property descProp : description.get(CHILDREN).asPropertyList()) {
    String childType=descProp.getName();
    if (isHost && SERVER.equals(childType)) {
      continue;
    }
    boolean hostChild=address.size() == 0 && HOST.equals(childType);
    List<String> children=readChildrenNames(address,childType);
    for (    String child : children) {
      if (!hostChild || hostName.equals(child)) {
        validateExpectedValues(address.append(PathElement.pathElement(childType,child)),expectedValues,hostName);
      }
    }
  }
}

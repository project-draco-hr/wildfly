{
  final ModelNode node=new ModelNode();
  node.get(DESCRIPTION).set(description);
  node.get(HEAD_COMMENT_ALLOWED).set(true);
  node.get(TAIL_COMMENT_ALLOWED).set(true);
  node.get(ATTRIBUTES,NAME,DESCRIPTION).set(bundle.getString("threadpool.common.name"));
  node.get(ATTRIBUTES,NAME,TYPE).set(ModelType.STRING);
  node.get(ATTRIBUTES,NAME,REQUIRED).set(true);
  PoolAttributeDefinitions.THREAD_FACTORY.addResourceAttributeDescription(bundle,"threadpool.common",node);
  PoolAttributeDefinitions.MAX_THREADS.addResourceAttributeDescription(bundle,"threadpool.common",node);
  node.get(ATTRIBUTES,KEEPALIVE_TIME,DESCRIPTION).set(bundle.getString("threadpool.common.keepalive-time"));
  node.get(ATTRIBUTES,KEEPALIVE_TIME,TYPE).set(ModelType.OBJECT);
  node.get(ATTRIBUTES,KEEPALIVE_TIME,REQUIRED).set(false);
  node.get(ATTRIBUTES,KEEPALIVE_TIME,VALUE_TYPE,TIME,DESCRIPTION).set(bundle.getString("threadpool.common.keepalive-time.time"));
  node.get(ATTRIBUTES,KEEPALIVE_TIME,VALUE_TYPE,TIME,TYPE).set(ModelType.LONG);
  node.get(ATTRIBUTES,KEEPALIVE_TIME,VALUE_TYPE,TIME,REQUIRED).set(true);
  node.get(ATTRIBUTES,KEEPALIVE_TIME,VALUE_TYPE,UNIT,DESCRIPTION).set(bundle.getString("threadpool.common.keepalive-time.unit"));
  node.get(ATTRIBUTES,KEEPALIVE_TIME,VALUE_TYPE,UNIT,TYPE).set(ModelType.STRING);
  node.get(ATTRIBUTES,KEEPALIVE_TIME,VALUE_TYPE,UNIT,REQUIRED).set(true);
  node.get(ATTRIBUTES,PROPERTIES,DESCRIPTION).set(bundle.getString("threadpool.common.properties"));
  node.get(ATTRIBUTES,PROPERTIES,TYPE).set(ModelType.LIST);
  node.get(ATTRIBUTES,PROPERTIES,VALUE_TYPE).set(ModelType.PROPERTY);
  node.get(ATTRIBUTES,PROPERTIES,REQUIRED).set(false);
  node.get(OPERATIONS);
  node.get(CHILDREN).setEmptyObject();
  return node;
}

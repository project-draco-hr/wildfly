{
  final ModelNode operation=new ModelNode();
  operation.get(OPERATION_NAME).set(operationName);
  operation.get(DESCRIPTION).set(description);
  operation.get(REQUEST_PROPERTIES,NAME,DESCRIPTION).set(bundle.getString("threadpool.common.name"));
  operation.get(REQUEST_PROPERTIES,NAME,TYPE).set(ModelType.STRING);
  operation.get(REQUEST_PROPERTIES,NAME,REQUIRED).set(false);
  operation.get(REQUEST_PROPERTIES,THREAD_FACTORY,DESCRIPTION).set(bundle.getString("threadpool.common.threadfactory"));
  operation.get(REQUEST_PROPERTIES,THREAD_FACTORY,TYPE).set(ModelType.STRING);
  operation.get(REQUEST_PROPERTIES,THREAD_FACTORY,REQUIRED).set(false);
  operation.get(REQUEST_PROPERTIES,PROPERTIES,DESCRIPTION).set(bundle.getString("threadpool.common.properties"));
  operation.get(REQUEST_PROPERTIES,PROPERTIES,TYPE).set(ModelType.LIST);
  operation.get(REQUEST_PROPERTIES,PROPERTIES,VALUE_TYPE).set(ModelType.PROPERTY);
  operation.get(REQUEST_PROPERTIES,PROPERTIES,REQUIRED).set(false);
  operation.get(REQUEST_PROPERTIES,MAX_THREADS,DESCRIPTION).set(bundle.getString("threadpool.common.maxthreads"));
  operation.get(REQUEST_PROPERTIES,MAX_THREADS,TYPE).set(ModelType.OBJECT);
  operation.get(REQUEST_PROPERTIES,MAX_THREADS,REQUIRED).set(true);
  operation.get(REQUEST_PROPERTIES,MAX_THREADS,VALUE_TYPE,COUNT,DESCRIPTION).set(bundle.getString("threadpool.common.maxthreads.count"));
  operation.get(REQUEST_PROPERTIES,MAX_THREADS,VALUE_TYPE,COUNT,TYPE).set(ModelType.INT);
  operation.get(REQUEST_PROPERTIES,MAX_THREADS,VALUE_TYPE,COUNT,REQUIRED).set(true);
  operation.get(REQUEST_PROPERTIES,MAX_THREADS,VALUE_TYPE,PER_CPU,DESCRIPTION).set(bundle.getString("threadpool.common.maxthreads.percpu"));
  operation.get(REQUEST_PROPERTIES,MAX_THREADS,VALUE_TYPE,PER_CPU,TYPE).set(ModelType.INT);
  operation.get(REQUEST_PROPERTIES,MAX_THREADS,VALUE_TYPE,PER_CPU,REQUIRED).set(true);
  operation.get(REQUEST_PROPERTIES,KEEPALIVE_TIME,DESCRIPTION).set(bundle.getString("threadpool.common.keepalive"));
  operation.get(REQUEST_PROPERTIES,KEEPALIVE_TIME,TYPE).set(ModelType.OBJECT);
  operation.get(REQUEST_PROPERTIES,KEEPALIVE_TIME,REQUIRED).set(false);
  operation.get(REQUEST_PROPERTIES,KEEPALIVE_TIME,VALUE_TYPE,TIME,DESCRIPTION).set(bundle.getString("threadpool.common.keepalive.time"));
  operation.get(REQUEST_PROPERTIES,KEEPALIVE_TIME,VALUE_TYPE,TIME,TYPE).set(ModelType.LONG);
  operation.get(REQUEST_PROPERTIES,KEEPALIVE_TIME,VALUE_TYPE,TIME,REQUIRED).set(true);
  operation.get(REQUEST_PROPERTIES,KEEPALIVE_TIME,VALUE_TYPE,UNIT,DESCRIPTION).set(bundle.getString("threadpool.common.keepalive.unit"));
  operation.get(REQUEST_PROPERTIES,KEEPALIVE_TIME,VALUE_TYPE,UNIT,TYPE).set(ModelType.STRING);
  operation.get(REQUEST_PROPERTIES,KEEPALIVE_TIME,VALUE_TYPE,UNIT,REQUIRED).set(true);
  operation.get(REPLY_PROPERTIES).setEmptyObject();
  return operation;
}

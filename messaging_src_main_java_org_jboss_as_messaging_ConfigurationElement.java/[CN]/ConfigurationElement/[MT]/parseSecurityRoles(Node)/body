{
  String match=node.getAttributes().getNamedItem("match").getNodeValue();
  HashSet<Role> securityRoles=new HashSet<Role>();
  Pair<String,Set<Role>> securityMatch=new Pair<String,Set<Role>>(match,securityRoles);
  ArrayList<String> send=new ArrayList<String>();
  ArrayList<String> consume=new ArrayList<String>();
  ArrayList<String> createDurableQueue=new ArrayList<String>();
  ArrayList<String> deleteDurableQueue=new ArrayList<String>();
  ArrayList<String> createNonDurableQueue=new ArrayList<String>();
  ArrayList<String> deleteNonDurableQueue=new ArrayList<String>();
  ArrayList<String> manageRoles=new ArrayList<String>();
  ArrayList<String> allRoles=new ArrayList<String>();
  NodeList children=node.getChildNodes();
  for (int i=0; i < children.getLength(); i++) {
    Node child=children.item(i);
  }
  for (  String role : allRoles) {
    securityRoles.add(new Role(role,send.contains(role),consume.contains(role),createDurableQueue.contains(role),deleteDurableQueue.contains(role),createNonDurableQueue.contains(role),deleteNonDurableQueue.contains(role),manageRoles.contains(role)));
  }
  return securityMatch;
}

{
  final String applicationName=resolutionContext.getApplicationName();
  final String moduleName=resolutionContext.getModuleName();
  final String componentName=resolutionContext.getComponentName();
  final boolean compUsesModule=resolutionContext.isCompUsesModule();
  final String lookupName;
  if (!this.lookupName.contains("java:")) {
    if (componentName != null && !compUsesModule) {
      lookupName="java:comp/env/" + this.lookupName;
    }
 else     if (compUsesModule) {
      lookupName="java:module/env/" + this.lookupName;
    }
 else {
      lookupName="java:jboss/env" + this.lookupName;
    }
  }
 else   if (this.lookupName.startsWith("java:comp/") && compUsesModule) {
    lookupName="java:module/" + this.lookupName.substring(10);
  }
 else {
    lookupName=this.lookupName;
  }
  final ContextNames.BindInfo bindInfo=ContextNames.bindInfoFor(applicationName,moduleName,componentName,lookupName);
  serviceBuilder.addDependency(ServiceBuilder.DependencyType.OPTIONAL,bindInfo.getBinderServiceName());
  injector.inject(new OptionalLookupManagedReferenceFactory(lookupName));
}

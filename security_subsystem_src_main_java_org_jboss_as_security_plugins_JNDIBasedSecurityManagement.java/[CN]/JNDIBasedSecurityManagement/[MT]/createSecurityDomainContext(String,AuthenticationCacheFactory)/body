{
  log.debugf("Creating SDC for domain = %s",securityDomain);
  AuthenticationManager am=createAuthenticationManager(securityDomain);
  if (cacheFactory != null && am instanceof CacheableManager) {
    final Map<Principal,?> cache=cacheFactory.getCache();
    if (cache != null) {
      @SuppressWarnings({"unchecked","rawtypes"}) CacheableManager<Map,Principal> cm=(CacheableManager<Map,Principal>)am;
      cm.setCache(cache);
    }
  }
  if (deepCopySubjectMode) {
    setDeepCopySubjectMode(am);
  }
  SecurityDomainContext securityDomainContext=new SecurityDomainContext(am);
  securityDomainContext.setAuthorizationManager(createAuthorizationManager(securityDomain));
  securityDomainContext.setAuditManager(createAuditManager(securityDomain));
  securityDomainContext.setIdentityTrustManager(createIdentityTrustManager(securityDomain));
  securityDomainContext.setMappingManager(createMappingManager(securityDomain));
  return securityDomainContext;
}

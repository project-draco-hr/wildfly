{
  final ServiceName instanceNameServiceName=contextServiceName.append("InstanceName");
  final BinderService instanceNameService=new BinderService("InstanceName");
  serviceTarget.addService(instanceNameServiceName,instanceNameService).addDependency(contextServiceName,ServiceBasedNamingStore.class,instanceNameService.getNamingStoreInjector()).addDependency(ServerEnvironmentService.SERVICE_NAME,ServerEnvironment.class,new Injector<ServerEnvironment>(){
    @Override public void inject(    final ServerEnvironment serverEnvironment) throws InjectionException {
      instanceNameService.getManagedObjectInjector().inject(new ManagedReferenceFactory(){
        @Override public ManagedReference getReference(){
          return new ManagedReference(){
            @Override public void release(){
            }
            @Override public Object getInstance(){
              final String nodeName=serverEnvironment.getNodeName();
              return nodeName == null ? "" : nodeName;
            }
          }
;
        }
      }
);
    }
    @Override public void uninject(){
      instanceNameService.getManagedObjectInjector().uninject();
    }
  }
).install();
  deploymentUnit.addToAttachmentList(org.jboss.as.server.deployment.Attachments.JNDI_DEPENDENCIES,instanceNameServiceName);
}

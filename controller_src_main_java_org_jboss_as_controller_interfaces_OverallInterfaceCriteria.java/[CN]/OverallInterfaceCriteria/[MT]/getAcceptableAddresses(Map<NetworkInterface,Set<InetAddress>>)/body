{
  Map<NetworkInterface,Set<InetAddress>> result=AbstractInterfaceCriteria.cloneCandidates(candidates);
  for (  InterfaceCriteria criteria : interfaceCriteria) {
    result=criteria.getAcceptableAddresses(result);
    if (result.size() == 0) {
      break;
    }
  }
  if (result.size() > 0) {
    if (hasMultipleMatches(result)) {
      result=pruneIPTypes(result);
    }
    if (hasMultipleMatches(result)) {
      Map<NetworkInterface,Set<InetAddress>> selected=selectInterfaceAndAddress(result);
      if (interfaceName != null) {
        Map.Entry<NetworkInterface,Set<InetAddress>> entry=selected.entrySet().iterator().next();
        warnMultipleValidInterfaces(interfaceName,result,entry.getKey(),entry.getValue().iterator().next());
      }
      result=selected;
    }
  }
  return result;
}

{
  Boolean preferIPv4Stack=getBoolean("java.net.preferIPv4Stack");
  Boolean preferIPv6Stack=(preferIPv4Stack != null && !preferIPv4Stack.booleanValue()) ? Boolean.TRUE : getBoolean("java.net.preferIPv6Addresses");
  if (preferIPv4Stack == null && preferIPv6Stack == null) {
    return candidates;
  }
  final Map<NetworkInterface,Set<InetAddress>> result=new HashMap<NetworkInterface,Set<InetAddress>>();
  for (  Map.Entry<NetworkInterface,Set<InetAddress>> entry : candidates.entrySet()) {
    Set<InetAddress> good=null;
    for (    InetAddress address : entry.getValue()) {
      if ((preferIPv4Stack != null && preferIPv4Stack.booleanValue() && address instanceof Inet4Address) || (preferIPv6Stack != null && preferIPv6Stack.booleanValue() && address instanceof Inet6Address)) {
        if (good == null) {
          good=new HashSet<InetAddress>();
          result.put(entry.getKey(),good);
        }
        good.add(address);
      }
    }
  }
  return result.size() == 0 ? candidates : result;
}

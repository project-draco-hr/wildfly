{
  requireNoAttributes(reader);
  while (reader.hasNext() && reader.nextTag() != XMLStreamConstants.END_ELEMENT) {
switch (EJB3SubsystemXMLElement.forName(reader.getLocalName())) {
case DELIVERY_GROUP:
{
        final int count=reader.getAttributeCount();
        String groupName=null;
        final ModelNode operation=Util.createAddOperation();
        for (int i=0; i < count; i++) {
          requireNoNamespaceAttribute(reader,i);
          final String value=reader.getAttributeValue(i);
          final EJB3SubsystemXMLAttribute attribute=EJB3SubsystemXMLAttribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case NAME:
            groupName=value;
          break;
case ACTIVE:
        MdbDeliveryGroupResourceDefinition.ACTIVE.parseAndSetParameter(reader.getAttributeValue(i),operation,reader);
      break;
default :
    throw unexpectedAttribute(reader,i);
}
}
requireNoContent(reader);
if (groupName == null) {
throw missingRequired(reader,Collections.singleton(EJB3SubsystemXMLAttribute.NAME.getLocalName()));
}
final PathAddress address=SUBSYSTEM_PATH.append(EJB3SubsystemModel.MDB_DELIVERY_GROUP,groupName);
operation.get(OP_ADDR).set(address.toModelNode());
operations.add(operation);
break;
}
default :
{
throw unexpectedElement(reader);
}
}
}
}

{
  addProcess("ReceiverA",ReceivingProcess.class);
  TestProcessListenerStream listenerA=startTestProcessListenerAndWait("ReceiverA");
  addProcess("ReceiverB",ReceivingProcess.class);
  TestProcessListenerStream listenerB=startTestProcessListenerAndWait("ReceiverB");
  addProcess("ReceiverC",ReceivingProcess.class);
  TestProcessListenerStream listenerC=startTestProcessListenerAndWait("ReceiverC");
  broadcastMessage("Test","One");
  assertEquals("Test-One",listenerA.readMessage());
  assertEquals("Test-One",listenerB.readMessage());
  assertEquals("Test-One",listenerC.readMessage());
  broadcastMessage("Test","Two","Three","Four","Five");
  assertEquals("Test-Two",listenerA.readMessage());
  assertEquals("Test-Two",listenerB.readMessage());
  assertEquals("Test-Two",listenerC.readMessage());
  assertEquals("Test-Three",listenerA.readMessage());
  assertEquals("Test-Three",listenerB.readMessage());
  assertEquals("Test-Three",listenerC.readMessage());
  assertEquals("Test-Four",listenerA.readMessage());
  assertEquals("Test-Four",listenerB.readMessage());
  assertEquals("Test-Four",listenerC.readMessage());
  assertEquals("Test-Five",listenerA.readMessage());
  assertEquals("Test-Five",listenerB.readMessage());
  assertEquals("Test-Five",listenerC.readMessage());
  stopTestProcessListener("ReceiverA");
  stopTestProcessListener("ReceiverB");
  stopTestProcessListener("ReceiverC");
  removeProcess("ReceiverA");
  removeProcess("ReceiverB");
  removeProcess("ReceiverC");
}

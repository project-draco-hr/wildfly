{
  final Unmarshaller unmarshaller=getUnmarshaller();
  unmarshaller.start(createByteInput(input));
  try {
    expectHeader(unmarshaller,DomainClientProtocol.RETURN_SERVER_STATUS_COUNT);
    final int count=unmarshaller.readInt();
    final Map<ServerIdentity,ServerStatus> results=new HashMap<ServerIdentity,ServerStatus>(count);
    for (int i=0; i < count; i++) {
      expectHeader(unmarshaller,DomainClientProtocol.RETURN_HOST_NAME);
      final String hostName=unmarshaller.readUTF();
      expectHeader(unmarshaller,DomainClientProtocol.RETURN_SERVER_GROUP_NAME);
      final String groupName=unmarshaller.readUTF();
      expectHeader(unmarshaller,DomainClientProtocol.RETURN_SERVER_NAME);
      final String serverName=unmarshaller.readUTF();
      expectHeader(unmarshaller,DomainClientProtocol.RETURN_SERVER_STATUS);
      final ServerStatus serverStatus=unmarshal(unmarshaller,ServerStatus.class);
      results.put(new ServerIdentity(hostName,groupName,serverName),serverStatus);
    }
    unmarshaller.finish();
    return results;
  }
  finally {
    safeFinish(unmarshaller);
  }
}

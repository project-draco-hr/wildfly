{
  if (bytes == null) {
    new ManagementRequest<Void>(batchId){
      @Override protected byte getRequestCode(){
        return ModelControllerProtocol.GET_INPUTSTREAM_REQUEST;
      }
      @Override protected void writeRequest(      int protocolVersion,      FlushableDataOutput output) throws IOException {
        output.write(ModelControllerProtocol.PARAM_INPUTSTREAM_INDEX);
        output.writeInt(index);
      }
      @Override protected Void readResponse(      DataInput input) throws IOException {
synchronized (ProxiedInputStream.this) {
          ProtocolUtils.expectHeader(input,ModelControllerProtocol.PARAM_INPUTSTREAM_LENGTH);
          final int size=input.readInt();
          ProtocolUtils.expectHeader(input,ModelControllerProtocol.PARAM_INPUTSTREAM_CONTENTS);
          final byte[] buf=new byte[size];
          for (int i=0; i < size; i++) {
            buf[i]=input.readByte();
          }
          bytes=buf;
          ProxiedInputStream.this.notifyAll();
        }
        return null;
      }
    }
.execute(executorService,getChannelStrategy(context.getChannel()));
  }
}

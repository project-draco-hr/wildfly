{
  final PathAddress address=PathAddress.pathAddress(operation.require(OP_ADDR));
  final String name=address.getLastElement().getValue();
  final ModelNode subModel=context.getSubModel();
  final ModelNode compensatingOperation=new ModelNode();
  compensatingOperation.get(OP_ADDR).set(operation.require(OP_ADDR));
  compensatingOperation.get(OP).set("set-root-logger");
  for (  final Property property : subModel.asPropertyList()) {
    compensatingOperation.get(property.getName()).set(property.getValue());
  }
  if (context.getRuntimeContext() != null) {
    context.getRuntimeContext().setRuntimeTask(new RuntimeTask(){
      public void execute(      RuntimeTaskContext context) throws OperationFailedException {
        final ServiceRegistry registry=context.getServiceRegistry();
        try {
          final ServiceController<?> controller=registry.getService(LogServices.handlerName(name));
          if (controller != null) {
            controller.addListener(new ResultHandler.ServiceRemoveListener(resultHandler));
          }
 else {
            resultHandler.handleResultComplete();
          }
        }
 catch (        Throwable t) {
          throw new OperationFailedException(new ModelNode().set(t.getLocalizedMessage()));
        }
      }
    }
);
  }
 else {
    resultHandler.handleResultComplete();
  }
  return new BasicOperationResult(compensatingOperation);
}

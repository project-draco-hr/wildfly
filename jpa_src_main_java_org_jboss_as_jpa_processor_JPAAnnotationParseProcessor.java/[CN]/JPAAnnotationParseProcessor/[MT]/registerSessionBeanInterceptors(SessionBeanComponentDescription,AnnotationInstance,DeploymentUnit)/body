{
  if (componentDescription.isStateful() && isExtendedPersistenceContext(annotation)) {
    componentDescription.getConfigurators().addFirst(new ComponentConfigurator(){
      @Override public void configure(      DeploymentPhaseContext context,      ComponentDescription description,      ComponentConfiguration configuration) throws DeploymentUnitProcessingException {
        final SFSBXPCMap map=SFSBXPCMap.getXpcMap(deploymentUnit);
        configuration.addPostConstructInterceptor(new SFSBCreateInterceptor.Factory(map),InterceptorOrder.ComponentPostConstruct.JPA_SFSB_CREATE);
        configuration.addPreDestroyInterceptor(new SFSBDestroyInterceptor.Factory(map),InterceptorOrder.ComponentPreDestroy.JPA_SFSB_DESTROY);
      }
    }
);
    Iterable<ViewDescription> views=componentDescription.getViews();
    for (    ViewDescription view : views) {
      view.getConfigurators().addFirst(new ViewConfigurator(){
        @Override public void configure(        DeploymentPhaseContext context,        ComponentConfiguration componentConfiguration,        ViewDescription description,        ViewConfiguration configuration) throws DeploymentUnitProcessingException {
          configuration.addViewInterceptor(SFSBInvocationInterceptor.FACTORY,InterceptorOrder.View.JPA_SFSB_INTERCEPTOR);
        }
      }
);
    }
  }
  if (!isExtendedPersistenceContext(annotation) && (componentDescription.isStateful() || componentDescription.isStateless())) {
    componentDescription.getConfigurators().add(new ComponentConfigurator(){
      @Override public void configure(      DeploymentPhaseContext context,      ComponentDescription description,      ComponentConfiguration configuration) throws DeploymentUnitProcessingException {
        configuration.addComponentInterceptor(SBInvocationInterceptor.FACTORY,InterceptorOrder.Component.JPA_SESSION_BEAN_INTERCEPTOR,false);
      }
    }
);
  }
}

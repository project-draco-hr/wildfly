{
  JspConfigMetaData jspConfig=new JspConfigMetaData();
  final int count=reader.getAttributeCount();
  for (int i=0; i < count; i++) {
    final String value=reader.getAttributeValue(i);
    if (reader.getAttributeNamespace(i) != null) {
      continue;
    }
    final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case ID:
{
        jspConfig.setId(value);
        break;
      }
default :
    throw unexpectedAttribute(reader,i);
}
}
while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
final Element element=Element.forName(reader.getLocalName());
switch (element) {
case TAGLIB:
  List<TaglibMetaData> taglibs=jspConfig.getTaglibs();
if (taglibs == null) {
  taglibs=new ArrayList<TaglibMetaData>();
  jspConfig.setTaglibs(taglibs);
}
taglibs.add(TaglibMetaDataParser.parse(reader));
break;
case JSP_PROPERTY_GROUP:
List<JspPropertyGroupMetaData> propertyGroups=jspConfig.getPropertyGroups();
if (propertyGroups == null) {
propertyGroups=new ArrayList<JspPropertyGroupMetaData>();
jspConfig.setPropertyGroups(propertyGroups);
}
propertyGroups.add(JspPropertyGroupMetaDataParser.parse(reader));
break;
default :
throw unexpectedElement(reader);
}
}
return jspConfig;
}

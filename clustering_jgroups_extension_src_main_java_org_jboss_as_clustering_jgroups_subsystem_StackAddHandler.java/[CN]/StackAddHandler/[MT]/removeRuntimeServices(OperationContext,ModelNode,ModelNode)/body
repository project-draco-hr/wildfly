{
  String name=context.getCurrentAddressValue();
  context.removeService(JGroupsBindingFactory.createChannelFactoryBinding(name).getBinderServiceName());
  context.removeService(ProtocolStackServiceName.CHANNEL_FACTORY.getServiceName(name));
  Property transport=model.get(TransportResourceDefinition.WILDCARD_PATH.getKey()).asProperty();
  context.removeService(new TransportConfigurationBuilder(name,transport.getName()).getServiceName());
  if (model.hasDefined(ProtocolResourceDefinition.WILDCARD_PATH.getKey())) {
    for (    Property protocol : model.get(ProtocolResourceDefinition.WILDCARD_PATH.getKey()).asPropertyList()) {
      context.removeService(new ProtocolConfigurationBuilder(name,protocol.getName()).getServiceName());
    }
  }
  if (model.hasDefined(RelayResourceDefinition.PATH.getKey())) {
    context.removeService(new RelayConfigurationBuilder(name).getServiceName());
    ModelNode relay=model.get(RelayResourceDefinition.PATH.getKeyValuePair());
    if (relay.hasDefined(RemoteSiteResourceDefinition.WILDCARD_PATH.getKey())) {
      for (      Property remoteSite : relay.get(RemoteSiteResourceDefinition.WILDCARD_PATH.getKey()).asPropertyList()) {
        context.removeService(new RemoteSiteConfigurationBuilder(name,remoteSite.getName()).getServiceName());
      }
    }
  }
}

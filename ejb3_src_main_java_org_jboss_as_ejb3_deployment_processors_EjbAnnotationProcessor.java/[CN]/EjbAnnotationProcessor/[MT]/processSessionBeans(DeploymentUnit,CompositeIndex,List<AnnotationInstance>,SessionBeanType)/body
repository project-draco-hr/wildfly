{
  final EEModuleDescription moduleDescription=deploymentUnit.getAttachment(org.jboss.as.ee.component.Attachments.EE_MODULE_DESCRIPTION);
  final String applicationName=moduleDescription.getAppName();
  for (  AnnotationInstance sessionBeanAnnotation : sessionBeanAnnotations) {
    AnnotationTarget target=sessionBeanAnnotation.target();
    if (!(target instanceof ClassInfo)) {
      logger.warn(sessionBeanAnnotation.name() + " annotation is expected to be only on classes. " + target+ " is not a class");
      continue;
    }
    final ClassInfo sessionBeanClassInfo=(ClassInfo)target;
    final String beanClassName=sessionBeanClassInfo.name().toString();
    final AnnotationValue nameValue=sessionBeanAnnotation.value("name");
    final String beanName=nameValue == null || nameValue.asString().isEmpty() ? beanClassName : nameValue.asString();
    SessionBeanComponentDescription sessionBeanDescription=null;
switch (sessionBeanType) {
case STATELESS:
      sessionBeanDescription=new StatelessComponentDescription(beanName,beanClassName,moduleDescription.getModuleName(),applicationName);
    break;
case STATEFUL:
  sessionBeanDescription=new StatefulComponentDescription(beanName,beanClassName,moduleDescription.getModuleName(),applicationName);
break;
case SINGLETON:
sessionBeanDescription=new StatelessComponentDescription(beanName,beanClassName,moduleDescription.getModuleName(),applicationName);
break;
default :
throw new IllegalArgumentException("Unknown session bean type: " + sessionBeanType);
}
moduleDescription.addComponent(sessionBeanDescription);
}
}

{
  WSLogger.ROOT_LOGGER.tracef("Creating new unified WS deployment model for %s",unit);
  final ResourceRoot deploymentRoot=unit.getAttachment(Attachments.DEPLOYMENT_ROOT);
  final VirtualFile root=deploymentRoot != null ? deploymentRoot.getRoot() : null;
  final ClassLoader classLoader;
  final Module module=unit.getAttachment(Attachments.MODULE);
  if (module == null) {
    classLoader=unit.getAttachment(CLASSLOADER_KEY);
    if (classLoader == null) {
      throw WSLogger.ROOT_LOGGER.classLoaderResolutionFailed(unit);
    }
  }
 else {
    classLoader=module.getClassLoader();
  }
  final ArchiveDeployment dep=this.newDeployment(unit.getName(),classLoader);
  if (unit.getParent() != null) {
    final String parentDeploymentName=unit.getParent().getName();
    final Module parentModule=unit.getParent().getAttachment(Attachments.MODULE);
    if (parentModule == null) {
      throw WSLogger.ROOT_LOGGER.classLoaderResolutionFailed(deploymentRoot);
    }
    final ClassLoader parentClassLoader=parentModule.getClassLoader();
    WSLogger.ROOT_LOGGER.tracef("Creating new unified WS deployment model for %s",unit.getParent());
    final ArchiveDeployment parentDep=this.newDeployment(parentDeploymentName,parentClassLoader);
    dep.setParent(parentDep);
  }
  if (root != null) {
    dep.setRootFile(new VirtualFileAdaptor(root));
  }
 else {
    dep.setRootFile(new ResourceLoaderAdapter(classLoader));
  }
  dep.setRuntimeClassLoader(classLoader);
  dep.setType(deploymentType);
  dep.addAttachment(AnnotationsInfo.class,new JandexAnnotationsInfo(unit));
  return dep;
}

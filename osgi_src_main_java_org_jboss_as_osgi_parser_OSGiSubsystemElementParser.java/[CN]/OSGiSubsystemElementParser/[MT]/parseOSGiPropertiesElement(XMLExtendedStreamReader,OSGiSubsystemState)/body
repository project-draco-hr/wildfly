{
  ParseUtils.requireNoAttributes(reader);
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
switch (Namespace.forUri(reader.getNamespaceURI())) {
case OSGI_1_0:
{
        final Element element=Element.forName(reader.getLocalName());
        if (element == Element.PROPERTY) {
          String name=null;
          String value=null;
          int count=reader.getAttributeCount();
          for (int i=0; i < count; i++) {
            final String attrValue=reader.getAttributeValue(i);
            if (reader.getAttributeNamespace(i) != null) {
              throw ParseUtils.unexpectedAttribute(reader,i);
            }
 else {
              final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case NAME:
{
                  name=attrValue;
                  if (subsystemState.getProperties().containsKey(name)) {
                    throw new XMLStreamException("Property " + name + " already exists",reader.getLocation());
                  }
                  break;
                }
default :
              throw ParseUtils.unexpectedAttribute(reader,i);
          }
        }
      }
      if (name == null) {
        throw ParseUtils.missingRequired(reader,Collections.singleton(Attribute.NAME));
      }
      value=reader.getElementText().trim();
      if (value == null || value.length() == 0) {
        throw new XMLStreamException("Value for property " + name + " is null",reader.getLocation());
      }
      subsystemState.addProperty(name,value);
      break;
    }
 else {
      throw ParseUtils.unexpectedElement(reader);
    }
  }
default :
throw ParseUtils.unexpectedElement(reader);
}
}
if (subsystemState.getProperties().size() == 0) {
throw ParseUtils.missingRequiredElement(reader,Collections.singleton(Element.PROPERTY));
}
}

{
  final PathAddress address=PathAddress.pathAddress(operation.get(OP_ADDR));
  final String name=address.getLastElement().getValue();
  final String defaultHost=ServerDefinition.DEFAULT_HOST.resolveModelAttribute(context,model).asString();
  final String servletContainer=ServerDefinition.SERVLET_CONTAINER.resolveModelAttribute(context,model).asString();
  final ServiceName serverName=UndertowService.SERVER.append(name);
  final Server service=new Server(name,defaultHost);
  final ServiceBuilder<Server> builder=context.getServiceTarget().addService(serverName,service).addDependency(UndertowService.SERVLET_CONTAINER.append(servletContainer),ServletContainerService.class,service.getServletContainer()).addDependency(UndertowService.UNDERTOW,UndertowService.class,service.getUndertowService());
  builder.setInitialMode(ServiceController.Mode.ACTIVE);
  final ServiceController<Server> serviceController=builder.install();
  if (newControllers != null) {
    newControllers.add(serviceController);
  }
}

{
  final DeploymentUnit depUnit=phaseContext.getDeploymentUnit();
  if (DeploymentTypeMarker.isType(DeploymentType.EAR,depUnit))   return;
  if (depUnit.hasAttachment(OSGiConstants.INSTALLED_BUNDLE_KEY))   return;
  final Module module=depUnit.getAttachment(Attachments.MODULE);
  final ModuleSpecification moduleSpecification=depUnit.getAttachment(Attachments.MODULE_SPECIFICATION);
  if (module == null || moduleSpecification.isPrivateModule())   return;
  LOGGER.infoRegisterModule(module.getIdentifier());
  try {
    final BundleContext context=depUnit.getAttachment(OSGiConstants.SYSTEM_CONTEXT_KEY);
    XBundleRevisionBuilderFactory factory=new XBundleRevisionBuilderFactory(){
      @Override public XBundleRevision createResource(){
        return new AbstractBundleRevisionAdaptor(context,module);
      }
    }
;
    OSGiMetaData metadata=depUnit.getAttachment(OSGiConstants.OSGI_METADATA_KEY);
    XEnvironment env=depUnit.getAttachment(OSGiConstants.ENVIRONMENT_KEY);
    XResourceBuilder builder=XBundleRevisionBuilderFactory.create(factory);
    if (metadata != null) {
      builder.loadFrom(metadata);
    }
 else {
      builder.loadFrom(module);
    }
    XBundleRevision brev=(XBundleRevision)builder.getResource();
    env.installResources(brev);
    depUnit.putAttachment(OSGiConstants.REGISTERED_MODULE_KEY,brev);
  }
 catch (  Throwable th) {
    throw MESSAGES.deploymentFailedToRegisterModule(th,module);
  }
}

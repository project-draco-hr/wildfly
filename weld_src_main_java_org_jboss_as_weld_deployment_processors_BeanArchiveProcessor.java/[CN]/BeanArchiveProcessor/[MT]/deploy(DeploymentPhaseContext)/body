{
  final DeploymentUnit deploymentUnit=phaseContext.getDeploymentUnit();
  final WeldDeploymentMetadata cdiDeploymentMetadata=deploymentUnit.getAttachment(WeldDeploymentMetadata.ATTACHMENT_KEY);
  final DeploymentReflectionIndex reflectionIndex=deploymentUnit.getAttachment(Attachments.REFLECTION_INDEX);
  if (!WeldDeploymentMarker.isPartOfWeldDeployment(deploymentUnit)) {
    return;
  }
  final String beanArchiveIdPrefix;
  if (deploymentUnit.getParent() == null) {
    beanArchiveIdPrefix=deploymentUnit.getName();
  }
 else {
    beanArchiveIdPrefix=deploymentUnit.getParent().getName() + "." + deploymentUnit.getName();
  }
  final Set<BeanDeploymentArchiveImpl> beanDeploymentArchives=new HashSet<BeanDeploymentArchiveImpl>();
  WeldLogger.DEPLOYMENT_LOGGER.processingWeldDeployment(phaseContext.getDeploymentUnit().getName());
  final Map<ResourceRoot,Index> indexes=AnnotationIndexUtils.getAnnotationIndexes(deploymentUnit);
  final Map<ResourceRoot,BeanDeploymentArchiveImpl> bdaMap=new HashMap<ResourceRoot,BeanDeploymentArchiveImpl>();
  final Module module=phaseContext.getDeploymentUnit().getAttachment(Attachments.MODULE);
  BeanDeploymentArchiveImpl rootBda=null;
  if (cdiDeploymentMetadata != null) {
    for (    BeanArchiveMetadata beanArchiveMetadata : cdiDeploymentMetadata.getBeanArchiveMetadata()) {
      boolean isRootBda=beanArchiveMetadata.isDeploymentRoot();
      BeanDeploymentArchiveImpl bda=createBeanDeploymentArchive(indexes.get(beanArchiveMetadata.getResourceRoot()),beanArchiveMetadata,module,beanArchiveIdPrefix,isRootBda);
      beanDeploymentArchives.add(bda);
      bdaMap.put(beanArchiveMetadata.getResourceRoot(),bda);
      if (isRootBda) {
        rootBda=bda;
        deploymentUnit.putAttachment(WeldAttachments.DEPLOYMENT_ROOT_BEAN_DEPLOYMENT_ARCHIVE,bda);
      }
    }
  }
  if (rootBda == null) {
    BeanDeploymentArchiveImpl bda=new BeanDeploymentArchiveImpl(Collections.<String>emptySet(),BeansXml.EMPTY_BEANS_XML,module,beanArchiveIdPrefix,true);
    beanDeploymentArchives.add(bda);
    deploymentUnit.putAttachment(WeldAttachments.DEPLOYMENT_ROOT_BEAN_DEPLOYMENT_ARCHIVE,bda);
    rootBda=bda;
  }
  processEEComponents(deploymentUnit,bdaMap,rootBda,indexes,reflectionIndex);
  final JpaInjectionServices jpaInjectionServices=new WeldJpaInjectionServices(deploymentUnit);
  final JaxwsInjectionServices jaxwsInjectionServices=new WeldJaxwsInjectionServices(deploymentUnit);
  final BeanDeploymentModule bdm=new BeanDeploymentModule(beanDeploymentArchives);
  bdm.addService(JpaInjectionServices.class,jpaInjectionServices);
  bdm.addService(JaxwsInjectionServices.class,jaxwsInjectionServices);
  deploymentUnit.putAttachment(WeldAttachments.BEAN_DEPLOYMENT_MODULE,bdm);
}

{
  log.debugf("Starting Service " + context.getController().getName().getCanonicalName());
  try {
    properties.setProperty(JacORBSubsystemConstants.ORB_CLASS,JacORBSubsystemConstants.JACORB_ORB_CLASS);
    properties.setProperty(JacORBSubsystemConstants.ORB_SINGLETON_CLASS,JacORBSubsystemConstants.JacORB_ORB_SINGLETON_CLASS);
    SecurityActions.setSystemProperty(JacORBSubsystemConstants.ORB_CLASS,JacORBSubsystemConstants.JACORB_ORB_CLASS);
    SecurityActions.setSystemProperty(JacORBSubsystemConstants.ORB_SINGLETON_CLASS,JacORBSubsystemConstants.JacORB_ORB_SINGLETON_CLASS);
    if (this.jacORBSocketBindingInjector.getValue() != null) {
      InetSocketAddress address=this.jacORBSocketBindingInjector.getValue().getSocketAddress();
      properties.setProperty(JacORBSubsystemConstants.ORB_ADDRESS,address.getHostName());
      properties.setProperty(JacORBSubsystemConstants.ORB_PORT,String.valueOf(address.getPort()));
    }
    if (this.jacORBSSLSocketBindingInjector.getValue() != null) {
      InetSocketAddress address=this.jacORBSSLSocketBindingInjector.getValue().getSocketAddress();
      properties.setProperty(JacORBSubsystemConstants.ORB_SSL_PORT,String.valueOf(address.getPort()));
      if (!properties.containsKey(JacORBSubsystemConstants.ORB_ADDRESS)) {
        properties.setProperty(JacORBSubsystemConstants.ORB_ADDRESS,address.getHostName());
      }
    }
    String rootContext=properties.getProperty(JacORBSubsystemConstants.NAMING_ROOT_CONTEXT);
    String host=properties.getProperty(JacORBSubsystemConstants.ORB_ADDRESS);
    String port=properties.getProperty(JacORBSubsystemConstants.ORB_PORT);
    properties.setProperty(JacORBSubsystemConstants.JACORB_NAME_SERVICE_INIT_REF,"corbaloc::" + host + ":"+ port+ "/"+ rootContext);
    String exportCorbalocProperty=properties.getProperty(JacORBSubsystemConstants.NAMING_EXPORT_CORBALOC,"on");
    if (exportCorbalocProperty.equalsIgnoreCase("on")) {
      properties.setProperty(JacORBSubsystemConstants.JACORB_NAME_SERVICE_MAP_KEY,rootContext);
    }
    ClassLoader loader=SecurityActions.getThreadContextClassLoader();
    try {
      SecurityActions.setThreadContextClassLoader(SecurityActions.getClassLoader(this.getClass()));
      this.orb=ORB.init(new String[0],properties);
      ORB.init();
    }
  finally {
      SecurityActions.setThreadContextClassLoader(loader);
    }
    Thread orbThread=SecurityActions.createThread(new ORBRunner(this.orb),"ORB Run Thread");
    orbThread.start();
    ServiceTarget target=context.getChildTarget();
    CorbaServiceUtil.bindObject(target,"ORB",this.orb);
  }
 catch (  Exception e) {
    throw new StartException(e);
  }
  CorbaUtils.setOrbProperties(properties);
  log.info("CORBA ORB Service Started");
}

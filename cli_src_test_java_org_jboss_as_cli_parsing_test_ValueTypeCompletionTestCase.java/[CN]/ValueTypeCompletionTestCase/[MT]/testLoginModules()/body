{
  final ModelNode propDescr=ModelNode.fromString(loginModulesDescr);
  assertTrue(propDescr.isDefined());
  final ValueTypeCompleter completer=new ValueTypeCompleter(propDescr);
  final List<String> candidates=new ArrayList<String>();
  int i;
  i=completer.complete(null,"",0,candidates);
  assertEquals(Collections.singletonList("["),candidates);
  assertEquals(0,i);
  candidates.clear();
  i=completer.complete(null,"[",0,candidates);
  assertEquals(Arrays.asList(new String[]{"aa","bb","code","flag","module","module-options"}),candidates);
  assertEquals(1,i);
  candidates.clear();
  i=completer.complete(null,"f",0,candidates);
  assertEquals(Collections.singletonList("flag"),candidates);
  assertEquals(0,i);
  candidates.clear();
  i=completer.complete(null,"m",0,candidates);
  assertEquals(Arrays.asList(new String[]{"module","module-options"}),candidates);
  assertEquals(0,i);
  candidates.clear();
  i=completer.complete(null,"module",0,candidates);
  assertEquals(Arrays.asList(new String[]{"module","module-options"}),candidates);
  assertEquals(0,i);
  candidates.clear();
  i=completer.complete(null,"module=",0,candidates);
  assertEquals(Collections.emptyList(),candidates);
  assertEquals(-1,i);
  candidates.clear();
  i=completer.complete(null,"module=m",0,candidates);
  assertEquals(Collections.emptyList(),candidates);
  assertEquals(-1,i);
  candidates.clear();
  i=completer.complete(null,"flag = ",0,candidates);
  assertEquals(Arrays.asList(new String[]{"optional","required","requisite","sufficient"}),candidates);
  assertEquals(6,i);
  candidates.clear();
  i=completer.complete(null,"flag= s",0,candidates);
  assertEquals(Collections.singletonList("sufficient"),candidates);
  assertEquals(6,i);
  candidates.clear();
  i=completer.complete(null,"flag=requi",0,candidates);
  assertEquals(Arrays.asList(new String[]{"required","requisite"}),candidates);
  assertEquals(5,i);
  candidates.clear();
  i=completer.complete(null,"code=",0,candidates);
  assertEquals(Arrays.asList(new String[]{"false","true"}),candidates);
  assertEquals(5,i);
  candidates.clear();
  i=completer.complete(null,"code=t",0,candidates);
  assertEquals(Collections.singletonList("true"),candidates);
  assertEquals(5,i);
  candidates.clear();
  i=completer.complete(null,"code=Main",0,candidates);
  assertEquals(Collections.emptyList(),candidates);
  assertEquals(-1,i);
  candidates.clear();
  i=completer.complete(null,"code=Main,",0,candidates);
  assertEquals(Arrays.asList(new String[]{"aa","bb","flag","module","module-options"}),candidates);
  assertEquals(10,i);
  candidates.clear();
  i=completer.complete(null,"code=Main,w",0,candidates);
  assertEquals(Collections.emptyList(),candidates);
  assertEquals(-1,i);
  candidates.clear();
  i=completer.complete(null,"code=Main,module",0,candidates);
  assertEquals(Arrays.asList(new String[]{"module","module-options"}),candidates);
  assertEquals(10,i);
  candidates.clear();
  i=completer.complete(null,"code=Main,fl",0,candidates);
  assertEquals(Arrays.asList(new String[]{"flag"}),candidates);
  assertEquals(10,i);
  candidates.clear();
  i=completer.complete(null,"code=Main,flag = ",0,candidates);
  assertEquals(Arrays.asList(new String[]{"optional","required","requisite","sufficient"}),candidates);
  assertEquals(16,i);
  candidates.clear();
  i=completer.complete(null,"code=Main,flag = requi",0,candidates);
  assertEquals(Arrays.asList(new String[]{"required","requisite"}),candidates);
  assertEquals(17,i);
  candidates.clear();
  i=completer.complete(null,"code=Main,flag = required",0,candidates);
  assertEquals(Arrays.asList(new String[]{"required"}),candidates);
  assertEquals(17,i);
  candidates.clear();
  i=completer.complete(null,"code=Main,flag = required,",0,candidates);
  assertEquals(Arrays.asList(new String[]{"aa","bb","module","module-options"}),candidates);
  assertEquals(26,i);
  candidates.clear();
  i=completer.complete(null,"code=Main,flag = required,aa=",0,candidates);
  assertEquals(Arrays.asList(new String[]{"{"}),candidates);
  assertEquals(29,i);
  candidates.clear();
  i=completer.complete(null,"code=Main,flag = required,aa={",0,candidates);
  assertEquals(Arrays.asList(new String[]{"ab1","ab2","ac1"}),candidates);
  assertEquals(30,i);
  candidates.clear();
  i=completer.complete(null,"code=Main,flag = required,aa={ab",0,candidates);
  assertEquals(Arrays.asList(new String[]{"ab1","ab2"}),candidates);
  assertEquals(30,i);
  candidates.clear();
  i=completer.complete(null,"code=Main,flag = required,aa={ab1=1,",0,candidates);
  assertEquals(Arrays.asList(new String[]{"ab2","ac1"}),candidates);
  assertEquals(36,i);
  candidates.clear();
  i=completer.complete(null,"code=Main,flag = required,aa={ab1=1,a",0,candidates);
  assertEquals(Arrays.asList(new String[]{"ab2","ac1"}),candidates);
  assertEquals(36,i);
  candidates.clear();
  i=completer.complete(null,"code=Main,flag = required,aa={ab1=1,ac",0,candidates);
  assertEquals(Arrays.asList(new String[]{"ac1"}),candidates);
  assertEquals(36,i);
  candidates.clear();
  i=completer.complete(null,"code=Main,flag = required,aa={ab1=1,ac1=",0,candidates);
  assertEquals(Arrays.asList(new String[]{"false","true"}),candidates);
  assertEquals(40,i);
  candidates.clear();
  i=completer.complete(null,"code=Main,flag = required,aa={ab1=1,ac1=s",0,candidates);
  assertEquals(Collections.emptyList(),candidates);
  assertEquals(-1,i);
  candidates.clear();
  i=completer.complete(null,"code=Main,flag = required,aa={ab1=1,ac1=f",0,candidates);
  assertEquals(Collections.singletonList("false"),candidates);
  assertEquals(40,i);
  candidates.clear();
  i=completer.complete(null,"code=Main,flag = required,aa={ab1=1,ac1=false",0,candidates);
  assertEquals(Collections.singletonList("false"),candidates);
  assertEquals(40,i);
  candidates.clear();
  i=completer.complete(null,"code=Main,flag = required,aa={ab1=1,ac1=2,",0,candidates);
  assertEquals(Arrays.asList(new String[]{"ab2"}),candidates);
  assertEquals(42,i);
  candidates.clear();
  i=completer.complete(null,"code=Main,flag = required,aa={ab1=1,ac1=2},",0,candidates);
  assertEquals(Arrays.asList(new String[]{"bb","module","module-options"}),candidates);
  assertEquals(43,i);
  candidates.clear();
  i=completer.complete(null,"code=Main,flag = required,aa={ab1=1,ac1=2},bb=",0,candidates);
  assertEquals(Arrays.asList(new String[]{"["}),candidates);
  assertEquals(46,i);
  candidates.clear();
  i=completer.complete(null,"code=Main,flag = required,aa={ab1=1,ac1=2},bb=[",0,candidates);
  assertEquals(Arrays.asList(new String[]{"bb1","bb2","bc1"}),candidates);
  assertEquals(47,i);
}

{
  ModelNode opAddr=operation.require(OP_ADDR);
  PathAddress address=PathAddress.pathAddress(opAddr);
  final String securityDomain=address.getLastElement().getValue();
  ServiceController<SecurityDomainContext> controller=getSecurityDomainService(context,securityDomain);
  if (controller != null) {
    waitForService(controller);
    SecurityDomainContext sdc=controller.getValue();
    @SuppressWarnings("unchecked") CacheableManager<?,Principal> manager=(CacheableManager<?,Principal>)sdc.getAuthenticationManager();
    Set<Principal> cachedPrincipals=manager.getCachedKeys();
    ModelNode result=context.getResult();
    for (    Principal principal : cachedPrincipals) {
      result.add(principal.getName());
    }
    if (!result.isDefined())     result.setEmptyList();
  }
 else {
    throw SecurityLogger.ROOT_LOGGER.noAuthenticationCacheAvailable(securityDomain);
  }
  context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);
}

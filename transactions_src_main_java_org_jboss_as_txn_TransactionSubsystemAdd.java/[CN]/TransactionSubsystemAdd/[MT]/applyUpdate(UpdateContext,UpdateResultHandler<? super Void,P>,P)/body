{
  final BatchBuilder builder=updateContext.getBatchBuilder();
  final XATerminatorService xaTerminatorService=new XATerminatorService();
  builder.addService(TxnServices.JBOSS_TXN_XA_TERMINATOR,xaTerminatorService).setInitialMode(ServiceController.Mode.IMMEDIATE);
  final TransactionManagerService transactionManagerService=new TransactionManagerService(nodeIdentifier,maxPorts,coordinatorEnableStatistics,coordinatorDefaultTimeout,objectStoreDirectory);
  final BatchServiceBuilder<TransactionManager> transactionManagerServiceBuilder=builder.addService(TxnServices.JBOSS_TXN_TRANSACTION_MANAGER,transactionManagerService);
  transactionManagerServiceBuilder.addOptionalDependency(ServiceName.JBOSS.append("iiop","orb"),ORB.class,transactionManagerService.getOrbInjector());
  transactionManagerServiceBuilder.addDependency(TxnServices.JBOSS_TXN_XA_TERMINATOR,JBossXATerminator.class,transactionManagerService.getXaTerminatorInjector());
  transactionManagerServiceBuilder.addDependency(SocketBinding.JBOSS_BINDING_NAME.append(recoveryBindingName),SocketBinding.class,transactionManagerService.getRecoveryBindingInjector());
  transactionManagerServiceBuilder.addDependency(SocketBinding.JBOSS_BINDING_NAME.append(recoveryStatusBindingName),SocketBinding.class,transactionManagerService.getStatusBindingInjector());
  transactionManagerServiceBuilder.addDependency(SocketBinding.JBOSS_BINDING_NAME.append(bindingName),SocketBinding.class,transactionManagerService.getSocketProcessBindingInjector());
  transactionManagerServiceBuilder.setInitialMode(ServiceController.Mode.IMMEDIATE);
}

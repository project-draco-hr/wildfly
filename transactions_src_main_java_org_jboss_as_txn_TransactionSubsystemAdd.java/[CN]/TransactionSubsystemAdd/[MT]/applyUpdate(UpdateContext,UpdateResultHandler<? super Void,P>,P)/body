{
  final BatchBuilder builder=updateContext.getBatchBuilder();
  final XATerminatorService xaTerminatorService=new XATerminatorService();
  builder.addService(TxnServices.JBOSS_TXN_XA_TERMINATOR,xaTerminatorService).setInitialMode(ServiceController.Mode.ACTIVE).install();
  final TransactionManagerService transactionManagerService=new TransactionManagerService(nodeIdentifier,maxPorts,coordinatorEnableStatistics,coordinatorDefaultTimeout);
  builder.addService(TxnServices.JBOSS_TXN_TRANSACTION_MANAGER,transactionManagerService).addOptionalDependency(ServiceName.JBOSS.append("iiop","orb"),ORB.class,transactionManagerService.getOrbInjector()).addDependency(TxnServices.JBOSS_TXN_XA_TERMINATOR,JBossXATerminator.class,transactionManagerService.getXaTerminatorInjector()).addDependency(SocketBinding.JBOSS_BINDING_NAME.append(recoveryBindingName),SocketBinding.class,transactionManagerService.getRecoveryBindingInjector()).addDependency(SocketBinding.JBOSS_BINDING_NAME.append(recoveryStatusBindingName),SocketBinding.class,transactionManagerService.getStatusBindingInjector()).addDependency(SocketBinding.JBOSS_BINDING_NAME.append(bindingName),SocketBinding.class,transactionManagerService.getSocketProcessBindingInjector()).addDependency(AbstractPathService.pathNameOf(INTERNAL_OBJECTSTORE_PATH),String.class,transactionManagerService.getPathInjector()).setInitialMode(ServiceController.Mode.ACTIVE).install();
  RelativePathService.addService(INTERNAL_OBJECTSTORE_PATH,objectStorePath,objectStorePathRef,builder);
}

{
  requireNoAttributes(reader);
  final Set<String> configuredSubsystemTypes=new HashSet<String>();
  while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {
    if (Element.forName(reader.getLocalName()) != Element.SUBSYSTEM) {
      throw unexpectedElement(reader);
    }
    if (!configuredSubsystemTypes.add(reader.getNamespaceURI())) {
      throw AppClientLogger.ROOT_LOGGER.duplicateSubsystemDeclaration(reader.getLocation());
    }
    final List<ModelNode> subsystems=new ArrayList<ModelNode>();
    reader.handleAny(subsystems);
    for (    final ModelNode update : subsystems) {
      final ModelNode subsystemAddress=address.clone();
      for (      final Property path : update.get(OP_ADDR).asPropertyList()) {
        subsystemAddress.add(path.getName(),path.getValue().asString());
      }
      update.get(OP_ADDR).set(subsystemAddress);
      list.add(update);
    }
  }
}

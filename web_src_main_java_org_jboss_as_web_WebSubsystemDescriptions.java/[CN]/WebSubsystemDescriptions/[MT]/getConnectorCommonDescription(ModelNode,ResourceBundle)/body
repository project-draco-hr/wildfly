{
  node.get(TYPE).set(ModelType.OBJECT);
  node.get(DESCRIPTION).set(bundle.getString("web.connector"));
  node.get(ATTRIBUTES,Constants.NAME,TYPE).set(ModelType.STRING);
  node.get(ATTRIBUTES,Constants.NAME,DESCRIPTION).set(bundle.getString("web.connector.name"));
  node.get(ATTRIBUTES,Constants.NAME,REQUIRED).set(true);
  node.get(ATTRIBUTES,Constants.NAME,NILLABLE).set(false);
  node.get(ATTRIBUTES,Constants.PROTOCOL,TYPE).set(ModelType.STRING);
  node.get(ATTRIBUTES,Constants.PROTOCOL,DESCRIPTION).set(bundle.getString("web.connector.protocol"));
  node.get(ATTRIBUTES,Constants.PROTOCOL,REQUIRED).set(true);
  node.get(ATTRIBUTES,Constants.PROTOCOL,NILLABLE).set(false);
  node.get(ATTRIBUTES,Constants.SOCKET_BINDING,TYPE).set(ModelType.STRING);
  node.get(ATTRIBUTES,Constants.SOCKET_BINDING,DESCRIPTION).set(bundle.getString("web.connector.socket-binding"));
  node.get(ATTRIBUTES,Constants.SOCKET_BINDING,REQUIRED).set(true);
  node.get(ATTRIBUTES,Constants.SOCKET_BINDING,NILLABLE).set(false);
  node.get(ATTRIBUTES,Constants.SCHEME,TYPE).set(ModelType.STRING);
  node.get(ATTRIBUTES,Constants.SCHEME,DESCRIPTION).set(bundle.getString("web.connector.scheme"));
  node.get(ATTRIBUTES,Constants.SCHEME,REQUIRED).set(true);
  node.get(ATTRIBUTES,Constants.SCHEME,NILLABLE).set(false);
  for (  final String metric : WebConnectorMetrics.ATTRIBUTES) {
    node.get(ATTRIBUTES,metric,TYPE).set(ModelType.INT);
  }
  return node;
}
